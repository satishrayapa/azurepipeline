SET IDENTITY_INSERT [dbo].[tbgSQLCommandsHist] ON 

INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.173' AS DateTime), 1, N'124f5bb7-a75a-4cdb-8eda-a35bf82921e5', N' SELECT    ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + isnull(xxev.EntryGuid, '''') + ''&Tab=LineOverview'' + '')'' as [View In EV],   a.DeclarationNum,   a.ImportCountry,   a.ProductNum,   a.HsNum,   CAST((a.UnitValue) as Numeric(28,4)) as UnitValue  from (SELECT Distinct h.PartnerId, h.EntryGuid, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID ) a JOIN (SELECT Distinct h.PartnerId, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE @IMPORTDATERANGE ) b ON       a.ImportCountry =  b.ImportCountry and        a.productnum = b.productnum and       a.PartnerID = b.PartnerID left join txdEntryValidationSummaryStatus xxev on        a.EntryGuid = xxev.EntryGUID and       a.PartnerID = xxev.PartnerID  WHERE        a.UnitValue <>  b.UnitValue and       a.ProductNum <> ''''  GROUP  BY        a.DeclarationNum,        a.ProductNum,       a.ImportCountry,       a.HsNum,        a.UnitValue,        xxev.EntryGUID  ORDER BY a.ProductNum asc      ', N'Unit Value Fluctuation by Declaration Number', N'This report is the most detailed view of the unit value fluctuations displaying the declaration number, import country, product number, HS number, and unit value of the exception. A unit value fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-02-18T13:06:17.173' AS DateTime), N'jmerwin', N'jmerwin', 0x81713C53CF1F9254F46770571E357455, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-03-03T11:19:35.007' AS DateTime), 2, N'124f5bb7-a75a-4cdb-8eda-a35bf82921e5', N' SELECT    ''''['''' + ''''View in EV'''' + '''']'''' + ''''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='''' + isnull(xxev.EntryGuid, '''''''') + ''''&Tab=LineOverview'''' + '''')'''' as [View In EV],   a.DeclarationNum,   a.ImportCountry,   a.ProductNum,   a.HsNum,   CAST((a.UnitValue) as Numeric(28,4)) as UnitValue  from (SELECT Distinct h.PartnerId, h.EntryGuid, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID ) a JOIN (SELECT Distinct h.PartnerId, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE @IMPORTDATERANGE ) b ON       a.ImportCountry =  b.ImportCountry and        a.productnum = b.productnum and       a.PartnerID = b.PartnerID left join txdEntryValidationSummaryStatus xxev on        a.EntryGuid = xxev.EntryGUID and       a.PartnerID = xxev.PartnerID  WHERE        a.UnitValue <>  b.UnitValue and       a.ProductNum <> ''''''''  GROUP  BY        a.DeclarationNum,        a.ProductNum,       a.ImportCountry,       a.HsNum,        a.UnitValue,        xxev.EntryGUID  ORDER BY a.ProductNum asc      ', N'Unit Value Fluctuations by Declaration Number', N'This report is the most detailed view of the unit value fluctuations displaying the declaration number, import country, product number, HS number, and unit value of the exception. A unit value fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-03-03T11:19:35.007' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xD7C94FEC26148477FA767E8668EEF344, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-03-03T11:25:30.423' AS DateTime), 3, N'124f5bb7-a75a-4cdb-8eda-a35bf82921e5', N'SELECT 
	 ''''['''' + ''''View in EV'''' + '''']'''' + ''''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='''' + isnull(xxev.EntryGuid, '''''''') + ''''&Tab=LineOverview'''' + '''')'''' as [View In EV], 
	a.DeclarationNum, 
	a.ImportCountry, 
	a.ProductNum, 
	a.HsNum, 
	CAST((a.UnitValue) as Numeric(28,4)) as UnitValue 
from (SELECT Distinct h.PartnerId, h.EntryGuid, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID
) a
JOIN (SELECT Distinct h.PartnerId, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE @IMPORTDATERANGE
) b ON
      a.ImportCountry =  b.ImportCountry and 
      a.productnum = b.productnum and
      a.PartnerID = b.PartnerID
left join txdEntryValidationSummaryStatus xxev on 
      a.EntryGuid = xxev.EntryGUID and
      a.PartnerID = xxev.PartnerID 
WHERE 
      a.UnitValue <>  b.UnitValue and
      a.ProductNum <> ''''''''
 GROUP  BY 
      a.DeclarationNum, 
      a.ProductNum,
      a.ImportCountry,
      a.HsNum, 
      a.UnitValue, 
      xxev.EntryGUID 
ORDER BY a.ProductNum asc', N'Unit Value Fluctuations by Declaration Number', N'This report is the most detailed view of the unit value fluctuations displaying the declaration number, import country, product number, HS number, and unit value of the exception. A unit value fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-03-03T11:25:30.423' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x343B398385D158F8645682338D70CCD5, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-03-03T11:26:21.677' AS DateTime), 4, N'124f5bb7-a75a-4cdb-8eda-a35bf82921e5', N'SELECT 
	 ''''''''['''''''' + ''''''''View in EV'''''''' + '''''''']'''''''' + ''''''''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='''''''' + isnull(xxev.EntryGuid, '''''''''''''''') + ''''''''&Tab=LineOverview'''''''' + '''''''')'''''''' as [View In EV], 
	a.DeclarationNum, 
	a.ImportCountry, 
	a.ProductNum, 
	a.HsNum, 
	CAST((a.UnitValue) as Numeric(28,4)) as UnitValue 
from (SELECT Distinct h.PartnerId, h.EntryGuid, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID
) a
JOIN (SELECT Distinct h.PartnerId, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE @IMPORTDATERANGE
) b ON
      a.ImportCountry =  b.ImportCountry and 
      a.productnum = b.productnum and
      a.PartnerID = b.PartnerID
left join txdEntryValidationSummaryStatus xxev on 
      a.EntryGuid = xxev.EntryGUID and
      a.PartnerID = xxev.PartnerID 
WHERE 
      a.UnitValue <>  b.UnitValue and
      a.ProductNum <> ''''''''
 GROUP  BY 
      a.DeclarationNum, 
      a.ProductNum,
      a.ImportCountry,
      a.HsNum, 
      a.UnitValue, 
      xxev.EntryGUID 
ORDER BY a.ProductNum asc', N'Unit Value Fluctuations by Declaration Number', N'This report is the most detailed view of the unit value fluctuations displaying the declaration number, import country, product number, HS number, and unit value of the exception. A unit value fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-03-03T11:26:21.677' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x9E69C603726DE7DD03806A9DCE3D79C1, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-03-03T11:26:51.510' AS DateTime), 5, N'124f5bb7-a75a-4cdb-8eda-a35bf82921e5', N'SELECT 
	 ''''['''' + ''''View in EV'''' + '''']'''' + ''''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='''' + isnull(xxev.EntryGuid, '''''''') + ''''&Tab=LineOverview'''' + '''')'''' as [View In EV], 
	a.DeclarationNum, 
	a.ImportCountry, 
	a.ProductNum, 
	a.HsNum, 
	CAST((a.UnitValue) as Numeric(28,4)) as UnitValue 
from (SELECT Distinct h.PartnerId, h.EntryGuid, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID
) a
JOIN (SELECT Distinct h.PartnerId, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE @IMPORTDATERANGE
) b ON
      a.ImportCountry =  b.ImportCountry and 
      a.productnum = b.productnum and
      a.PartnerID = b.PartnerID
left join txdEntryValidationSummaryStatus xxev on 
      a.EntryGuid = xxev.EntryGUID and
      a.PartnerID = xxev.PartnerID 
WHERE 
      a.UnitValue <>  b.UnitValue and
      a.ProductNum <> ''''''''
 GROUP  BY 
      a.DeclarationNum, 
      a.ProductNum,
      a.ImportCountry,
      a.HsNum, 
      a.UnitValue, 
      xxev.EntryGUID 
ORDER BY a.ProductNum asc', N'Unit Value Fluctuations by Declaration Number', N'This report is the most detailed view of the unit value fluctuations displaying the declaration number, import country, product number, HS number, and unit value of the exception. A unit value fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-03-03T11:26:51.510' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x343B398385D158F8645682338D70CCD5, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.083' AS DateTime), 6, N'bf83d114-8b40-422c-ae61-f53961f8460d', N'Select   h.ImportCountry,  CAST(((SUM(d.EstBaseTotalLineDuty) + SUM(d.EstBaseTotalLineVATAmt) + SUM(d.EstBaseTotalLineExciseAmt) + SUM(d.EstBaseTotalLineAddlIndirectTaxAmt))/SUM(d.EstBaseTotalLineValue)) AS NUMERIC(28, 4)) as [AllTaxesPerUnitValue(@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.ImportCountry   HAVING  SUM(d.EstBaseTotalLineValue) > 0  ORDER BY [AllTaxesPerUnitValue(@CurrencyCode)] desc ', N'Average Import Cost', N'This report shows the highest total duty, VAT/GST, excise, and additional indirect taxes paid per unit of declaration value with the related countries of import.', CAST(N'2016-02-18T13:06:17.083' AS DateTime), N'jmerwin', N'jmerwin', 0x6E4EEDA5D906E7FCEACC9E784A6F97A2, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.967' AS DateTime), 7, N'75980faa-5db9-4937-b4f2-bf90fce8fef2', N'SELECT   ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')'' as [View In EV],  DeclarationNum,  ProductNum,  BrokerName,  HsNum,  ImportCountry from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID join txdEntryValidationSummaryStatus xxev on   h.EntryGuid = xxev.EntryGUID and  h.PartnerID = xxev.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  AND ProductNum = ''''  UNION ALL  select  ''N/A'' as [View In EV],  DeclarationNum,  ProductNum,  BrokerName,  HsNum,  ImportCountry from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  AND ProductNum = ''''  AND NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID)', N'Entries with Blank Product Numbers', N'This report shows any declarations where the product number is blank.', CAST(N'2016-02-18T13:06:16.967' AS DateTime), N'jmerwin', N'jmerwin', 0xE7A1C5DFBEED2434BE5338870EF0CDE1, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-03-03T13:24:39.707' AS DateTime), 8, N'01b31e06-1220-4a58-9668-8254d1b56ca8', N'SELECT top 10 d.ProductNum, CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY d.ProductNum ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'Biblioteca 2', N'', CAST(N'2016-03-03T13:24:39.707' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x64BC87A18F87F0BCFDD0143CE9292089, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-03-03T13:28:16.883' AS DateTime), 9, N'01b31e06-1220-4a58-9668-8254d1b56ca8', N'SELECT top 10 d.ProductNum, CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY d.ProductNum ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'Biblioteca 2', N'', CAST(N'2016-03-03T13:28:16.883' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x64BC87A18F87F0BCFDD0143CE9292089, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-03-03T13:32:31.350' AS DateTime), 10, N'01b31e06-1220-4a58-9668-8254d1b56ca8', N'SELECT top 10 d.ProductNum, CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY d.ProductNum ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'Biblioteca two', N'', CAST(N'2016-03-03T13:32:31.350' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x64BC87A18F87F0BCFDD0143CE9292089, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-03-03T13:33:49.847' AS DateTime), 11, N'01b31e06-1220-4a58-9668-8254d1b56ca8', N'SELECT TOP 5 d.BusinessUnit, CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY d.BusinessUnit ORDER BY SUM(d.EstBaseTotalLineValue) DESC ', N'Biblioteca two', N'', CAST(N'2016-03-03T13:33:49.847' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x66E5A41E30257204DDA5EEFFE562ABA2, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-03-03T13:21:51.273' AS DateTime), 12, N'986462be-a907-442d-9410-9d0054ef9318', N'SELECT top 10 d.ProductNum, CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY d.ProductNum ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'Biblioteca Report', N'', CAST(N'2016-03-03T13:21:51.273' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x64BC87A18F87F0BCFDD0143CE9292089, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-03-03T13:35:16.653' AS DateTime), 13, N'986462be-a907-442d-9410-9d0054ef9318', N'SELECT top 10 d.ProductNum, CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY d.ProductNum ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'Biblioteca Reports', N'', CAST(N'2016-03-03T13:35:16.653' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x64BC87A18F87F0BCFDD0143CE9292089, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.187' AS DateTime), 14, N'7ef974c3-3965-472d-9223-1d4b2cc3d8a3', N'select distinct   h.ImportCountry,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and     e.StatusCode = ''ACK'' group by h.ImportCountry order by Count desc ', N'Acknowledged Errors by Import Country', N'This report shows a count of Acknowledged validation errors within a given import country. Acknowledged validation errors are declarations that will not be visible in the production data because these errors are considered hard stops. ', CAST(N'2016-02-18T13:06:17.187' AS DateTime), N'jmerwin', N'jmerwin', 0x07AE56D93801C13CE4AD5725D0559F97, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.410' AS DateTime), 15, N'e19ae1d9-6a21-470c-ba18-acb3bd9e2d05', N'select distinct   e.ValidationName,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''ACK'' group by e.ValidationName order by Count desc', N'Acknowledged Error Count by Name', N'This report shows a count of acknowledged validation errors by the validation name. Disregarded validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.410' AS DateTime), N'jmerwin', N'jmerwin', 0x243B85A9EFB174BB2680CBED2B333A7B, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-03-08T16:21:34.163' AS DateTime), 16, N'e19ae1d9-6a21-470c-ba18-acb3bd9e2d05', N'select distinct   e.ValidationName,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''ACK'' group by e.ValidationName order by Count desc', N'Acknowledged Error Count by Name''', N'This report shows a count of acknowledged validation errors by the validation name. Disregarded validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-03-08T16:21:34.163' AS DateTime), N'37e5998f-6cdf-4f76-8dc1-af657fc3ba79', N'', 0xF3A490162152CBA9945BCD062FD363E5, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.403' AS DateTime), 17, N'd7abcb77-2a09-420d-a270-305b94567e06', N'select distinct   h.ExportCountry,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''') and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and     e.StatusCode = ''ACK'' group by h.ExportCountry order by Count desc ', N'Acknowledged Errors by Export Country', N'This report shows a count of Acknowledged validation errors within a given export country. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops. ', CAST(N'2016-02-18T13:06:17.403' AS DateTime), N'jmerwin', N'jmerwin', 0xF385B22D3925E2D003DD7E71AA84F53B, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.403' AS DateTime), 18, N'8c6f436b-d6d4-4eb4-b0a3-b54923ce5ecd', N'select distinct   h.ForwarderCompanyName,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''ACK'' group by h.ForwarderCompanyName order by Count desc', N'Acknowledged Errors by Broker', N'This report shows a count of Acknowledged validation errors within a given broker. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops. ', CAST(N'2016-02-18T13:06:17.403' AS DateTime), N'jmerwin', N'jmerwin', 0x76EBDE97E2B12A52E5AA5BBABB1D008A, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.403' AS DateTime), 19, N'84aad1ba-278d-41f5-8a4b-4627bdfa542d', N'select distinct   h.ExportCountry,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join txdGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '' '') and  c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and  c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''ACK'' group by h.ExportCountry order by Count desc', N'Acknowledged Warnings by Export Country', N'This report shows a count of all validation groups for declarations that contain an Acknowledged warning message. Acknowledged validation warnings are informative messages chosen by the client. Declarations with Acknowledged validation warnings are still inserted into production data.', CAST(N'2016-02-18T13:06:17.403' AS DateTime), N'jmerwin', N'jmerwin', 0x64C61CD11B948C618112D2646829BCFC, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.407' AS DateTime), 20, N'a4109577-f1ce-4eca-9d27-d5febae4b4d9', N'select distinct   e.ValidationGroup,  e.ValidationName,  COUNT(e.ValidationName) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join txdGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''ACK'' group by e.ValidationGroup, e.ValidationName order by Count desc', N'Acknowledged Warnings by Name', N'', CAST(N'2016-02-18T13:06:17.407' AS DateTime), N'jmerwin', N'jmerwin', 0xD68F83203DCE18C20432DBAC3247F431, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.403' AS DateTime), 21, N'1c14c205-9320-4f7d-8b49-8449360d2831', N'select    e.ValidationGroup,  COUNT(e.ValidationName) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND(@EXPORTDATERANGE or ExportDate= '''') and  c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and          e.StatusCode = ''ACK'' group by e.ValidationGroup', N'Acknowledged Errors by Group', N'This report shows a count of Acknowledged validation errors within a validation group. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.403' AS DateTime), N'jmerwin', N'jmerwin', 0xB185C167A63CF4E5DE70558A2E27ABDA, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.403' AS DateTime), 22, N'0d6fe15c-3042-40e2-87d7-8e04ed03be96', N'select distinct   h.ForwarderCompanyName,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join txdGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and     e.StatusCode = ''ACK'' group by h.ForwarderCompanyName order by Count desc', N'Acknowledged Warnings by Broker ', N'', CAST(N'2016-02-18T13:06:17.403' AS DateTime), N'jmerwin', N'jmerwin', 0xDC3A17660C1BD5AC740BE05DC730BB58, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.403' AS DateTime), 23, N'256a533d-8c21-4aae-90e9-b3dfe7aa8a71', N'select distinct   e.ValidationGroup,  e.ValidationName,  COUNT(e.ValidationName) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''ACK'' group by e.ValidationGroup, e.ValidationName order by Count desc', N'Acknowledged Errors by Name', N'This report shows a count of Acknowledged validation errors within a validation group and validation name. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.403' AS DateTime), N'jmerwin', N'jmerwin', 0x5AFF151BBD5BB8336873186DBF09AFCA, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.407' AS DateTime), 24, N'c2995d02-2b9f-4802-949f-e459fa76ede8', N'select distinct   e.ValidationGroup,  e.ValidationName,  COUNT(e.ValidationName) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join txdGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''OPEN'' group by e.ValidationGroup, e.ValidationName order by Count desc', N'Validation Warnings by Name', N'This report shows a count of open validation warnings within a validation group and validation name. Open validation warnings are declarations that will be visible in the production data because these warnings are considered soft stops.', CAST(N'2016-02-18T13:06:17.407' AS DateTime), N'jmerwin', N'jmerwin', 0x7E31E99F8A0A0C127209A65D18D56111, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.407' AS DateTime), 25, N'59109c0f-717d-4dec-8a56-cd3a204eebc8', N'select    e.ValidationGroup,  COUNT(e.ValidationName) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join txdGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND(@EXPORTDATERANGE or ExportDate= '''') and  c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and          e.StatusCode = ''OPEN'' group by e.ValidationGroup', N'Validation Warnings by Group', N'This report shows a count of the validation by group for declarations that contain a warning message. Disregarded warnings are informative messages chosen by the client. Declarations with disregarded validation warnings are still inserted into production data. ', CAST(N'2016-02-18T13:06:17.407' AS DateTime), N'jmerwin', N'jmerwin', 0x5DB054747881D17ECC60A6804AC775E2, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.407' AS DateTime), 26, N'55112143-999a-41bb-b415-7a00fe81fc6d', N'select distinct   h.ForwarderCompanyName,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join txdGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''OPEN'' group by h.ForwarderCompanyName order by Count desc', N'Validation Warnings by Broker', N'This report shows a count of validation warnings within a given broker. Validation warnings are declarations that will be visible in the production data because these warnings are considered soft stops. ', CAST(N'2016-02-18T13:06:17.407' AS DateTime), N'jmerwin', N'jmerwin', 0x8B37ECC9B02D561B2BB33C08FC545B8F, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.407' AS DateTime), 27, N'3cea5966-3bf5-4ceb-aa4b-2056ea8f2857', N'select distinct   h.ExportCountry,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join txdGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft''  and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and     e.StatusCode = ''OPEN'' group by h.ExportCountry order by Count desc', N'Validation Warnings by Export Country', N'This report shows a count of all validations by export country for declarations that contain a warning message. Validation warnings are informative messages chosen by the client. Declarations with validation warnings are still inserted into production data.', CAST(N'2016-02-18T13:06:17.407' AS DateTime), N'jmerwin', N'jmerwin', 0xA2B12F53659F38FC211AFCC831E20118, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.397' AS DateTime), 28, N'13e058d8-fa29-418f-8d79-bae0a9482105', N'select distinct   e.ValidationGroup,  e.ValidationName,  COUNT(e.ValidationName) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''OPEN'' group by e.ValidationGroup, e.ValidationName order by Count desc', N'Validation Errors by Name', N'This report shows a count of validation errors within a validation group and validation name. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.397' AS DateTime), N'jmerwin', N'jmerwin', 0x4098797E8DE603F70B105D8FFACC7525, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.397' AS DateTime), 29, N'd8ae5880-ae10-4e8b-b119-4124bb2584ab', N'select    e.ValidationGroup,  COUNT(e.ValidationName) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND(@EXPORTDATERANGE or ExportDate= '''') and  c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and          e.StatusCode = ''OPEN'' group by e.ValidationGroup', N'Validation Errors by Group', N'This report shows a count of validation errors within a validation group. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.397' AS DateTime), N'jmerwin', N'jmerwin', 0xEC3E1F731F23224DCAA53F9D5C723665, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.397' AS DateTime), 30, N'fd30d643-bcaa-4f02-94f0-5f6c134b53cc', N'select distinct   h.ForwarderCompanyName,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''OPEN'' group by h.ForwarderCompanyName order by Count desc', N'Validation Errors by Broker', N'This report shows a count of validation errors within a given broker. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops. ', CAST(N'2016-02-18T13:06:17.397' AS DateTime), N'jmerwin', N'jmerwin', 0xB2725BBF2A548A242025C6525D9F564A, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.400' AS DateTime), 31, N'971b6733-0e47-4366-8fa1-ccba54c97150', N'select distinct   e.ValidationGroup,  e.ValidationName,  COUNT(e.ValidationName) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join txdGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''DIS'' group by e.ValidationGroup, e.ValidationName order by Count desc', N'Disregarded Warnings by Name', N'This report shows a count of disregarded validation warnings within a validation group and validation name. Disregarded validation warnings are declarations that will be visible in the production data because these warnings are considered soft stops.', CAST(N'2016-02-18T13:06:17.400' AS DateTime), N'jmerwin', N'jmerwin', 0x69C3E0A9098B690B1999437156F629E3, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.400' AS DateTime), 32, N'bb691b4e-2312-4ff5-93fb-0926b54616ed', N'select distinct   e.ValidationGroup,  e.ValidationName,  COUNT(e.ValidationName) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''DIS'' group by e.ValidationGroup, e.ValidationName order by Count desc', N'Disregarded Errors by Name', N'This report shows a count of disregarded validation errors within a validation group and validation name. Disregarded validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.400' AS DateTime), N'jmerwin', N'jmerwin', 0xB4A9793883545A3B48B9DC14213A623C, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.400' AS DateTime), 33, N'a4ab6c20-5aa2-49be-b4ae-b87ab5b2e9e5', N'select distinct   h.ExportCountry,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join txdGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '' '') and  c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and  c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''DIS'' group by h.ExportCountry order by Count desc', N'Disregarded Warnings by Import Country', N'This report shows a count of all validation groups for declarations that contain a disregarded warning message. Disregarded validation warnings are informative messages chosen by the client. Declarations with disregarded validation warnings are still inserted into production data.', CAST(N'2016-02-18T13:06:17.400' AS DateTime), N'jmerwin', N'jmerwin', 0x970AB020E69E577FA0614E8B8536E2A5, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.397' AS DateTime), 34, N'31fbc263-5534-4a11-8ea3-d25b559e47cf', N'select distinct   h.ExportCountry,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''') and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and     e.StatusCode = ''DIS'' group by h.ExportCountry order by Count desc', N'Disregarded Errors by Import Country', N'This report shows a count of disregarded validation errors within a given export country. Disregarded validation errors are declarations that will not be visible in the production data because these errors are considered hard stops. ', CAST(N'2016-02-18T13:06:17.397' AS DateTime), N'jmerwin', N'jmerwin', 0x6099C61F1525B947CD5A6CEA1DE2782E, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.400' AS DateTime), 35, N'9e19c097-3716-4947-89e8-7cf6f3b6f26b', N'select distinct   e.ValidationName,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''DIS'' group by e.ValidationName order by Count desc', N'Disregarded Error Count by Name', N'This report shows a count of disregarded validation errors by the validation name. Disregarded validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.400' AS DateTime), N'jmerwin', N'jmerwin', 0x2C0E5437E1267975DB9C614B205EC25C, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.397' AS DateTime), 36, N'4711f8cc-afcd-424e-8d53-fbf654814242', N'select distinct   h.ForwarderCompanyName,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''DIS'' group by h.ForwarderCompanyName order by Count desc', N'Disregarded Errors by Broker', N'This report shows a count of disregarded validation errors within a given broker. Disregarded validation errors are declarations that will not be visible in the production data because these errors are considered hard stops. ', CAST(N'2016-02-18T13:06:17.397' AS DateTime), N'jmerwin', N'jmerwin', 0x6919EDCEF59BE129C2989EB5C23FA34C, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.397' AS DateTime), 37, N'd6fef3a2-fcb6-4e95-9c50-6dbe43b42cc8', N'select    e.ValidationGroup,  COUNT(e.ValidationName) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND(@EXPORTDATERANGE or ExportDate= '''') and  c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and          e.StatusCode = ''DIS'' group by e.ValidationGroup', N'Disregarded Errors by Group ', N'This report shows a count of disregarded validation errors within a validation group. Disregarded validation errors are declarations that will not be visible in the production data because these errors are considered hard stops. ', CAST(N'2016-02-18T13:06:17.397' AS DateTime), N'jmerwin', N'jmerwin', 0x12115FCDAC9D2A8729AA4049C471F2C2, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.400' AS DateTime), 38, N'ce2435f8-d14d-4fd4-8661-9173996de3b4', N'select distinct   h.ForwarderCompanyName,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join txdGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and     e.StatusCode = ''DIS'' group by h.ForwarderCompanyName order by Count desc', N'Disregarded Warnings by Broker ', N'This report shows a count of disregarded warnings within a given broker. Disregarded warnings are declarations that will be visible in the production data because these warnings are considered soft stops. ', CAST(N'2016-02-18T13:06:17.400' AS DateTime), N'jmerwin', N'jmerwin', 0x8E04D1098D3AFB59A5B8051952B996BE, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.393' AS DateTime), 39, N'bf4671d7-96c6-4c35-8edf-85c5d7b7a758', N'select distinct   h.ExportCountry,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''') and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and     e.StatusCode = ''OPEN'' group by h.ExportCountry order by Count desc ', N'Validation Errors by Import Country', N'This report shows a count of validation errors within a given export country. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops. ', CAST(N'2016-02-18T13:06:17.393' AS DateTime), N'jmerwin', N'jmerwin', 0x8A8FBB27E8F54BFDCB09B8C4AA5A6C3F, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.397' AS DateTime), 40, N'157fa0e2-cbfc-467e-9a27-fbc6fdc1b077', N'select distinct   e.ValidationName,  COUNT(e.ExportGUID) as Count from txdGTVExportValidationErrors e --Join must exist because code uses it to run EXPORTDATERANGE join ttdStagingGVExportHeader h on       h.ExportGuid = e.ExportGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@EXPORTDATERANGE or ExportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''E'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''OPEN'' group by e.ValidationName order by Count desc', N'Error Count by Validation Name', N'This report shows a count of validation errors by the validation name. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.397' AS DateTime), N'jmerwin', N'jmerwin', 0x2ED7E519DAC4B221C6A8A82D44925672, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.213' AS DateTime), 41, N'45fee835-0024-4ae2-a6ba-085ba9719e1d', N'select h.PartnerID, h.ExportCountry into #tmpSelectedCountry from txdGVExportHeader h WITH (NOLOCK)   WHERE 1=1 AND  ( h.ExportDate >= CONVERT(DATE,DATEADD(YEAR, -1, GETDATE())) )  AND h.PartnerID = 2151 group by h.PartnerID, h.ExportCountry    --IF  -- (select COUNT(*) from #tmpSelectedCountry)  > 1 --BEGIN -- select ''Please select an Import Country'' --END --ELSE --BEGIN  select *  into #tmpSelectedCountryDates from  (   SELECT    h.PartnerID,    h.ExportCountry,    ''OrderToShip'' as Name,     AVG(cast(DATEDIFF(d, h.OrderDate, h.ShipDate) as float)) as AvgDays   from txdGVExportHeader h WITH (NOLOCK)     WHERE 1=1  AND  @EXPORTDATERANGE AND ( h.ExportDate >= CONVERT(DATE,DATEADD(YEAR, -1, GETDATE())) )  AND h.PartnerID = @PartnerID and h.OrderDate <> '''' and h.ShipDate <> ''''   GROUP BY h.PartnerID, h.ExportCountry     UNION ALL    SELECT     h.PartnerID,    h.ExportCountry,    ''ShipToReceipt'' as Name,     AVG(cast(DATEDIFF(d, h.ShipDate, h.ReceiptLocationDate) as float)) as AvgDays   from txdGVExportHeader h WITH (NOLOCK)     WHERE 1=1  AND @EXPORTDATERANGE AND  ( h.ExportDate >= CONVERT(DATE,DATEADD(YEAR, -1, GETDATE())) )  AND h.PartnerID = @PartnerID and h.ShipDate <> '''' and h.ReceiptLocationDate <> ''''   GROUP BY h.PartnerID, h.ExportCountry     UNION ALL    SELECT     h.PartnerID,    h.ExportCountry,    ''ReceiptToExport'' as Name,     AVG(cast(DATEDIFF(d, h.ReceiptLocationDate, h.ExportDate) as float)) as AvgDays   from txdGVExportHeader h WITH (NOLOCK)     WHERE 1=1 AND @EXPORTDATERANGE AND  ( h.ExportDate >= CONVERT(DATE,DATEADD(YEAR, -1, GETDATE())) )  AND h.PartnerID = @PartnerID and h.ReceiptLocationDate <> '''' and h.ExportDate <> ''''   GROUP BY h.PartnerID, h.ExportCountry     UNION ALL    SELECT     h.PartnerID,    h.ExportCountry,    ''ExportToArrival'' as Name,     AVG(cast(DATEDIFF(d, h.ExportDate, h.ArrivalDate) as float)) as AvgDays   from txdGVExportHeader h WITH (NOLOCK)     WHERE 1=1  AND @EXPORTDATERANGE AND  ( h.ExportDate >= CONVERT(DATE,DATEADD(YEAR, -1, GETDATE())) )  AND h.PartnerID = @PartnerID and h.ExportDate <> '''' and h.ArrivalDate <> ''''   GROUP BY h.PartnerID, h.ExportCountry     UNION ALL    SELECT     h.PartnerID,    h.ExportCountry,    ''ArrivalToDelivery'' as Name,    AVG(cast(DATEDIFF(d, h.ArrivalDate, h.DeliveryLocationDate) as float)) as AvgDays   from txdGVExportHeader h WITH (NOLOCK)     WHERE 1=1  AND @EXPORTDATERANGE AND  ( h.ExportDate >= CONVERT(DATE,DATEADD(YEAR, -1, GETDATE())) )  AND h.PartnerID = @PartnerID and h.ArrivalDate <> '''' and h.ReceiptLocationDate <> ''''   GROUP BY h.PartnerID, h.ExportCountry     UNION ALL    SELECT     h.PartnerID,    h.ExportCountry,    ''TotalOrderToDelivery'' as Name,    AVG(cast(DATEDIFF(d, h.OrderDate, h.DeliveryLocationDate) as float)) as AvgDays   from txdGVExportHeader h WITH (NOLOCK)     WHERE 1=1  AND @EXPORTDATERANGE AND  ( h.ExportDate >= CONVERT(DATE,DATEADD(YEAR, -1, GETDATE())) )  AND h.PartnerID = @PartnerID and h.OrderDate <> '''' and h.ReceiptLocationDate <> ''''   GROUP BY h.PartnerID, h.ExportCountry   ) h    select *  into #tmpROWDates from  (   SELECT    h.PartnerID,    ''OrderToShip'' as Name,     AVG(cast(DATEDIFF(d, h.OrderDate, h.ShipDate) as float)) as AvgDays   from txdGVExportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID and h.OrderDate <> '''' and h.ShipDate <> '''' and not exists (select 1 from #tmpSelectedCountry where ExportCountry = h.ExportCountry)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ShipToReceipt'' as Name,     AVG(cast(DATEDIFF(d, h.ShipDate, h.ReceiptLocationDate) as float)) as AvgDays   from txdGVExportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID and h.ShipDate <> '''' and h.ReceiptLocationDate <> '''' and not exists (select 1 from #tmpSelectedCountry where ExportCountry = h.ExportCountry)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ReceiptToExport'' as Name,     AVG(cast(DATEDIFF(d, h.ReceiptLocationDate, h.ExportDate) as float)) as AvgDays   from txdGVExportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID and h.ReceiptLocationDate <> '''' and h.ExportDate <> '''' and not exists (select 1 from #tmpSelectedCountry where ExportCountry = h.ExportCountry)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ExportToArrival'' as Name,     AVG(cast(DATEDIFF(d, h.ExportDate, h.ArrivalDate) as float)) as AvgDays   from txdGVExportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID and h.ExportDate <> '''' and h.ArrivalDate <> '''' and not exists (select 1 from #tmpSelectedCountry where ExportCountry = h.ExportCountry)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ArrivalToDelivery'' as Name,    AVG(cast(DATEDIFF(d, h.ArrivalDate, h.DeliveryLocationDate) as float)) as AvgDays   from txdGVExportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID and h.ArrivalDate <> '''' and h.ReceiptLocationDate <> '''' and not exists (select 1 from #tmpSelectedCountry where ExportCountry = h.ExportCountry)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''TotalOrderToDelivery'' as Name,    AVG(cast(DATEDIFF(d, h.OrderDate, h.DeliveryLocationDate) as float)) as AvgDays   from txdGVExportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID and h.OrderDate <> '''' and h.ReceiptLocationDate <> '''' and not exists (select 1 from #tmpSelectedCountry where ExportCountry = h.ExportCountry)   GROUP BY h.PartnerID   ) q where PartnerID = 2151   select   s.Name,  s.AvgDays as SelectedCountryAvgDays,  isnull(r.AvgDays, '''') as ROWAvgDays from #tmpSelectedCountryDates s join #tmpROWDates r on   s.Name = r.Name and  s.PartnerID = r.PartnerID where   s.PartnerID = 2151  --END', N'Shipment Milestones', N'', CAST(N'2016-02-18T13:06:17.213' AS DateTime), N'jmerwin', N'jmerwin', 0x2F8DCC5C7A43DFEBD8BC56C1ABDE8431, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.190' AS DateTime), 42, N'da2e2cd8-a74e-4c58-9419-05c23a8ee911', N'select distinct   e.ValidationName,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''ACK'' group by e.ValidationName order by Count desc', N'Acknowledged Error Count by Validation Name', N'This report shows a count of Acknowledged validation errors by the validation name. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.190' AS DateTime), N'jmerwin', N'jmerwin', 0x3145E5E1E53AB717FFDDE956D647F846, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.187' AS DateTime), 43, N'96ac176c-fc6f-4490-a23c-46750ed3dc28', N'select distinct   h.BrokerName,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''ACK'' group by h.BrokerName order by Count desc', N'Acknowledged Errors by Brokers', N'This report shows a count of Acknowledged validation errors within a given broker. Acknowledged validation errors are declarations that will not be visible in the production data because these errors are considered hard stops. ', CAST(N'2016-02-18T13:06:17.187' AS DateTime), N'jmerwin', N'jmerwin', 0x586C102F0A36709D303158EB0DFC38EB, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.190' AS DateTime), 44, N'4d69b742-fb28-4af1-8320-99ff858ac44d', N'select    e.ValidationGroup,  COUNT(e.ValidationName) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND(@IMPORTDATERANGE or ImportDate= '''') and  c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and          e.StatusCode = ''ACK'' group by e.ValidationGroup', N'Acknowledged Errors by Group', N'This report shows a count of Acknowledged validation errors within a validation group. Acknowledged validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.190' AS DateTime), N'jmerwin', N'jmerwin', 0xADBFFDBF35A4F6ABA15745D65D2288EE, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.187' AS DateTime), 45, N'664aeb9f-65bb-4c5b-82e0-fa0f7cd4dae4', N'select distinct   e.ValidationGroup,  e.ValidationName,  COUNT(e.ValidationName) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''ACK'' group by e.ValidationGroup, e.ValidationName order by Count desc', N'Acknowledged Errors by Group', N'This report shows a count of Acknowledged validation errors within a validation group and validation name. Acknowledged validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.187' AS DateTime), N'jmerwin', N'jmerwin', 0x2E6B01BDCF0773CD347E2842DE9AD098, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.190' AS DateTime), 46, N'5046e8af-a19b-4c79-8b0f-4b04f5b33db6', N'select distinct   h.BrokerName,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join txdGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and     e.StatusCode = ''ACK'' group by h.BrokerName order by Count desc', N'Acknowledged Warnings by Broker', N'', CAST(N'2016-02-18T13:06:17.190' AS DateTime), N'jmerwin', N'jmerwin', 0x1B96F36B82725E8358003D6B908184FB, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.190' AS DateTime), 47, N'd9c16b48-5d1d-41fd-9c1e-3d82cafca99c', N'select distinct   h.ImportCountry,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join txdGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft''  and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and     e.StatusCode = ''ACK'' group by h.ImportCountry order by Count desc', N'Acknowledged Warnings by Import Country', N'This report shows a count of all Acknowledged validation groups for declarations that contain a warning message. Acknowledged validation warnings are informative messages chosen by the client. Declarations with validation warnings are still inserted into production data.', CAST(N'2016-02-18T13:06:17.190' AS DateTime), N'jmerwin', N'jmerwin', 0xE8732DEBC0050A3B00D23D8DA785F818, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.190' AS DateTime), 48, N'3f162d32-efe0-4652-a3ea-c4d859d8548b', N'select distinct   e.ValidationGroup,  e.ValidationName,  COUNT(e.ValidationName) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join txdGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''ACK'' group by e.ValidationGroup, e.ValidationName order by Count desc', N'Acknowledged Warnings by Name', N'', CAST(N'2016-02-18T13:06:17.190' AS DateTime), N'jmerwin', N'jmerwin', 0xAEED586CDC0F3B7A4EA234699C2C22B2, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.183' AS DateTime), 49, N'da2cf3d4-a676-4ab7-a040-1ba4786fa6c0', N'select distinct   e.ValidationName,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''DIS'' group by e.ValidationName order by Count desc', N'Disregarded Error Count by Name', N'This report shows a count of disregarded validation errors by the validation name. Disregarded validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.183' AS DateTime), N'jmerwin', N'jmerwin', 0xA26BD360B4006F8FCA6549326E679DCD, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.180' AS DateTime), 50, N'e04ef240-1b68-4ece-b64f-81683e6eb05a', N'select distinct   h.BrokerName,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''DIS'' group by h.BrokerName order by Count desc', N'Disregarded Errors by Broker', N'This report shows a count of disregarded validation errors within a given broker. Disregarded validation errors are declarations that will not be visible in the production data because these errors are considered hard stops. ', CAST(N'2016-02-18T13:06:17.180' AS DateTime), N'jmerwin', N'jmerwin', 0x61229329FFC44A9043855018816365E5, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.180' AS DateTime), 51, N'6007fc9e-57f7-4aad-aa51-4a2bf9ea2d6c', N'select    e.ValidationGroup,  COUNT(e.ValidationName) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND(@IMPORTDATERANGE or ImportDate= '''') and  c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and          e.StatusCode = ''DIS'' group by e.ValidationGroup', N'Disregarded Errors by Group ', N'This report shows a count of disregarded validation errors within a validation group. Disregarded validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.180' AS DateTime), N'jmerwin', N'jmerwin', 0xB01AD7ADDAF743D0BC23FBB4C4E55088, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.180' AS DateTime), 52, N'8d1b522a-65da-4313-b878-4993ff2fc73a', N'select distinct   h.ImportCountry,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and     e.StatusCode = ''DIS'' group by h.ImportCountry order by Count desc', N'Disregarded Errors by Import Country', N'This report shows a count of disregarded validation errors within a given import country. Disregarded validation errors are declarations that will not be visible in the production data because these errors are considered hard stops. ', CAST(N'2016-02-18T13:06:17.180' AS DateTime), N'jmerwin', N'jmerwin', 0x540259A4BB5D5311257F19345F5EFAFF, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.180' AS DateTime), 53, N'7738ad17-7bed-42b0-be41-96c451f9a485', N'select distinct   e.ValidationGroup,  e.ValidationName,  COUNT(e.ValidationName) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''DIS'' group by e.ValidationGroup, e.ValidationName order by Count desc', N'Disregarded Errors by Name', N'This report shows a count of disregarded validation errors within a validation group and validation name. Disregarded validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.180' AS DateTime), N'jmerwin', N'jmerwin', 0x84B7BDC869292D2E823EEE6AC5BE1797, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.183' AS DateTime), 54, N'1738b15f-f484-4478-88a5-dc2e0456c2b4', N'select distinct   h.BrokerName,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join txdGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and     e.StatusCode = ''DIS'' group by h.BrokerName order by Count desc', N'Disregarded Warnings by Broker', N'This report shows a count of disregarded warnings within a given broker. Disregarded warnings are declarations that will be visible in the production data because these warnings are considered soft stops. ', CAST(N'2016-02-18T13:06:17.183' AS DateTime), N'jmerwin', N'jmerwin', 0xB15DEDF2EE3316491EAC8A515848B6AD, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.183' AS DateTime), 55, N'49134648-c319-4395-ab86-840bd37cfaf8', N'select distinct   h.ImportCountry,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join txdGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '' '') and  c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and  c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''DIS'' group by h.ImportCountry order by Count desc', N'Disregarded Warnings by Import Country', N'This report shows a count of all validation groups for declarations that contain a disregarded warning message. Disregarded validation warnings are informative messages chosen by the client. Declarations with disregarded validation warnings are still inserted into production data.', CAST(N'2016-02-18T13:06:17.183' AS DateTime), N'jmerwin', N'jmerwin', 0x91818BBE4BF7B9C354763EB94068A8B7, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.183' AS DateTime), 56, N'b5e32041-6037-47d2-aebc-23628369a65f', N'select distinct   e.ValidationGroup,  e.ValidationName,  COUNT(e.ValidationName) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join txdGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''DIS'' group by e.ValidationGroup, e.ValidationName order by Count desc', N'Disregarded Warnings by Name', N'This report shows a count of disregarded validation warnings within a validation group and validation name. Disregarded validation warnings are declarations that will be visible in the production data because these warnings are considered soft stops.', CAST(N'2016-02-18T13:06:17.183' AS DateTime), N'jmerwin', N'jmerwin', 0xCFDD6AA022910D766B12E9C91A431BEE, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.177' AS DateTime), 57, N'1ed98c81-7f7b-41fd-97c4-56976548c376', N'select distinct   e.ValidationName,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''OPEN'' group by e.ValidationName order by Count desc', N'Error Count by Validation Name', N'This report shows a count of validation errors by the validation name. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.177' AS DateTime), N'jmerwin', N'jmerwin', 0x57CD1D543CA8B28B590668DD49B38000, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.180' AS DateTime), 58, N'412e79ce-fc5b-406d-ab7f-165929190924', N'select distinct   h.BrokerName,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc', N'Validation Error Brokers', N'This report shows a count of validation errors within a given broker. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops. ', CAST(N'2016-02-18T13:06:17.180' AS DateTime), N'jmerwin', N'jmerwin', 0x55AB24B2B41B777CF958CB5446435AB7, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.997' AS DateTime), 59, N'eb2a59ba-cb06-4019-a2f0-2befca28f25b', N'select    e.ValidationGroup,  COUNT(e.ValidationName) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND(@IMPORTDATERANGE or ImportDate= '''') and  c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and          e.StatusCode = ''OPEN'' group by e.ValidationGroup', N'Validation Errors', N'This report shows a count of validation errors within a validation group. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:16.997' AS DateTime), N'jmerwin', N'jmerwin', 0xD3628FD0D2C93B29CBB23F23B5D4A362, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.180' AS DateTime), 60, N'077b96df-7059-4414-9c4c-005f8bfb9994', N'select distinct   h.ImportCountry,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and     e.StatusCode = ''OPEN'' group by h.ImportCountry order by Count desc ', N'Validation Error Import Countries', N'This report shows a count of validation errors within a given import country. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops. ', CAST(N'2016-02-18T13:06:17.180' AS DateTime), N'jmerwin', N'jmerwin', 0x47699AFA53C8680B965FA49A2DB5A86F, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.000' AS DateTime), 61, N'004637d4-00ea-4a1c-b5fb-a3dc460a1eb6', N'select distinct   e.ValidationGroup,  e.ValidationName,  COUNT(e.ValidationName) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join ttdStagingGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''OPEN'' group by e.ValidationGroup, e.ValidationName order by Count desc', N'Validation Error Groups', N'This report shows a count of validation errors within a validation group and validation name. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.000' AS DateTime), N'jmerwin', N'jmerwin', 0xD3121FF79C1B4EF2E0A55E9717B1E1F1, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.180' AS DateTime), 62, N'74b898b4-8106-4e8a-8074-998b9eb36715', N'select distinct   h.BrokerName,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join txdGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and     e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc', N'Validation Warning Brokers', N'This report shows a count of validation warnings within a given broker. Validation warnings are declarations that will be visible in the production data because these warnings are considered soft stops. ', CAST(N'2016-02-18T13:06:17.180' AS DateTime), N'jmerwin', N'jmerwin', 0x0D71B9FC5A402463E15D91459AF7FDB9, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.053' AS DateTime), 63, N'f586f570-06f5-4cc7-8c5f-870b51c35757', N'select distinct   h.ImportCountry,  COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join txdGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft''  and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and     e.StatusCode = ''OPEN'' group by h.ImportCountry order by Count desc', N'Validation Warnings', N'This report shows a count of all validations by import country for declarations that contain a warning message. Validation warnings are informative messages chosen by the client. Declarations with validation warnings are still inserted into production data.', CAST(N'2016-02-18T13:06:17.053' AS DateTime), N'jmerwin', N'jmerwin', 0xBE57EE6F1F77AF9BD3EFC12AA9E439D5, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.180' AS DateTime), 64, N'1923596c-55f6-4886-b7ab-09d5b017eea0', N'select distinct   e.ValidationGroup,  e.ValidationName,  COUNT(e.ValidationName) as Count from txdGTVImportValidationErrors e --Join must exist because code uses it to run IMPORTDATERANGE join txdGVImportHeader h on       h.EntryGuid = e.EntryGUID and       h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and         e.StatusCode = ''OPEN'' group by e.ValidationGroup, e.ValidationName order by Count desc', N'Validation Warning Names', N'This report shows a count of validation warnings within a validation group and validation name. Validation warnings are declarations that will be visible in the production data because these warnings are considered soft stops.', CAST(N'2016-02-18T13:06:17.180' AS DateTime), N'jmerwin', N'jmerwin', 0x6037CC098DF0A4891EC8F0FE048A31B8, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.187' AS DateTime), 65, N'a0ee3952-3c3b-46b8-8d1a-05b03cdaf2b0', N'select       ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')'' as [View In EV],       e.ValidationName,       e.ValidationMessage,       h.ImportCountry,       h.ImportDate,       h.DeclarationNum,       d.LineNum,       d.ProductNum,       h.BrokerName,       ''@VALIDATIONACK'' as [VALIDATIONACK],        ''@VALIDATIONDIS'' as [VALIDATIONDIS],       e.LineGUID, e.GVValidationGUID from ttdStagingGVImportHeader h join txdGTVImportValidationErrors e on       h.EntryGUID = e.EntryGUID and       h.PartnerID = e.PartnerID left join ttdStagingGVImportDetail d on       h.EntryGuid = d.EntryGuid and       d.LineGUID = e.LineGUID and       h.PartnerID = d.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  join txdEntryValidationSummaryStatus xxev on        h.EntryGuid = xxev.EntryGUID and       h.PartnerID = xxev.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and        e.StatusCode = ''ACK''  UNION ALL  select       ''N/A'' as [View In EV],       e.ValidationName,       e.ValidationMessage,       h.ImportCountry,    h.ImportDate,       h.DeclarationNum,      d.LineNum,      d.ProductNum,      h.BrokerName,      ''@VALIDATIONACK'' as [VALIDATIONACK],       ''@VALIDATIONDIS'' as [VALIDATIONDIS],      e.LineGUID, e.GVValidationGUID from ttdStagingGVImportHeader h join txdGTVImportValidationErrors e on       h.EntryGUID = e.EntryGUID and       h.PartnerID = e.PartnerID left join ttdStagingGVImportDetail d on       h.EntryGuid = d.EntryGuid and       d.LineGUID = e.LineGUID and        h.PartnerID = d.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and  c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and        e.StatusCode = ''ACK'' and  NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID) order by e.ValidationName', N'Acknowledged Error Detail', N'This report shows the detail level information of an Acknowledged validation error. The message about the Acknowledged validation error is included on this report. The detail declaration information shown is import country, declaration number, line number and product number. Acknowledged validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.187' AS DateTime), N'jmerwin', N'jmerwin', 0x3AAA0D05FE59AE549867C3502545F591, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-03-10T13:46:51.007' AS DateTime), 66, N'88d9046e-43fa-4f3a-b1dc-539ba750c05e', N'select h.ImportCountry, d.ProductNum, COUNT(distinct UnitValue) as UnitValueCount from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID group by ImportCountry, ProductNum having (COUNT(distinct UnitValue)>1) order by ImportCountry', N'Biblioteca', N'', CAST(N'2016-03-10T13:46:51.007' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xC4ED946B92EC936C778D2C524C140B12, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-03-03T11:32:07.270' AS DateTime), 67, N'75980faa-5db9-4937-b4f2-bf90fce8fef2', N'SELECT   ''''['''' + ''''View in EV'''' + '''']'''' + ''''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='''' + xxev.EntryGuid + ''''&Tab=LineOverview'''' + '''')'''' as [View In EV],  DeclarationNum,  ProductNum,  BrokerName,  HsNum,  ImportCountry from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID join txdEntryValidationSummaryStatus xxev on   h.EntryGuid = xxev.EntryGUID and  h.PartnerID = xxev.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  AND ProductNum = ''''''''  UNION ALL  select  ''''N/A'''' as [View In EV],  DeclarationNum,  ProductNum,  BrokerName,  HsNum,  ImportCountry from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  AND ProductNum = ''''''''  AND NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID)', N'Declarations with Blank Product Numbers', N'This report shows any declarations where the product number is blank.', CAST(N'2016-03-03T11:32:07.270' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x8C00D0416C57794DC07581C9B42F310A, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-03-03T11:27:34.660' AS DateTime), 68, N'124f5bb7-a75a-4cdb-8eda-a35bf82921e5', N'SELECT 
	 ''''['''' + ''''View in EV'''' + '''']'''' + ''''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='''''''' + isnull(xxev.EntryGuid, '''''''') + ''''&Tab=LineOverview'''' + '''')'''' as [View In EV], 
	a.DeclarationNum, 
	a.ImportCountry, 
	a.ProductNum, 
	a.HsNum, 
	CAST((a.UnitValue) as Numeric(28,4)) as UnitValue 
from (SELECT Distinct h.PartnerId, h.EntryGuid, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID
) a
JOIN (SELECT Distinct h.PartnerId, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE @IMPORTDATERANGE
) b ON
      a.ImportCountry =  b.ImportCountry and 
      a.productnum = b.productnum and
      a.PartnerID = b.PartnerID
left join txdEntryValidationSummaryStatus xxev on 
      a.EntryGuid = xxev.EntryGUID and
      a.PartnerID = xxev.PartnerID 
WHERE 
      a.UnitValue <>  b.UnitValue and
      a.ProductNum <> ''''''''
 GROUP  BY 
      a.DeclarationNum, 
      a.ProductNum,
      a.ImportCountry,
      a.HsNum, 
      a.UnitValue, 
      xxev.EntryGUID 
ORDER BY a.ProductNum asc', N'Unit Value Fluctuations by Declaration Number', N'This report is the most detailed view of the unit value fluctuations displaying the declaration number, import country, product number, HS number, and unit value of the exception. A unit value fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-03-03T11:27:34.660' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x1F4A34831FE748F2ED91E72757D76401, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-03-15T09:53:20.810' AS DateTime), 69, N'10ed1f79-2873-4e4e-a791-cf7461c135ba', N'SELECT DISTINCT h.ExportCountry ,d.ProductNum INTO #tmpUnitCount FROM txdGVExportHeader h WITH (NOLOCK) JOIN txdGVExportDetail d WITH (NOLOCK) ON h.Exportguid = d.ExportGuid AND h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY ExportCountry ,ProductNum HAVING count(DISTINCT UnitValue) > 1 SELECT ExportCountry ,COUNT(ProductNum) AS Count FROM #tmpUnitCount GROUP BY ExportCountry ORDER BY Count DESC ', N'Unit Value Fluctuations By Export Country 2', N'test report', CAST(N'2016-03-15T09:53:20.810' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0x56BE51A0C89004DF35DD9B35AE553741, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-03-28T07:52:04.333' AS DateTime), 70, N'a83c95c8-e61c-4f09-9897-72e85ee5ba4e', N'SELECT top 10 h.BillToCompanyName, cast(sum(h.EstBaseTotalShipmentValue) as numeric(20,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.BillToCompanyName ORDER BY sum(h.EstBaseTotalShipmentValue) DESC ', N'Test Report', N'Testing Purpose, please ignore', CAST(N'2016-03-28T07:52:04.333' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0x0ED8493321AE8D8BB7202ADF1FE9BB1B, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-03-15T08:53:19.423' AS DateTime), 71, N'32688591-76c3-43ea-87e8-4015be7d366b', N'SELECT ImportCountry, CAST(SUM(h.EstBaseTotalDeclarationValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)], ''Total Import Value'' as CURRENCY, CAST(SUM(h.EstBaseTotalDeclarationDuty) as Numeric(28,2)) as EstBaseTotalDuty, ''Total Duty Paid'' as CURRENCY, COUNT(Distinct h.EntryGuid) as Entries, ''Number of Declarations'' as STRING FROM txdGVImportHeader h WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID AND h.ImportCountry <> '''' GROUP BY h.ImportCountry', N'Import Values by Country_test', N'', CAST(N'2016-03-15T08:53:19.423' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0x82A3FEACF0B09FC91BE56624DB3B0A0B, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-01T09:21:31.700' AS DateTime), 72, N'019f0d09-183f-4f47-bd2c-e9881e6ec39c', N'select distinct h.BrokerName, COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e join ttdStagingGVImportHeader h on h.EntryGuid = e.EntryGUID and h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on e.GVValidationGUID = c.GVValidationGUID and e.PartnerID = c.PartnerID WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and c.ActiveFlag = ''Y'' and (c.Attribute = ''Hard'' or c.Attribute = ''Required'') and c.CategoryType = ''I'' and e.PartnerID = (select PartnerID from tmfDefaults) and e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc', N'test''s report', N'', CAST(N'2016-04-01T09:21:31.700' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0x1C61D2B50C6DB6D704F5CFFCF0947D8F, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-01T09:58:55.217' AS DateTime), 73, N'938c4f3e-aa69-4dd1-9142-0e33022680d0', N'select distinct h.BrokerName, COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e join ttdStagingGVImportHeader h on h.EntryGuid = e.EntryGUID and h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on e.GVValidationGUID = c.GVValidationGUID and e.PartnerID = c.PartnerID WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and c.ActiveFlag = ''Y'' and (c.Attribute = ''Hard'' or c.Attribute = ''Required'') and c.CategoryType = ''I'' and e.PartnerID = (select PartnerID from tmfDefaults) and e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc ', N'test report 2', N'test description', CAST(N'2016-04-01T09:58:55.217' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0xCB0312E5900506692A67DC0AC11E930E, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.257' AS DateTime), 74, N'a1efc20d-6ae6-4de7-98cd-517b4c921d3b', N'SELECT   d.BusinessUnit as BusinessDivision,   CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.BusinessUnit  ORDER BY SUM(h.EstBaseTotalShipmentValue) DESC', N'All Volume Shipped by Business Division ', N'This report shows all business divisions and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-02-18T13:06:17.257' AS DateTime), N'jmerwin', N'jmerwin', 0x33C1433D2C89CBDF6B82DCAD044E23CC, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.287' AS DateTime), 75, N'81633ed7-b535-48d0-86c5-547a86ed1185', N'SELECT   d.ECNNum,   CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.ECNNum ORDER BY SUM(h.EstBaseTotalShipmentValue) DESC', N'All Volume Shipped by ECN Number', N'This report shows all ECN numbers and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each ECN number.', CAST(N'2016-02-18T13:06:17.287' AS DateTime), N'jmerwin', N'jmerwin', 0xFC67B02D824ECC8D774334CAC27A69B3, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.253' AS DateTime), 76, N'ff5d4c46-497a-4f8d-a67b-f21781e27d2f', N'SELECT   d.ExportTariffNum as ExportTariffNumber,   CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.ExportTariffNum  ORDER BY SUM(h.EstBaseTotalShipmentValue) DESC', N'All Volume Shipped by Export Tariff Number', N'This report shows all export tariff numbers and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each export tariff number.', CAST(N'2016-02-18T13:06:17.253' AS DateTime), N'jmerwin', N'jmerwin', 0x7E7C992C09D98949DA616D90A452EBCE, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.290' AS DateTime), 77, N'3c19e32a-0f2a-42d5-ba21-e8a23c077523', N'SELECT   d.ProductNum,   CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.ProductNum ORDER BY SUM(h.EstBaseTotalShipmentValue) DESC', N'All Volume Shipped by Product Number', N'This report shows all product numbers and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each product number.', CAST(N'2016-02-18T13:06:17.290' AS DateTime), N'jmerwin', N'jmerwin', 0x8991217BA3F756C5EB6A54DB3536047A, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-06T09:26:31.477' AS DateTime), 78, N'3c19e32a-0f2a-42d5-ba21-e8a23c077523', N'SELECT   d.ProductNum,   CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.ProductNum ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Shipment Counts by Product Number', N'This report shows all product numbers and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each product number.', CAST(N'2016-04-06T09:26:31.477' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xF79A13F88BD21637A876FA5CF04FF330, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-06T10:45:29.737' AS DateTime), 79, N'3c19e32a-0f2a-42d5-ba21-e8a23c077523', N'SELECT   d.ProductNum,   CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(DISTINCT h.ExportGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.ProductNum ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Shipment Counts by Product Number', N'This report shows all product numbers and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each product number.', CAST(N'2016-04-06T10:45:29.737' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xBD1BBE429C7AC7F9926504565DAA6EFF, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-06T09:24:58.553' AS DateTime), 80, N'a1efc20d-6ae6-4de7-98cd-517b4c921d3b', N'SELECT   d.BusinessUnit as BusinessDivision,   CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.BusinessUnit  ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Shipment Counts by Business Division ', N'This report shows all business divisions and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-06T09:24:58.553' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x4A210B4AF2CBDC9A72F2110BC758C7B6, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-07T12:03:22.740' AS DateTime), 81, N'a1efc20d-6ae6-4de7-98cd-517b4c921d3b', N'SELECT d.BusinessUnit AS BusinessDivision
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerShipment(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC
', N'All Shipment Counts by Business Division ', N'This report shows all business divisions and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-07T12:03:22.740' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x580404AFCE505A0B2E07FEF2603E92B6, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-07T12:04:49.190' AS DateTime), 82, N'a1efc20d-6ae6-4de7-98cd-517b4c921d3b', N'SELECT d.BusinessUnit AS BusinessDivision
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerShipment(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC
', N'All Shipment Counts by Business Division ', N'This report shows all business divisions and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-07T12:04:49.190' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x580404AFCE505A0B2E07FEF2603E92B6, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.203' AS DateTime), 83, N'09a2e10f-71e4-42e3-adc3-30ffdab0f879', N'select   ''Q''  + DATENAME(QUARTER, ImportDate) + ''-'' + cast(datepart(year, ImportDate) as varchar (50)) as ImportQuarter,  CAST(SUM(d.EstBaseTotalLineAddlIndirectTaxAmt) as Numeric(28,2)) as [EstBaseTotalAddlIndirectTaxAmt (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK)   on h.EntryGuid = d.EntryGuid   and h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID group by datepart(year, ImportDate), DATENAME(QUARTER, ImportDate) order by datepart(year, ImportDate), DATENAME(QUARTER, ImportDate)', N'', N'This report shows the total additional indirect tax associated with all declarations by quarter.', CAST(N'2016-02-18T13:06:17.203' AS DateTime), N'jmerwin', N'jmerwin', 0x376813050FE627E4F24CFFE183FEC0B1, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.943' AS DateTime), 84, N'986c76c6-6661-4f13-9a7c-40fb9fe7fa08', N'SELECT TOP 10   h.ImportCountry,    CAST(SUM(h.EstBaseTotalDeclarationValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND PartnerID = @PartnerID GROUP BY h.ImportCountry   ORDER BY SUM(h.EstBaseTotalDeclarationValue) DESC ', N'Top Countries of Import by Value', N'This report shows the countries of import with the highest associated total declaration value on all declarations filed. ', CAST(N'2016-02-18T13:06:16.943' AS DateTime), N'jmerwin', N'jmerwin', 0xEA9B21E5EF93822B41B2C03127DE8BFC, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.030' AS DateTime), 85, N'a1b59d4a-8257-4317-b164-2eb5b5613980', N'select   PartnerID, ImportCountry, datepart(year, ImportDate) as ImportYear, CAST(SUM(EstBaseTotalDeclarationValue) as Numeric(28,2)) as EstBaseTotalDeclarationValue INTO #CurrentYear  from txdgvimportheader h WITH (NOLOCK) WHERE 1=1 AND PartnerID = @PartnerID and  datepart(year, ImportDate) =  DATEPART(year, GetDate())  group by PartnerID, ImportCountry, datepart(year, ImportDate)  select   PartnerID, ImportCountry, datepart(year, ImportDate) as ImportYear, CAST(SUM(EstBaseTotalDeclarationValue) as Numeric(28,2)) as EstBaseTotalDeclarationValue INTO #LastYear  from txdGVImportHeader  WHERE   datepart(year, ImportDate) =  DATEPART(year, dateadd(year, -1, GetDate())) and ImportDate <= (GETDATE()-365) group by PartnerID, ImportCountry, datepart(year, ImportDate)   SELECT TOP 10   h.ImportCountry,    isnull(sum(h.EstBaseTotalDeclarationValue), 0) as [@CurrentYear],  isnull(sum(h2.EstBaseTotalDeclarationValue), 0) as [@LastYear] FROM #CurrentYear h left join #LastYear h2 on   h.ImportCountry = h2.ImportCountry and  h.PartnerID = h2.PartnerID Group By h.ImportCountry ORDER BY sum(h.EstBaseTotalDeclarationValue) DESC', N'Countries of Import by Value - YoY', N'This comparison report shows the countries of import with the highest associated total declaration value on all declarations filed for the current year compared to the highest associated total declaration value on all declarations filed for the previous year. ', CAST(N'2016-02-18T13:06:17.030' AS DateTime), N'jmerwin', N'jmerwin', 0xEE3DAA98A3695D899D7A480E82F6D48D, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-07T15:48:31.860' AS DateTime), 86, N'986c76c6-6661-4f13-9a7c-40fb9fe7fa08', N'SELECT TOP 10 h.ImportCountry
	,CAST(SUM(h.EstBaseTotalDeclarationValue) AS NUMERIC(28, 2)) AS [EstBaseTotalValue (@CurrencyCode)]
FROM txdgvimportheader h WITH (NOLOCK)
WHERE 1=1
	AND @IMPORTDATERANGE
	AND PartnerID = @PartnerID
GROUP BY h.ImportCountry
ORDER BY SUM(h.EstBaseTotalDeclarationValue) DESC', N'Top Countries of Import by Import Value', N'This report shows the countries of import with the highest associated total declaration value on all declarations filed. ', CAST(N'2016-04-07T15:48:31.860' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x6C7AFF2BE2E44F455213EBD8FB64BE2B, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-07T16:16:11.977' AS DateTime), 87, N'986c76c6-6661-4f13-9a7c-40fb9fe7fa08', N'SELECT TOP 10 h.ImportCountry
	,CAST(SUM(h.EstBaseTotalDeclarationValue) AS NUMERIC(28, 2)) AS [EstBaseTotalValue (@CurrencyCode)]
,h.ExportCountry
FROM txdgvimportheader h WITH (NOLOCK)
WHERE 1=1
	AND @IMPORTDATERANGE
	AND PartnerID = @PartnerID
GROUP BY h.ImportCountry
ORDER BY SUM(h.EstBaseTotalDeclarationValue) DESC', N'Top Countries of Import by Import Value', N'This report shows the countries of import with the highest associated total declaration value on all declarations filed. ', CAST(N'2016-04-07T16:16:11.977' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x6CEA6CD953323B4C7899F6F6F6A9A27A, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-07T16:29:36.147' AS DateTime), 88, N'986c76c6-6661-4f13-9a7c-40fb9fe7fa08', N'SELECT TOP 10 h.ImportCountry
	,CAST(SUM(h.EstBaseTotalDeclarationValue) AS NUMERIC(28, 2)) AS [EstBaseTotalValue (@CurrencyCode)]
FROM txdgvimportheader h WITH (NOLOCK)
WHERE 1=1
	AND @IMPORTDATERANGE
	AND PartnerID = @PartnerID
GROUP BY h.ImportCountry
ORDER BY SUM(h.EstBaseTotalDeclarationValue) DESC', N'Top Countries of Import by Import Value', N'This report shows the countries of import with the highest associated total declaration value on all declarations filed. ', CAST(N'2016-04-07T16:29:36.147' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x6C7AFF2BE2E44F455213EBD8FB64BE2B, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.050' AS DateTime), 89, N'50398d06-3323-4412-bde4-00af05ffebe6', N'SELECT ImportCountry,   CAST(SUM(h.EstBaseTotalDeclarationValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)],   ''Total Import Value'' as CURRENCY,  CAST(SUM(h.EstBaseTotalDeclarationDuty) as Numeric(28,2)) as EstBaseTotalDuty,   ''Total Duty Paid'' as CURRENCY,    COUNT(Distinct h.EntryGuid) as Entries,   ''Number of Declarations'' as STRING FROM txdGVImportHeader h  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID AND h.ImportCountry <> '''' GROUP BY h.ImportCountry', N'Import Values by Country', N'', CAST(N'2016-02-18T13:06:17.050' AS DateTime), N'jmerwin', N'jmerwin', 0x3A1C3B5E0464A46A6018FC61E6D60A39, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-07T16:47:33.087' AS DateTime), 90, N'50398d06-3323-4412-bde4-00af05ffebe6', N'SELECT ImportCountry
	,CAST(SUM(h.EstBaseTotalDeclarationValue)
	,''Total Import Value'' AS CURRENCY
	,CAST(SUM(h.EstBaseTotalDeclarationDuty) AS NUMERIC(28, 2)) AS EstBaseTotalDuty
	,''Total Duty Paid'' AS CURRENCY
	,COUNT(DISTINCT h.EntryGuid) AS Entries
	,''Number of Declarations'' AS STRING
FROM txdGVImportHeader h
WHERE 1=1
	AND @IMPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND h.ImportCountry <> ''''
GROUP BY h.ImportCountry', N'Import Values by Country', N'', CAST(N'2016-04-07T16:47:33.087' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x0E9A740A0C2533CC9E1A214FB8420456, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-07T16:47:48.810' AS DateTime), 91, N'50398d06-3323-4412-bde4-00af05ffebe6', N'SELECT ImportCountry
	,CAST(SUM(h.EstBaseTotalDeclarationValue)AS NUMERIC(28, 2))
	,''Total Import Value'' AS CURRENCY
	,CAST(SUM(h.EstBaseTotalDeclarationDuty) AS NUMERIC(28, 2)) AS EstBaseTotalDuty
	,''Total Duty Paid'' AS CURRENCY
	,COUNT(DISTINCT h.EntryGuid) AS Entries
	,''Number of Declarations'' AS STRING
FROM txdGVImportHeader h
WHERE 1=1
	AND @IMPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND h.ImportCountry <> ''''
GROUP BY h.ImportCountry', N'Import Values by Country', N'', CAST(N'2016-04-07T16:47:48.810' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xF42ED2D3A966082954DCB05435EC1D7D, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-07T16:48:26.490' AS DateTime), 92, N'50398d06-3323-4412-bde4-00af05ffebe6', N'SELECT ImportCountry
	,CAST(SUM(h.EstBaseTotalDeclarationValue)AS NUMERIC(28, 2))
	,''Total Import Value'' AS CURRENCY
	,CAST(SUM(h.EstBaseTotalDeclarationDuty) AS NUMERIC(28, 2))
	,''Total Duty Paid'' AS CURRENCY
	,COUNT(DISTINCT h.EntryGuid)
	,''Number of Declarations'' AS STRING
FROM txdGVImportHeader h
WHERE 1=1
	AND @IMPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND h.ImportCountry <> ''''
GROUP BY h.ImportCountry', N'Import Values by Country', N'', CAST(N'2016-04-07T16:48:26.490' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xD543CE21C95ED75FE0B397905836284C, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-07T16:49:04.343' AS DateTime), 93, N'50398d06-3323-4412-bde4-00af05ffebe6', N'SELECT ImportCountry
	,CAST(SUM(h.EstBaseTotalDeclarationDuty) AS NUMERIC(28, 2))
	,''Total Duty Paid'' AS CURRENCY
	,CAST(SUM(h.EstBaseTotalDeclarationValue)AS NUMERIC(28, 2))
	,''Total Import Value'' AS CURRENCY
	,COUNT(DISTINCT h.EntryGuid)
	,''Number of Declarations'' AS STRING
FROM txdGVImportHeader h
WHERE 1=1
	AND @IMPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND h.ImportCountry <> ''''
GROUP BY h.ImportCountry', N'Import Values by Country', N'', CAST(N'2016-04-07T16:49:04.343' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xB95622FA941FE9538311E17792C1F160, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-06T09:26:17.140' AS DateTime), 94, N'ff5d4c46-497a-4f8d-a67b-f21781e27d2f', N'SELECT   d.ExportTariffNum as ExportTariffNumber,   CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.ExportTariffNum  ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Shipment Counts by Export Tariff Number', N'This report shows all export tariff numbers and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each export tariff number.', CAST(N'2016-04-06T09:26:17.140' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x0D0A8B55DC496CA3FAD4F7FB39435060, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-06T09:26:01.767' AS DateTime), 95, N'81633ed7-b535-48d0-86c5-547a86ed1185', N'SELECT   d.ECNNum,   CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.ECNNum ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Shipment Counts by ECN Number', N'This report shows all ECN numbers and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each ECN number.', CAST(N'2016-04-06T09:26:01.767' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x08E5641DBF7E906895E1F325010A4DDF, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-11T16:22:43.250' AS DateTime), 96, N'81633ed7-b535-48d0-86c5-547a86ed1185', N'SELECT d.ECNNum
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.ECNNum
ORDER BY SUM(d.EstBaseTotalLineValue) DESC
', N'All Shipment Counts by ECN Number', N'This report shows all ECN numbers and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each ECN number.', CAST(N'2016-04-11T16:22:43.250' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x359800BE6798181CC8CEA60EE5B88454, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-06T10:45:55.223' AS DateTime), 97, N'3c19e32a-0f2a-42d5-ba21-e8a23c077523', N'SELECT   d.ProductNum,   CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(DISTINCT h.OrderNumShip) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.ProductNum ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Shipment Counts by Product Number', N'This report shows all product numbers and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each product number.', CAST(N'2016-04-06T10:45:55.223' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x2A012CD5DA8E5C2B99013695CCA970CF, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.257' AS DateTime), 98, N'ccf10932-336c-4aef-acc6-cb931d5f0158', N'SELECT top 10  d.BusinessUnit,   CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(h.ExportGUID) AS TotalHazMatVolume,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND d.HazMatFlag = ''Y'' AND h.PartnerID =  @PartnerID GROUP BY d.BusinessUnit ORDER BY SUM(h.EstBaseTotalShipmentValue) DESC', N'All Hazardous Material Shipped by Business Division', N'This report shows all business divisions that ship hazardous material, the estimated base total shipment value, the total count of hazardous material shipped, and the estimated base average value per declaration for each business division.', CAST(N'2016-02-18T13:06:17.257' AS DateTime), N'jmerwin', N'jmerwin', 0x4EE82970FA0F3B67EFA8A45036FFEABD, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.410' AS DateTime), 99, N'3ec59ac2-86ae-4537-b62c-43f01e49122e', N'SELECT top 10  d.ECNNum,   CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(h.ExportGUID) AS TotalHazMatVolume,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND d.HazMatFlag = ''Y'' AND h.PartnerID =  @PartnerID GROUP BY d.ECNNum ORDER BY SUM(h.EstBaseTotalShipmentValue) DESC', N'All Hazardous Material Exported by ECN Number', N'', CAST(N'2016-02-18T13:06:17.410' AS DateTime), N'jmerwin', N'jmerwin', 0x53EE3C77FDBF28C9E73D31ABBD121847, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.257' AS DateTime), 100, N'7868300b-88de-4c51-b646-d4b7c630da3b', N'SELECT   d.ExportTariffNum as ExportTariffNumber,   CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(h.ExportGUID) AS TotalHazMatVolume,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND d.HazMatFlag = ''Y'' AND h.PartnerID =  @PartnerID GROUP BY d.ExportTariffNum  ORDER BY SUM(h.EstBaseTotalShipmentValue) DESC', N'All Hazardous Material Shipped by Export Tariff Number', N'This report shows all export tariff numbers associated with the shipment of hazardous material, the estimated base total shipment value, the total volume of hazardous material shipped, and the estimated base average value per declaration for each export tariff number.', CAST(N'2016-02-18T13:06:17.257' AS DateTime), N'jmerwin', N'jmerwin', 0x2156059F1D6A2504D9A300C62F0AC94D, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.410' AS DateTime), 101, N'35046eaa-7d88-44d5-9c4b-e5bf57556f54', N'SELECT top 10  d.ProductNum,   CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(h.ExportGUID) AS TotalHazMatVolume,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND d.HazMatFlag = ''Y'' AND h.PartnerID =  @PartnerID GROUP BY d.ProductNum ORDER BY SUM(h.EstBaseTotalShipmentValue) DESC', N'All Hazardous Material Exported by Product Number', N'', CAST(N'2016-02-18T13:06:17.410' AS DateTime), N'jmerwin', N'jmerwin', 0x97ABE831D818BD5F313B1E4160734378, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-11T16:40:50.953' AS DateTime), 102, N'35046eaa-7d88-44d5-9c4b-e5bf57556f54', N'SELECT TOP 10 d.ProductNum
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerShipment(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND d.HazMatFlag = ''Y''
	AND h.PartnerID = @PartnerID
GROUP BY d.ProductNum
ORDER BY SUM(h.EstBaseTotalShipmentValue) DESC', N'All Hazardous Material Exported by Product Number', N'', CAST(N'2016-04-11T16:40:50.953' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xD597147B3E7CBFFEB6B23F2FBAF04592, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-11T16:44:08.057' AS DateTime), 103, N'35046eaa-7d88-44d5-9c4b-e5bf57556f54', N'SELECT TOP 10 d.ProductNum
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerShipment(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND d.HazMatFlag = ''Y''
	AND h.PartnerID = @PartnerID
GROUP BY d.ProductNum
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Hazardous Material Exported by Product Number', N'', CAST(N'2016-04-11T16:44:08.057' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x50D335B9789E3CF3C3FB1A7753AE0318, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.203' AS DateTime), 104, N'6b5b8187-7333-482d-94a8-7dd8179a9d61', N'SELECT ExportCountry,  CAST(SUM(EstBaseTotalShipmentValue) as Numeric(28,2)) as EstBaseTotalShipmentValue,  ''Total Export Value'' as CURRENCY,  CAST(SUM(TotalShipmentCharges) as Numeric(28,2)) as TotalShipmentCharges,  ''Total Charges Paid'' as CURRENCY,  COUNT(Distinct h.ExportGuid) as Shipments,  ''Total Shipment Count'' as STRING FROM txdGVExportHeader h  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID AND h.ExportCountry <> '''' GROUP BY h.ExportCountry ', N'Test Export Volume', N'', CAST(N'2016-02-18T13:06:17.203' AS DateTime), N'jmerwin', N'jmerwin', 0x9F01511B7A6544B134F4DFFD26B5C87C, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-11T16:54:52.520' AS DateTime), 105, N'6b5b8187-7333-482d-94a8-7dd8179a9d61', N'SELECT ExportCountry
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS EstBaseTotalShipmentValue
	,''Total Export Value'' AS CURRENCY
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS TotalShipmentCharges
	,''Total Charges Paid'' AS CURRENCY
	,COUNT(DISTINCT h.ExportGuid) AS Shipments
	,''Total Shipment Count'' AS STRING
FROM txdGVExportHeader h
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND h.ExportCountry <> ''''
GROUP BY h.ExportCountry', N'Export Value by Country', N'', CAST(N'2016-04-11T16:54:52.520' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xDC88A7A766A9BDC14A2038D79751438E, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-11T16:56:40.793' AS DateTime), 106, N'6b5b8187-7333-482d-94a8-7dd8179a9d61', N'SELECT ExportCountry
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS TotalShipmentCharges
	,''Total Charges Paid'' AS CURRENCY
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS EstBaseTotalShipmentValue
	,''Total Export Value'' AS CURRENCY
	,COUNT(DISTINCT h.ExportGuid) AS Shipments
	,''Total Shipment Count'' AS STRING
FROM txdGVExportHeader h
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND h.ExportCountry <> ''''
GROUP BY h.ExportCountry', N'Export Value by Country', N'', CAST(N'2016-04-11T16:56:40.793' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xB8E2DDB2BBE7098ABD8778CD2829FF6D, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.280' AS DateTime), 107, N'f0ebbc06-4abc-4d32-a445-9a6b7658b793', N'SELECT  h.ExportCountry,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipment,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.ExportCountry ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Total Shipment Charges by Export Country', N'This report shows all countries of export and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each country of export. ', CAST(N'2016-02-18T13:06:17.280' AS DateTime), N'jmerwin', N'jmerwin', 0x042B7186CBC33439D00F659F997950A7, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-11T16:57:39.457' AS DateTime), 108, N'6b5b8187-7333-482d-94a8-7dd8179a9d61', N'SELECT ExportCountry
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS EstBaseTotalShipmentValue
	,''Total Export Value'' AS CURRENCY
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS TotalShipmentCharges
	,''Total Charges Paid'' AS CURRENCY
	,COUNT(DISTINCT h.ExportGuid) AS Shipments
	,''Total Shipment Count'' AS STRING
FROM txdGVExportHeader h
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND h.ExportCountry <> ''''
GROUP BY h.ExportCountry', N'Export Value by Country', N'', CAST(N'2016-04-11T16:57:39.457' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xDC88A7A766A9BDC14A2038D79751438E, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-11T16:59:18.453' AS DateTime), 109, N'f0ebbc06-4abc-4d32-a445-9a6b7658b793', N'SELECT h.ExportCountry
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(@CurrencyCode)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipment
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGuid = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.ExportCountry
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Total Shipment Charges by Export Country', N'This report shows all countries of export and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each country of export. ', CAST(N'2016-04-11T16:59:18.453' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x3C7EC8E198A45D6A7AECF48F19E87A31, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-11T17:02:42.280' AS DateTime), 110, N'f0ebbc06-4abc-4d32-a445-9a6b7658b793', N'SELECT h.ExportCountry
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(@CurrencyCode)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipment
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGuid = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.ExportCountry
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Total Shipment Charges by Export Country', N'This report shows all countries of export and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each country of export. ', CAST(N'2016-04-11T17:02:42.280' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x3C7EC8E198A45D6A7AECF48F19E87A31, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-03-10T14:15:25.093' AS DateTime), 111, N'124f5bb7-a75a-4cdb-8eda-a35bf82921e5', N'SELECT 
	 ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='''' + isnull(xxev.EntryGuid, '''') + ''&Tab=LineOverview'' + '')'' as [View In EV], 
	a.DeclarationNum, 
	a.ImportCountry, 
	a.ProductNum, 
	a.HsNum, 
	CAST((a.UnitValue) as Numeric(28,4)) as UnitValue 
from (SELECT Distinct h.PartnerId, h.EntryGuid, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID
) a
JOIN (SELECT Distinct h.PartnerId, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE @IMPORTDATERANGE
) b ON
      a.ImportCountry =  b.ImportCountry and 
      a.productnum = b.productnum and
      a.PartnerID = b.PartnerID
left join txdEntryValidationSummaryStatus xxev on 
      a.EntryGuid = xxev.EntryGUID and
      a.PartnerID = xxev.PartnerID 
WHERE 
      a.UnitValue <>  b.UnitValue and
      a.ProductNum <> ''''
 GROUP  BY 
      a.DeclarationNum, 
      a.ProductNum,
      a.ImportCountry,
      a.HsNum, 
      a.UnitValue, 
      xxev.EntryGUID 
ORDER BY a.ProductNum asc', N'Unit Value Fluctuations by Declaration Number', N'This report is the most detailed view of the unit value fluctuations displaying the declaration number, import country, product number, HS number, and unit value of the exception. A unit value fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-03-10T14:15:25.093' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x1397FFA768828496533E448D32E61AF2, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-18T11:22:50.730' AS DateTime), 112, N'124f5bb7-a75a-4cdb-8eda-a35bf82921e5', N'SELECT 
	 ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='''' + isnull(xxev.EntryGuid, '''') + ''&Tab=LineOverview'' + '')'' as [View In EV], 
	a.DeclarationNum, 
	a.ImportCountry, 
	a.ProductNum, 
	a.HsNum, 
	CAST((a.UnitValue) as Numeric(28,4)) as UnitValue 
from (SELECT Distinct h.PartnerId, h.EntryGuid, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID
) a
JOIN (SELECT Distinct h.PartnerId, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE @IMPORTDATERANGE
) b ON
      a.ImportCountry =  b.ImportCountry and 
      a.productnum = b.productnum and
      a.PartnerID = b.PartnerID
left join txdEntryValidationSummaryStatus xxev on 
      a.EntryGuid = xxev.EntryGUID and
      a.PartnerID = xxev.PartnerID 
WHERE 
      a.UnitValue <>  b.UnitValue and
      a.ProductNum <> ''''
 GROUP  BY 
      a.DeclarationNum, 
      a.ProductNum,
      a.ImportCountry,
      a.HsNum, 
      a.UnitValue, 
      xxev.EntryGUID 
ORDER BY a.ProductNum asc', N'Unit Value Fluctuations by Declaration Number', N'This report is the most detailed view of the unit value fluctuations displaying the declaration number, import country, product number, HS number, and unit value of the exception. A unit value fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-04-18T11:22:50.730' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x1397FFA768828496533E448D32E61AF2, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-18T11:28:49.047' AS DateTime), 113, N'124f5bb7-a75a-4cdb-8eda-a35bf82921e5', N'SELECT   
CASE WHEN NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID)    THEN ''N/A''   ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')''  END AS [View in EV],
	a.DeclarationNum, 
	a.ImportCountry, 
	a.ProductNum, 
	a.HsNum, 
	CAST((a.UnitValue) as Numeric(28,4)) as UnitValue 
from (SELECT Distinct h.PartnerId, h.EntryGuid, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID
) a
JOIN (SELECT Distinct h.PartnerId, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE @IMPORTDATERANGE
) b ON
      a.ImportCountry =  b.ImportCountry and 
      a.productnum = b.productnum and
      a.PartnerID = b.PartnerID
left join txdEntryValidationSummaryStatus xxev on 
      a.EntryGuid = xxev.EntryGUID and
      a.PartnerID = xxev.PartnerID 
WHERE 
      a.UnitValue <>  b.UnitValue and
      a.ProductNum <> ''''
 GROUP  BY 
      a.DeclarationNum, 
      a.ProductNum,
      a.ImportCountry,
      a.HsNum, 
      a.UnitValue, 
      xxev.EntryGUID 
ORDER BY a.ProductNum asc', N'Unit Value Fluctuations by Declaration Number', N'This report is the most detailed view of the unit value fluctuations displaying the declaration number, import country, product number, HS number, and unit value of the exception. A unit value fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-04-18T11:28:49.047' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x13080D66D819078F3869BB26123FD160, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-18T11:29:43.840' AS DateTime), 114, N'124f5bb7-a75a-4cdb-8eda-a35bf82921e5', N'SELECT   
CASE WHEN NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where a.EntryGuid = EntryGuid and a.PartnerID = PartnerID)    THEN ''N/A''   ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')''  END AS [View in EV],
	a.DeclarationNum, 
	a.ImportCountry, 
	a.ProductNum, 
	a.HsNum, 
	CAST((a.UnitValue) as Numeric(28,4)) as UnitValue 
from (SELECT Distinct h.PartnerId, h.EntryGuid, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID
) a
JOIN (SELECT Distinct h.PartnerId, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE @IMPORTDATERANGE
) b ON
      a.ImportCountry =  b.ImportCountry and 
      a.productnum = b.productnum and
      a.PartnerID = b.PartnerID
left join txdEntryValidationSummaryStatus xxev on 
      a.EntryGuid = xxev.EntryGUID and
      a.PartnerID = xxev.PartnerID 
WHERE 
      a.UnitValue <>  b.UnitValue and
      a.ProductNum <> ''''
 GROUP  BY 
      a.DeclarationNum, 
      a.ProductNum,
      a.ImportCountry,
      a.HsNum, 
      a.UnitValue, 
      xxev.EntryGUID 
ORDER BY a.ProductNum asc', N'Unit Value Fluctuations by Declaration Number', N'This report is the most detailed view of the unit value fluctuations displaying the declaration number, import country, product number, HS number, and unit value of the exception. A unit value fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-04-18T11:29:43.840' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x6D3CDAA1BFD9A14C42136596EEE72C92, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.223' AS DateTime), 115, N'552d8354-0210-4cce-a047-bcf6dd5a2810', N'select  ''['' + ''View in Export Management'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE=E&ExportGuid='' + isnull(h.ExportGuid, '''')+ '')'' AS [View In EM] ,  h.OrderNumShip,  d.ProductNum,  d.ExportTariffNum,  h.HazMatFlag as HeaderHazMatFlag,  d.HazMatFlag as DetailHazMatFlag from txdGVExportHeader h join txdGVExportDetail d on  h.ExportGuid = d.ExportGUID and  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND  h.HazMatFlag = ''N'' and  d.HazMatFlag = ''Y''', N'Hazardous Material Discrepancy', N'This report shows potential discrepancies where the HazMatFlag on the shipment Header is "N" but at least one line on the line item Detail has HazMatFlag is "Y".', CAST(N'2016-02-18T13:06:17.223' AS DateTime), N'jmerwin', N'jmerwin', 0x22EF54E8D56C64603B1176BAFA0E020C, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.340' AS DateTime), 116, N'363e40ba-0eaa-4ba1-8c60-f7fa4418818c', N'SELECT ExportCountry, COUNT(ExportGUID) as Count FROM txdGVExportHeader h WHERE 1=1 AND   h.HazMatFlag=''N'' AND   EXISTS(select ExportGUID from txdGVExportDetail where HazMatFlag = ''Y'' and h.ExportGuid=ExportGUID) AND  @EXPORTDATERANGE GROUP BY ExportCountry', N'Hazardous Material Discrepancy by Export Country', N'This report shows potential discrepancies where the HazMatFlag on the shipment Header is "N" but at least one line on the line item Detail has HazMatFlag is "Y"', CAST(N'2016-02-18T13:06:17.340' AS DateTime), N'jmerwin', N'jmerwin', 0x185779FE6FECC01451C723C8EBA39B77, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.220' AS DateTime), 117, N'064bef76-b8a5-4752-a628-9e6f516f017f', N'SELECT top 10   d.BusinessUnit,   Count(DISTINCT h.OrderNumShip) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID  Group By d.BusinessUnit  ORDER BY Count(DISTINCT h.OrderNumShip) DESC', N'Total Volume Shipped by Business Division', N'This report shows the top business divisions and the total number of associated shipments.', CAST(N'2016-02-18T13:06:17.220' AS DateTime), N'jmerwin', N'jmerwin', 0x3DCA8C73B49F2DB853F04B893C7342DF, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.217' AS DateTime), 118, N'6a550954-2047-45c3-8cb3-b5aa31a1a279', N'SELECT top 10  h.CarrierName,   COUNT(h.OrderNumShip) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.CarrierName ORDER BY COUNT(h.OrderNumShip) DESC', N'Total Volume Shipped by Carrier', N'This report shows the top carriers and the total number of associated shipments.', CAST(N'2016-02-18T13:06:17.217' AS DateTime), N'jmerwin', N'jmerwin', 0x0BB674FEDE619DFE15874F46F08BCD6A, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-19T11:21:43.653' AS DateTime), 119, N'6a550954-2047-45c3-8cb3-b5aa31a1a279', N'SELECT TOP 10 h.CarrierName
	,COUNT(h.ExportGUID) AS TotalShipments
FROM txdGVExportHeader h WITH (NOLOCK)
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.CarrierName
ORDER BY COUNT(h.ExportGUID) DESC
', N'Top Shipment Count by Carrier', N'This report shows the top carriers and the total number of associated shipments.', CAST(N'2016-04-19T11:21:43.653' AS DateTime), N'71fdb7c8-b594-4a54-848e-49c4f55cc1ce', N'', 0xE14B45541DF8DB4105E3340053F71DBA, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-19T11:22:54.767' AS DateTime), 120, N'6a550954-2047-45c3-8cb3-b5aa31a1a279', N'SELECT TOP 10 h.CarrierName
	,COUNT(h.OrderNumShip) AS TotalShipments
FROM txdGVExportHeader h WITH (NOLOCK)
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.CarrierName
ORDER BY COUNT(h.OrderNumShip) DESC
', N'Top Shipment Count by Carrier', N'This report shows the top carriers and the total number of associated shipments.', CAST(N'2016-04-19T11:22:54.767' AS DateTime), N'71fdb7c8-b594-4a54-848e-49c4f55cc1ce', N'', 0xD64B12201414BC5963E5BB47EB698F92, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.253' AS DateTime), 121, N'aea208b7-bd7a-45f2-b299-b255f0f3a8fa', N'SELECT   d.BusinessUnit,  Cast(sum(d.NetWeight) as numeric (28,0)) as TotalWeightShipped,  CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.BusinessUnit ORDER BY SUM(d.EstBaseTotalLineValue) DESC ', N'All Weight Shipped by Business Division', N'This report shows all business divisions and the associated total weight, the total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-02-18T13:06:17.253' AS DateTime), N'jmerwin', N'jmerwin', 0x46B7A5E0A4BF48B9128B8BC707259FB6, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-19T14:51:24.530' AS DateTime), 122, N'aea208b7-bd7a-45f2-b299-b255f0f3a8fa', N'SELECT d.BusinessUnit
	,Cast(sum(d.NetWeight) AS NUMERIC(28, 0)) AS TotalWeightShipped
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalShipmentValue) / COUNT(d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC
', N'All Weight Exported by Business Division', N'This report shows all business divisions and the associated total weight, the total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-19T14:51:24.530' AS DateTime), N'71fdb7c8-b594-4a54-848e-49c4f55cc1ce', N'', 0x965C11726DEF42E2E3026C1EB8AEA7B7, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-19T14:52:30.383' AS DateTime), 123, N'aea208b7-bd7a-45f2-b299-b255f0f3a8fa', N'SELECT d.BusinessUnit
	,Cast(sum(d.NetWeight) AS NUMERIC(28, 0)) AS TotalWeightShipped
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalShipmentValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC
', N'All Weight Exported by Business Division', N'This report shows all business divisions and the associated total weight, the total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-19T14:52:30.383' AS DateTime), N'71fdb7c8-b594-4a54-848e-49c4f55cc1ce', N'', 0x76CBF650FB42406DE11CD2010D9E0C7C, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.287' AS DateTime), 124, N'e64867e9-cdda-46b5-9321-1cfea4bee8dd', N'SELECT top 10   d.ECNNum,   Count(DISTINCT h.OrderNumShip) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID  Group By d.ECNNum ORDER BY Count(DISTINCT h.OrderNumShip) DESC', N'Top Volume Shipped by ECN Number', N'This report shows the top ECN numbers and the total number of associated shipments.', CAST(N'2016-02-18T13:06:17.287' AS DateTime), N'jmerwin', N'jmerwin', 0x2FCFF5B2B6F681CAF3DD0775CC5FA4FF, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.217' AS DateTime), 125, N'2c1ab261-58e2-48fc-b1bb-272137a39b76', N'SELECT top 10   h.ExportCountry,   COUNT(h.OrderNumShip) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.ExportCountry ORDER BY COUNT(h.OrderNumShip) DESC', N'Total Volume Shipped by Export Country ', N'This report shows the top countries of export and the total number of associated shipments.', CAST(N'2016-02-18T13:06:17.217' AS DateTime), N'jmerwin', N'jmerwin', 0xB3DE1AD3B7F1B79D307EF815DD47E633, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.227' AS DateTime), 126, N'fc4c73f1-e526-42ab-aeec-b41cca0c80aa', N'SELECT top 10   d.ExportTariffNum,   Count(DISTINCT h.OrderNumShip) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID  Group By d.ExportTariffNum ORDER BY  Count(DISTINCT h.OrderNumShip) DESC', N'Total Volume Shipped by Export Tariff Number', N'This report shows the top export tariff numbers and the total number of associated shipments.', CAST(N'2016-02-18T13:06:17.227' AS DateTime), N'jmerwin', N'jmerwin', 0xFEFF0624BD8C8D08627C8E0BFC61A8BE, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.217' AS DateTime), 127, N'4c7e3ab8-0300-45c1-a0cf-defc9187e328', N'SELECT top 10   h.ForwarderCompanyName,   COUNT(h.OrderNumShip) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.ForwarderCompanyName ORDER BY COUNT(h.OrderNumShip) DESC', N'Total Volume Shipped by Forwarder', N'This report shows the top forwarders and the total number of associated shipments. ', CAST(N'2016-02-18T13:06:17.217' AS DateTime), N'jmerwin', N'jmerwin', 0xA25F2D6A09AE1219C04F5443CC3DB580, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.220' AS DateTime), 128, N'e58eec0a-47aa-4475-8c66-1646a08f0899', N'SELECT top 10   h.ImportCountry,   COUNT(h.OrderNumShip) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.ImportCountry ORDER BY COUNT(h.OrderNumShip) DESC', N'Total Volume Shipped by Import Country ', N'This report shows the top countries of import and the total number of associated shipments.', CAST(N'2016-02-18T13:06:17.220' AS DateTime), N'jmerwin', N'jmerwin', 0x7F61499ABE76B4EEC8B031F0972B9107, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.217' AS DateTime), 129, N'8bc44eab-e6fb-4597-af0a-2ce4051ada1f', N'SELECT top 10   h.ModeOfTransport,   COUNT(h.OrderNumShip) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.ModeOfTransport ORDER BY COUNT(h.OrderNumShip) DESC', N'Total Volume Shipped by Mode of Transport', N'This report shows the top modes of transport and the total number of associated shipments.', CAST(N'2016-02-18T13:06:17.217' AS DateTime), N'jmerwin', N'jmerwin', 0xF7E577C7DD7317122F6B450FFC0025FC, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.220' AS DateTime), 130, N'868a9df1-fe10-421b-a801-adf24423cc30', N'SELECT top 10   h.PortOfLading,   COUNT(h.OrderNumShip) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.PortOfLading ORDER BY COUNT(h.OrderNumShip) DESC', N'Total Volume Shipped by Port of Lading', N'This report shows the top ports of lading and the total number of associated shipments.', CAST(N'2016-02-18T13:06:17.220' AS DateTime), N'jmerwin', N'jmerwin', 0xB9DB47C7F8AE28DE03D03CFE62E9586C, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.220' AS DateTime), 131, N'ce6558e5-8a31-4916-90bb-e3d9ae7ffba6', N'SELECT top 10   h.PortOfUnlading,   COUNT(h.OrderNumShip) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.PortOfUnlading ORDER BY COUNT(h.OrderNumShip) DESC', N'Total Volume Shipped by Port of Unlading ', N'This report shows the top ports of unlading and the total number of associated shipments.', CAST(N'2016-02-18T13:06:17.220' AS DateTime), N'jmerwin', N'jmerwin', 0x012CBDD1F1CF59D64F2BCD3BF7849683, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.290' AS DateTime), 132, N'363acadf-6d25-4be7-82b3-fd53aaacca3b', N'SELECT top 10   d.ProductNum,   Count(DISTINCT h.OrderNumShip) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID  Group By d.ProductNum ORDER BY  Count(DISTINCT h.OrderNumShip) DESC', N'Top Volume Shipped by Product Number', N'This report shows the top product numbers and the total number of associated shipments.', CAST(N'2016-02-18T13:06:17.290' AS DateTime), N'jmerwin', N'jmerwin', 0x45C5AD679972FAD6D21B098F9F4B8132, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:14:16.857' AS DateTime), 133, N'fc4c73f1-e526-42ab-aeec-b41cca0c80aa', N'SELECT top 10   d.ExportTariffNum,   Count(DISTINCT h.ExportGUID) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID  Group By d.ExportTariffNum ORDER BY  Count(DISTINCT h.OrderNumShip) DESC', N'Top Shipment Count by Export Tariff Number', N'This report shows the top export tariff numbers and the total number of associated shipments.', CAST(N'2016-04-20T14:14:16.857' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x572CA2DB0F1496E229C206F9C0B2BF56, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.280' AS DateTime), 134, N'6cd3835f-3d4c-44cd-b4bf-379695b849d0', N'SELECT  d.BusinessUnit,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY d.BusinessUnit ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Total Shipment Charges By Business Division', N'This report shows all business divisions and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each business division. ', CAST(N'2016-02-18T13:06:17.280' AS DateTime), N'jmerwin', N'jmerwin', 0xED8D55F67B7B9D37A044A40803FCC798, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.313' AS DateTime), 135, N'16905564-be14-4bc1-974e-b8749693ed81', N'SELECT  h.CarrierName,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.CarrierName ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Total Shipment Charges By Carrier', N'', CAST(N'2016-02-18T13:06:17.313' AS DateTime), N'jmerwin', N'jmerwin', 0x625165EDD6F6EC8B5127F32A9C3AB03B, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.283' AS DateTime), 136, N'6b40a9c6-1f1c-479b-9ca9-0efa22958866', N'SELECT  d.ECNNum,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY d.ECNNum ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Total Shipment Charges By ECN', N'This report shows all ECN numbers and the associated total shipment charges on all shipments filed, the volume of shipments, and the average charge incurred per shipment for each ECN number. ', CAST(N'2016-02-18T13:06:17.283' AS DateTime), N'jmerwin', N'jmerwin', 0x729EF9C5610396AE76D33C2750726502, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-11T17:06:39.197' AS DateTime), 137, N'f0ebbc06-4abc-4d32-a445-9a6b7658b793', N'SELECT h.ExportCountry
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(USD)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(USD)]
	,COUNT(DISTINCT h.ExportGUID) AS TotalShipment
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(DISTINCT h.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(USD)]
FROM txdGVExportHeader h WITH (NOLOCK)
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.ExportCountry
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Total Shipment Charges by Export Country', N'This report shows all countries of export and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each country of export. ', CAST(N'2016-04-11T17:06:39.197' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xAC4D4F2C6F02F5DDA1031D8AF0FE7E21, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.280' AS DateTime), 138, N'7333a4b9-cbca-489d-a267-a1939a0cdf2a', N'SELECT  h.ForwarderCompanyName,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.ForwarderCompanyName ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Total Shipment Charges by Forwarder', N'This report shows all forwarders and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each forwarder. ', CAST(N'2016-02-18T13:06:17.280' AS DateTime), N'jmerwin', N'jmerwin', 0x48B76E1FE0CD107C6E70B13BE0EA0176, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.280' AS DateTime), 139, N'f85759e1-123b-43ba-8396-353025fe340e', N'SELECT  h.PortOfUnlading,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.PortOfUnlading ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Total Shipment Charges by Port of Unlading', N'This report shows all ports of unlading and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each port of unlading. ', CAST(N'2016-02-18T13:06:17.280' AS DateTime), N'jmerwin', N'jmerwin', 0x802C91B351EC6554C1AA0E7D1B236956, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.283' AS DateTime), 140, N'eaf5fae7-df73-4253-8af1-68a16dac9415', N'SELECT  d.ProductNum,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY d.ProductNum ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Total Shipment Charges By Product Number', N'This report shows all product numbers and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each product number. ', CAST(N'2016-02-18T13:06:17.283' AS DateTime), N'jmerwin', N'jmerwin', 0x257096A268190C25D60D6F4D0E2FAF75, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.280' AS DateTime), 141, N'c98876cf-d1a0-440f-a52f-238424ac5fb2', N'SELECT  h.PortOfLading,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.PortOfLading ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Total Shipment Charges by Port of Lading', N'This report shows all ports of lading and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each port of lading. ', CAST(N'2016-02-18T13:06:17.280' AS DateTime), N'jmerwin', N'jmerwin', 0x4714A95B8CC307A41D5683102FE2CEC1, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.280' AS DateTime), 142, N'159b1264-31bc-44f0-bcb4-cd926be09a42', N'SELECT  h.ImportCountry,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.ImportCountry ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Total Shipment Charges by Import Country', N'This report shows all countries of import and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each country of import. ', CAST(N'2016-02-18T13:06:17.280' AS DateTime), N'jmerwin', N'jmerwin', 0x46055BA037D95DD61B5C48F9DED8443B, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.280' AS DateTime), 143, N'78688e01-0328-4b68-ad4c-cfb86d5cf648', N'SELECT  h.ModeOfTransport,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.ModeOfTransport ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Total Shipment Charges by Mode of Transport', N'This report shows all modes of transport and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each mode of transport. ', CAST(N'2016-02-18T13:06:17.280' AS DateTime), N'jmerwin', N'jmerwin', 0xBFFEB56E0E47519B650DEC261D47E6E0, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.223' AS DateTime), 144, N'7da77140-9d98-4b55-9a15-74beade435bd', N'SELECT top 10   d.BusinessUnit,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By d.BusinessUnit  ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'Total Shipment Charges By Business Division', N'This report shows the top business divisions with the highest associated total shipment charges on all shipments. ', CAST(N'2016-02-18T13:06:17.223' AS DateTime), N'jmerwin', N'jmerwin', 0x60F3E6B9B872BE346355149C59B120AE, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.313' AS DateTime), 145, N'a666d363-4563-4942-a7f4-431b3185aef3', N'SELECT top 10   h.CarrierName,    CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.CarrierName ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'Total Shipment Charges By Carrier', N'', CAST(N'2016-02-18T13:06:17.313' AS DateTime), N'jmerwin', N'jmerwin', 0xB3E7982BBEE246B3650CB2763A362790, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.280' AS DateTime), 146, N'89c952d6-bc68-4945-9136-5ee0e0f69035', N'SELECT top 10   d.ECNNum,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By d.ECNNum ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'Total Shipment Charges By ECN', N'This report shows the top ECN numbers with the highest associated total shipment charges on all shipments. ', CAST(N'2016-02-18T13:06:17.280' AS DateTime), N'jmerwin', N'jmerwin', 0x2ACECADF31C5493387EBA2699C6C3A26, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.207' AS DateTime), 147, N'6e0a7cc3-82e2-4ef3-b100-0ab583369650', N'SELECT TOP 10  h.ForwarderCompanyName,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as EstBaseTotalShipmentCharges from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID  GROUP BY h.ForwarderCompanyName ORDER BY SUM(h.EstBaseTotalShipmentCharges) DESC', N'Total Shipment Charges by Forwarder', N'This report shows the top forwarders with the highest associated total shipment charges on all shipments. ', CAST(N'2016-02-18T13:06:17.207' AS DateTime), N'jmerwin', N'jmerwin', 0xFE8A61C8671AAA5735B4F566E5C12965, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.223' AS DateTime), 148, N'5db46d86-fedc-4995-90b4-7e90102fa14c', N'SELECT TOP 10  h.ImportCountry,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.ImportCountry ORDER BY SUM(h.EstBaseTotalShipmentCharges) DESC', N'Total Shipment Charges By Import Country', N'This report shows the top countries of import with the highest associated total shipment charges on all shipments. ', CAST(N'2016-02-18T13:06:17.223' AS DateTime), N'jmerwin', N'jmerwin', 0x10AE6ACB2A26A8AE78170C97F98934D7, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.223' AS DateTime), 149, N'7c7eb657-4ac0-4bed-9b11-99aec92b37f1', N'SELECT TOP 10  h.ModeOfTransport,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID  GROUP BY h.ModeOfTransport ORDER BY SUM(h.EstBaseTotalShipmentCharges) DESC', N'Total Shipment Charges by Port Of Lading', N'This report shows the top modes of transport with the highest associated total shipment charges on all shipments. ', CAST(N'2016-02-18T13:06:17.223' AS DateTime), N'jmerwin', N'jmerwin', 0xCD4721A4DD42B2628A372AB29D198D51, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.283' AS DateTime), 150, N'733f448d-b50a-4287-9a17-775ab6225555', N'SELECT top 10   d.ProductNum,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By d.ProductNum ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'Total Shipment Charges By Product Number', N'This report shows the top product numbers with the highest associated total shipment charges on all shipments. ', CAST(N'2016-02-18T13:06:17.283' AS DateTime), N'jmerwin', N'jmerwin', 0x3AF0F7C725EB69A0CFEEBC010AACBCAB, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.223' AS DateTime), 151, N'c13ef99b-47f1-41f3-8b0f-e24aaf2bba95', N'SELECT TOP 10  h.PortOfLading,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.PortOfLading ORDER BY SUM(h.EstBaseTotalShipmentCharges) DESC', N'Total Shipment Charges By Port of Lading', N'This report shows the top ports of lading with the highest associated total shipment charges on all shipments. ', CAST(N'2016-02-18T13:06:17.223' AS DateTime), N'jmerwin', N'jmerwin', 0x91850C15F76BFDE16C3DC92624BAA12D, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.223' AS DateTime), 152, N'e1ace9c8-5f0a-4357-a93d-c40db441fb84', N'SELECT TOP 10  h.PortOfUnlading,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.PortOfUnlading ORDER BY SUM(h.EstBaseTotalShipmentCharges) DESC', N'Total Shipment Charges By Port of Unlading', N'This report shows the top ports of unlading with the highest associated total shipment charges on all shipments. ', CAST(N'2016-02-18T13:06:17.223' AS DateTime), N'jmerwin', N'jmerwin', 0x38EE7E814AA264DCA4274B71C23638ED, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:50:58.103' AS DateTime), 153, N'f163120c-53d5-461a-87cb-b52b002139e1', N'SELECT top 10 h.ExportCountry, CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGuid = d.ExportGUID AND h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.ExportCountry ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'Top Shipment Charges by Export Country', N'', CAST(N'2016-04-20T14:50:58.103' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x055C297B219305EACDCEFA41EBA3DF6D, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T15:05:51.427' AS DateTime), 154, N'f163120c-53d5-461a-87cb-b52b002139e1', N'SELECT top 10 h.ExportCountry, CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.ExportCountry ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'Top Shipment Charges by Export Country', N'', CAST(N'2016-04-20T15:05:51.427' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x66338ABA4FCACE55F7A496367140BE73, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:40:50.110' AS DateTime), 155, N'6e0a7cc3-82e2-4ef3-b100-0ab583369650', N'SELECT TOP 10  h.ForwarderCompanyName,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as EstBaseTotalShipmentCharges from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID  GROUP BY h.ForwarderCompanyName ORDER BY SUM(h.EstBaseTotalShipmentCharges) DESC', N'Top Shipment Charges by Forwarder', N'This report shows the top forwarders with the highest associated total shipment charges on all shipments. ', CAST(N'2016-04-20T14:40:50.110' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x61165A8B3B53A2FA904626F03B6C962D, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:11:31.620' AS DateTime), 156, N'e64867e9-cdda-46b5-9321-1cfea4bee8dd', N'SELECT top 10   d.ECNNum,   Count(DISTINCT d.ExportGUID) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID  Group By d.ECNNum ORDER BY Count(DISTINCT h.OrderNumShip) DESC', N'Top Shipment Count by ECN Number', N'This report shows the top ECN numbers and the total number of associated shipments.', CAST(N'2016-04-20T14:11:31.620' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xC8D1B1CAA874E42B9E1CC4A0FE77F6EC, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:11:48.157' AS DateTime), 157, N'2c1ab261-58e2-48fc-b1bb-272137a39b76', N'SELECT top 10   h.ExportCountry,   COUNT(h.ExportGUID) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.ExportCountry ORDER BY COUNT(h.OrderNumShip) DESC', N'Top Shipment Count by Export Country ', N'This report shows the top countries of export and the total number of associated shipments.', CAST(N'2016-04-20T14:11:48.157' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x7A56D17A556007DBF76EE0366674546F, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:16:39.680' AS DateTime), 158, N'fc4c73f1-e526-42ab-aeec-b41cca0c80aa', N'SELECT top 10   d.ExportTariffNum,   Count(DISTINCT d.ExportGUID) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID  Group By d.ExportTariffNum ORDER BY  Count(DISTINCT h.OrderNumShip) DESC', N'Top Shipment Count by Export Tariff Number', N'This report shows the top export tariff numbers and the total number of associated shipments.', CAST(N'2016-04-20T14:16:39.680' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x7BFD173140F906F390A9ED3E68589BEE, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T15:12:28.037' AS DateTime), 159, N'fc4c73f1-e526-42ab-aeec-b41cca0c80aa', N'SELECT top 10   d.ExportTariffNum,   Count(DISTINCT d.ExportGUID) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID  Group By d.ExportTariffNum ORDER BY  Count(DISTINCT d.ExportGUID) DESC', N'Top Shipment Count by Export Tariff Number', N'This report shows the top export tariff numbers and the total number of associated shipments.', CAST(N'2016-04-20T15:12:28.037' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x4A2A1332DB12A63509DC4983AA6EF8D1, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:14:38.313' AS DateTime), 160, N'4c7e3ab8-0300-45c1-a0cf-defc9187e328', N'SELECT top 10   h.ForwarderCompanyName,   COUNT(h.ExportGUID) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.ForwarderCompanyName ORDER BY COUNT(h.OrderNumShip) DESC', N'Top Shipment Count by Forwarder', N'This report shows the top forwarders and the total number of associated shipments. ', CAST(N'2016-04-20T14:14:38.313' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x65DB24CFE103B24596196825ABEAD522, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:14:50.700' AS DateTime), 161, N'e58eec0a-47aa-4475-8c66-1646a08f0899', N'SELECT top 10   h.ImportCountry,   COUNT(h.ExportGUID) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.ImportCountry ORDER BY COUNT(h.OrderNumShip) DESC', N'Top Shipment Count by Import Country ', N'This report shows the top countries of import and the total number of associated shipments.', CAST(N'2016-04-20T14:14:50.700' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xE667F9176C51FD19E2AF603FA6ED9CD7, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:15:04.693' AS DateTime), 162, N'8bc44eab-e6fb-4597-af0a-2ce4051ada1f', N'SELECT top 10   h.ModeOfTransport,   COUNT(h.ExportGUID) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.ModeOfTransport ORDER BY COUNT(h.OrderNumShip) DESC', N'Top Shipment Count by Mode of Transport', N'This report shows the top modes of transport and the total number of associated shipments.', CAST(N'2016-04-20T14:15:04.693' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xBFDF6EEBB6B6A4F472D0C24BC0B405C3, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:15:18.590' AS DateTime), 163, N'868a9df1-fe10-421b-a801-adf24423cc30', N'SELECT top 10   h.PortOfLading,   COUNT(h.ExportGUID) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.PortOfLading ORDER BY COUNT(h.OrderNumShip) DESC', N'Top Shipment Count by Port of Lading', N'This report shows the top ports of lading and the total number of associated shipments.', CAST(N'2016-04-20T14:15:18.590' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xE92A07E16921903638444C2C87765FCB, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:15:29.373' AS DateTime), 164, N'ce6558e5-8a31-4916-90bb-e3d9ae7ffba6', N'SELECT top 10   h.PortOfUnlading,   COUNT(h.ExportGUID) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.PortOfUnlading ORDER BY COUNT(h.OrderNumShip) DESC', N'Top Shipment Count by Port of Unlading ', N'This report shows the top ports of unlading and the total number of associated shipments.', CAST(N'2016-04-20T14:15:29.373' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xA67041C40DCCEB1D12195C3400C85992, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:15:49.053' AS DateTime), 165, N'363acadf-6d25-4be7-82b3-fd53aaacca3b', N'SELECT top 10   d.ProductNum,   Count(DISTINCT d.ExportGUID) as TotalShipments from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID  Group By d.ProductNum ORDER BY  Count(DISTINCT h.OrderNumShip) DESC', N'Top Shipment Count by Product Number', N'This report shows the top product numbers and the total number of associated shipments.', CAST(N'2016-04-20T14:15:49.053' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xFB1424C43C8130D5798394AF6D306FBA, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-19T14:53:55.823' AS DateTime), 166, N'aea208b7-bd7a-45f2-b299-b255f0f3a8fa', N'SELECT d.BusinessUnit
	,Cast(sum(d.NetWeight) AS NUMERIC(28, 0)) AS TotalWeightShipped
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC
', N'All Weight Exported by Business Division', N'This report shows all business divisions and the associated total weight, the total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-19T14:53:55.823' AS DateTime), N'71fdb7c8-b594-4a54-848e-49c4f55cc1ce', N'', 0x3E726A55A4F29716AB76CCE5EA0D281F, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-20T16:03:48.287' AS DateTime), 167, N'aea208b7-bd7a-45f2-b299-b255f0f3a8fa', N'SELECT d.BusinessUnit
	,Cast(sum(d.NetWeight) AS NUMERIC(28, 0)) AS TotalWeightShipped
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC
', N'All Weight Exported by Business Division', N'This report shows all business divisions and the associated total weight, the total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-20T16:03:48.287' AS DateTime), N'71fdb7c8-b594-4a54-848e-49c4f55cc1ce', N'', 0x6A6BDB3B0659D6646B086D0AB0C7AACE, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-20T16:05:49.330' AS DateTime), 168, N'aea208b7-bd7a-45f2-b299-b255f0f3a8fa', N'SELECT d.BusinessUnit
	,Cast(sum(d.NetWeight) AS NUMERIC(28, 0)) AS TotalWeightShipped
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC
', N'All Weight Exported by Business Division', N'This report shows all business divisions and the associated total weight, the total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-20T16:05:49.330' AS DateTime), N'71fdb7c8-b594-4a54-848e-49c4f55cc1ce', N'', 0xF24959AE0B7513B52F9039357A8E122C, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.253' AS DateTime), 169, N'b8f1a15a-082a-4f3a-a016-61aec3139611', N'SELECT   d.ExportTariffNum as ExportTariffNumber,  Cast(sum(d.NetWeight) as numeric (28,0)) as TotalWeightShipped,  CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.ExportTariffNum  ORDER BY SUM(d.EstBaseTotalLineValue) DESC ', N'All Weight Shipped by Export Tariff Number', N'This report shows all export tariff numbers and the associated total weight, the total line value on all shipments, the count of shipments, and the average value per shipment for each export tariff number.', CAST(N'2016-02-18T13:06:17.253' AS DateTime), N'jmerwin', N'jmerwin', 0xB163B2531332513577CF39666CD85834, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.290' AS DateTime), 170, N'c030fee4-056f-482d-9dae-8129af5223ff', N'SELECT   d.ECNNum,  Cast(sum(d.NetWeight) as numeric (28,0)) as TotalWeightShipped,  CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.ECNNum ORDER BY SUM(d.EstBaseTotalLineValue) DESC ', N'All Weight Shipped by ECN Number', N'This report shows all ECN numbers and the associated total weight, the total line value on all shipments, the count of shipments, and the average value per shipment for each ECN Number.', CAST(N'2016-02-18T13:06:17.290' AS DateTime), N'jmerwin', N'jmerwin', 0x0E64B71AE6B34C6BBA40676658D1C73C, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T17:00:12.977' AS DateTime), 171, N'c030fee4-056f-482d-9dae-8129af5223ff', N'SELECT d.ECNNum
	,Cast(sum(d.NetWeight) AS NUMERIC(28, 0)) AS TotalWeightShipped
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(DISTINCT d.ExportGUID AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.ECNNum
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Weight Exported by ECN Number', N'This report shows all ECN numbers and the associated total weight, the total line value on all shipments, the count of shipments, and the average value per shipment for each ECN Number.', CAST(N'2016-04-20T17:00:12.977' AS DateTime), N'71fdb7c8-b594-4a54-848e-49c4f55cc1ce', N'', 0x5E3F35D29E9A77E851A230C4D4A98015, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.290' AS DateTime), 172, N'c1cac398-6316-476e-91be-d70d8f117531', N'SELECT   d.ProductNum,  Cast(sum(d.NetWeight) as numeric (28,0)) as TotalWeightShipped,  CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.ProductNum ORDER BY SUM(d.EstBaseTotalLineValue) DESC ', N'All Weight Shipped by Product Number', N'This report shows all product numbers and the associated total weight, the total line value on all shipments, the count of shipments, and the average value per shipment for each product number.', CAST(N'2016-02-18T13:06:17.290' AS DateTime), N'jmerwin', N'jmerwin', 0x26F5E66D1A1E23CD9CFE237A4C0CD0B8, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T17:05:52.890' AS DateTime), 173, N'c1cac398-6316-476e-91be-d70d8f117531', N'SELECT d.ProductNum
	,Cast(sum(d.NetWeight) AS NUMERIC(28, 0)) AS TotalWeightShipped
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]                
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments       
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.ProductNum
ORDER BY SUM(d.EstBaseTotalLineValue) DESC
', N'All Weight Exported by Product Number', N'This report shows all product numbers and the associated total weight, the total line value on all shipments, the count of shipments, and the average value per shipment for each product number.', CAST(N'2016-04-20T17:05:52.890' AS DateTime), N'71fdb7c8-b594-4a54-848e-49c4f55cc1ce', N'', 0x09F392D70A9D31CAB7CB2BF5FC3BF323, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-20T14:27:40.450' AS DateTime), 174, N'16905564-be14-4bc1-974e-b8749693ed81', N'SELECT  h.CarrierName,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.CarrierName ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Shipment Charges By Carrier', N'', CAST(N'2016-04-20T14:27:40.450' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x77768A0189D825113C1FC77896CDAB82, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:27:30.170' AS DateTime), 175, N'6cd3835f-3d4c-44cd-b4bf-379695b849d0', N'SELECT  d.BusinessUnit,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY d.BusinessUnit ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Shipment Charges By Business Division', N'This report shows all business divisions and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each business division. ', CAST(N'2016-04-20T14:27:30.170' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xD3BB51DB36D68581CC574D1508AF0019, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:28:00.203' AS DateTime), 176, N'6b40a9c6-1f1c-479b-9ca9-0efa22958866', N'SELECT  d.ECNNum,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY d.ECNNum ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Shipment Charges by ECN Number ', N'This report shows all ECN numbers and the associated total shipment charges on all shipments filed, the volume of shipments, and the average charge incurred per shipment for each ECN number. ', CAST(N'2016-04-20T14:28:00.203' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x557109BBF6CEDDE160C82C2247480B91, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:28:20.227' AS DateTime), 177, N'7333a4b9-cbca-489d-a267-a1939a0cdf2a', N'SELECT  h.ForwarderCompanyName,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.ForwarderCompanyName ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Shipment Charges by Forwarder', N'This report shows all forwarders and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each forwarder. ', CAST(N'2016-04-20T14:28:20.227' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x994D48489A6C57663410FBFC01B21088, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T17:17:04.503' AS DateTime), 178, N'6b40a9c6-1f1c-479b-9ca9-0efa22958866', N'SELECT  d.ECNNum,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY d.ECNNum ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Shipment Charges by ECN Number ', N'This report shows all ECN numbers and the associated total shipment charges on all shipments filed, the volume of shipments, and the average charge incurred per shipment for each ECN number. ', CAST(N'2016-04-20T17:17:04.503' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xA62CFB7820A34C9AF0B488A6921187A6, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T17:16:18.097' AS DateTime), 179, N'6cd3835f-3d4c-44cd-b4bf-379695b849d0', N'SELECT  d.BusinessUnit,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY d.BusinessUnit ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Shipment Charges By Business Division', N'This report shows all business divisions and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each business division. ', CAST(N'2016-04-20T17:16:18.097' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xB7C6C165DC2FA7E2602FFB0309E8A476, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:29:09.563' AS DateTime), 180, N'159b1264-31bc-44f0-bcb4-cd926be09a42', N'SELECT  h.ImportCountry,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.ImportCountry ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Shipment Charges by Import Country', N'This report shows all countries of import and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each country of import. ', CAST(N'2016-04-20T14:29:09.563' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xC9542E4DA56525841E4BA4A897C3C4D1, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:29:18.810' AS DateTime), 181, N'78688e01-0328-4b68-ad4c-cfb86d5cf648', N'SELECT  h.ModeOfTransport,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.ModeOfTransport ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Shipment Charges by Mode of Transport', N'This report shows all modes of transport and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each mode of transport. ', CAST(N'2016-04-20T14:29:18.810' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x217C80EAEA086E64F0FECD3C82A806DE, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:28:49.150' AS DateTime), 182, N'c98876cf-d1a0-440f-a52f-238424ac5fb2', N'SELECT  h.PortOfLading,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.PortOfLading ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Shipment Charges by Port of Lading', N'This report shows all ports of lading and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each port of lading. ', CAST(N'2016-04-20T14:28:49.150' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x092C45FAD587E600A7143450BBF890D9, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:28:31.393' AS DateTime), 183, N'f85759e1-123b-43ba-8396-353025fe340e', N'SELECT  h.PortOfUnlading,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.PortOfUnlading ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Shipment Charges by Port of Unlading', N'This report shows all ports of unlading and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each port of unlading. ', CAST(N'2016-04-20T14:28:31.393' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x1250D8E34C6D698E89FA7A8865FDA36C, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.257' AS DateTime), 184, N'736f578a-f037-4f9a-8d17-73086d5a4870', N'SELECT   d.BusinessUnit as BusinessDivision,   CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(d.EstBaseTotalLineValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.BusinessUnit  ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Shipped by Business Division ', N'This report shows all business divisions and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-02-18T13:06:17.257' AS DateTime), N'jmerwin', N'jmerwin', 0x2137900D5573E1261274C2E7E0528DCE, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-20T17:32:34.830' AS DateTime), 185, N'736f578a-f037-4f9a-8d17-73086d5a4870', N'SELECT d.BusinessUnit AS BusinessDivision
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]                
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments                
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC
', N'All Value Exported by Business Division ', N'This report shows all business divisions and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-20T17:32:34.830' AS DateTime), N'71fdb7c8-b594-4a54-848e-49c4f55cc1ce', N'', 0xBAE5B273AEF1A55FECA5680D610BD175, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-20T17:33:14.330' AS DateTime), 186, N'736f578a-f037-4f9a-8d17-73086d5a4870', N'SELECT d.BusinessUnit AS BusinessDivision
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]                
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC
', N'All Value Exported by Business Division ', N'This report shows all business divisions and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-20T17:33:14.330' AS DateTime), N'71fdb7c8-b594-4a54-848e-49c4f55cc1ce', N'', 0xFF49728FA88D773694554F6870010EBE, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-20T14:40:24.833' AS DateTime), 187, N'a666d363-4563-4942-a7f4-431b3185aef3', N'SELECT top 10   h.CarrierName,    CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By h.CarrierName ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'Top Shipment Charges By Carrier', N'', CAST(N'2016-04-20T14:40:24.833' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xCF87876A0431EF4A06DB507093952225, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.253' AS DateTime), 188, N'b8d8e8af-3f2a-4b55-b521-55b05e9d6c23', N'SELECT   d.ExportTariffNum as ExportTariffNumber,   CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(d.EstBaseTotalLineValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID =  @PartnerID GROUP BY d.ExportTariffNum  ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Shipped by Export Tariff Number', N'This report shows all export tariff numbers and the associated total line value on all shipments, the volume of shipments, and the average value per shipment for each export tariff number.', CAST(N'2016-02-18T13:06:17.253' AS DateTime), N'jmerwin', N'jmerwin', 0x5675EE3503CCD34ED04E33C1680C8D4D, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-21T08:46:37.770' AS DateTime), 189, N'b8d8e8af-3f2a-4b55-b521-55b05e9d6c23', N'SELECT d.ExportTariffNum AS ExportTariffNumber
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.ExportTariffNum
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Export Tariff Number', N'This report shows all export tariff numbers and the associated total line value on all shipments, the volume of shipments, and the average value per shipment for each export tariff number.', CAST(N'2016-04-21T08:46:37.770' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xFD0E5769574C2B5AF6FC336CAE76AC5A, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-21T08:48:57.233' AS DateTime), 190, N'b8d8e8af-3f2a-4b55-b521-55b05e9d6c23', N'SELECT d.ExportTariffNum AS ExportTariffNumber
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.ExportTariffNum
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Export Tariff Number', N'This report shows all export tariff numbers and the associated total line value on all shipments, the volume of shipments, and the average value per shipment for each export tariff number.', CAST(N'2016-04-21T08:48:57.233' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xAFDC73077A39BAB8227142F262E8CCAA, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-21T08:55:23.190' AS DateTime), 191, N'b8d8e8af-3f2a-4b55-b521-55b05e9d6c23', N'SELECT d.ExportTariffNum AS ExportTariffNumber
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.ExportTariffNum
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Export Tariff Number', N'This report shows all export tariff numbers and the associated total line value on all shipments, the volume of shipments, and the average value per shipment for each export tariff number.', CAST(N'2016-04-21T08:55:23.190' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xCA1E810086D32E6504635F697D103A06, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-21T08:56:59.487' AS DateTime), 192, N'b8d8e8af-3f2a-4b55-b521-55b05e9d6c23', N'SELECT d.ExportTariffNum AS ExportTariffNumber
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.ExportTariffNum
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Export Tariff Number', N'This report shows all export tariff numbers and the associated total line value on all shipments, the volume of shipments, and the average value per shipment for each export tariff number.', CAST(N'2016-04-21T08:56:59.487' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x7E03624B32DDE90D82330C1F590A6F78, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.287' AS DateTime), 193, N'78622d71-ad88-4a60-847c-8277871c34d7', N'SELECT   d.ProductNum,   CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) join txdGVExportDetail d WITH (NOLOCK) ON h. ExportGUID = d.ExportGUID AND h.PartnerID=d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY d.ProductNum ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Shipped by Product Number', N'This report shows all product numbers and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each product number.', CAST(N'2016-02-18T13:06:17.287' AS DateTime), N'jmerwin', N'jmerwin', 0xB35487DC5DA9FFC02BBA6F8142EE65AF, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-21T09:40:26.720' AS DateTime), 194, N'78622d71-ad88-4a60-847c-8277871c34d7', N'SELECT d.ProductNum
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.ProductNum
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Product Number', N'This report shows all product numbers and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each product number.', CAST(N'2016-04-21T09:40:26.720' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x31398479CA08177C9C2EC58D18E45FFC, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-21T09:42:58.660' AS DateTime), 195, N'78622d71-ad88-4a60-847c-8277871c34d7', N'SELECT d.ProductNum
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.ProductNum
ORDER BY SUM(d.EstBaseTotalLineValue) DESC
', N'All Value Exported by Product Number', N'This report shows all product numbers and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each product number.', CAST(N'2016-04-21T09:42:58.660' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x513451FF4A0967AB090A71B937EA6AA7, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-21T09:49:34.770' AS DateTime), 196, N'78622d71-ad88-4a60-847c-8277871c34d7', N'SELECT d.ProductNum
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(h.ExportGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.ProductNum
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Product Number', N'This report shows all product numbers and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each product number.', CAST(N'2016-04-21T09:49:34.770' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x2F359AB091BDDF9B927A094152D57ECE, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-20T17:34:55.390' AS DateTime), 197, N'736f578a-f037-4f9a-8d17-73086d5a4870', N'SELECT d.BusinessUnit AS BusinessDivision
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Business Division ', N'This report shows all business divisions and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-20T17:34:55.390' AS DateTime), N'71fdb7c8-b594-4a54-848e-49c4f55cc1ce', N'', 0x4C94D75AB98200C974AC6C4474869972, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-21T13:31:36.487' AS DateTime), 198, N'736f578a-f037-4f9a-8d17-73086d5a4870', N'SELECT d.BusinessUnit AS BusinessDivision
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Business Division ', N'This report shows all business divisions and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-21T13:31:36.487' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x4C94D75AB98200C974AC6C4474869972, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-21T13:36:11.947' AS DateTime), 199, N'736f578a-f037-4f9a-8d17-73086d5a4870', N'SELECT d.BusinessUnit AS BusinessDivision
	,CAST(SUM(h.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalLineValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Business Division ', N'This report shows all business divisions and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-21T13:36:11.947' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xF5869066B7696819F6433BC4E6FBEF46, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-21T13:39:55.380' AS DateTime), 200, N'736f578a-f037-4f9a-8d17-73086d5a4870', N'SELECT d.BusinessUnit AS BusinessDivision
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Business Division ', N'This report shows all business divisions and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-21T13:39:55.380' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xD458D710EAF7E72672A0A9395A1BD3C0, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-21T13:41:42.200' AS DateTime), 201, N'736f578a-f037-4f9a-8d17-73086d5a4870', N'SELECT d.BusinessUnit AS BusinessDivision
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Business Division ', N'This report shows all business divisions and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-21T13:41:42.200' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x5C3DE4AFFC988596AAC4A67080EBE64B, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-21T13:43:35.743' AS DateTime), 202, N'736f578a-f037-4f9a-8d17-73086d5a4870', N'SELECT d.BusinessUnit AS BusinessDivision
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Business Division ', N'This report shows all business divisions and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-21T13:43:35.743' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x4C94D75AB98200C974AC6C4474869972, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-21T13:45:24.853' AS DateTime), 203, N'736f578a-f037-4f9a-8d17-73086d5a4870', N'SELECT d.BusinessUnit AS BusinessDivision
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.BusinessUnit
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Business Division ', N'This report shows all business divisions and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each business division.', CAST(N'2016-04-21T13:45:24.853' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xD77CFBE6505E5AE687F0A8B080FFEA6E, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-21T09:03:15.257' AS DateTime), 204, N'b8d8e8af-3f2a-4b55-b521-55b05e9d6c23', N'SELECT d.ExportTariffNum AS ExportTariffNumber
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.ExportTariffNum
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Export Tariff Number', N'This report shows all export tariff numbers and the associated total line value on all shipments, the volume of shipments, and the average value per shipment for each export tariff number.', CAST(N'2016-04-21T09:03:15.257' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x7E03624B32DDE90D82330C1F590A6F78, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-21T09:53:13.007' AS DateTime), 205, N'78622d71-ad88-4a60-847c-8277871c34d7', N'SELECT d.ProductNum
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGUID = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY d.ProductNum
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Value Exported by Product Number', N'This report shows all product numbers and the associated total line value on all shipments, the count of shipments, and the average value per shipment for each product number.', CAST(N'2016-04-21T09:53:13.007' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x1991223A0F66975A758AE823293F68FF, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.047' AS DateTime), 206, N'95f6a479-b0ed-43e9-97ad-26ab3e663d2d', N'SELECT    ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + isnull(xxev.EntryGuid, '''') + ''&Tab=LineOverview'' + '')'' as [View In EV],   a.DeclarationNum,   a.ImportCountry,   a.ProductNum,   a.HsNum,  CAST(SUM(c.EstBaseTotalLineValue)  as Numeric(28,2)) as [SumOfEstBaseTotalLineValue(@CurrencyCode)],       CAST(MAX(c.AdValoremDutyRate)  as Numeric(28,4)) as MaximumAdValoremDutyRate from (SELECT Distinct h.PartnerId, h.EntryGuid, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID) a JOIN (SELECT Distinct h.PartnerId, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE @IMPORTDATERANGE) b ON       a.ImportCountry =  b.ImportCountry and        a.productnum = b.productnum and       a.PartnerID = b.PartnerID left join (select  h.importcountry, d.ProductNum, d.hsnum, d.EstBaseTotalLineValue, d.AdValoremDutyRate from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE @IMPORTDATERANGE ) c on a.ImportCountry = c.ImportCountry and a.ProductNum = c.Productnum and a.HSNum = c.HSNum left join txdEntryValidationSummaryStatus xxev on        a.EntryGuid = xxev.EntryGUID and       a.PartnerID = xxev.PartnerID  WHERE        a.HsNum <>  b.HsNum and       a.ProductNum <> ''''  GROUP  BY        a.DeclarationNum,        a.ProductNum,       a.ImportCountry,       a.HsNum,        xxev.EntryGUID  ORDER BY a.ProductNum asc ', N'Classification Fluctuation by Declaration Number', N'This report is the most detailed view of the classification fluctuations displaying the declaration number, import country, product number, and HS number of the exception. A classification fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-02-18T13:06:17.047' AS DateTime), N'jmerwin', N'jmerwin', 0xFD6CB1F76F9E69EEDB929381AC899AAA, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-28T08:57:11.193' AS DateTime), 207, N'95f6a479-b0ed-43e9-97ad-26ab3e663d2d', N'SELECT ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + isnull(xxev.EntryGuid, '''') + ''&Tab=LineOverview'' + '')'' AS [View In EV]
	,a.DeclarationNum
	,a.ImportCountry
	,a.BrokerName
	,a.EntryDate
	,a.ProductNum
	,a.HsNum
	,CAST(SUM(c.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [SumOfEstBaseTotalLineValue(@CurrencyCode)]
	,CAST(MAX(c.AdValoremDutyRate) AS NUMERIC(28, 4)) AS MaximumAdValoremDutyRate
FROM (
	SELECT DISTINCT h.PartnerId
		,h.EntryGuid
		,h.DeclarationNum
		,d.ProductNum
		,d.HsNum
		,h.ImportCountry
		,h.BrokerName
		,h.EntryDate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE 1=1
		AND @IMPORTDATERANGE
		AND h.PartnerID = @PartnerID
	) a
JOIN (
	SELECT DISTINCT h.PartnerId
		,h.DeclarationNum
		,d.ProductNum
		,d.HsNum
		,h.ImportCountry
		,h.BrokerName
		,h.EntryDate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE @IMPORTDATERANGE
	) b ON a.ImportCountry = b.ImportCountry
	AND a.productnum = b.productnum
	AND a.PartnerID = b.PartnerID
LEFT JOIN (
	SELECT h.importcountry
		,d.ProductNum
		,d.hsnum
		,d.EstBaseTotalLineValue
		,d.AdValoremDutyRate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE @IMPORTDATERANGE
	) c ON a.ImportCountry = c.ImportCountry
	AND a.ProductNum = c.Productnum
	AND a.HSNum = c.HSNum
LEFT JOIN txdEntryValidationSummaryStatus xxev ON a.EntryGuid = xxev.EntryGUID
	AND a.PartnerID = xxev.PartnerID
WHERE a.HsNum <> b.HsNum
	AND a.ProductNum <> ''''
GROUP BY a.DeclarationNum
	,a.ProductNum
	,a.ImportCountry
	,a.BrokerName
	,a.EntryDate
	,a.HsNum
	,xxev.EntryGUID
ORDER BY a.ProductNum ASC', N'Classification Fluctuation by Declaration Number', N'This report is the most detailed view of the classification fluctuations displaying the declaration number, import country, product number, and HS number of the exception. A classification fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-04-28T08:57:11.193' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x2BC61B76582D982B9023BBE7B7A011FD, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-03-10T13:25:16.730' AS DateTime), 208, N'a0ee3952-3c3b-46b8-8d1a-05b03cdaf2b0', N'select       ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')'' as [View In EV],       e.ValidationName,       e.ValidationMessage,       h.ImportCountry,       h.ImportDate,       h.DeclarationNum,       d.LineNum,       d.ProductNum,       h.BrokerName,       ''@VALIDATIONACK'' as [VALIDATIONACK],        ''@VALIDATIONDIS'' as [VALIDATIONDIS],       e.LineGUID, e.GVValidationGUID from ttdStagingGVImportHeader h join txdGTVImportValidationErrors e on       h.EntryGUID = e.EntryGUID and       h.PartnerID = e.PartnerID left join ttdStagingGVImportDetail d on       h.EntryGuid = d.EntryGuid and       d.LineGUID = e.LineGUID and       h.PartnerID = d.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  join txdEntryValidationSummaryStatus xxev on        h.EntryGuid = xxev.EntryGUID and       h.PartnerID = xxev.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and        e.StatusCode = ''ACK''  UNION ALL  select       ''N/A'' as [View In EV],       e.ValidationName,       e.ValidationMessage,       h.ImportCountry,    h.ImportDate,       h.DeclarationNum,      d.LineNum,      d.ProductNum,      h.BrokerName,      ''@VALIDATIONACK'' as [VALIDATIONACK],       ''@VALIDATIONDIS'' as [VALIDATIONDIS],      e.LineGUID, e.GVValidationGUID from ttdStagingGVImportHeader h join txdGTVImportValidationErrors e on       h.EntryGUID = e.EntryGUID and       h.PartnerID = e.PartnerID left join ttdStagingGVImportDetail d on       h.EntryGuid = d.EntryGuid and       d.LineGUID = e.LineGUID and        h.PartnerID = d.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and  c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and        e.StatusCode = ''ACK'' and  NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID) order by e.ValidationName', N'Acknowledged Errors Details', N'This report shows the detail level information of an Acknowledged validation error. The message about the Acknowledged validation error is included on this report. The detail declaration information shown is import country, declaration number, line number and product number. Acknowledged validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-03-10T13:25:16.730' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x26B9A5B3ECF3AFB60C18583D7DC079E7, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-28T09:02:53.107' AS DateTime), 209, N'a0ee3952-3c3b-46b8-8d1a-05b03cdaf2b0', N'SELECT CASE 
		WHEN NOT EXISTS (
				SELECT 1
				FROM txdEntryValidationSummaryStatus
				WHERE h.EntryGuid = EntryGuid
					AND h.PartnerID = PartnerID
				)
			THEN ''N/A''
		ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')''
		END AS [View in EV]	,e.ValidationName
	,e.ValidationMessage
	,h.ImportCountry
	,h.ImportDate
	,h.DeclarationNum
	,d.LineNum
	,d.ProductNum
	,h.BrokerName
	,''@VALIDATIONACK'' AS [VALIDATIONACK]
	,''@VALIDATIONDIS'' AS [VALIDATIONDIS]
	,e.LineGUID
	,e.GVValidationGUID
FROM ttdStagingGVImportHeader h
JOIN txdGTVImportValidationErrors e ON h.EntryGUID = e.EntryGUID
	AND h.PartnerID = e.PartnerID
LEFT JOIN ttdStagingGVImportDetail d ON h.EntryGuid = d.EntryGuid
	AND d.LineGUID = e.LineGUID
	AND h.PartnerID = d.PartnerID
JOIN tmgGVValidationConfiguration c ON e.GVValidationGUID = c.GVValidationGUID
	AND e.PartnerID = c.PartnerID
LEFT JOIN txdEntryValidationSummaryStatus xxev ON h.EntryGuid = xxev.EntryGUID
	AND h.PartnerID = xxev.PartnerID
WHERE 1=1
	AND @IMPORTDATERANGE
	AND c.ActiveFlag = ''Y''
	AND (
		c.Attribute = ''Hard''
		OR c.Attribute = ''Required''
		)
	AND c.CategoryType = ''I''
	AND e.PartnerID = (
		SELECT PartnerID
		FROM tmfDefaults
		)
	AND e.StatusCode = ''ACK''', N'Acknowledged Errors Details', N'This report shows the detail level information of an Acknowledged validation error. The message about the Acknowledged validation error is included on this report. The detail declaration information shown is import country, declaration number, line number and product number. Acknowledged validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-04-28T09:02:53.107' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xB0263D99C9F4DF658E7ECC3B3978AE15, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-28T09:05:18.777' AS DateTime), 210, N'a0ee3952-3c3b-46b8-8d1a-05b03cdaf2b0', N'SELECT CASE 
		WHEN NOT EXISTS (
				SELECT 1
				FROM txdEntryValidationSummaryStatus
				WHERE h.EntryGuid = EntryGuid
					AND h.PartnerID = PartnerID
				)
			THEN ''N/A''
		ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')''
		END AS [View in EV]	,e.ValidationName
	,e.ValidationMessage
	,h.ImportCountry
	,h.ImportDate
	,h.DeclarationNum
	,d.LineNum
	,d.ProductNum
	,h.BrokerName
	,e.LineGUID
	,e.GVValidationGUID
FROM ttdStagingGVImportHeader h
JOIN txdGTVImportValidationErrors e ON h.EntryGUID = e.EntryGUID
	AND h.PartnerID = e.PartnerID
LEFT JOIN ttdStagingGVImportDetail d ON h.EntryGuid = d.EntryGuid
	AND d.LineGUID = e.LineGUID
	AND h.PartnerID = d.PartnerID
JOIN tmgGVValidationConfiguration c ON e.GVValidationGUID = c.GVValidationGUID
	AND e.PartnerID = c.PartnerID
LEFT JOIN txdEntryValidationSummaryStatus xxev ON h.EntryGuid = xxev.EntryGUID
	AND h.PartnerID = xxev.PartnerID
WHERE 1=1
	AND @IMPORTDATERANGE
	AND c.ActiveFlag = ''Y''
	AND (
		c.Attribute = ''Hard''
		OR c.Attribute = ''Required''
		)
	AND c.CategoryType = ''I''
	AND e.PartnerID = (
		SELECT PartnerID
		FROM tmfDefaults
		)
	AND e.StatusCode = ''ACK''', N'Acknowledged Errors Details', N'This report shows the detail level information of an Acknowledged validation error. The message about the Acknowledged validation error is included on this report. The detail declaration information shown is import country, declaration number, line number and product number. Acknowledged validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-04-28T09:05:18.777' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x35EE6246E1B5136957AAC75F1EB2E47B, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-28T09:07:01.807' AS DateTime), 211, N'a0ee3952-3c3b-46b8-8d1a-05b03cdaf2b0', N'SELECT ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')'' AS [View In EV]
	,e.ValidationName
	,e.ValidationMessage
	,h.ImportCountry
	,h.ImportDate
	,h.DeclarationNum
	,d.LineNum
	,d.ProductNum
	,h.BrokerName
	,''@VALIDATIONACK'' AS [VALIDATIONACK]
	,''@VALIDATIONDIS'' AS [VALIDATIONDIS]
	,e.LineGUID
	,e.GVValidationGUID
FROM ttdStagingGVImportHeader h
JOIN txdGTVImportValidationErrors e ON h.EntryGUID = e.EntryGUID
	AND h.PartnerID = e.PartnerID
LEFT JOIN ttdStagingGVImportDetail d ON h.EntryGuid = d.EntryGuid
	AND d.LineGUID = e.LineGUID
	AND h.PartnerID = d.PartnerID
JOIN tmgGVValidationConfiguration c ON e.GVValidationGUID = c.GVValidationGUID
	AND e.PartnerID = c.PartnerID
JOIN txdEntryValidationSummaryStatus xxev ON h.EntryGuid = xxev.EntryGUID
	AND h.PartnerID = xxev.PartnerID
WHERE 1=1
	AND @IMPORTDATERANGE
	AND c.ActiveFlag = ''Y''
	AND (
		c.Attribute = ''Hard''
		OR c.Attribute = ''Required''
		)
	AND c.CategoryType = ''I''
	AND e.PartnerID = (
		SELECT PartnerID
		FROM tmfDefaults
		)
	AND e.StatusCode = ''ACK''

UNION ALL

SELECT ''N/A'' AS [View In EV]
	,e.ValidationName
	,e.ValidationMessage
	,h.ImportCountry
	,h.ImportDate
	,h.DeclarationNum
	,d.LineNum
	,d.ProductNum
	,h.BrokerName
	,''@VALIDATIONACK'' AS [VALIDATIONACK]
	,''@VALIDATIONDIS'' AS [VALIDATIONDIS]
	,e.LineGUID
	,e.GVValidationGUID
FROM ttdStagingGVImportHeader h
JOIN txdGTVImportValidationErrors e ON h.EntryGUID = e.EntryGUID
	AND h.PartnerID = e.PartnerID
LEFT JOIN ttdStagingGVImportDetail d ON h.EntryGuid = d.EntryGuid
	AND d.LineGUID = e.LineGUID
	AND h.PartnerID = d.PartnerID
JOIN tmgGVValidationConfiguration c ON e.GVValidationGUID = c.GVValidationGUID
	AND e.PartnerID = c.PartnerID
WHERE 1 = 1
	AND (
		@IMPORTDATERANGE
		OR ImportDate = ''''
		)
	AND c.ActiveFlag = ''Y''
	AND (
		c.Attribute = ''Hard''
		OR c.Attribute = ''Required''
		)
	AND c.CategoryType = ''I''
	AND e.PartnerID = (
		SELECT PartnerID
		FROM tmfDefaults
		)
	AND e.StatusCode = ''ACK''
	AND NOT EXISTS (
		SELECT 1
		FROM txdEntryValidationSummaryStatus
		WHERE h.EntryGuid = EntryGuid
			AND h.PartnerID = PartnerID
		)
ORDER BY e.ValidationName
', N'Acknowledged Errors Details', N'This report shows the detail level information of an Acknowledged validation error. The message about the Acknowledged validation error is included on this report. The detail declaration information shown is import country, declaration number, line number and product number. Acknowledged validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-04-28T09:07:01.807' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xBC5D66AE516758039DBBDDCE46200B8F, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-28T09:08:38.760' AS DateTime), 212, N'a0ee3952-3c3b-46b8-8d1a-05b03cdaf2b0', N'SELECT CASE 
		WHEN NOT EXISTS (
				SELECT 1
				FROM txdEntryValidationSummaryStatus
				WHERE h.EntryGuid = EntryGuid
					AND h.PartnerID = PartnerID
				)
			THEN ''N/A''
		ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')''
		END AS [View in EV]
	,e.ValidationName
	,e.ValidationMessage
	,h.ImportCountry
	,h.ImportDate
	,h.DeclarationNum
	,d.LineNum
	,d.ProductNum
	,h.BrokerName
	,e.LineGUID
	,e.GVValidationGUID
FROM ttdStagingGVImportHeader h
JOIN txdGTVImportValidationErrors e ON h.EntryGUID = e.EntryGUID
	AND h.PartnerID = e.PartnerID
LEFT JOIN ttdStagingGVImportDetail d ON h.EntryGuid = d.EntryGuid
	AND d.LineGUID = e.LineGUID
	AND h.PartnerID = d.PartnerID
JOIN tmgGVValidationConfiguration c ON e.GVValidationGUID = c.GVValidationGUID
	AND e.PartnerID = c.PartnerID
LEFT JOIN txdEntryValidationSummaryStatus xxev ON h.EntryGuid = xxev.EntryGUID
	AND h.PartnerID = xxev.PartnerID
WHERE 1=1
	AND @IMPORTDATERANGE
	AND c.ActiveFlag = ''Y''
	AND (
		c.Attribute = ''Hard''
		OR c.Attribute = ''Required''
		)
	AND c.CategoryType = ''I''
	AND e.PartnerID = (
		SELECT PartnerID
		FROM tmfDefaults
		)
	AND e.StatusCode = ''ACK''
ORDER BY e.ValidationName', N'Acknowledged Errors Details', N'This report shows the detail level information of an Acknowledged validation error. The message about the Acknowledged validation error is included on this report. The detail declaration information shown is import country, declaration number, line number and product number. Acknowledged validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-04-28T09:08:38.760' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xDE0BD2278A2C9E8CB231688B7176D113, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.190' AS DateTime), 213, N'a6303486-2c53-45c1-a543-6c2e208089ee', N'select       ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')'' as [View In EV],       e.ValidationName,       e.ValidationMessage,       h.ImportCountry, h.ImportDate,       h.DeclarationNum,       d.LineNum,       d.ProductNum, h.BrokerName, ''@VALIDATIONACK'' as [VALIDATIONACK],       ''@VALIDATIONDIS'' as [VALIDATIONDIS],      e.LineGUID, e.GVValidationGUID from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on       h.EntryGuid = d.EntryGuid and       h.PartnerID = d.PartnerID join txdGTVImportValidationErrors e on       h.EntryGUID = e.EntryGUID and       d.LineGUID = e.LineGUID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  join txdEntryValidationSummaryStatus xxev on        h.EntryGuid = xxev.EntryGUID and       h.PartnerID = xxev.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and        e.StatusCode = ''ACK''  UNION ALL  select       ''N/A'' as [View In EV],       e.ValidationName,       e.ValidationMessage,       h.ImportCountry, h.ImportDate,       h.DeclarationNum,       d.LineNum,       d.ProductNum, h.BrokerName, ''@VALIDATIONACK'' as [VALIDATIONACK],       ''@VALIDATIONDIS'' as [VALIDATIONDIS],      e.LineGUID, e.GVValidationGUID from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on       h.EntryGuid = d.EntryGuid and       h.PartnerID = d.PartnerID join txdGTVImportValidationErrors e on       h.EntryGUID = e.EntryGUID and       d.LineGUID = e.LineGUID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and        e.StatusCode = ''ACK'' and  NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID) order by e.ValidationName', N'Acknowledged Warning Detail', N'This report shows all Acknowledged validation messages for declarations that contain a warning message. Acknowledged validation warnings are informative messages chosen by the client. Declarations with validation warnings are still inserted into production data. The client has the ability to view the declaration in Entry Visibility if system access permits. ', CAST(N'2016-02-18T13:06:17.190' AS DateTime), N'jmerwin', N'jmerwin', 0x1CAADCBF0A2420008F91334ACC9AE5E8, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-28T08:58:58.560' AS DateTime), 214, N'95f6a479-b0ed-43e9-97ad-26ab3e663d2d', N'SELECT ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + isnull(xxev.EntryGuid, '''') + ''&Tab=LineOverview'' + '')'' AS [View In EV]
	,a.DeclarationNum
	,a.ImportCountry
	,a.BrokerName
	,a.ImportDate
	,a.ProductNum
	,a.HsNum
	,CAST(SUM(c.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [SumOfEstBaseTotalLineValue(@CurrencyCode)]
	,CAST(MAX(c.AdValoremDutyRate) AS NUMERIC(28, 4)) AS MaximumAdValoremDutyRate
FROM (
	SELECT DISTINCT h.PartnerId
		,h.EntryGuid
		,h.DeclarationNum
		,d.ProductNum
		,d.HsNum
		,h.ImportCountry
		,h.BrokerName
		,h.ImportDate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE 1=1
		AND @IMPORTDATERANGE
		AND h.PartnerID = @PartnerID
	) a
JOIN (
	SELECT DISTINCT h.PartnerId
		,h.DeclarationNum
		,d.ProductNum
		,d.HsNum
		,h.ImportCountry
		,h.BrokerName
		,h.ImportDate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE @IMPORTDATERANGE
	) b ON a.ImportCountry = b.ImportCountry
	AND a.productnum = b.productnum
	AND a.PartnerID = b.PartnerID
LEFT JOIN (
	SELECT h.importcountry
		,d.ProductNum
		,d.hsnum
		,d.EstBaseTotalLineValue
		,d.AdValoremDutyRate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE @IMPORTDATERANGE
	) c ON a.ImportCountry = c.ImportCountry
	AND a.ProductNum = c.Productnum
	AND a.HSNum = c.HSNum
LEFT JOIN txdEntryValidationSummaryStatus xxev ON a.EntryGuid = xxev.EntryGUID
	AND a.PartnerID = xxev.PartnerID
WHERE a.HsNum <> b.HsNum
	AND a.ProductNum <> ''''
GROUP BY a.DeclarationNum
	,a.ProductNum
	,a.ImportCountry
	,a.BrokerName
	,a.ImportDate
	,a.HsNum
	,xxev.EntryGUID
ORDER BY a.ProductNum ASC', N'Classification Fluctuation by Declaration Number', N'This report is the most detailed view of the classification fluctuations displaying the declaration number, import country, product number, and HS number of the exception. A classification fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-04-28T08:58:58.560' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xD0F4F38A61C8C868C431DCB7B1808C0F, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-28T09:13:05.193' AS DateTime), 215, N'95f6a479-b0ed-43e9-97ad-26ab3e663d2d', N'SELECT CASE 
		WHEN NOT EXISTS (
				SELECT 1
				FROM txdEntryValidationSummaryStatus
				WHERE h.EntryGuid = EntryGuid
					AND h.PartnerID = PartnerID
				)
			THEN ''N/A''
		ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')''
		END AS [View in EV]
	,a.DeclarationNum
	,a.ImportCountry
	,a.BrokerName
	,a.ImportDate
	,a.ProductNum
	,a.HsNum
	,CAST(SUM(c.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [SumOfEstBaseTotalLineValue(@CurrencyCode)]
	,CAST(MAX(c.AdValoremDutyRate) AS NUMERIC(28, 4)) AS MaximumAdValoremDutyRate
FROM (
	SELECT DISTINCT h.PartnerId
		,h.EntryGuid
		,h.DeclarationNum
		,d.ProductNum
		,d.HsNum
		,h.ImportCountry
		,h.BrokerName
		,h.ImportDate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE 1=1
		AND @IMPORTDATERANGE
		AND h.PartnerID = @PartnerID
	) a
JOIN (
	SELECT DISTINCT h.PartnerId
		,h.DeclarationNum
		,d.ProductNum
		,d.HsNum
		,h.ImportCountry
		,h.BrokerName
		,h.ImportDate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE @IMPORTDATERANGE
	) b ON a.ImportCountry = b.ImportCountry
	AND a.productnum = b.productnum
	AND a.PartnerID = b.PartnerID
LEFT JOIN (
	SELECT h.importcountry
		,d.ProductNum
		,d.hsnum
		,d.EstBaseTotalLineValue
		,d.AdValoremDutyRate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE @IMPORTDATERANGE
	) c ON a.ImportCountry = c.ImportCountry
	AND a.ProductNum = c.Productnum
	AND a.HSNum = c.HSNum
LEFT JOIN txdEntryValidationSummaryStatus xxev ON a.EntryGuid = xxev.EntryGUID
	AND a.PartnerID = xxev.PartnerID
WHERE a.HsNum <> b.HsNum
	AND a.ProductNum <> ''''
GROUP BY a.DeclarationNum
	,a.ProductNum
	,a.ImportCountry
	,a.BrokerName
	,a.ImportDate
	,a.HsNum
	,xxev.EntryGUID
ORDER BY a.ProductNum ASC', N'Classification Fluctuation by Declaration Number', N'This report is the most detailed view of the classification fluctuations displaying the declaration number, import country, product number, and HS number of the exception. A classification fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-04-28T09:13:05.193' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x64A007D44010F1D02F56F3753456D4E5, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-28T09:14:03.107' AS DateTime), 216, N'95f6a479-b0ed-43e9-97ad-26ab3e663d2d', N'SELECT CASE 
		WHEN NOT EXISTS (
				SELECT 1
				FROM txdEntryValidationSummaryStatus
				WHERE h.EntryGuid = EntryGuid
					AND h.PartnerID = PartnerID
				)
			THEN ''N/A''
		ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + h.EntryGuid + ''&Tab=LineOverview'' + '')''
		END AS [View in EV]
	,a.DeclarationNum
	,a.ImportCountry
	,a.BrokerName
	,a.ImportDate
	,a.ProductNum
	,a.HsNum
	,CAST(SUM(c.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [SumOfEstBaseTotalLineValue(@CurrencyCode)]
	,CAST(MAX(c.AdValoremDutyRate) AS NUMERIC(28, 4)) AS MaximumAdValoremDutyRate
FROM (
	SELECT DISTINCT h.PartnerId
		,h.EntryGuid
		,h.DeclarationNum
		,d.ProductNum
		,d.HsNum
		,h.ImportCountry
		,h.BrokerName
		,h.ImportDate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE 1=1
		AND @IMPORTDATERANGE
		AND h.PartnerID = @PartnerID
	) a
JOIN (
	SELECT DISTINCT h.PartnerId
		,h.DeclarationNum
		,d.ProductNum
		,d.HsNum
		,h.ImportCountry
		,h.BrokerName
		,h.ImportDate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE @IMPORTDATERANGE
	) b ON a.ImportCountry = b.ImportCountry
	AND a.productnum = b.productnum
	AND a.PartnerID = b.PartnerID
LEFT JOIN (
	SELECT h.importcountry
		,d.ProductNum
		,d.hsnum
		,d.EstBaseTotalLineValue
		,d.AdValoremDutyRate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE @IMPORTDATERANGE
	) c ON a.ImportCountry = c.ImportCountry
	AND a.ProductNum = c.Productnum
	AND a.HSNum = c.HSNum
LEFT JOIN txdEntryValidationSummaryStatus xxev ON a.EntryGuid = xxev.EntryGUID
	AND a.PartnerID = xxev.PartnerID
WHERE a.HsNum <> b.HsNum
	AND a.ProductNum <> ''''
GROUP BY a.DeclarationNum
	,a.ProductNum
	,a.ImportCountry
	,a.BrokerName
	,a.ImportDate
	,a.HsNum
	,xxev.EntryGUID
ORDER BY a.ProductNum ASC', N'Classification Fluctuation by Declaration Number', N'This report is the most detailed view of the classification fluctuations displaying the declaration number, import country, product number, and HS number of the exception. A classification fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-04-28T09:14:03.107' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x42C45639D09061B60BA4EA41C45C1A9C, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-28T09:23:06.360' AS DateTime), 217, N'95f6a479-b0ed-43e9-97ad-26ab3e663d2d', N'SELECT CASE 
		WHEN NOT EXISTS (
				SELECT 1
				FROM txdEntryValidationSummaryStatus
				WHERE a.EntryGuid = EntryGuid
					AND a.PartnerID = PartnerID
				)
			THEN ''N/A''
		ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + a.EntryGuid + ''&Tab=LineOverview'' + '')''
		END AS [View in EV]
	,a.DeclarationNum
	,a.ImportCountry
	,a.BrokerName
	,a.ImportDate
	,a.ProductNum
	,a.HsNum
	,CAST(SUM(c.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [SumOfEstBaseTotalLineValue(@CurrencyCode)]
	,CAST(MAX(c.AdValoremDutyRate) AS NUMERIC(28, 4)) AS MaximumAdValoremDutyRate
FROM (
	SELECT DISTINCT h.PartnerId
		,h.EntryGuid
		,h.DeclarationNum
		,d.ProductNum
		,d.HsNum
		,h.ImportCountry
		,h.BrokerName
		,h.ImportDate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE 1=1
		AND @IMPORTDATERANGE
		AND h.PartnerID = @PartnerID
	) a
JOIN (
	SELECT DISTINCT h.PartnerId
		,h.DeclarationNum
		,d.ProductNum
		,d.HsNum
		,h.ImportCountry
		,h.BrokerName
		,h.ImportDate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE @IMPORTDATERANGE
	) b ON a.ImportCountry = b.ImportCountry
	AND a.productnum = b.productnum
	AND a.PartnerID = b.PartnerID
LEFT JOIN (
	SELECT h.importcountry
		,d.ProductNum
		,d.hsnum
		,d.EstBaseTotalLineValue
		,d.AdValoremDutyRate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE @IMPORTDATERANGE
	) c ON a.ImportCountry = c.ImportCountry
	AND a.ProductNum = c.Productnum
	AND a.HSNum = c.HSNum
LEFT JOIN txdEntryValidationSummaryStatus xxev ON a.EntryGuid = xxev.EntryGUID
	AND a.PartnerID = xxev.PartnerID
WHERE a.HsNum <> b.HsNum
	AND a.ProductNum <> ''''
GROUP BY a.DeclarationNum
	,a.ProductNum
	,a.ImportCountry
	,a.BrokerName
	,a.ImportDate
	,a.HsNum
	,xxev.EntryGUID
ORDER BY a.ProductNum ASC', N'Classification Fluctuation by Declaration Number', N'This report is the most detailed view of the classification fluctuations displaying the declaration number, import country, product number, and HS number of the exception. A classification fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-04-28T09:23:06.360' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x4127796568045DBBEAEBF3536D06D561, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-28T09:24:15.750' AS DateTime), 218, N'95f6a479-b0ed-43e9-97ad-26ab3e663d2d', N'SELECT CASE 
		WHEN NOT EXISTS (
				SELECT 1
				FROM txdEntryValidationSummaryStatus
				WHERE a.EntryGuid = EntryGuid
					AND a.PartnerID = PartnerID
				)
			THEN ''N/A''
		ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGUID + ''&Tab=LineOverview'' + '')''
		END AS [View in EV]
	,a.DeclarationNum
	,a.ImportCountry
	,a.BrokerName
	,a.ImportDate
	,a.ProductNum
	,a.HsNum
	,CAST(SUM(c.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [SumOfEstBaseTotalLineValue(@CurrencyCode)]
	,CAST(MAX(c.AdValoremDutyRate) AS NUMERIC(28, 4)) AS MaximumAdValoremDutyRate
FROM (
	SELECT DISTINCT h.PartnerId
		,h.EntryGuid
		,h.DeclarationNum
		,d.ProductNum
		,d.HsNum
		,h.ImportCountry
		,h.BrokerName
		,h.ImportDate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE 1=1
		AND @IMPORTDATERANGE
		AND h.PartnerID = @PartnerID
	) a
JOIN (
	SELECT DISTINCT h.PartnerId
		,h.DeclarationNum
		,d.ProductNum
		,d.HsNum
		,h.ImportCountry
		,h.BrokerName
		,h.ImportDate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE @IMPORTDATERANGE
	) b ON a.ImportCountry = b.ImportCountry
	AND a.productnum = b.productnum
	AND a.PartnerID = b.PartnerID
LEFT JOIN (
	SELECT h.importcountry
		,d.ProductNum
		,d.hsnum
		,d.EstBaseTotalLineValue
		,d.AdValoremDutyRate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE @IMPORTDATERANGE
	) c ON a.ImportCountry = c.ImportCountry
	AND a.ProductNum = c.Productnum
	AND a.HSNum = c.HSNum
LEFT JOIN txdEntryValidationSummaryStatus xxev ON a.EntryGuid = xxev.EntryGUID
	AND a.PartnerID = xxev.PartnerID
WHERE a.HsNum <> b.HsNum
	AND a.ProductNum <> ''''
GROUP BY a.DeclarationNum
	,a.ProductNum
	,a.ImportCountry
	,a.BrokerName
	,a.ImportDate
	,a.HsNum
	,xxev.EntryGUID
ORDER BY a.ProductNum ASC', N'Classification Fluctuation by Declaration Number', N'This report is the most detailed view of the classification fluctuations displaying the declaration number, import country, product number, and HS number of the exception. A classification fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-04-28T09:24:15.750' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x00E5D668E9FEAF3852B578BC87CAE255, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:16.960' AS DateTime), 219, N'42ac17ae-f527-470e-ac93-81bf6eab3f45', N'select      ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + isnull(xxev.EntryGuid, '''') + ''&Tab=LineOverview'' + '')'' as [View In EV],  a.DeclarationNum,   a.ProductNum,   a.BrokerName,   a.CountryOfOrigin,   cast(a.AdValoremDutyRate as numeric (28,2))as AdValoremDutyRate from (SELECT Distinct h.PartnerID,h.EntryGuid, d.ProductNum, h.DeclarationNum, h.BrokerName, d.CountryOfOrigin, d.AdValoremDutyRate from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = 2142) a  join (SELECT Distinct h.PartnerID, d.ProductNum, h.DeclarationNum, h.BrokerName, d.CountryOfOrigin, d.AdValoremDutyRate from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = 2142) b ON   a.PartnerID = b.PartnerID AND   a.ProductNum = b.ProductNum  left join txdEntryValidationSummaryStatus xxev on        a.EntryGuid = xxev.EntryGUID and       a.PartnerID = xxev.PartnerID  WHERE    a.CountryOfOrigin <> b.CountryOfOrigin and  a.ProductNum <> '''' group by   a.DeclarationNum,   a.ProductNum,   a.BrokerName,   a.CountryOfOrigin,   a.AdValoremDutyRate,   xxev.EntryGUID  order by ProductNum, AdValoremDutyRate, CountryOfOrigin', N'Country of Origin Discrepancy', N'This report shows discrepancies in countries of origin between declarations that have the same product number. This report is intended for companies that do not multi-source to find country of origin filing errors. ', CAST(N'2016-02-18T13:06:16.960' AS DateTime), N'jmerwin', N'jmerwin', 0x82950DFB33FE7EA6BF19440CECB0311C, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-28T09:27:19.363' AS DateTime), 220, N'42ac17ae-f527-470e-ac93-81bf6eab3f45', N'SELECT CASE 
		WHEN NOT EXISTS (
				SELECT 1
				FROM txdEntryValidationSummaryStatus
				WHERE a.EntryGuid = EntryGuid
					AND a.PartnerID = PartnerID
				)
			THEN ''N/A''
		ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')''
		END AS [View in EV]
	,a.DeclarationNum
	,a.ProductNum
	,a.BrokerName
	,a.ImportDate
	,a.CountryOfOrigin
	,cast(a.AdValoremDutyRate AS NUMERIC(28, 2)) AS AdValoremDutyRate
FROM (
	SELECT DISTINCT h.PartnerID
		,h.EntryGuid
		,d.ProductNum
		,h.DeclarationNum
		,h.BrokerName
		,h.ImportDate
		,d.CountryOfOrigin
		,d.AdValoremDutyRate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE 1 = 1
		AND @IMPORTDATERANGE
		AND h.PartnerID = 2142
	) a
JOIN (
	SELECT DISTINCT h.PartnerID
		,d.ProductNum
		,h.DeclarationNum
		,h.BrokerName
		,h.ImportDate
		,d.CountryOfOrigin
		,d.AdValoremDutyRate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE 1=1
		AND @IMPORTDATERANGE
		AND h.PartnerID = 2142
	) b ON a.PartnerID = b.PartnerID
	AND a.ProductNum = b.ProductNum
LEFT JOIN txdEntryValidationSummaryStatus xxev ON a.EntryGuid = xxev.EntryGUID
	AND a.PartnerID = xxev.PartnerID
WHERE a.CountryOfOrigin <> b.CountryOfOrigin
	AND a.ProductNum <> ''''
GROUP BY a.DeclarationNum
	,a.ProductNum
	,a.BrokerName
	,a.CountryOfOrigin
	,a.AdValoremDutyRate
	,a.EntryGUID
	,a.PartnerID
	,xxev.EntryGUID
ORDER BY ProductNum
	,AdValoremDutyRate
	,CountryOfOrigin
', N'Country of Origin Discrepancy', N'This report shows discrepancies in countries of origin between declarations that have the same product number. This report is intended for companies that do not multi-source to find country of origin filing errors. ', CAST(N'2016-04-28T09:27:19.363' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x66D8C999432CF8FC134532F9698D2059, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-28T09:28:40.837' AS DateTime), 221, N'42ac17ae-f527-470e-ac93-81bf6eab3f45', N'SELECT CASE 
		WHEN NOT EXISTS (
				SELECT 1
				FROM txdEntryValidationSummaryStatus
				WHERE a.EntryGuid = EntryGuid
					AND a.PartnerID = PartnerID
				)
			THEN ''N/A''
		ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')''
		END AS [View in EV]
	,a.DeclarationNum
	,a.ProductNum
	,a.BrokerName
	,a.ImportDate
	,a.CountryOfOrigin
	,cast(a.AdValoremDutyRate AS NUMERIC(28, 2)) AS AdValoremDutyRate
FROM (
	SELECT DISTINCT h.PartnerID
		,h.EntryGuid
		,d.ProductNum
		,h.DeclarationNum
		,h.BrokerName
		,h.ImportDate
		,d.CountryOfOrigin
		,d.AdValoremDutyRate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE 1=1
		AND @IMPORTDATERANGE
		AND h.PartnerID = @PartnerID
	) a
JOIN (
	SELECT DISTINCT h.PartnerID
		,d.ProductNum
		,h.DeclarationNum
		,h.BrokerName
		,h.ImportDate
		,d.CountryOfOrigin
		,d.AdValoremDutyRate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE 1=1
		AND @IMPORTDATERANGE
		AND h.PartnerID = @PartnerID
	) b ON a.PartnerID = b.PartnerID
	AND a.ProductNum = b.ProductNum
LEFT JOIN txdEntryValidationSummaryStatus xxev ON a.EntryGuid = xxev.EntryGUID
	AND a.PartnerID = xxev.PartnerID
WHERE a.CountryOfOrigin <> b.CountryOfOrigin
	AND a.ProductNum <> ''''
GROUP BY a.DeclarationNum
	,a.ProductNum
	,a.BrokerName
	,a.CountryOfOrigin
	,a.AdValoremDutyRate
	,a.EntryGUID
	,a.PartnerID
	,xxev.EntryGUID
ORDER BY ProductNum
	,AdValoremDutyRate
	,CountryOfOrigin
', N'Country of Origin Discrepancy', N'This report shows discrepancies in countries of origin between declarations that have the same product number. This report is intended for companies that do not multi-source to find country of origin filing errors. ', CAST(N'2016-04-28T09:28:40.837' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x5A2912985DFB8725215898DEF10A59FD, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.160' AS DateTime), 222, N'6a333859-b23c-4fcf-9d1b-8928fd06bac4', N'SELECT    ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + isnull(xxev.EntryGuid, '''') + ''&Tab=LineOverview'' + '')'' as [View In EV],   h.DeclarationNum,   h.BrokerName,   h.VersionNum,   h.ImportDate,  h.PortOfFiling from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK)  on h.EntryGuid = d.EntryGuid  left join txdEntryValidationSummaryStatus xxev on        h.EntryGuid = xxev.EntryGUID and       h.PartnerID = xxev.PartnerID  and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID and h.ActiveVersionFlag = ''Y''  GROUP  BY        h.DeclarationNum,    h.BrokerName,    h.VersionNum,    h.PortOfFiling,   h.ImportDate,    xxev.EntryGUID ORDER BY h. VersionNum  desc', N'Declarations by Broker', N'This report allows the user to view the most recent version of the declarations sent. If the user has Entry Visibility, the ability to link out and view the declaration in entry visibility is available. ', CAST(N'2016-02-18T13:06:17.160' AS DateTime), N'jmerwin', N'jmerwin', 0x689E7E27B2001A335C1E85F85B96F848, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-28T09:30:23.793' AS DateTime), 223, N'6a333859-b23c-4fcf-9d1b-8928fd06bac4', N'SELECT CASE 
		WHEN NOT EXISTS (
				SELECT 1
				FROM txdEntryValidationSummaryStatus
				WHERE h.EntryGuid = EntryGuid
					AND h.PartnerID = PartnerID
				)
			THEN ''N/A''
		ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')''
		END AS [View in EV]
	,h.DeclarationNum
	,h.BrokerName
	,h.VersionNum
	,h.ImportDate
	,h.PortOfFiling
FROM txdgvimportheader h WITH (NOLOCK)
JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
LEFT JOIN txdEntryValidationSummaryStatus xxev ON h.EntryGuid = xxev.EntryGUID
	AND h.PartnerID = xxev.PartnerID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @IMPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND h.ActiveVersionFlag = ''Y''
GROUP BY h.DeclarationNum
	,h.BrokerName
	,h.VersionNum
	,h.PortOfFiling
	,h.ImportDate
	,xxev.EntryGUID
ORDER BY h.VersionNum DESC', N'Declarations by Broker', N'This report allows the user to view the most recent version of the declarations sent. If the user has Entry Visibility, the ability to link out and view the declaration in entry visibility is available. ', CAST(N'2016-04-28T09:30:23.793' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x5125B47306A3704CD838D657CFD963E2, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-03-10T13:54:16.547' AS DateTime), 224, N'75980faa-5db9-4937-b4f2-bf90fce8fef2', N'SELECT   ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')'' as [View In EV],  DeclarationNum,  ProductNum,  BrokerName,  HsNum,  ImportCountry from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID join txdEntryValidationSummaryStatus xxev on   h.EntryGuid = xxev.EntryGUID and  h.PartnerID = xxev.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  AND ProductNum = ''''  UNION ALL  select  ''N/A'' as [View In EV],  DeclarationNum,  ProductNum,  BrokerName,  HsNum,  ImportCountry from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  AND ProductNum = ''''  AND NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID)', N'Declarations with Blank Product Numbers', N'This report shows any declarations where the product number is blank.', CAST(N'2016-03-10T13:54:16.547' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xDF068A7830F834C2ABC1F3ED27330D67, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.970' AS DateTime), 225, N'2eeb99d0-28e4-491c-b485-6415a68abc36', N'SELECT   ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')'' as [View In EV],  DeclarationNum,  ProductNum,  HsNum,  ImportCountry,  BrokerName from ttdStagingGVImportHeader h WITH (NOLOCK)  join ttdStagingGVImportDetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID join txdEntryValidationSummaryStatus xxev on   h.EntryGuid = xxev.EntryGUID and  h.PartnerID = xxev.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  AND HsNum = ''''  UNION ALL  select  ''N/A'' as [View In EV],  DeclarationNum,  ProductNum,  HsNum,  ImportCountry,  BrokerName from ttdStagingGVImportHeader h WITH (NOLOCK)  join ttdStagingGVImportDetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  AND HsNum = ''''  AND NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID)', N'Entries with Blank Tariff Numbers', N'This report shows any declarations where the tariff number is blank.', CAST(N'2016-02-18T13:06:16.970' AS DateTime), N'jmerwin', N'jmerwin', 0xC38BAA68CA28AC22E60A5E72B929529B, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.183' AS DateTime), 226, N'0baa7429-c835-44f7-9f71-1021414738d3', N'select       ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')'' as [View In EV],       e.ValidationName,       e.ValidationMessage,       h.ImportCountry,       h.ImportDate,       h.DeclarationNum,       d.LineNum,       d.ProductNum,       h.BrokerName,       ''@VALIDATIONACK'' as [VALIDATIONACK],        ''@VALIDATIONDIS'' as [VALIDATIONDIS],       e.LineGUID, e.GVValidationGUID from ttdStagingGVImportHeader h join txdGTVImportValidationErrors e on       h.EntryGUID = e.EntryGUID and       h.PartnerID = e.PartnerID left join ttdStagingGVImportDetail d on       h.EntryGuid = d.EntryGuid and       d.LineGUID = e.LineGUID and       h.PartnerID = d.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  join txdEntryValidationSummaryStatus xxev on        h.EntryGuid = xxev.EntryGUID and       h.PartnerID = xxev.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and        e.StatusCode = ''DIS''  UNION ALL  select       ''N/A'' as [View In EV],       e.ValidationName,       e.ValidationMessage,       h.ImportCountry,    h.ImportDate,       h.DeclarationNum,      d.LineNum,      d.ProductNum,      h.BrokerName,      ''@VALIDATIONACK'' as [VALIDATIONACK],       ''@VALIDATIONDIS'' as [VALIDATIONDIS],      e.LineGUID, e.GVValidationGUID from ttdStagingGVImportHeader h join txdGTVImportValidationErrors e on       h.EntryGUID = e.EntryGUID and       h.PartnerID = e.PartnerID left join ttdStagingGVImportDetail d on       h.EntryGuid = d.EntryGuid and       d.LineGUID = e.LineGUID and        h.PartnerID = d.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and  c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and        e.StatusCode = ''DIS'' and  NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID) order by e.ValidationName ', N'Disregarded Errors Details', N'This report shows the detail level information of a disregarded validation error. The message about the disregarded validation error is included on this report. The detail declaration information shown is import country, declaration number, line number and product number. Disregarded validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:17.183' AS DateTime), N'jmerwin', N'jmerwin', 0x64DF746B0F6FD1181DCF26BE640BAD4C, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-28T09:34:24.170' AS DateTime), 227, N'0baa7429-c835-44f7-9f71-1021414738d3', N'SELECT CASE 
		WHEN NOT EXISTS (
				SELECT 1
				FROM txdEntryValidationSummaryStatus
				WHERE h.EntryGuid = EntryGuid
					AND h.PartnerID = PartnerID
				)
			THEN ''N/A''
		ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')''
		END AS [View in EV]
	,e.ValidationName
	,e.ValidationMessage
	,h.ImportCountry
	,h.ImportDate
	,h.DeclarationNum
	,d.LineNum
	,d.ProductNum
	,h.BrokerName
	,e.LineGUID
	,e.GVValidationGUID
FROM ttdStagingGVImportHeader h
JOIN txdGTVImportValidationErrors e ON h.EntryGUID = e.EntryGUID
	AND h.PartnerID = e.PartnerID
LEFT JOIN ttdStagingGVImportDetail d ON h.EntryGuid = d.EntryGuid
	AND d.LineGUID = e.LineGUID
	AND h.PartnerID = d.PartnerID
JOIN tmgGVValidationConfiguration c ON e.GVValidationGUID = c.GVValidationGUID
	AND e.PartnerID = c.PartnerID
LEFT JOIN txdEntryValidationSummaryStatus xxev ON h.EntryGuid = xxev.EntryGUID
	AND h.PartnerID = xxev.PartnerID
WHERE 1=1
	AND @IMPORTDATERANGE
	AND c.ActiveFlag = ''Y''
	AND (
		c.Attribute = ''Hard''
		OR c.Attribute = ''Required''
		)
	AND c.CategoryType = ''I''
	AND e.PartnerID = (
		SELECT PartnerID
		FROM tmfDefaults
		)
	AND e.StatusCode = ''DIS''
', N'Disregarded Errors Details', N'This report shows the detail level information of a disregarded validation error. The message about the disregarded validation error is included on this report. The detail declaration information shown is import country, declaration number, line number and product number. Disregarded validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-04-28T09:34:24.170' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x64076C536E57390BC4A7FA6E26343F7C, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.187' AS DateTime), 228, N'106646f9-0b23-485a-9159-3c91fc8c372e', N'select       ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')'' as [View In EV],       e.ValidationName,       e.ValidationMessage,       h.ImportCountry, h.ImportDate,       h.DeclarationNum,       d.LineNum,       d.ProductNum, h.BrokerName, ''@VALIDATIONACK'' as [VALIDATIONACK],       ''@VALIDATIONDIS'' as [VALIDATIONDIS],      e.LineGUID, e.GVValidationGUID from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on       h.EntryGuid = d.EntryGuid and       h.PartnerID = d.PartnerID join txdGTVImportValidationErrors e on       h.EntryGUID = e.EntryGUID and       d.LineGUID = e.LineGUID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  join txdEntryValidationSummaryStatus xxev on        h.EntryGuid = xxev.EntryGUID and       h.PartnerID = xxev.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and        e.StatusCode = ''DIS''  UNION ALL  select       ''N/A'' as [View In EV],       e.ValidationName,       e.ValidationMessage,       h.ImportCountry, h.ImportDate,       h.DeclarationNum,       d.LineNum,       d.ProductNum, h.BrokerName, ''@VALIDATIONACK'' as [VALIDATIONACK],       ''@VALIDATIONDIS'' as [VALIDATIONDIS],      e.LineGUID, e.GVValidationGUID from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on       h.EntryGuid = d.EntryGuid and       h.PartnerID = d.PartnerID join txdGTVImportValidationErrors e on       h.EntryGUID = e.EntryGUID and       d.LineGUID = e.LineGUID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and  c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and        e.StatusCode = ''DIS'' and  NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID) order by e.ValidationName ', N'Disregarded Warning Details ', N'This report shows all disregarded validation messages for declarations that contain a disregarded warning message. Disregarded validation warnings are informative messages chosen by the client. Declarations with disregarded validation warnings are still inserted into production data. The client has the ability to view the declaration in Entry Visibility if system access permits. ', CAST(N'2016-02-18T13:06:17.187' AS DateTime), N'jmerwin', N'jmerwin', 0xEC5F71559FC14C8F22B6F22B10E734E6, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.980' AS DateTime), 229, N'9df5e11f-ef46-4dd1-9d40-7a4fc4536686', N'SELECT   ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')'' as [View In EV],  h.DeclarationNum,   d.LineNum,   d.ProductNum,   d.CountryOfOrigin,   h.ImportCountry,   d.ExportCountry,   d.HsNum,  cast(d.ContentLowestPrefRate as numeric(28,4)) as ContentPreferentialRate,   cast(d.AdValoremDutyRate as numeric(28,4)) as AdValoremDutyRate,  cast(d.EstBaseTotalDutiableLineValue as numeric(38,2)) as [EstBaseTotalDutiableLineValue (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and  h.PartnerID = d.PartnerID join txdEntryValidationSummaryStatus xxev on   h.EntryGuid = xxev.EntryGUID and  h.PartnerID = xxev.PartnerID  WHERE 1=1 AND  d.ContentLowestPrefRateProgramID <> '''' and  d.AdValoremDutyRate < d.ContentLowestPrefRate and   h.ActiveVersionFlag = ''Y'' and  h.PartnerID = @PartnerID AND @IMPORTDATERANGE  UNION ALL  select  ''N/A'' as [View In EV],  h.DeclarationNum,   d.LineNum,   d.ProductNum,   d.CountryOfOrigin,   h.ImportCountry,   d.ExportCountry,   d.HsNum,     cast(d.ContentLowestPrefRate as numeric(28,4)) as ContentPreferentialRate,   cast(d.AdValoremDutyRate as numeric(28,4)) as AdValoremDutyRate,  cast(d.EstBaseTotalDutiableLineValue as numeric(38,2)) as EstBaseTotalDutiableLineValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and  h.PartnerID = d.PartnerID WHERE 1=1 AND  d.ContentLowestPrefRateProgramID <> '''' and  d.AdValoremDutyRate < d.ContentLowestPrefRate and   h.PartnerID = @PartnerID and  h.ActiveVersionFlag = ''Y''  AND NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID) AND @IMPORTDATERANGE  ', N'Potential Duty Underpayment Detail', N'This report shows the duty rate claimed by the broker is less than the lowest potential preferential rate in Integration Point Global Trade Content.', CAST(N'2016-02-18T13:06:16.980' AS DateTime), N'jmerwin', N'jmerwin', 0xCCAADBB8B2232621C2E16A8A8712FB80, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.957' AS DateTime), 230, N'2c335cae-e945-42b8-8a28-40645a26e4c8', N'SELECT            CASE                                 WHEN xxev.EntryGUID IS NULL                                 THEN ''N/A''                                 ELSE                                 ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + isnull(xxev.EntryGuid, '''') + ''&Tab=LineOverview'' + '')''                                  END AS [View In EV],        a.DeclarationNum,        a.ProductNum,       a.ImportCountry,       a.ExportCountry,        a.CountryOfOrigin,       a.HsNum,        a.PreferenceCode1,        CAST(a.AdValoremDutyRate as Numeric(28,2)) AS AdValoremDutyRate from (SELECT Distinct h.PartnerId, h.EntryGuid, h.DeclarationNum, d.ProductNum, d.HsNum, d.PreferenceCode1, d.CountryOfOrigin, h.ImportCountry, d.ExportCountry, d.AdValoremDutyRate from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID) a JOIN (SELECT Distinct h.PartnerId, h.DeclarationNum, d.ProductNum, d.HsNum, d.PreferenceCode1, d.CountryOfOrigin, h.ImportCountry, d.ExportCountry, d.AdValoremDutyRate from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE @IMPORTDATERANGE) b ON       a.HsNum =  b.HsNum and        a.productnum = b.productnum and       a.PartnerID = b.PartnerID left join txdEntryValidationSummaryStatus xxev on        a.EntryGuid = xxev.EntryGUID and       a.PartnerID = xxev.PartnerID  WHERE        a.PreferenceCode1 <>  b.PreferenceCode1       AND a.CountryOfOrigin = b.CountryOfOrigin       AND a.ImportCountry = b.ImportCountry       AND a.ExportCountry = b.ExportCountry GROUP  BY        a.DeclarationNum,        a.ProductNum,       a.ImportCountry,       a.ExportCountry,        a.CountryOfOrigin,       a.HsNum,        a.PreferenceCode1,        a.AdValoremDutyRate,       xxev.EntryGUID  ORDER BY a.HsNum,  a.ProductNum,  a.AdValoremDutyRate desc', N'Products that Claim Different Preference Codes by Declaration Number', N'This report is the most detailed report that shows the number of declarations that claim different preference codes using the same trade lane. These products have the same import country, export country, country of origin and HS number. This report includes the trade lane, HS number used, preference code claimed and declaration it was filed on. ', CAST(N'2016-02-18T13:06:16.957' AS DateTime), N'jmerwin', N'jmerwin', 0xC1B2F73C252C0E23CA10D9EC34AE534B, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-28T09:38:54.510' AS DateTime), 231, N'2c335cae-e945-42b8-8a28-40645a26e4c8', N'SELECT CASE 
		WHEN NOT EXISTS (
				SELECT 1
				FROM txdEntryValidationSummaryStatus
				WHERE a.EntryGuid = EntryGuid
					AND a.PartnerID = PartnerID
				)
			THEN ''N/A''
		ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')''
		END AS [View in EV]
	,a.DeclarationNum
	,a.ProductNum
	,a.ImportCountry
	,a.ExportCountry
	,a.CountryOfOrigin
	,a.HsNum
	,a.PreferenceCode1
	,CAST(a.AdValoremDutyRate AS NUMERIC(28, 2)) AS AdValoremDutyRate
FROM (
	SELECT DISTINCT h.PartnerId
		,h.EntryGuid
		,h.DeclarationNum
		,d.ProductNum
		,d.HsNum
		,d.PreferenceCode1
		,d.CountryOfOrigin
		,h.ImportCountry
		,d.ExportCountry
		,d.AdValoremDutyRate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE 1=1
		AND @IMPORTDATERANGE
		AND h.PartnerID = @PartnerID
	) a
JOIN (
	SELECT DISTINCT h.PartnerId
		,h.DeclarationNum
		,d.ProductNum
		,d.HsNum
		,d.PreferenceCode1
		,d.CountryOfOrigin
		,h.ImportCountry
		,d.ExportCountry
		,d.AdValoremDutyRate
	FROM txdgvimportheader h WITH (NOLOCK)
	JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
		AND h.PartnerID = d.PartnerID
	WHERE @IMPORTDATERANGE
	) b ON a.HsNum = b.HsNum
	AND a.productnum = b.productnum
	AND a.PartnerID = b.PartnerID
LEFT JOIN txdEntryValidationSummaryStatus xxev ON a.EntryGuid = xxev.EntryGUID
	AND a.PartnerID = xxev.PartnerID
WHERE a.PreferenceCode1 <> b.PreferenceCode1
	AND a.CountryOfOrigin = b.CountryOfOrigin
	AND a.ImportCountry = b.ImportCountry
	AND a.ExportCountry = b.ExportCountry
GROUP BY a.DeclarationNum
	,a.ProductNum
	,a.ImportCountry
	,a.ExportCountry
	,a.CountryOfOrigin
	,a.HsNum
	,a.PreferenceCode1
	,a.AdValoremDutyRate
	,xxev.EntryGUID
	,a.EntryGUID
	,a.PartnerID
ORDER BY a.HsNum
	,a.ProductNum
	,a.AdValoremDutyRate DESC
', N'Products that Claim Different Preference Codes by Declaration Number', N'This report is the most detailed report that shows the number of declarations that claim different preference codes using the same trade lane. These products have the same import country, export country, country of origin and HS number. This report includes the trade lane, HS number used, preference code claimed and declaration it was filed on. ', CAST(N'2016-04-28T09:38:54.510' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x1BF30286A143D91CFCB8C9E036CE2803, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:16.960' AS DateTime), 232, N'85c8a4b0-b092-4442-be01-3ebf5981ba3c', N'Select Distinct   ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')'' as [View In EV],  DeclarationNum,  d.ProductNum,   CAST(d.EstBaseTotalLineValue as Numeric(28,2)) as [EstBaseTotalLineValue (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID join txdEntryValidationSummaryStatus xxev on   h.EntryGuid = xxev.EntryGUID and  h.PartnerID = xxev.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  AND d.EstBaseTotalLineValue<=1   UNION ALL  select  ''N/A'' as [View In EV],  DeclarationNum,  d.ProductNum,   CAST(d.EstBaseTotalLineValue as Numeric(28,2)) as [EstBaseTotalLineValue (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  AND d.EstBaseTotalLineValue<=1   AND NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID)', N'Products With Value Less Than Or Equal To 1', N'This report shows products with a value of 1 or less.', CAST(N'2016-02-18T13:06:16.960' AS DateTime), N'jmerwin', N'jmerwin', 0x8AE58EA534DF04E36D5A3186A8736173, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-28T09:41:20.527' AS DateTime), 233, N'85c8a4b0-b092-4442-be01-3ebf5981ba3c', N'SELECT CASE 
		WHEN NOT EXISTS (
				SELECT 1
				FROM txdEntryValidationSummaryStatus
				WHERE h.EntryGuid = EntryGuid
					AND h.PartnerID = PartnerID
				)
			THEN ''N/A''
		ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')''
		END AS [View in EV]
	,DeclarationNum
	,d.ProductNum
	,CAST(d.EstBaseTotalLineValue AS NUMERIC(28, 2)) AS [EstBaseTotalLineValue (@CurrencyCode)]
FROM txdgvimportheader h WITH (NOLOCK)
JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
	AND h.PartnerID = d.PartnerID
LEFT JOIN txdEntryValidationSummaryStatus xxev ON h.EntryGuid = xxev.EntryGUID
	AND h.PartnerID = xxev.PartnerID
WHERE 1=1
	AND @IMPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND d.EstBaseTotalLineValue <= 1', N'Products with Import Value Less Than or Equal To 1', N'This report shows products with a value of 1 or less.', CAST(N'2016-04-28T09:41:20.527' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xFC34811D4933887B0C67DC93B3702682, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:16.973' AS DateTime), 234, N'e6fd9ad1-7c20-4719-9057-a49106bd428d', N'SELECT   ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')'' as [View In EV],  h.DeclarationNum,  d.LineNum,  cast(cast(d.AdValoremDutyRate * 100 as numeric(28,2)) as varchar(50)) + ''%'' as AdValoremDutyRate,   ctr.MainRate,   ctr.PreferentialRate,  d.PreferenceCode1,  d.PreferenceCode2 from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr ON  h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin  AND d.HsNum = ctr.HsNum  join txdEntryValidationSummaryStatus xxev on   h.EntryGuid = xxev.EntryGUID and  h.PartnerID = xxev.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID   AND d.AdValoremDutyRate < ctr.MainPercent   AND ctr.PreferentialPercent  = ''-1''  AND d.PreferenceCode1 = ''''   AND d.PreferenceCode2 = ''''  UNION ALL  select  ''N/A'' as [View In EV],  h.DeclarationNum,  d.LineNum,  cast(cast(d.AdValoremDutyRate * 100 as numeric(28,2)) as varchar(50)) + ''%'' as AdValoremDutyRate,   ctr.MainRate,   ctr.PreferentialRate,  d.PreferenceCode1,  d.PreferenceCode2 from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr ON  h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin  AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID   AND d.AdValoremDutyRate < ctr.MainPercent   AND ctr.PreferentialPercent  = ''-1''  AND d.PreferenceCode1 = ''''   AND d.PreferenceCode2 = ''''  AND NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID) ', N'Underpaid Duty without Preference code', N'This report shows the duty rate paid by the client on a product as being recorded as less than the duty rate expected by Customs. These line numbers on the given declaration, are not claiming an Preference code. This report shows the discrepancy with its declaration number, line number, preferential rate, duty rate claimed, and custom''s expected duty rate. ', CAST(N'2016-02-18T13:06:16.973' AS DateTime), N'jmerwin', N'jmerwin', 0x3D1B8FC5BAB1C83B314A96CD522451EC, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-18T11:59:37.763' AS DateTime), 235, N'124f5bb7-a75a-4cdb-8eda-a35bf82921e5', N'SELECT   
CASE WHEN NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where a.EntryGuid = EntryGuid and a.PartnerID = PartnerID)    THEN ''N/A''   ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')''  END AS [View in EV],
	a.DeclarationNum, 
	a.ImportCountry, 
	a.ProductNum, 
	a.HsNum, 
	CAST((a.UnitValue) as Numeric(28,4)) as UnitValue 
from (SELECT Distinct h.PartnerId, h.EntryGuid, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID
) a
JOIN (SELECT Distinct h.PartnerId, h.DeclarationNum, d.ProductNum, d.HsNum, h.ImportCountry, d.UnitValue from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE @IMPORTDATERANGE
) b ON
      a.ImportCountry =  b.ImportCountry and 
      a.productnum = b.productnum and
      a.PartnerID = b.PartnerID
left join txdEntryValidationSummaryStatus xxev on 
      a.EntryGuid = xxev.EntryGUID and
      a.PartnerID = xxev.PartnerID 
WHERE 
      a.UnitValue <>  b.UnitValue and
      a.ProductNum <> ''''
 GROUP  BY 
      a.DeclarationNum, 
      a.ProductNum,
      a.ImportCountry,
      a.HsNum, 
      a.UnitValue, 
      xxev.EntryGUID,
a.EntryGUID,
a.PartnerID
ORDER BY a.ProductNum asc', N'Unit Value Fluctuations by Declaration Number', N'This report is the most detailed view of the unit value fluctuations displaying the declaration number, import country, product number, HS number, and unit value of the exception. A unit value fluctuation is differing tariff classifications for the same import country and product number. ', CAST(N'2016-04-18T11:59:37.763' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xEB4DD8A8CA6C4F39ECBD15165777BA64, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:16.997' AS DateTime), 236, N'6b34ce34-5c8c-4ec5-844c-0c994037571e', N'select       ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')'' as [View In EV],       e.ValidationName,       e.ValidationMessage,       h.ImportCountry,       h.ImportDate,       h.DeclarationNum,       d.LineNum,       d.ProductNum,       h.BrokerName,       ''@VALIDATIONACK'' as [VALIDATIONACK],        ''@VALIDATIONDIS'' as [VALIDATIONDIS],       e.LineGUID, e.GVValidationGUID from ttdStagingGVImportHeader h join txdGTVImportValidationErrors e on       h.EntryGUID = e.EntryGUID and       h.PartnerID = e.PartnerID left join ttdStagingGVImportDetail d on       h.EntryGuid = d.EntryGuid and       d.LineGUID = e.LineGUID and       h.PartnerID = d.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  join txdEntryValidationSummaryStatus xxev on        h.EntryGuid = xxev.EntryGUID and       h.PartnerID = xxev.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE and   c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and        e.StatusCode = ''OPEN''  UNION ALL  select       ''N/A'' as [View In EV],       e.ValidationName,       e.ValidationMessage,       h.ImportCountry,    h.ImportDate,       h.DeclarationNum,      d.LineNum,      d.ProductNum,      h.BrokerName,      ''@VALIDATIONACK'' as [VALIDATIONACK],       ''@VALIDATIONDIS'' as [VALIDATIONDIS],      e.LineGUID, e.GVValidationGUID from ttdStagingGVImportHeader h join txdGTVImportValidationErrors e on       h.EntryGUID = e.EntryGUID and       h.PartnerID = e.PartnerID left join ttdStagingGVImportDetail d on       h.EntryGuid = d.EntryGuid and       d.LineGUID = e.LineGUID and        h.PartnerID = d.PartnerID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''')  and  c.ActiveFlag = ''Y'' and  (c.Attribute = ''Hard''  or c.Attribute = ''Required'') and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and        e.StatusCode = ''OPEN'' and  NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID) order by e.ValidationName ', N'Validation Error Details', N'This report shows the detail level information of a validation error. The message about the validation error is included on this report. The detail declaration information shown is import country, declaration number, line number and product number. Validation errors are declarations that will not be visible in the production data because these errors are considered hard stops.', CAST(N'2016-02-18T13:06:16.997' AS DateTime), N'jmerwin', N'jmerwin', 0x853F8E35FADFB5BEBE5D1036AA480A28, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.050' AS DateTime), 237, N'd3ce1def-fd9f-405d-8d4b-cbfe73a6e219', N'select       ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')'' as [View In EV],       e.ValidationName,       e.ValidationMessage,       h.ImportCountry, h.ImportDate,       h.DeclarationNum,       d.LineNum,       d.ProductNum, h.BrokerName, ''@VALIDATIONACK'' as [VALIDATIONACK],       ''@VALIDATIONDIS'' as [VALIDATIONDIS],      e.LineGUID, e.GVValidationGUID from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on       h.EntryGuid = d.EntryGuid and       h.PartnerID = d.PartnerID join txdGTVImportValidationErrors e on       h.EntryGUID = e.EntryGUID and       d.LineGUID = e.LineGUID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  join txdEntryValidationSummaryStatus xxev on        h.EntryGuid = xxev.EntryGUID and       h.PartnerID = xxev.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and        e.StatusCode = ''OPEN''  UNION ALL  select       ''N/A'' as [View In EV],       e.ValidationName,       e.ValidationMessage,       h.ImportCountry, h.ImportDate,       h.DeclarationNum,       d.LineNum,       d.ProductNum, h.BrokerName, ''@VALIDATIONACK'' as [VALIDATIONACK],       ''@VALIDATIONDIS'' as [VALIDATIONDIS],      e.LineGUID, e.GVValidationGUID from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on       h.EntryGuid = d.EntryGuid and       h.PartnerID = d.PartnerID join txdGTVImportValidationErrors e on       h.EntryGUID = e.EntryGUID and       d.LineGUID = e.LineGUID join tmgGVValidationConfiguration c on   e.GVValidationGUID = c.GVValidationGUID and  e.PartnerID = c.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE and   c.ActiveFlag = ''Y'' and  c.Attribute = ''Soft'' and   c.CategoryType = ''I'' and  e.PartnerID = (select PartnerID from tmfDefaults) and        e.StatusCode = ''OPEN'' and  NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID) order by e.ValidationName ', N'Validation Warning Details', N'This report shows all validation messages for declarations that contain a warning message. Validation warnings are informative messages chosen by the client. Declarations with validation warnings are still inserted into production data. The client has the ability to view the declaration in Entry Visibility if system access permits. ', CAST(N'2016-02-18T13:06:17.050' AS DateTime), N'jmerwin', N'jmerwin', 0x2A2BA8C04AD08C6E9433ED450D4DC3A7, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.070' AS DateTime), 238, N'7b7dcc0a-25ed-4247-85f4-766d8cf58079', N'SELECT   CASE   WHEN NOT EXISTS (select 1 from txdEntryValidationSummaryStatus where h.EntryGuid = EntryGuid and h.PartnerID = PartnerID)    THEN ''N/A''   ELSE ''['' + ''View in EV'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?EntryGuid='' + xxev.EntryGuid + ''&Tab=LineOverview'' + '')''  END AS [View in EV],  h.DeclarationNum,   h.ImportCountry,   d.ProductNum,   d.RptQtyUOM from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID LEFT JOIN txdEntryValidationSummaryStatus xxev on   h.EntryGuid = xxev.EntryGUID and  h.PartnerID = xxev.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = (select PartnerID from tmfDefaults) ORDER BY [View in EV] ', N'Unit of Measure Changes by Declaration Number', N'This report is a detail level view at differing unit of measures claimed on an declaration. This report displays the declaration number, import country, product number, and the unit of measure for the exception. The client has the ability to view the declaration in Entry Visibility if system access permits.', CAST(N'2016-02-18T13:06:17.070' AS DateTime), N'jmerwin', N'jmerwin', 0x96CE3A7C97BA1E58CCB0CB6821FBAFD8, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-05-04T08:47:35.987' AS DateTime), 239, N'b94c3fc0-77f9-48e0-8f43-58b110a062e8', N'SELECT ''Testing 456''', N'FB4BC36D-0089-49C1-BCB9-0CFCE1A8C003', N'Testing 123', CAST(N'2016-05-04T08:47:35.987' AS DateTime), N'37e5998f-6cdf-4f76-8dc1-af657fc3ba79', N'system', 0x49F4999CB4D3BF246D9037C84AAEFA81, N'', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-05-04T08:47:45.917' AS DateTime), 240, N'b94c3fc0-77f9-48e0-8f43-58b110a062e8', N'SELECT ''Testing 456 789''', N'FB4BC36D-0089-49C1-BCB9-0CFCE1A8C003', N'Testing 123', CAST(N'2016-05-04T08:47:45.917' AS DateTime), N'37e5998f-6cdf-4f76-8dc1-af657fc3ba79', N'system', 0x6EC13E6F110F4E3985CF6C4187250CCB, N'', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.387' AS DateTime), 241, N'7937ce17-5237-4b2f-a642-268f23113554', N'SELECT   d.BusinessUnit,   Count(h.ExportGuid) as  RoutedExportCount from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID AND h.RoutedExportFlag = ''Y'' Group By d.BusinessUnit  ORDER BY Count(h.ExportGuid) DESC ', N'All Routed Export Business Division', N'This report shows how many routed exports are done by business division.', CAST(N'2016-02-18T13:06:17.387' AS DateTime), N'jmerwin', N'jmerwin', 0x9CFDB639437B34D383EFAFB93B01EFFF, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.387' AS DateTime), 242, N'4a67e9f8-33b7-4215-860f-6e0bf5e790b6', N'SELECT  d.ExportTariffNum,   Count(h.ExportGuid) as  RoutedExportCount from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID AND h.RoutedExportFlag = ''Y'' Group By d.ExportTariffNum ORDER BY Count(h.ExportGuid) DESC', N'All Routed Export Tariff Number', N'This report shows how many routed exports are done by export tariff number. ', CAST(N'2016-02-18T13:06:17.387' AS DateTime), N'jmerwin', N'jmerwin', 0x71AD43B22D249BFD86B8AC702B19F225, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-05-09T12:03:49.747' AS DateTime), 243, N'7937ce17-5237-4b2f-a642-268f23113554', N'SELECT d.BusinessUnit
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS TotalShipments
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerShipment(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGuid = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND h.RoutedExportFlag = ''Y''
GROUP BY d.BusinessUnit
ORDER BY COUNT(DISTINCT d.ExportGUID) DESC
', N'All Routed Export Business Division', N'This report shows how many routed exports are done by business division.', CAST(N'2016-05-09T12:03:49.747' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xD8EE5024CE799333142011C283A4BFB5, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.387' AS DateTime), 244, N'c0fbe9ae-2e9c-43b8-b208-c732f41be55e', N'SELECT  d.ECNNum,   Count(h.ExportGuid) as  RoutedExportCount from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID AND h.RoutedExportFlag = ''Y'' Group By d.ECNNum ORDER BY Count(h.ExportGuid) DESC ', N'All Routed ECN Number', N'This report shows how many routed exports are done by ECN number. ', CAST(N'2016-02-18T13:06:17.387' AS DateTime), N'jmerwin', N'jmerwin', 0x339DFF636D5595A94C622361FD414B58, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-05-09T12:04:48.357' AS DateTime), 245, N'4a67e9f8-33b7-4215-860f-6e0bf5e790b6', N'SELECT d.ExportTariffNum
	,CAST(SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(DISTINCT d.ExportGUID) AS RoutedExportCount
	,CAST(SUM(d.EstBaseTotalLineValue) / COUNT(DISTINCT d.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerShipment(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGuid = d.ExportGUID
	AND h.PartnerID = d.PartnerID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND h.RoutedExportFlag = ''Y''
GROUP BY d.ExportTariffNum
ORDER BY Count(h.ExportGuid) DESC', N'All Routed Export Tariff Number', N'This report shows how many routed exports are done by export tariff number. ', CAST(N'2016-05-09T12:04:48.357' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x350CA262D13A237B5C9EE8EB1EF00C96, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.390' AS DateTime), 246, N'9ca0d00d-71ec-4e12-af98-a97d9e7e86a5', N'SELECT d.ProductNum, Count(h.ExportGuid) as RoutedExportCount from txdGVExportHeader h WITH (NOLOCK) JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGuid = d.ExportGUID AND h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID AND h.RoutedExportFlag = ''Y'' Group By d.ProductNum ORDER BY Count(h.ExportGuid) DESC', N'All Ruted Product Number', N'This report shows how many routed exports are done by product number. ', CAST(N'2016-02-18T13:06:17.390' AS DateTime), N'jmerwin', N'jmerwin', 0x0DBB1F40EDBF1B6A405195E6C0086D0D, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.387' AS DateTime), 247, N'4e82e1c8-a471-47cf-a76b-559e0fb1b3bf', N'SELECT h.CarrierName, count(h.ExportGuid) as RoutedExportCount from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID and h.RoutedExportFlag = ''Y'' Group By h.CarrierName ORDER BY count(h.ExportGuid) DESC ', N'All Routed Export Carrier', N'This report shows how many routed exports are done by carrier. ', CAST(N'2016-02-18T13:06:17.387' AS DateTime), N'jmerwin', N'jmerwin', 0x070A9B1DC489191413D9E66F97FDD6C5, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.367' AS DateTime), 248, N'35e7bbf9-a28b-4caf-9927-ab56cb2e51d9', N'SELECT   h.ExportCountry,   count(h.ExportGuid) as RoutedExportCount from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID and h.RoutedExportFlag = ''Y'' Group By h.ExportCountry  ORDER BY count(h.ExportGuid) DESC', N'All Routed Export Countries', N'This report shows how many routed exports are done by export country.', CAST(N'2016-02-18T13:06:17.367' AS DateTime), N'jmerwin', N'jmerwin', 0xB9EA76D6F89E226DAB4E45FB1E5DE4B9, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.383' AS DateTime), 249, N'66e79aff-3abf-4f7b-9631-0b61160340de', N'SELECT   h.ForwarderCompanyName,   count(h.ExportGuid) as RoutedExportCount from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID and h.RoutedExportFlag = ''Y'' Group By h.ForwarderCompanyName ORDER BY count(h.ExportGuid) DESC ', N'All Routed Export Forwaders', N'This report shows how many routed exports are done by forwarder. ', CAST(N'2016-02-18T13:06:17.383' AS DateTime), N'jmerwin', N'jmerwin', 0x590CCE76D1A7457C9415356EC2D8FD43, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.387' AS DateTime), 250, N'c6c45cf3-0c23-424e-89d5-5c6791f9328f', N'SELECT h.ImportCountry, count(h.ExportGuid) as RoutedExportCount from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID and h.RoutedExportFlag = ''Y'' Group By h.ImportCountry ORDER BY count(h.ExportGuid) DESC', N'All Routed Import Country', N'This report shows how many routed exports are done by import country.', CAST(N'2016-02-18T13:06:17.387' AS DateTime), N'jmerwin', N'jmerwin', 0x1D26761B9E2482CB20F741DD2441C291, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.387' AS DateTime), 251, N'a72b71cd-7eda-46f8-96b2-9f3a8c6fc852', N'SELECT h.ModeOfTransport, count(h.ExportGuid) as RoutedExportCount from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID and h.RoutedExportFlag = ''Y'' Group By h.ModeOfTransport ORDER BY count(h.ExportGuid) DESC ', N'All Routed Mode of Transport', N'This report shows how many routed exports are done by mode of tranport. ', CAST(N'2016-02-18T13:06:17.387' AS DateTime), N'jmerwin', N'jmerwin', 0xEF2CA64DE7253DAE7CC0B36470D33329, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.387' AS DateTime), 252, N'64bcb503-801a-4b75-bd82-303845d5b8ad', N'SELECT h.PortOfLading, count(h.ExportGuid) as RoutedExportCount from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID and h.RoutedExportFlag = ''Y'' Group By h.PortOfLading ORDER BY count(h.ExportGuid) DESC', N'All Routed Port of Lading', N'This report shows how many routed exports are done by port of lading. ', CAST(N'2016-02-18T13:06:17.387' AS DateTime), N'jmerwin', N'jmerwin', 0x620FE73CDC3F56CDAF832D05AB7FC5A7, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.390' AS DateTime), 253, N'9ad1f064-17cb-4a35-a8b1-e8a9150deafe', N'SELECT h.PortOfUnlading, count(h.ExportGuid) as RoutedExportCount from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID and h.RoutedExportFlag = ''Y'' Group By h.PortOfUnlading ORDER BY count(h.ExportGuid) DESC', N'All Routed Port of Unlading', N'This report shows how many routed exports are done by port of unlading. ', CAST(N'2016-02-18T13:06:17.390' AS DateTime), N'jmerwin', N'jmerwin', 0x8375FFFC8F820F5357D71A448752EF63, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.263' AS DateTime), 254, N'55477bfe-d8fe-4fbb-805c-62e3d44a42b6', N'SELECT  d.EntryNum,   CAST(SUM(h.EstBaseInlandCharges) as Numeric(28,2)) as [EstBaseInlandCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By d.EntryNum ORDER BY CAST(SUM(h.EstBaseInlandCharges) as Numeric(28,2)) DESC', N'All Inland Charges by Entry Number', N'', CAST(N'2016-02-18T13:06:17.263' AS DateTime), N'jmerwin', N'jmerwin', 0x7B25772D9698E9FD48A8D0AE5416F2CD, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.240' AS DateTime), 255, N'90569269-aa14-4910-9203-d0dd8164fdb9', N'SELECT TOP 10  d.EntryNum,   CAST(SUM(h.EstBaseFreightCharges) as Numeric(28,2)) as EstBaseFreightCharges from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By d.EntryNum ORDER BY CAST(SUM(h.EstBaseFreightCharges) as Numeric(28,2)) DESC', N'Total Freight Charges By Entry Number', N'', CAST(N'2016-02-18T13:06:17.240' AS DateTime), N'jmerwin', N'jmerwin', 0xD47A47228D08AC3CE315D16F25A9F804, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.307' AS DateTime), 256, N'3e1f0ae9-30a6-4c25-8e3f-0bd5ab473c42', N'select   h.PartnerID, d.EntryNum as EntryNumber,   datepart(year, ExportDate) as ExportYear, CAST(SUM(h.EstBaseFreightCharges) AS NUMERIC(28, 2)) AS EstBaseFreightCharges INTO #CurrentYear  from txdGVExportHeader h WITH (NOLOCK) JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID and  datepart(year, ExportDate) =  DATEPART(year, GetDate())  group by h.PartnerID, d.EntryNum, datepart(year, ExportDate)  select   h.PartnerID, d.EntryNum as EntryNumber,   datepart(year, ExportDate) as ExportYear, CAST(SUM(h.EstBaseFreightCharges) AS NUMERIC(28, 2)) AS EstBaseFreightCharges INTO #LastYear  from txdGVExportHeader h WITH (NOLOCK) JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE   datepart(year, ExportDate) =  DATEPART(year, dateadd(year, -1, GetDate())) and ExportDate <= (GETDATE()-365) group by h.PartnerID, d.EntryNum, datepart(year, ExportDate)   SELECT TOP 10   h.EntryNum,    isnull(sum(h.EstBaseFreightCharges), 0) as [@CurrentYear],  isnull(sum(h2.EstBaseFreightCharges), 0) as [@LastYear] FROM #CurrentYear h left join #LastYear h2 on   h.EntryNum = h2.EntryNum and  h.PartnerID = h2.PartnerID Group By h.EntryNum ORDER BY sum(h.EstBaseFreightCharges) DESC', N'Freight Charges by Entry Number - YoY', N'', CAST(N'2016-02-18T13:06:17.307' AS DateTime), N'jmerwin', N'jmerwin', 0x535FFF9005B7378DB95B41ADE6B832C3, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.237' AS DateTime), 257, N'dc67b9fe-7a32-4f6f-96be-88fb43375d85', N'SELECT TOP 10  d.EntryNum,   CAST(SUM(h.EstBaseInlandCharges) as Numeric(28,2)) as [EstBaseInlandCharges(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID Group By d.EntryNum ORDER BY CAST(SUM(h.EstBaseInlandCharges) as Numeric(28,2)) DESC ', N'Inland Charges by Entry Number', N'', CAST(N'2016-02-18T13:06:17.237' AS DateTime), N'jmerwin', N'jmerwin', 0x9A361B09BA58E691869741146D4B9DAA, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.050' AS DateTime), 258, N'ad9cf78f-c407-4a17-8cf7-c1fbc7439b48', N'SELECT   ExportCountry,   CAST(SUM(EstBaseTotalDeclarationValue) as Numeric(28,4)) as [EstBaseTotalValue (@CurrencyCode)],  ''Total Value Of Originating Goods'' as CURRENCY,  SUM(q.ProductCount) as Products,  ''Distinct SKU Count'' as STRING,  SUM(q.ProgramCount) as FTAs,  ''Number of FTAs Claimed'' as STRING FROM txdGVImportHeader h  join (   select    h.PartnerID, h.EntryGuid, COUNT(distinct d.ProductNum) as ProductCount, COUNT(distinct d.PreferenceCode1) as ProgramCount   FROM txdGVImportHeader h    join txdGVImportDetail d on     h.EntryGuid = d.EntryGuid and     h.PartnerID = d.PartnerID    group by h.EntryGuid, h.PartnerID  ) q on    h.EntryGuid = q.EntryGuid and   h.PartnerID = q.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID AND h.ExportCountry <> '''' GROUP BY h.ExportCountry ', N'Origin Of Imported Goods', N'', CAST(N'2016-02-18T13:06:17.050' AS DateTime), N'jmerwin', N'jmerwin', 0x3DD1075926AB73079F678B575D8266CC, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-07-11T11:30:22.120' AS DateTime), 259, N'ad9cf78f-c407-4a17-8cf7-c1fbc7439b48', N'SELECT   ExportCountry,   CAST(SUM(EstBaseTotalDeclarationValue) as Numeric(28,4)) as [EstBaseTotalValue (@CurrencyCode)],  ''Total Value Of Originating Goods'' as CURRENCY,  SUM(q.ProductCount) as Products,  ''Distinct SKU Count'' as STRING,  SUM(q.ProgramCount) as FTAs,  ''Number of FTAs Claimed'' as STRING FROM txdGVImportHeader h  join (   select    h.PartnerID, h.EntryGuid, COUNT(distinct d.ProductNum) as ProductCount, COUNT(distinct d.PreferenceCode1) as ProgramCount   
FROM txdGVImportHeader h    
join txdGVImportDetail d on h.PartnerID = d.PartnerID and h.EntryGuid = d.EntryGuid
join txdGVImportDetail d on     h.EntryGuid = d.EntryGuid and     h.PartnerID = d.PartnerID    group by h.EntryGuid, h.PartnerID  ) q on    h.EntryGuid = q.EntryGuid and   h.PartnerID = q.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID AND d.ExportCountry <> '''' GROUP BY d.ExportCountry ', N'Origin Of Imported Goods', N'', CAST(N'2016-07-11T11:30:22.120' AS DateTime), N'37e5998f-6cdf-4f76-8dc1-af657fc3ba79', N'', 0x3BBEA51128B21F4FA7D577C067AB35E2, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-07-14T09:57:22.380' AS DateTime), 260, N'2eef813b-70f0-4d47-bfe3-7346f3a23eb7', N'SELECT X.ImportCountry, COUNT(X.ProductNum) as ProductCount
FROM (
	Select ImportCountry, d.ProductNum
	from txdgvimportheader h WITH (NOLOCK)  
	join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  
	WHERE 1=1 AND h.PartnerID = @PartnerID AND @IMPORTDATERANGE
	Group By ImportCountry, ProductNum 
	HAVING COUNT(distinct SupplierID) = 1 
) X 
GROUP BY X.ImportCountry
Order by COUNT(X.ProductNum) desc', N'Single Sourced Products By Country', N'This report gives the count of products imported into each import country that are sourced from a single supplier.', CAST(N'2016-07-14T09:57:22.380' AS DateTime), N'6433dee3-705e-4c9c-9b14-0478f5e651cf', N'', 0x24F1C84D2C4D1E7EEEB5356683AC8FA9, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-07-14T10:09:00.900' AS DateTime), 261, N'3c1f5d68-d9f5-443b-9074-7f52f4713e17', N'SELECT TOP 10 X.ExportCountry, COUNT(X.ProductNum) as ProductCount
FROM (
	Select ExportCountry, d.ProductNum
	from txdgvimportheader h WITH (NOLOCK)  
	join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  
	WHERE 1=1 AND h.PartnerID = @PartnerID AND @IMPORTDATERANGE
	Group By ExportCountry, ProductNum 
	HAVING COUNT(distinct SupplierID) = 1 
) X 
GROUP BY X.ExportCountry
Order by COUNT(X.ProductNum) desc
', N'Top Single Sourced Products By Country of Export', N'This report gives the count of products imported from each country of export that are sourced from a single supplier.	', CAST(N'2016-07-14T10:09:00.900' AS DateTime), N'6433dee3-705e-4c9c-9b14-0478f5e651cf', N'', 0x4CE71E2BBC00956C10889832141DA953, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-07-14T10:47:20.787' AS DateTime), 262, N'9c13c46d-a8ad-4b42-a2cd-937c7dbfcb2d', N'SELECT ProductNum, CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)]
FROM txdgvimportheader h WITH (NOLOCK) JOIN txdGVImportDetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID
WHERE 1=1 AND h.PartnerID = @PartnerID --AND @IMPORTDATERANGE
GROUP BY d.ProductNum
HAVING COUNT(distinct SupplierID) = 1 
ORDER BY SUM(d.EstBaseTotalLineValue) DESC', N'All Single Sourced Products By Import Value', N'This report gives imported products by total import value that are sourced from a single supplier.	', CAST(N'2016-07-14T10:47:20.787' AS DateTime), N'6433dee3-705e-4c9c-9b14-0478f5e651cf', N'', 0x8190AB75ADE3E9849EAA9D5F1F592172, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.033' AS DateTime), 263, N'24b1857f-0ccf-438b-8f3a-7efc3449dcd3', N'select        h.PartnerID, d.HSnum, datepart(year, h.ImportDate) as ImportYear, CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as EstBaseTotalLineValue  INTO #CurrentYear  from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on       h.EntryGuid = d.EntryGuid and        h.PartnerID = d.PartnerID WHERE 1=1 AND h.PartnerID = @PartnerID and       datepart(year, ImportDate) =  DATEPART(year, GetDate())  group by h.PartnerID, d.HSnum, datepart(year, h.ImportDate)  select        h.PartnerID, d.HSnum, datepart(year, h.ImportDate) as ImportYear, CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as EstBaseTotalLineValue  INTO #LastYear  from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on       h.EntryGuid = d.EntryGuid and        h.PartnerID = d.PartnerID WHERE        datepart(year, ImportDate) =  DATEPART(year, dateadd(year, -1, GetDate())) and ImportDate <= (GETDATE()-365) group by h.PartnerID, d.HSnum, datepart(year, h.ImportDate)   SELECT TOP 10        h.HSnum,         isnull(sum(h.EstBaseTotalLineValue), 0) as [@CurrentYear],       isnull(sum(h2.EstBaseTotalLineValue), 0) as [@LastYear] FROM #CurrentYear h left join #LastYear h2 on        h.HSnum = h2.HSnum and       h.PartnerID = h2.PartnerID Group By h.HSnum ORDER BY sum(h.EstBaseTotalLineValue) DESC', N'HS Numbers by Value - YoY', N'This comparison report shows the HS Numbers with the highest associated total line value on all declarations filed for the current year compared to the highest associated total line value on all declarations filed for the previous year.', CAST(N'2016-02-18T13:06:17.033' AS DateTime), N'jmerwin', N'jmerwin', 0x3A12AB2F3A43B189837BDFD9E3F13E3D, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.960' AS DateTime), 264, N'06ac6717-4edc-4455-8bca-3bb194269a60', N'SELECT  ProductNum,  SupplierName,  CAST(SUM(TotalLineDuty ) AS Numeric(28,2)) as [EstBaseTotalLineDuty (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE 1=1 --AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY ProductNum, SupplierName ORDER BY [EstBaseTotalLineDuty (@CurrencyCode)] DESC ', N'Duty by Supplier and Product', N'This report shows total duty paid for each product  by supplier.', CAST(N'2016-02-18T13:06:16.960' AS DateTime), N'jmerwin', N'jmerwin', 0x8CA14DE456F173E1FFEC1212E95D21FB, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.070' AS DateTime), 265, N'fd15ed91-750f-4549-9212-ac51f6f93feb', N'select          h.DeclarationNum,         d.HSNum,         d.ProductNum,    ISNULL(CASE WHEN cr.ClientPrefProgramName = '''' THEN cr.ContentPrefProgramName ELSE cr.ClientPrefProgramName END, capp.PrefProgramCode ) as PotentialPreferenceProgram,         CAST(SUM(d.EstBaseTotalLineValue * ((d.AdValoremDutyRate - d.ContentLowestPrefRate)))as numeric (28,2)) as [EstBasePotentialSavings(@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on          h.EntryGuid = d.EntryGuid and         h.PartnerID = d.PartnerID join vid_GTVImportContentAvailablePrefPrograms capp on         d.ContentLowestPrefRateProgramID = capp.ProgramID and d.PartnerID = capp.PartnerID   left join tmgGVImportPrefProgramCrossReference cr on          capp.PrefProgramCode = cr.ContentPrefProgramCode and capp.PartnerID = cr.PartnerID  WHERE 1=1 and @IMPORTDATERANGE and         d.ContentLowestPrefRate <> -1 and d.AdValoremDutyRate > d.ContentLowestPrefRate and         d.ContentLowestPrefRateProgramID <>'''' and         d.PreferenceCode1 = '''' and         d.PreferenceCode2 = '''' and         d.AdValoremDutyRate <> d.ContentLowestPrefRate and          h.PartnerID = d.PartnerID group by h.DeclarationNum, d.HSNum,  d.ProductNum,cr.ClientPrefProgramName,cr.ContentPrefProgramName,capp.PrefProgramCode ORDER BY [EstBasePotentialSavings(@CurrencyCode)] desc', N'All Potential Preferential Rates by Declaration Number', N'This report shows the difference between the duty rate paid by the client on a product and the preferential duty rate expected by Customs, multiplied by that product''s value. The duty rate paid is greater than the preferential rate associated with a potential FTA listed in Integration Point Global Trade Content. This report shows the results by declaration number and the associated potential savings.', CAST(N'2016-02-18T13:06:17.070' AS DateTime), N'jmerwin', N'jmerwin', 0x1926EA5D926A42426CB632CC6C815A3C, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.070' AS DateTime), 266, N'2e5383ea-ba10-4112-8bca-3a0135cb441f', N'SELECT       ISNULL(CASE WHEN cr.ClientPrefProgramName = '''' THEN cr.ContentPrefProgramName  ELSE cr.ClientPrefProgramName END, capp.PrefProgramCode ) as ContentLowestPrefRateProgramID,                 SUM(X.[PotentialSavings]) as [EstBasePotentialSavings (@CurrencyCode)] FROM ( SELECT       h.PartnerID, d.ContentLowestPrefRateProgramID,       CAST(SUM(d.EstBaseTotalLineValue * ((d.AdValoremDutyRate - d.ContentLowestPrefRate)))as numeric (28,2)) as PotentialSavings from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on       h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE and                d.ContentLowestPrefRate <> -1 and d.AdValoremDutyRate > d.ContentLowestPrefRate and                d.ContentLowestPrefRateProgramID  <>'''' and                d.PreferenceCode1 = '''' and                d.PreferenceCode2 = '''' and                d.AdValoremDutyRate <> d.ContentLowestPrefRate and                 h.PartnerID = (select PartnerID from tmfDefaults)  group by h.PartnerID, d.ContentLowestPrefRateProgramID) X join vid_GTVImportContentAvailablePrefPrograms capp on         X.ContentLowestPrefRateProgramID = capp.ProgramID and X.PartnerID = capp.PartnerID   left join tmgGVImportPrefProgramCrossReference cr on          capp.PrefProgramCode = cr.ContentPrefProgramCode and capp.PartnerID = cr.PartnerID  group by cr.ClientPrefProgramName, cr.ContentPrefProgramName, capp.PrefProgramCode ORDER BY [EstBasePotentialSavings (@CurrencyCode)] desc', N'All Potential Preferential Rates by Preference Program ', N'This report shows the difference between the ad valorem duty rate claimed by the client and the preferential duty rate expected by Customs, multiplied by that declaration''s line value. The ad valorem duty rate claimed is greater than the preferential rate associated with a potential preference program listed in Integration Point Global Trade Content. This report shows the results by preferential program and the associated potential savings. ', CAST(N'2016-02-18T13:06:17.070' AS DateTime), N'jmerwin', N'jmerwin', 0x719E8A0D7A78892E8503FD46CBF28A8E, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.067' AS DateTime), 267, N'0f078e8c-a4ff-4740-9c1d-253de25ae739', N'SELECT TOP 10       ISNULL(CASE WHEN cr.ClientPrefProgramName = '''' THEN cr.ContentPrefProgramName  ELSE cr.ClientPrefProgramName END, capp.PrefProgramCode ) as ContentLowestPrefRateProgramID,                 SUM(X.[PotentialSavings]) as [EstBasePotentialSavings (@CurrencyCode)] FROM ( SELECT       h.PartnerID, d.ContentLowestPrefRateProgramID,       CAST(SUM(d.EstBaseTotalLineValue * ((d.AdValoremDutyRate - d.ContentLowestPrefRate)))as numeric (28,2)) as PotentialSavings from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on       h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE and                d.ContentLowestPrefRate <> -1 and d.AdValoremDutyRate > d.ContentLowestPrefRate and                d.ContentLowestPrefRateProgramID  <>'''' and                d.PreferenceCode1 = '''' and                d.PreferenceCode2 = '''' and                d.AdValoremDutyRate <> d.ContentLowestPrefRate and                 h.PartnerID = (select PartnerID from tmfDefaults)  group by h.PartnerID, d.ContentLowestPrefRateProgramID) X join vid_GTVImportContentAvailablePrefPrograms capp on         X.ContentLowestPrefRateProgramID = capp.ProgramID and X.PartnerID = capp.PartnerID   left join tmgGVImportPrefProgramCrossReference cr on          capp.PrefProgramCode = cr.ContentPrefProgramCode and capp.PartnerID = cr.PartnerID  group by cr.ClientPrefProgramName, cr.ContentPrefProgramName, capp.PrefProgramCode ORDER BY [EstBasePotentialSavings (@CurrencyCode)] desc', N'Top Potential Preferential Rates by Preference Program', N'This report shows the difference between the duty rate paid by the client on a product and the preferential duty rate expected by Customs, multiplied by that product''s value. The duty rate paid is greater than the preferential rate associated with a potential FTA listed in Integration Point Global Trade Content. This report shows the results by top preference programs and the associated potential savings.', CAST(N'2016-02-18T13:06:17.067' AS DateTime), N'jmerwin', N'jmerwin', 0xD9BCE181B3E88DFF4E68DD050CE7E842, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.153' AS DateTime), 268, N'003afc18-4e02-4b9a-b1e7-05396954bc15', N'SELECT ImportMonth,  ISNULL([ZA],0) as ZA,ISNULL([BR],0) as BR,ISNULL([US],0) as US, ISNULL([FR],0) as FR,ISNULL([KR],0) as KR,ISNULL([AU],0) as AU, ISNULL([IN],0) as [IN],ISNULL([MX],0) as MX,ISNULL([DE],0) as DE ,ISNULL([CN],0) as CN,ISNULL([GB],0) as GB FROM ( SELECT ImportCountry, TotalDeclarationValue,   CAST(MONTH(ImportDate) as Varchar(2)) + ''-'' + CAST(YEAR(ImportDate) as Varchar(4)) as ImportMonth, YEAR(ImportDate) as IYear, MONTH(ImportDate) as IMonth  FROM txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND    ( h.ImportDate >= CONVERT(DATE,DATEADD(YEAR, -1, GETDATE())) )  ) gvh PIVOT (  SUM(TotalDeclarationValue) FOR ImportCountry IN ([ZA],[BR],[US],[FR],[KR],[AU],[IN],[MX],[DE],[CN],[GB]) ) AS pvt ORDER BY pvt.IYear, pvt.IMonth', N'Countries Of Import By Value Month to Month', N'', CAST(N'2016-02-18T13:06:17.153' AS DateTime), N'jmerwin', N'jmerwin', 0x55DA1F8F5B0B1146A6D3FB641335289E, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-09-21T09:45:53.270' AS DateTime), 269, N'003afc18-4e02-4b9a-b1e7-05396954bc15', N'SELECT ImportMonth,  ISNULL([ZA],0) as ZA,ISNULL([BR],0) as BR,ISNULL([US],0) as US, ISNULL([FR],0) as FR,ISNULL([KR],0) as KR,ISNULL([AU],0) as AU, ISNULL([IN],0) as [IN],ISNULL([MX],0) as MX,ISNULL([DE],0) as DE ,ISNULL([CN],0) as CN,ISNULL([GB],0) as GB FROM ( SELECT ImportCountry, TotalDeclarationValue,   CAST(MONTH(ImportDate) as Varchar(2)) + ''-'' + CAST(YEAR(ImportDate) as Varchar(4)) as ImportMonth, YEAR(ImportDate) as IYear, MONTH(ImportDate) as IMonth  FROM txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND PartnerID = @PartnerID AND   ( h.ImportDate >= CONVERT(DATE,DATEADD(YEAR, -1, GETDATE())) )  ) gvh PIVOT (  SUM(TotalDeclarationValue) FOR ImportCountry IN ([ZA],[BR],[US],[FR],[KR],[AU],[IN],[MX],[DE],[CN],[GB]) ) AS pvt ORDER BY pvt.IYear, pvt.IMonth', N'Countries Of Import By Import Value Month to Month', N'', CAST(N'2016-09-21T09:45:53.270' AS DateTime), N'C7437BEB-8910-4DDC-9DC1-DCDE65FB46C1', N'', 0x8C291640121C361EE6A6A26FF8F8BB8F, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-08-09T13:59:03.563' AS DateTime), 270, N'bea49fa2-304d-4dd2-883b-14a61c9e9b5d', N'SELECT MAX(BrokerName) FROM txdGVImportHeader WHERE PartnerID = @PartnerID AND @TargetString	', N'2304AD8B-2381-4C8B-AD8E-D6657973C83E', N'Declaration Count', CAST(N'2016-08-09T13:59:03.563' AS DateTime), N'6433dee3-705e-4c9c-9b14-0478f5e651cf', N'system', 0xC64CE73BBE30C930B9E3C139E1C95B75, N'ScoreCard', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:37.917' AS DateTime), 271, N'9b9dbde1-2aad-48ce-95bc-233cbec986cb', N'Select Distinct   h.ExportGuid,  d.ExportDetailGuid from ttdStagingGVExportHeader h  join ttdStagingGVExportDetail d on   h.ExportGuid = d.ExportGuid and   h.PartnerID = d.PartnerID WHERE 1=1  AND d.TotalLineValue<=1          AND h.ActiveVersionFlag = ''Y'' GROUP BY h.ExportGuid,d.exportdetailguid', N'Products with Value Less Than 1', N'The Product Value was recorded as less than or equal to 1. ', CAST(N'2016-02-18T13:06:37.917' AS DateTime), N'jmerwin', N'jmerwin', 0x7EABEE060255C21ECE631DF2798645CA, N'GTV Validation', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-10-06T10:03:41.450' AS DateTime), 272, N'a2a053b8-907d-4294-92ba-c46196dbadec', N'Select Distinct   h.ExportGuid,  d.ExportDetailGuid 
from ttdStagingGVExportHeader h  
join ttdStagingGVExportDetail d 
on h.ExportGuid = d.ExportGuid and h.PartnerID = d.PartnerID 
WHERE 1=1  AND d.TotalLineValue<=1  AND h.ActiveVersionFlag = ''Y'' 
GROUP BY h.ExportGuid,d.exportdetailguid', N'Products with Value Less Than 1', N'The Product Value was recorded as less than or equal to 1.', CAST(N'2016-10-06T10:03:41.450' AS DateTime), N'6433dee3-705e-4c9c-9b14-0478f5e651cf', N'', 0x09054CDBBF52AD33C360A585784A16DF, N'GTV Validation', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-10-06T10:02:35.067' AS DateTime), 273, N'9b9dbde1-2aad-48ce-95bc-233cbec986cb', N'Select Distinct   h.ExportGuid,  d.ExportDetailGuid 
from ttdStagingGVExportHeader h  
join ttdStagingGVExportDetail d 
on h.ExportGuid = d.ExportGuid and h.PartnerID = d.PartnerID 
WHERE 1=1  AND d.TotalLineValue<=0  AND h.ActiveVersionFlag = ''Y'' 
GROUP BY h.ExportGuid,d.exportdetailguid', N'Products with Value Less Than 0', N'The Product Value was recorded as less than or equal to 0.', CAST(N'2016-10-06T10:02:35.067' AS DateTime), N'6433dee3-705e-4c9c-9b14-0478f5e651cf', N'', 0x6BE2D09CA3908027F7706AE00AA56423, N'GTV Validation', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:37.897' AS DateTime), 274, N'537553e4-d666-45ba-b0bc-47fd05b8a5e7', N'Select Distinct   h.EntryGuid,  d.LineGuid from ttdStagingGVImportHeader h  join ttdStagingGVImportDetail d on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID WHERE 1=1  AND d.TotalLineValue<=1          AND h.ActiveVersionFlag = ''Y'' GROUP BY h.EntryGuid,d.lineguid', N'Products with Value Less Than 1', N'The Product Value was recorded as less than or equal to 1.  ', CAST(N'2016-02-18T13:06:37.897' AS DateTime), N'jmerwin', N'jmerwin', 0xE33F2FB85DF394FB3C46987BD8B29313, N'GTV Validation', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:37.900' AS DateTime), 275, N'87dcac25-d6c1-4911-9d6b-307d25b880e6', N'SELECT DISTINCT  h.entryguid,  d.lineguid FROM ttdStagingGVImportHeader h WITH (NOLOCK) JOIN ttdStagingGVImportDetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid AND h.PartnerID = d.PartnerID WHERE h.ExportDate = '''' AND ActiveVersionFlag = ''Y''  GROUP BY h.EntryGuid, d.LineGuid', N'Declarations with a Missing Export Date', N'This validation checks the Export Date on a declaration and returns all declarations where the Export Date is blank. ', CAST(N'2016-02-18T13:06:37.900' AS DateTime), N'jmerwin', N'jmerwin', 0x9C928A86669BC971685CF2D04BE0CB3F, N'GTV Validation', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:37.903' AS DateTime), 276, N'a4606f8c-86b5-4298-b2d7-e32df911368a', N'SELECT DISTINCT  h.entryguid,  d.lineguid FROM ttdStagingGVImportHeader h WITH (NOLOCK) JOIN ttdStagingGVImportDetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid AND h.PartnerID = d.PartnerID WHERE h.PortOfLading = '''' AND ActiveVersionFlag = ''Y'' GROUP BY h.EntryGuid, d.LineGuid', N'Declarations with a Missing Port of Lading', N'This validation checks the Port of Lading on a declaration and returns all declarations where the Port of Lading is blank. ', CAST(N'2016-02-18T13:06:37.903' AS DateTime), N'jmerwin', N'jmerwin', 0x8E3AD00FB683D25D540B0A2E0E92E207, N'GTV Validation', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:37.903' AS DateTime), 277, N'72aa3d13-9802-4dce-98c3-5d0f71457314', N'SELECT DISTINCT  h.entryguid,  d.lineguid FROM ttdStagingGVImportHeader h WITH (NOLOCK) JOIN ttdStagingGVImportDetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid AND h.PartnerID = d.PartnerID WHERE h.PortOfUnlading = '''' AND ActiveVersionFlag = ''Y''  GROUP BY h.EntryGuid, d.LineGuid', N'Declarations with a Missing Port of Unlading', N'This validation checks the Port of Unlading on a declaration and returns all declarations where the Port of Unlading is blank. ', CAST(N'2016-02-18T13:06:37.903' AS DateTime), N'jmerwin', N'jmerwin', 0xAD4B7A25FB236DCE91CAC1A14928A1CE, N'GTV Validation', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.140' AS DateTime), 278, N'97d122a4-1db0-46e0-84e1-2ea86dae7085', N'Select top 10  h.PortOfUnlading,  CAST(SUM(h.EstBaseTotalDeclarationDuty)/ SUM(h.EstBaseTotalDeclarationValue) AS NUMERIC(28, 4)) as [DutyPerUnitValue(@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.PortOfUnlading ORDER BY [DutyPerUnitValue(@CurrencyCode)] DESC ', N'Average Duty Paid by Port of Unlading', N'This report shows the highest duty paid per unit of declaration value with the related ports of unlading.', CAST(N'2016-02-18T13:06:17.140' AS DateTime), N'jmerwin', N'jmerwin', 0x9B3EBA5620D43C35B2538328E8FC7A83, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.147' AS DateTime), 279, N'2eab0357-0d9d-4cc7-b414-a5e5f6d415ac', N'Select top 10  h.PortOfUnlading,  CAST((SUM(d.EstBaseTotalLineAddlIndirectTaxAmt))/  SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 4))as [AddlIndirectTaxPerUnitValue(@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.PortOfUnlading HAVING SUM(h.EstBaseTotalDeclarationValue) > 0  ORDER BY [AddlIndirectTaxPerUnitValue(@CurrencyCode)] desc', N'Average Additional Indirect Taxes by Ports of Unlading', N'This report shows the highest additional indirect taxes paid per unit of declaration value with the related ports of unlading. ', CAST(N'2016-02-18T13:06:17.147' AS DateTime), N'jmerwin', N'jmerwin', 0x2AA4E5BED25B09BCD7CD5536EC159F75, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.977' AS DateTime), 280, N'bc9b49ee-d725-4a72-9431-5b6061315d03', N'SELECT  h.PortOfUnlading,   CAST(SUM(d.EstBaseTotalLineValue * (d.AdValoremDutyRate-ctr.MainPercent))AS numeric (28,2)) as [EstBasePotentialSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr WITH (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID   AND ctr.MainPercent < d.AdValoremDutyRate     AND ctr.MainPercent <> -1 GROUP BY h.PortOfUnlading ORDER BY [EstBasePotentialSavings (@CurrencyCode)] DESC', N'Duty Rate Exceeds Main Rate by Port of Unlading - All', N'Pending: This report shows the difference between the duty rate paid by the client on a product and the normal duty rate expected by Customs, multiplied by that product''s value. The duty rate paid is greater than the normal rate in Integration Point Global Trade Content. This report shows the results of every port of unlading and the associated overpaid duty. ', CAST(N'2016-02-18T13:06:16.977' AS DateTime), N'jmerwin', N'jmerwin', 0x560C51FE5F566D7FE0BFC968B885B271, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.150' AS DateTime), 281, N'8e4ee800-3bd2-4700-9eb8-f8e75f2c6b7d', N'Select top 10  h.PortOfUnlading,  CAST(((SUM(d.EstBaseTotalLineDuty) + SUM(d.EstBaseTotalLineVATAmt) + SUM(d.EstBaseTotalLineExciseAmt) + SUM(d.EstBaseTotalLineAddlIndirectTaxAmt))/  SUM(d.EstBaseTotalLineValue)) AS NUMERIC(28, 4)) as [AllTaxesPerUnitValue(@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.PortOfUnlading  HAVING  SUM(h.EstBaseTotalDeclarationValue) > 0  ORDER BY [AllTaxesPerUnitValue(@CurrencyCode)] desc', N'Average Import Costs by Ports of Unlading', N'This report shows the highest total duty, VAT/GST, excise, and additional indirect taxes paid per unit of declaration value with the related ports of unlading.', CAST(N'2016-02-18T13:06:17.150' AS DateTime), N'jmerwin', N'jmerwin', 0x02159A4580A24C4BAED82C4FBA190A57, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.150' AS DateTime), 282, N'c11da293-1345-489d-b9cb-6221252968bf', N'Select top 10  h.PortOfUnlading,  CAST((SUM(d.EstBaseTotalLineVATAmt) + SUM(d.EstBaseTotalLineExciseAmt) + SUM(d.EstBaseTotalLineAddlIndirectTaxAmt))/  SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 4)) as [IndirectTaxesPerUnitValue(@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.PortOfUnlading HAVING SUM( h.EstBaseTotalDeclarationValue) > 0  ORDER BY [IndirectTaxesPerUnitValue(@CurrencyCode)] DESC  ', N'Average Indirect Taxes Paid by Ports of Unlading', N'This report shows the highest VAT/GST, excise, and additional indirect taxes paid per unit of declaration value with their ports of unlading.', CAST(N'2016-02-18T13:06:17.150' AS DateTime), N'jmerwin', N'jmerwin', 0xB6CFDF988F54EF3181C7898CA0C8C35E, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.143' AS DateTime), 283, N'2ea015f2-a741-45cf-8273-9dd365ee7096', N'Select top 10  h.PortOfUnlading,  CAST((SUM(d.EstBaseTotalLineExciseAmt))/  SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 4))as [ExcisePerUnitValue(@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.PortOfUnlading HAVING SUM(h.EstBaseTotalDeclarationValue) > 0  ORDER BY [ExcisePerUnitValue(@CurrencyCode)] desc', N'Average Excise Paid by Ports of Unlading', N'This report shows the highest excise taxes paid per unit of declaration value with the related ports of unlading.', CAST(N'2016-02-18T13:06:17.143' AS DateTime), N'jmerwin', N'jmerwin', 0x20414C569C08219B067458E9490557D5, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.143' AS DateTime), 284, N'835b2b2e-4c89-4c1b-9299-2f7b8bfebed0', N'Select top 10  h.PortOfUnlading,  CAST((SUM(d.EstBaseTotalLineVATAmt))/  SUM(d.EstBaseTotalLineValue) AS NUMERIC(28, 4))as [VATPerUnitValue(@CurrencyCode)]  from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  GROUP BY h.PortOfUnlading  HAVING SUM (h.EstBaseTotalDeclarationValue) >= 0  ORDER BY [VATPerUnitValue(@CurrencyCode)]  DESC ', N'Average VAT Paid by Port of Unlading', N'This report shows the highest VAT/GST paid per unit of declaration value with the related ports of unlading.', CAST(N'2016-02-18T13:06:17.143' AS DateTime), N'jmerwin', N'jmerwin', 0x60EF735400F7E0354941A0748028C0D6, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.137' AS DateTime), 285, N'596faaa4-f523-4c9b-b267-a07c6891f6b3', N'SELECT   h.PortOfUnlading,   Round(AVG(Cast(DATEDIFF(d, h.ExportDate, h.DeliveryDate)AS FLOAT)), 2) as AvgDaysExportToDelivery from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ExportDate <> '''' and h.DeliveryDate <> '''' and h.PortOfUnlading <> '''' GROUP BY h.PortOfUnlading ORDER BY AvgDaysExportToDelivery DESC', N'All Export to Delivery by Port of Unlading', N'This report evaluates port performance by displaying all ports of unlading with their average amount of days from the export date to the delivery date.', CAST(N'2016-02-18T13:06:17.137' AS DateTime), N'jmerwin', N'jmerwin', 0x7485F89BC3588CF23A327A8E12D839E8, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.137' AS DateTime), 286, N'5dd5dd9d-6e9f-4a5d-bcab-e0bcc7826c91', N'SELECT  h.BrokerName,   Round(AVG(Cast(DATEDIFF(d, h.ExportDate, h.DeliveryDate)AS FLOAT)), 2) as AvgDaysExportToDelivery from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ExportDate <> '''' and h.DeliveryDate <> '''' and h.BrokerName <> '''' GROUP BY h.BrokerName ORDER BY AvgDaysExportToDelivery DESC', N'All Export to Delivery by Broker', N'This report evaluates broker performance by displaying all brokers with their average amount of days from the export date to the delivery date.', CAST(N'2016-02-18T13:06:17.137' AS DateTime), N'jmerwin', N'jmerwin', 0x1A9D74CEAF2E86377043CBBCD21E27D3, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.137' AS DateTime), 287, N'5f19db04-f67d-4d74-a9ab-d8924020f7d0', N'SELECT   h.CarrierName,   Round(AVG(Cast(DATEDIFF(d, h.ExportDate, h.DeliveryDate)AS FLOAT)), 2) as AvgDaysExportToDelivery from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ExportDate <> '''' and h.DeliveryDate <> '''' and h.CarrierName <> '''' GROUP BY h.CarrierName ORDER BY AvgDaysExportToDelivery DESC', N'All Export to Delivery by Carrier', N'This report evaluates carrier performance by displaying all carriers with their average amount of days from the export date to the delivery date.', CAST(N'2016-02-18T13:06:17.137' AS DateTime), N'jmerwin', N'jmerwin', 0xE9386CC0E87FACDA731029063469EAB1, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.137' AS DateTime), 288, N'02b7d8fa-8987-41f1-a90c-e84db5b8f54b', N'SELECT   h.ModeOfTransport,   Round(AVG(Cast(DATEDIFF(d, h.ExportDate, h.DeliveryDate)AS FLOAT)), 2) as AvgDaysExportToDelivery from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ExportDate <> '''' and h.DeliveryDate <> '''' and h.ModeOfTransport <> '''' GROUP BY h.ModeOfTransport ORDER BY AvgDaysExportToDelivery DESC', N'All Export to Delivery by Mode of Transport', N'This report evaluates mode of transport performance by displaying all modes of transport with their average amount of days from the export date to the delivery date.', CAST(N'2016-02-18T13:06:17.137' AS DateTime), N'jmerwin', N'jmerwin', 0xF3193BDB456A255EDB5689DD006BC86A, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.130' AS DateTime), 289, N'ad405a21-190a-44ad-a827-c30c4e158168', N'SELECT   h.PortOfUnlading,   Round(AVG(Cast(DATEDIFF(d, h.ArrivalDate, h.ImportDate)AS FLOAT)), 2) as AvgDaysArrivalToImport from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ArrivalDate <> '''' and h.ImportDate <> '''' and h.PortOfUnlading <> '''' GROUP BY h.PortOfUnlading ORDER BY AvgDaysArrivalToImport DESC', N'Arrival to Import by Port of Unlading', N'This report evaluates port performance by displaying all ports of unlading with their average amount of days from the arrival date to the import date. ', CAST(N'2016-02-18T13:06:17.130' AS DateTime), N'jmerwin', N'jmerwin', 0xE004CD9B0DE75DF41FDDD39BDD5AF471, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.133' AS DateTime), 290, N'776000d2-9127-4455-b848-46fcfaa189f0', N'SELECT   h.PortOfUnlading,   Round(AVG(Cast(DATEDIFF(d, h.ReleaseDate, h.DeliveryDate)AS FLOAT)), 2) as AvgDaysReleaseToDelivery from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ReleaseDate <> '''' and h.DeliveryDate <> '''' and h.PortOfUnlading <> '''' GROUP BY h.PortOfUnlading ORDER BY AvgDaysReleaseToDelivery DESC', N'All Release to Delivery by Port of Unlading', N'This report evaluates port performance by displaying all ports of unlading with their  average amount of days from the release date to the delivery date.', CAST(N'2016-02-18T13:06:17.133' AS DateTime), N'jmerwin', N'jmerwin', 0x5A8307833981EDF65708DDC0DD30F431, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.133' AS DateTime), 291, N'ded2f4c7-d927-4f29-98aa-3d66eab47ac4', N'SELECT  h.PortOfUnlading,   Round(AVG(Cast(DATEDIFF(d, h.ArrivalDate, h.ReleaseDate)AS FLOAT)), 2) as AvgDaysArrivalToRelease from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ArrivalDate <> '''' and h.ReleaseDate <> '''' and h.PortOfUnlading <> '''' GROUP BY h.PortOfUnlading ORDER BY AvgDaysArrivalToRelease DESC', N'All Arrival to Release by Port of Unlading', N'This report evaluates port performance by displaying all ports of unlading with their average amount of days from the arrival date to the release date.', CAST(N'2016-02-18T13:06:17.133' AS DateTime), N'jmerwin', N'jmerwin', 0xA1DA503F0494EC8F7FF150ED685A6993, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.130' AS DateTime), 292, N'4b0319c3-75f5-4521-85c5-131268cc32fd', N'select h.PartnerID, h.ModeOfTransport into #tmpSelectedValue from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  group by h.PartnerID, h.ModeOfTransport    select *  into #tmpSelectedValueMetrics from  (   SELECT    h.PartnerID,    h.ModeOfTransport,    ''ExportToArrival'' as Name,     AVG(DATEDIFF(d, h.ExportDate, h.ArrivalDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID and h.ExportDate <> '''' and h.ArrivalDate <> '''' and h.ModeOfTransport <> ''''   GROUP BY h.PartnerID, h.ModeOfTransport     UNION ALL    SELECT     h.PartnerID,    h.ModeOfTransport,    ''ArrivalToImport'' as Name,     AVG(DATEDIFF(d, h.ArrivalDate, h.ImportDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ArrivalDate <> '''' and h.ImportDate <> '''' and h.ModeOfTransport <> ''''   GROUP BY h.PartnerID, h.ModeOfTransport     UNION ALL    SELECT     h.PartnerID,    h.ModeOfTransport,    ''ImportToRelease'' as Name,     AVG(DATEDIFF(d, h.ImportDate, h.ReleaseDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID and h.ImportDate <> '''' and h.ReleaseDate <> '''' and h.ModeOfTransport <> ''''   GROUP BY h.PartnerID, h.ModeOfTransport     UNION ALL    SELECT     h.PartnerID,    h.ModeOfTransport,    ''ReleaseToDelivery'' as Name,     AVG(DATEDIFF(d, h.ReleaseDate, h.DeliveryDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID and h.ReleaseDate <> '''' and h.DeliveryDate <> '''' and h.ModeOfTransport <> ''''   GROUP BY h.PartnerID, h.ModeOfTransport   ) h where 1=1 AND h.PartnerID = @PartnerID    select *  into #tmpNonSelectedMetrics from  (   SELECT    h.PartnerID,    ''ExportToArrival'' as Name,     AVG(DATEDIFF(d, h.ExportDate, h.ArrivalDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE and h.ExportDate <> '''' and h.ArrivalDate <> ''''  and h.ModeOfTransport <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where ModeOfTransport = h.ModeOfTransport)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ArrivalToImport'' as Name,     AVG(DATEDIFF(d, h.ArrivalDate, h.ImportDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE  and h.ArrivalDate <> '''' and h.ImportDate <> '''' and h.ModeOfTransport <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where ModeOfTransport = h.ModeOfTransport)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ImportToRelease'' as Name,     AVG(DATEDIFF(d, h.ImportDate, h.ReleaseDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE and h.ImportDate <> '''' and h.ReleaseDate <> '''' and h.ModeOfTransport <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where ModeOfTransport = h.ModeOfTransport)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ReleaseToDelivery'' as Name,     AVG(DATEDIFF(d, h.ReleaseDate, h.DeliveryDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE and h.ReleaseDate <> '''' and h.DeliveryDate <> '''' and h.ModeOfTransport <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where ModeOfTransport = h.ModeOfTransport)   GROUP BY h.PartnerID   ) q where PartnerID = @PartnerID   select   s.Name,  s.AvgDays as SelectedPortOfLadingAvgDays,  isnull(r.AvgDays, '''') as AllOtherPortOfLadingAvgDays from #tmpSelectedValueMetrics s join #tmpNonSelectedMetrics r on   s.Name = r.Name and  s.PartnerID = r.PartnerID where   s.PartnerID = @PartnerID', N'Export to Delivery Milestones - ModeOfTransport Comparison ', N'This report evaluates mode of transport performance by displaying one of the chosen modes of transport with the longest average amount of days from the export date to the delivery date compared to the average amount of days from the export date to delivery date for all other modes of transport. ', CAST(N'2016-02-18T13:06:17.130' AS DateTime), N'jmerwin', N'jmerwin', 0xFE8BBC3291B1880C80B3313FFE8D7E97, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.130' AS DateTime), 293, N'da3b6f95-5336-4740-85b4-e6fbd98421dd', N'SELECT  h.CarrierName,   Round(AVG(Cast(DATEDIFF(d, h.ExportDate, h.ArrivalDate)AS FLOAT)), 2) as AvgDaysExportToArrival from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ExportDate <> '''' and h.ArrivalDate <> '''' and h.CarrierName <> '''' GROUP BY h.CarrierName ORDER BY AvgDaysExportToArrival DESC', N'All Export To Arrival by Carrier', N'This report evaluates carrier performance by displaying all carriers with the their average amount of days from the export date to the arrival date. ', CAST(N'2016-02-18T13:06:17.130' AS DateTime), N'jmerwin', N'jmerwin', 0x941CEE8140333DECB8ADFBCD1C4C3A01, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.130' AS DateTime), 294, N'6aed2add-1a28-428b-80d5-771e4a492bd7', N'SELECT  h.ModeOfTransport,   Round(AVG(Cast(DATEDIFF(d, h.ExportDate, h.ArrivalDate)AS FLOAT)), 2) as AvgDaysExportToArrival from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ExportDate <> '''' and h.ArrivalDate <> '''' and h.ModeOfTransport <> '''' GROUP BY h.ModeOfTransport ORDER BY AvgDaysExportToArrival DESC', N'All Export to Arrival by Mode of Transport', N'This report evaluates mode of transport performance by displaying the modes of transport with their average amount of days from the export date to the arrival date. ', CAST(N'2016-02-18T13:06:17.130' AS DateTime), N'jmerwin', N'jmerwin', 0xBC1A3D924009EA9CB4BC1A39D535D278, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.130' AS DateTime), 295, N'd3673945-e1d4-40a1-a606-8d20f1279671', N'select h.PartnerID, h.CarrierName into #tmpSelectedValue from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  group by h.PartnerID, h.CarrierName    select *  into #tmpSelectedValueMetrics from  (   SELECT    h.PartnerID,    h.CarrierName,    ''ExportToArrival'' as Name,     AVG(DATEDIFF(d, h.ExportDate, h.ArrivalDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID and h.ExportDate <> '''' and h.ArrivalDate <> '''' and h.CarrierName <> ''''   GROUP BY h.PartnerID, h.CarrierName     UNION ALL    SELECT     h.PartnerID,    h.CarrierName,    ''ArrivalToImport'' as Name,     AVG(DATEDIFF(d, h.ArrivalDate, h.ImportDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ArrivalDate <> '''' and h.ImportDate <> '''' and h.CarrierName <> ''''   GROUP BY h.PartnerID, h.CarrierName     UNION ALL    SELECT     h.PartnerID,    h.CarrierName,    ''ImportToRelease'' as Name,     AVG(DATEDIFF(d, h.ImportDate, h.ReleaseDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID and h.ImportDate <> '''' and h.ReleaseDate <> '''' and h.CarrierName <> ''''   GROUP BY h.PartnerID, h.CarrierName     UNION ALL    SELECT     h.PartnerID,    h.CarrierName,    ''ReleaseToDelivery'' as Name,     AVG(DATEDIFF(d, h.ReleaseDate, h.DeliveryDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID and h.ReleaseDate <> '''' and h.DeliveryDate <> '''' and h.CarrierName <> ''''   GROUP BY h.PartnerID, h.CarrierName   ) h where 1=1 AND h.PartnerID = @PartnerID    select *  into #tmpNonSelectedMetrics from  (   SELECT    h.PartnerID,    ''ExportToArrival'' as Name,     AVG(DATEDIFF(d, h.ExportDate, h.ArrivalDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE and h.ExportDate <> '''' and h.ArrivalDate <> ''''  and h.CarrierName <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where CarrierName = h.CarrierName)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ArrivalToImport'' as Name,     AVG(DATEDIFF(d, h.ArrivalDate, h.ImportDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE  and h.ArrivalDate <> '''' and h.ImportDate <> '''' and h.CarrierName <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where CarrierName = h.CarrierName)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ImportToRelease'' as Name,     AVG(DATEDIFF(d, h.ImportDate, h.ReleaseDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE and h.ImportDate <> '''' and h.ReleaseDate <> '''' and h.CarrierName <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where CarrierName = h.CarrierName)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ReleaseToDelivery'' as Name,     AVG(DATEDIFF(d, h.ReleaseDate, h.DeliveryDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE and h.ReleaseDate <> '''' and h.DeliveryDate <> '''' and h.CarrierName <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where CarrierName = h.CarrierName)   GROUP BY h.PartnerID   ) q where PartnerID = @PartnerID   select   s.Name,  s.AvgDays as SelectedPortOfLadingAvgDays,  isnull(r.AvgDays, '''') as AllOtherPortOfLadingAvgDays from #tmpSelectedValueMetrics s join #tmpNonSelectedMetrics r on   s.Name = r.Name and  s.PartnerID = r.PartnerID where   s.PartnerID = @PartnerID', N'Export to Delivery Milestones - Carrier Comparison', N'This report evaluates carrier performance by displaying one of the chosen carriers with the longest average amount of days from the export date to the delivery date compared to the average amount of days from the export date to delivery date for all other carriers. ', CAST(N'2016-02-18T13:06:17.130' AS DateTime), N'jmerwin', N'jmerwin', 0xF04019416374AC2DFBB5FC490A33DDB3, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.127' AS DateTime), 296, N'f5663207-e929-4b4e-9fe5-432f6bda5dac', N'SELECT top 10  h.ModeOfTransport,   Round(AVG(Cast(DATEDIFF(d, h.ExportDate, h.ArrivalDate)AS FLOAT)), 2) as AvgDaysExportToArrival from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ExportDate <> '''' and h.ArrivalDate <> '''' and h.ModeOfTransport <> '''' GROUP BY h.ModeOfTransport ORDER BY AvgDaysExportToArrival DESC', N'Export to Arrival by ModeOfTransport', N'This report evaluates mode of transport performance by displaying the modes of transport with the longest average amount of days from the export date to the arrival date. ', CAST(N'2016-02-18T13:06:17.127' AS DateTime), N'jmerwin', N'jmerwin', 0xE61F619BF5A83EE158CD1B529AB7A2F6, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.130' AS DateTime), 297, N'b7041f77-ffc0-492c-ba98-d791b37dc649', N'select h.PartnerID, h.BrokerName into #tmpSelectedValue from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  group by h.PartnerID, h.BrokerName    select *  into #tmpSelectedValueMetrics from  (   SELECT    h.PartnerID,    h.BrokerName,    ''ExportToArrival'' as Name,     AVG(DATEDIFF(d, h.ExportDate, h.ArrivalDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID and h.ExportDate <> '''' and h.ArrivalDate <> '''' and h.BrokerName <> ''''   GROUP BY h.PartnerID, h.BrokerName     UNION ALL    SELECT     h.PartnerID,    h.BrokerName,    ''ArrivalToImport'' as Name,     AVG(DATEDIFF(d, h.ArrivalDate, h.ImportDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ArrivalDate <> '''' and h.ImportDate <> '''' and h.BrokerName <> ''''   GROUP BY h.PartnerID, h.BrokerName     UNION ALL    SELECT     h.PartnerID,    h.BrokerName,    ''ImportToRelease'' as Name,     AVG(DATEDIFF(d, h.ImportDate, h.ReleaseDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID and h.ImportDate <> '''' and h.ReleaseDate <> '''' and h.BrokerName <> ''''   GROUP BY h.PartnerID, h.BrokerName     UNION ALL    SELECT     h.PartnerID,    h.BrokerName,    ''ReleaseToDelivery'' as Name,     AVG(DATEDIFF(d, h.ReleaseDate, h.DeliveryDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID and h.ReleaseDate <> '''' and h.DeliveryDate <> '''' and h.BrokerName <> ''''   GROUP BY h.PartnerID, h.BrokerName   ) h where 1=1 AND h.PartnerID = @PartnerID    select *  into #tmpNonSelectedMetrics from  (   SELECT    h.PartnerID,    ''ExportToArrival'' as Name,     AVG(DATEDIFF(d, h.ExportDate, h.ArrivalDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE and h.ExportDate <> '''' and h.ArrivalDate <> ''''  and h.BrokerName <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where BrokerName = h.BrokerName)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ArrivalToImport'' as Name,     AVG(DATEDIFF(d, h.ArrivalDate, h.ImportDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE  and h.ArrivalDate <> '''' and h.ImportDate <> '''' and h.BrokerName <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where BrokerName = h.BrokerName)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ImportToRelease'' as Name,     AVG(DATEDIFF(d, h.ImportDate, h.ReleaseDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE and h.ImportDate <> '''' and h.ReleaseDate <> '''' and h.BrokerName <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where BrokerName = h.BrokerName)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ReleaseToDelivery'' as Name,     AVG(DATEDIFF(d, h.ReleaseDate, h.DeliveryDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE and h.ReleaseDate <> '''' and h.DeliveryDate <> '''' and h.BrokerName <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where BrokerName = h.BrokerName)   GROUP BY h.PartnerID   ) q where PartnerID = @PartnerID   select   s.Name,  s.AvgDays as SelectedPortOfLadingAvgDays,  isnull(r.AvgDays, '''') as AllOtherPortOfLadingAvgDays from #tmpSelectedValueMetrics s join #tmpNonSelectedMetrics r on   s.Name = r.Name and  s.PartnerID = r.PartnerID where   s.PartnerID = @PartnerID', N'Export to Delivery Milestones - Broker Comparison', N'This report evaluates broker performance by displaying one of the chosen brokers with the longest average amount of days from the export date to the delivery date compared to the average amount of days from the export date to delivery date for all other brokers. ', CAST(N'2016-02-18T13:06:17.130' AS DateTime), N'jmerwin', N'jmerwin', 0x3E99BDCDD0C54BA3BEC45A2F910FCC7F, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.127' AS DateTime), 298, N'4e17ce63-86ee-4b9e-bbd9-fa0971994d49', N'select h.PartnerID, h.PortOfUnlading into #tmpSelectedValue from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  group by h.PartnerID, h.PortOfUnlading    select *  into #tmpSelectedValueMetrics from  (   SELECT    h.PartnerID,    h.PortOfUnlading,    ''ExportToArrival'' as Name,     AVG(DATEDIFF(d, h.ExportDate, h.ArrivalDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID and h.ExportDate <> '''' and h.ArrivalDate <> '''' and h.PortOfUnlading <> ''''   GROUP BY h.PartnerID, h.PortOfUnlading     UNION ALL    SELECT     h.PartnerID,    h.PortOfUnlading,    ''ArrivalToImport'' as Name,     AVG(DATEDIFF(d, h.ArrivalDate, h.ImportDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ArrivalDate <> '''' and h.ImportDate <> '''' and h.PortOfUnlading <> ''''   GROUP BY h.PartnerID, h.PortOfUnlading     UNION ALL    SELECT     h.PartnerID,    h.PortOfUnlading,    ''ImportToRelease'' as Name,     AVG(DATEDIFF(d, h.ImportDate, h.ReleaseDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID and h.ImportDate <> '''' and h.ReleaseDate <> '''' and h.PortOfUnlading <> ''''   GROUP BY h.PartnerID, h.PortOfUnlading     UNION ALL    SELECT     h.PartnerID,    h.PortOfUnlading,    ''ReleaseToDelivery'' as Name,     AVG(DATEDIFF(d, h.ReleaseDate, h.DeliveryDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID and h.ReleaseDate <> '''' and h.DeliveryDate <> '''' and h.PortOfUnlading <> ''''   GROUP BY h.PartnerID, h.PortOfUnlading   ) h where 1=1 AND h.PartnerID = @PartnerID    select *  into #tmpNonSelectedMetrics from  (   SELECT    h.PartnerID,    ''ExportToArrival'' as Name,     AVG(DATEDIFF(d, h.ExportDate, h.ArrivalDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE and h.ExportDate <> '''' and h.ArrivalDate <> ''''  and h.PortOfUnlading <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where PortOfUnlading = h.PortOfUnlading)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ArrivalToImport'' as Name,     AVG(DATEDIFF(d, h.ArrivalDate, h.ImportDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE  and h.ArrivalDate <> '''' and h.ImportDate <> '''' and h.PortOfUnlading <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where PortOfUnlading = h.PortOfUnlading)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ImportToRelease'' as Name,     AVG(DATEDIFF(d, h.ImportDate, h.ReleaseDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE and h.ImportDate <> '''' and h.ReleaseDate <> '''' and h.PortOfUnlading <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where PortOfUnlading = h.PortOfUnlading)   GROUP BY h.PartnerID     UNION ALL    SELECT     h.PartnerID,    ''ReleaseToDelivery'' as Name,     AVG(DATEDIFF(d, h.ReleaseDate, h.DeliveryDate)) as AvgDays   from txdGVImportHeader h WITH (NOLOCK)    WHERE h.PartnerID = @PartnerID AND @IMPORTDATERANGE and h.ReleaseDate <> '''' and h.DeliveryDate <> '''' and h.PortOfUnlading <> '''' and not exists (select 1 from #tmpSelectedValueMetrics where PortOfUnlading = h.PortOfUnlading)   GROUP BY h.PartnerID   ) q where PartnerID = @PartnerID   select   s.Name,  s.AvgDays as SelectedPortOfLadingAvgDays,  isnull(r.AvgDays, '''') as AllOtherPortOfLadingAvgDays from #tmpSelectedValueMetrics s join #tmpNonSelectedMetrics r on   s.Name = r.Name and  s.PartnerID = r.PartnerID where   s.PartnerID = @PartnerID', N'Import Milestones by PortOfUnlading', N'This report evaluates port performance by displaying one of the chosen ports of unlading with the longest average amount of days from the export date to the delivery date compared to the average amount of days from the export date to delivery date for all other ports of unlading. ', CAST(N'2016-02-18T13:06:17.127' AS DateTime), N'jmerwin', N'jmerwin', 0xBE1E1C5B0011B3BF6D080B1C235BA681, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.127' AS DateTime), 299, N'18ef8bd9-0edd-4961-8afd-0ec6c131bdb6', N'SELECT top 10  h.PortOfUnlading,   Round(AVG(Cast(DATEDIFF(d, h.ReleaseDate, h.DeliveryDate)AS FLOAT)), 2) as AvgDaysReleaseToDelivery from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ReleaseDate <> '''' and h.DeliveryDate <> '''' and h.PortOfUnlading <> '''' GROUP BY h.PortOfUnlading ORDER BY AvgDaysReleaseToDelivery DESC', N'Release to Delivery by PortOfUnlading', N'This report evaluates port performance by displaying the ports of unlading with the longest average amount of days from the release date to the delivery date.', CAST(N'2016-02-18T13:06:17.127' AS DateTime), N'jmerwin', N'jmerwin', 0x0F3520C2C85AED8DEB6A8878CA30BB4C, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.127' AS DateTime), 300, N'e1e25da5-426d-4efd-9f9e-6a4e11e23091', N' SELECT top 10  h.ModeOfTransport,   Round(AVG(Cast(DATEDIFF(d, h.ExportDate, h.DeliveryDate)AS FLOAT)), 2) as AvgDaysExportToDelivery from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ExportDate <> '''' and h.DeliveryDate <> '''' and h.ModeOfTransport <> '''' GROUP BY h.ModeOfTransport ORDER BY AvgDaysExportToDelivery DESC', N'Export to Delivery by ModeOfTransport', N'This report evaluates mode of transport performance by displaying the modes of transport with the longest average amount of days from the export date to the delivery date.', CAST(N'2016-02-18T13:06:17.127' AS DateTime), N'jmerwin', N'jmerwin', 0x09B1C3D2B370DA6E69D99DC7071B4015, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.120' AS DateTime), 301, N'4e741a75-5f7f-4aec-880f-2eaacab9aecf', N'SELECT top 10  h.CarrierName,   Round(AVG(Cast(DATEDIFF(d, h.ExportDate, h.DeliveryDate)AS FLOAT)), 2) as AvgDaysExportToDelivery from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ExportDate <> '''' and h.DeliveryDate <> '''' and h.CarrierName <> '''' GROUP BY h.CarrierName ORDER BY AvgDaysExportToDelivery DESC', N'Export to Delivery by Carrier', N'This report evaluates carrier performance by displaying the carriers with the longest average amount of days from the export date to the delivery date.', CAST(N'2016-02-18T13:06:17.120' AS DateTime), N'jmerwin', N'jmerwin', 0x3E5009E2E17773EEE41A256A6994CF0F, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.120' AS DateTime), 302, N'296f7ad7-0032-43fb-b648-0b58cc07422b', N'SELECT top 10  h.BrokerName,   Round(AVG(Cast(DATEDIFF(d, h.ExportDate, h.DeliveryDate)AS FLOAT)), 2) as AvgDaysExportToDelivery from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ExportDate <> '''' and h.DeliveryDate <> '''' and h.BrokerName <> '''' GROUP BY h.BrokerName ORDER BY AvgDaysExportToDelivery DESC', N'Export to Delivery by Broker', N'This report evaluates broker performance by displaying the brokers with the longest average amount of days from the export date to the delivery date.', CAST(N'2016-02-18T13:06:17.120' AS DateTime), N'jmerwin', N'jmerwin', 0x3C6B24B9CED064A5811A29974DF494CC, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.120' AS DateTime), 303, N'9e07165f-be1e-428d-a83d-bb9309ec5d90', N'SELECT top 10  h.PortOfUnlading,   Round(AVG(Cast(DATEDIFF(d, h.ExportDate, h.DeliveryDate)AS FLOAT)), 2) as AvgDaysExportToDelivery from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ExportDate <> '''' and h.DeliveryDate <> '''' and h.PortOfUnlading <> '''' GROUP BY h.PortOfUnlading ORDER BY AvgDaysExportToDelivery DESC', N'Export to Delivery by PortOfUnlading', N'This report evaluates port performance by displaying the ports of unlading with the longest average amount of days from the export date to the delivery date.', CAST(N'2016-02-18T13:06:17.120' AS DateTime), N'jmerwin', N'jmerwin', 0x3D49A211DA06F1A96176247C26E11E93, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.120' AS DateTime), 304, N'9449ac67-3af6-402f-ae3d-6db9a3719937', N'SELECT top 10  h.PortOfUnlading,   Round(AVG(Cast(DATEDIFF(d, h.ArrivalDate, h.ReleaseDate)AS FLOAT)), 2) as AvgDaysArrivalToRelease from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ArrivalDate <> '''' and h.ReleaseDate <> '''' and h.PortOfUnlading <> '''' GROUP BY h.PortOfUnlading ORDER BY AvgDaysArrivalToRelease DESC', N'Arrival to Release by PortOfUnlading', N'This report evaluates port performance by displaying the ports of unlading with the longest average amount of days from the arrival date to the release date.', CAST(N'2016-02-18T13:06:17.120' AS DateTime), N'jmerwin', N'jmerwin', 0xCCCAFA75CEB42F4A77854F8A9382C5D5, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.117' AS DateTime), 305, N'04723bd2-33fc-48ce-868a-1edad44f333f', N'SELECT top 10  h.CarrierName,   Round(AVG(Cast(DATEDIFF(d, h.ExportDate, h.ArrivalDate)AS FLOAT)), 2) as AvgDaysExportToArrival from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ExportDate <> '''' and h.ArrivalDate <> '''' and h.CarrierName <> '''' GROUP BY h.CarrierName ORDER BY AvgDaysExportToArrival DESC ', N'Export To Arrival by Carrier', N'This report evaluates carrier performance by displaying the carriers with the longest average amount of days from the export date to the arrival date. ', CAST(N'2016-02-18T13:06:17.117' AS DateTime), N'jmerwin', N'jmerwin', 0x47CEDF1D04B72BAF54D4D35A37B94D2A, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.120' AS DateTime), 306, N'9cb72200-838c-4d2d-adc1-48b33d77fa41', N'SELECT top 10  h.PortOfUnlading,   Round(AVG(Cast(DATEDIFF(d, h.ArrivalDate, h.ImportDate)AS FLOAT)), 2)  as AvgDaysArrivalToImport from txdGVImportHeader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and h.ArrivalDate <> '''' and h.ImportDate <> '''' and h.PortOfUnlading <> '''' GROUP BY h.PortOfUnlading ORDER BY AvgDaysArrivalToImport DESC', N'Arrival to Import by PortOfUnlading', N'This report evaluates port performance by displaying the ports of unlading with the longest average amount of days from the arrival date to the import date. ', CAST(N'2016-02-18T13:06:17.120' AS DateTime), N'jmerwin', N'jmerwin', 0x42E22EB83576C97DBE0F47C529823A33, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.110' AS DateTime), 307, N'ee902ad6-5485-4c99-b547-e6c516fc9831', N'SELECT h.PartnerID  ,h.PortOfUnlading  ,datepart(year, h.ImportDate) AS ImportYear  ,CAST(SUM(d.EstBaseTotalLineAddlIndirectTaxAmt) AS NUMERIC(28, 2)) AS EstBaseTotalAddlIndirectTax  INTO #CurrentYear from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK)  ON h.entryguid = d.entryguid  AND h.partnerid = d.partnerid WHERE 1=1 AND h.PartnerID = @PartnerID  AND datepart(year, h.ImportDate) = DATEPART(year, GetDate()) GROUP BY h.PartnerID  ,h.PortOfUnlading  ,datepart(year, h.ImportDate)  SELECT h.PartnerID  ,h.PortOfUnlading  ,datepart(year, h.ImportDate) AS ImportYear  ,CAST(SUM(d.EstBaseTotalLineAddlIndirectTaxAmt) AS NUMERIC(28, 2)) AS EstBaseTotalAddlIndirectTax INTO #LastYear from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK)  ON h.entryguid = d.entryguid  AND h.partnerid = d.partnerid WHERE datepart(year, h.ImportDate) = DATEPART(year, dateadd(year, - 1, GetDate()))    and h.ImportDate <= (GETDATE()-365) GROUP BY h.PartnerID  ,h.PortOfUnlading  ,datepart(year, h.ImportDate)  SELECT TOP 10 h.PortOfUnlading  ,isnull(sum(h.EstBaseTotalAddlIndirectTax), 0) AS [@CurrentYear]  ,isnull(sum(h2.EstBaseTotalAddlIndirectTax), 0) AS [@LastYear] FROM #CurrentYear h LEFT JOIN #LastYear h2   ON h.PortOfUnlading = h2.PortOfUnlading  AND h.PartnerID = h2.PartnerID GROUP BY h.PortOfUnlading ORDER BY sum(h.EstBaseTotalAddlIndirectTax) DESC', N'Ports of Unlading by Other Indirect Tax - YoY', N'This comparison report shows the ports of unlading with the highest associated total line additional indirect tax paid on all declarations filed for the current year compared to the highest associated total line additional indirect tax paid on all declarations filed for the previous year.', CAST(N'2016-02-18T13:06:17.110' AS DateTime), N'jmerwin', N'jmerwin', 0xC4362BC7F605A731503C1210ABAE4A51, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.107' AS DateTime), 308, N'186b3586-0f2c-484d-b6b0-4eec317f5ff9', N'SELECT h.PartnerID  ,h.PortOfUnlading  ,datepart(year, h.ImportDate) AS ImportYear  ,CAST(SUM(d.EstBaseTotalLineExciseAmt) AS NUMERIC(28, 2)) AS EstBaseTotalExciseTax   INTO #CurrentYear from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK)  ON h.entryguid = d.entryguid  AND h.partnerid = d.partnerid WHERE 1=1 AND h.PartnerID = 2142  AND datepart(year, h.ImportDate) = DATEPART(year, GetDate()) GROUP BY h.PartnerID  ,h.PortOfUnlading  ,datepart(year, h.ImportDate)    SELECT h.PartnerID  ,h.PortOfUnlading  ,datepart(year, h.ImportDate) AS ImportYear  ,CAST(SUM(d.EstBaseTotalLineExciseAmt) AS NUMERIC(28, 2)) AS EstBaseTotalExciseTax   INTO #LastYear from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK)  ON h.entryguid = d.entryguid  AND h.partnerid = d.partnerid WHERE datepart(year, h.ImportDate) = DATEPART(year, dateadd(year, - 1, GetDate()))    and h.ImportDate <= (GETDATE()-365) GROUP BY h.PartnerID  ,h.PortOfUnlading  ,datepart(year, h.ImportDate)   SELECT TOP 10 h.PortOfUnlading  ,isnull(sum(h.EstBaseTotalExciseTax), 0) AS [@CurrentYear]  ,isnull(sum(h2.EstBaseTotalExciseTax), 0) AS [@LastYear] FROM #CurrentYear h LEFT JOIN #LastYear h2   ON h.PortOfUnlading = h2.PortOfUnlading  AND h.PartnerID = h2.PartnerID GROUP BY h.PortOfUnlading ORDER BY sum(h.EstBaseTotalExciseTax) DESC ', N'Ports of Unlading by Excise Tax - YoY', N'This comparison report shows the ports of unlading with the highest associated total line excise tax paid on all declarations filed for the current year compared to the highest associated total line excise tax paid on all declarations filed for the previous year.', CAST(N'2016-02-18T13:06:17.107' AS DateTime), N'jmerwin', N'jmerwin', 0x43F086C4F88253A59ABCD43BE4FC3AFF, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.103' AS DateTime), 309, N'a079500f-f9de-42cf-b39a-4e5ae88d7a0a', N'SELECT h.PartnerID  ,h.PortOfUnlading  ,datepart(year, h.ImportDate) AS ImportYear  ,CAST(SUM(d.EstBaseTotalLineVATAmt) AS NUMERIC(28, 2)) AS EstBaseTotalVAT INTO #CurrentYear from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK)  ON h.entryguid = d.entryguid  AND h.partnerid = d.partnerid WHERE 1=1 AND h.PartnerID = @PartnerID  AND datepart(year, h.ImportDate) = DATEPART(year, GetDate()) GROUP BY h.PartnerID  ,h.PortOfUnlading  ,datepart(year, h.ImportDate)  SELECT h.PartnerID  ,h.PortOfUnlading  ,datepart(year, h.ImportDate) AS ImportYear  ,CAST(SUM(d.EstBaseTotalLineVATAmt) AS NUMERIC(28, 2)) AS EstBaseTotalVAT INTO #LastYear from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK)  ON h.entryguid = d.entryguid  AND h.partnerid = d.partnerid WHERE datepart(year, h.ImportDate) = DATEPART(year, dateadd(year, - 1, GetDate()))    and h.ImportDate <= (GETDATE()-365) GROUP BY h.PartnerID  ,h.PortOfUnlading  ,datepart(year, h.ImportDate)  SELECT TOP 10 h.PortOfUnlading  ,isnull(sum(h.EstBaseTotalVAT), 0) AS [@CurrentYear]  ,isnull(sum(h2.EstBaseTotalVAT), 0) AS [@LastYear] FROM #CurrentYear h LEFT JOIN #LastYear h2   ON h.PortOfUnlading = h2.PortOfUnlading  AND h.PartnerID = h2.PartnerID GROUP BY h.PortOfUnlading ORDER BY sum(h.EstBaseTotalVAT) DESC', N'Ports of Unlading by VAT - YoY', N'This comparison report shows the ports of unlading with the highest associated total line VAT/GST paid on all declarations filed for the current year compared to the highest associated total line VAT/GST paid on all declarations filed for the previous year.', CAST(N'2016-02-18T13:06:17.103' AS DateTime), N'jmerwin', N'jmerwin', 0x5C136FC6FBBA72207F525C59B07CC5CA, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.090' AS DateTime), 310, N'45c21c7a-8069-4d4d-93d4-09c877874bf2', N'SELECT   h.PortOfUnlading,   CAST(SUM(d.EstBaseTotalLineAddlIndirectTaxAmt) as Numeric(28,2)) as [EstBaseTotalAddlIndirectTax (@CurrencyCode)],         COUNT(DISTINCT d.EntryGUID) AS DeclarationCount,  CAST(SUM(d.EstBaseTotalLineAddlIndirectTaxAmt)/COUNT(DISTINCT d.EntryGUID) as Numeric(28,2)) as [EstBaseAvgAddlIndirectTaxPerDeclaration (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID   GROUP BY h.PortOfUnlading ORDER BY SUM(d.EstBaseTotalLineAddlIndirectTaxAmt) DESC', N'All Ports of Unlading by Other Indirect Tax', N'This report shows all ports of unlading and the associated additional indirect tax on all declarations filed, volume of declarations, and the average additional indirect tax paid per declaration for each port of unlading.', CAST(N'2016-02-18T13:06:17.090' AS DateTime), N'jmerwin', N'jmerwin', 0x17A0077DE3F5A6DBFB4BFEC7E5ADD980, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.087' AS DateTime), 311, N'928afe9a-b9b1-4ab6-8d90-a72ddedb87fd', N'SELECT   h.PortOfUnlading,   CAST(SUM(d.EstBaseTotalLineExciseAmt) as Numeric(28,2)) as [EstBaseTotalExciseTax (@CurrencyCode)],        COUNT(DISTINCT d.EntryGUID) AS DeclarationCount,  CAST(SUM(d.EstBaseTotalLineExciseAmt)/COUNT(DISTINCT d.EntryGUID) as Numeric(28,2)) as [EstBaseAvgExcisePerDeclaration (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID   GROUP BY h.PortOfUnlading ORDER BY SUM(d.EstBaseTotalLineExciseAmt) DESC ', N'All Ports of Unlading by Excise Tax', N'This report shows all ports of unlading and the associated excise tax on all declarations filed, volume of declarations, and the average excise tax paid per declaration for each port of unlading.', CAST(N'2016-02-18T13:06:17.087' AS DateTime), N'jmerwin', N'jmerwin', 0x07F406A5D64E5EF624ACF928EA383292, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.083' AS DateTime), 312, N'63b2f6fa-9b20-44b5-981a-890cfcd79195', N'SELECT   h.PortOfUnlading,   CAST(SUM(d.EstBaseTotalLineVATAmt) as Numeric(28,2)) as [EstBaseTotalVAT (@CurrencyCode)],         COUNT(DISTINCT d.EntryGUID) AS DeclarationCount,  CAST(SUM(d.EstBaseTotalLineVATAmt)/COUNT(DISTINCT d.EntryGUID) as Numeric(28,2)) as [EstBaseAvgVATPerDeclaration (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID   GROUP BY h.PortOfUnlading  ORDER BY SUM(d.EstBaseTotalLineVATAmt) DESC', N'Top Ports of Unlading by VAT', N'This report shows all ports of unlading and the associated VAT/GST on all declarations filed, volume of declarations, and the average VAT/GST paid per declaration for each port of unlading. ', CAST(N'2016-02-18T13:06:17.083' AS DateTime), N'jmerwin', N'jmerwin', 0x5D35F7DDAB4686DD7F12CF7BDF467BFF, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.080' AS DateTime), 313, N'89768035-0e16-4deb-ace4-e6d7274b0981', N'SELECT top 10   h.PortOfUnlading,   CAST(SUM(d.EstBaseTotalLineVATAmt) as Numeric(28,2)) as [EstBaseTotalVAT (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID   GROUP BY h.PortOfUnlading  ORDER BY SUM(d.EstBaseTotalLineVATAmt) DESC', N'Top Ports of Unlading by VAT', N'This report shows the ports of unlading with the highest associated VAT/GST on all declarations filed.', CAST(N'2016-02-18T13:06:17.080' AS DateTime), N'jmerwin', N'jmerwin', 0x0264666B76865572FD5CD0B946717457, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.077' AS DateTime), 314, N'bf0f47ba-acc3-4640-94da-119174ae5030', N'SELECT top 10   h.PortOfUnlading,   CAST(SUM(d.EstBaseTotalLineAddlIndirectTaxAmt) as Numeric(28,2)) as [EstBaseTotalAddlIndirectTax (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID   GROUP BY h.PortOfUnlading ORDER BY SUM(d.EstBaseTotalLineAddlIndirectTaxAmt) DESC', N'Top Ports of Unlading by Other Indirect Tax', N'This report shows the ports of unlading with the highest associated other indirect tax on all declarations filed.', CAST(N'2016-02-18T13:06:17.077' AS DateTime), N'jmerwin', N'jmerwin', 0xC717CA4F4E9DF28392547BF9DD6C4AE1, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.077' AS DateTime), 315, N'ec9eee91-be6f-48d2-89f7-fd0e136790cf', N'SELECT top 10   h.PortOfUnlading,   CAST(SUM(d.EstBaseTotalLineExciseAmt) as Numeric(28,2)) as [EstBaseTotalExciseTax (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on   h.EntryGuid = d.EntryGuid and   h.PartnerID = d.PartnerID  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID   GROUP BY h.PortOfUnlading ORDER BY SUM(d.EstBaseTotalLineExciseAmt) DESC ', N'Top Ports of Unlading by Excise Tax', N'This report shows the ports of unlading with the highest associated excise tax on all declarations filed.', CAST(N'2016-02-18T13:06:17.077' AS DateTime), N'jmerwin', N'jmerwin', 0x7E5DA17626C21AB39AACFB2A3397CC64, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.063' AS DateTime), 316, N'4d1d74f7-d334-4236-86cf-9da032242bbd', N'SELECT TOP 10 PortOfUnlading  ,COUNT(DISTINCT DeclarationNum) AS DeclarationCount from txdgvimportheader h WITH (NOLOCK) WHERE 1=1 AND @IMPORTDATERANGE  AND PartnerID = @PartnerID GROUP BY PortOfUnlading ORDER BY COUNT(DISTINCT DeclarationNum) DESC ', N'Top Declaration Volume By Ports Of Unlading', N'This report shows the ports of unlading with the highest total number of declarations filed.', CAST(N'2016-02-18T13:06:17.063' AS DateTime), N'jmerwin', N'jmerwin', 0x70B92879EB20BBB9EB2230820B86FB76, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.063' AS DateTime), 317, N'83575c2e-2d90-49c5-a540-971e9bd9e12d', N'SELECT PortOfUnlading  ,COUNT(DISTINCT h.EntryGUID) AS DeclarationCount from txdgvimportheader h WITH (NOLOCK) WHERE 1=1 AND @IMPORTDATERANGE  AND PartnerID = @PartnerID GROUP BY PortOfUnlading ORDER BY DeclarationCount DESC ', N'All Declaration Volume By Ports Of Unlading', N'This report shows all ports of unlading and the total number of declarations filed. ', CAST(N'2016-02-18T13:06:17.063' AS DateTime), N'jmerwin', N'jmerwin', 0x0CE56068B02AFEC61D91C5D5752E18DC, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.067' AS DateTime), 318, N'07a892c1-2aeb-48d8-9c1c-af7b00a53c38', N'SELECT PartnerID  ,PortOfUnlading  ,datepart(year, ImportDate) AS ImportYear  ,COUNT(DISTINCT DeclarationNum) AS DeclarationCount INTO #CurrentYearPU from txdgvimportheader h WITH (NOLOCK) WHERE 1=1  AND PartnerID = @PartnerID  AND datepart(year, ImportDate) = DATEPART(year, GetDate()) GROUP BY PartnerID  ,PortOfUnlading  ,datepart(year, ImportDate)  SELECT PartnerID  ,PortOfUnlading  ,datepart(year, ImportDate) AS ImportYear  ,COUNT(DISTINCT DeclarationNum) AS DeclarationCount INTO #LastYearPU FROM txdGVImportHeader WHERE datepart(year, ImportDate) = DATEPART(year, dateadd(year, - 1, GetDate())) and ImportDate <= (GETDATE()-365) GROUP BY PartnerID  ,PortOfUnlading  ,datepart(year, ImportDate)  SELECT TOP 10 h.PortOfUnlading  ,isnull(sum(h.DeclarationCount), 0) AS [@CurrentYear]  ,isnull(sum(h2.DeclarationCount), 0) AS [@LastYear] FROM #CurrentYearPU h JOIN #LastYearPU h2 ON h.PortOfUnlading = h2.PortOfUnlading  AND h.PartnerID = h2.PartnerID GROUP BY h.PortOfUnlading ORDER BY sum(h.DeclarationCount) DESC ', N'Declaration Volume By Ports Of Unlading - YoY', N'This comparison report shows the ports of unlading and the total number of declarations for the current year compared to the total number of declarations for the previous year.', CAST(N'2016-02-18T13:06:17.067' AS DateTime), N'jmerwin', N'jmerwin', 0x2154863476B18C54BD3E837F2B4D161F, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.043' AS DateTime), 319, N'a3b1b883-2a58-4b5a-b325-95073e05defc', N'select   PartnerID, PortOfUnlading, datepart(year, ImportDate) as ImportYear, COUNT(DISTINCT DeclarationNum) AS DeclarationCount INTO #CurrentYearPU  from txdgvimportheader h WITH (NOLOCK) WHERE 1=1 AND PartnerID = @PartnerID and  datepart(year, ImportDate) =  DATEPART(year, GetDate())  group by PartnerID, PortOfUnlading, datepart(year, ImportDate)  select   PartnerID, PortOfUnlading, datepart(year, ImportDate) as ImportYear, COUNT(DISTINCT DeclarationNum) AS DeclarationCount INTO #LastYearPU  from txdGVImportHeader WHERE   datepart(year, ImportDate) =  DATEPART(year, dateadd(year, -1, GetDate())) and ImportDate <= (GETDATE()-365) group by PartnerID, PortOfUnlading, datepart(year, ImportDate)   SELECT TOP 10   h.PortOfUnlading,    isnull(sum(h.DeclarationCount), 0) as [@CurrentYear],  isnull(sum(h2.DeclarationCount), 0) as [@LastYear]  FROM #CurrentYearPU  h left join #LastYearPU  h2 on   h.PortOfUnlading = h2.PortOfUnlading and  h.PartnerID = h2.PartnerID Group By h.PortOfUnlading ORDER BY sum(h.DeclarationCount) DESC', N'Ports of Unlading By Declaration Volume - YoY', N'This comparison report shows the ports of unlading with the highest total number of associated declarations filed in the current year compared to the highest total number of associated declarations filed in the previous year.', CAST(N'2016-02-18T13:06:17.043' AS DateTime), N'jmerwin', N'jmerwin', 0x8CDDFC654483E4FF79A1BEF6442D3BC7, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.037' AS DateTime), 320, N'66bfdd71-93e6-44ce-93ae-47cfc025f442', N'SELECT top 10  h.PortOfUnlading,   CAST(SUM(h.EstBaseTotalDeclarationValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)],  CAST(SUM(h.EstBaseTotalDeclarationDuty) AS NUMERIC(28, 2)) as [EstBaseTotalDuty (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) WHERE 1=1 AND @IMPORTDATERANGE AND PartnerID = @PartnerID   GROUP BY h.PortOfUnlading ORDER BY SUM(h.EstBaseTotalDeclarationValue) DESC', N'Top Ports of Unlading: Value vs. Duty', N'This comparison report shows the ports of unlading with the highest associated total declaration value compared to the total duty paid on all declarations filed. This report is used to compare the amount of value imported relating to a port of unlading to the amount of duty paid for that port.', CAST(N'2016-02-18T13:06:17.037' AS DateTime), N'jmerwin', N'jmerwin', 0xA9EB88F7F74CDE94303B64D6517EDE20, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.037' AS DateTime), 321, N'bf11b0af-5f4b-485f-af5c-77422feec1d1', N'SELECT  h.PortOfUnlading,   CAST(SUM(h.EstBaseTotalDeclarationValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)],  CAST(SUM(h.EstBaseTotalDeclarationDuty) AS NUMERIC(28, 2)) as [EstBaseTotalDuty (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) WHERE 1=1 AND @IMPORTDATERANGE AND PartnerID = @PartnerID   GROUP BY h.PortOfUnlading ORDER BY SUM(h.EstBaseTotalDeclarationValue) DESC', N'All Ports of Unlading: Value vs. Duty', N'This comparison report shows all ports of unlading and the associated total declaration value compared to the total duty paid on all declarations filed. This report is used to compare the amount of value imported relating to a port of unlading to the amount of duty paid for that port.', CAST(N'2016-02-18T13:06:17.037' AS DateTime), N'jmerwin', N'jmerwin', 0xC843099DB96E6067DABD47D053C07545, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.040' AS DateTime), 322, N'6e4d365f-cbf1-4e9f-9ed8-c6df39a0e5d6', N'SELECT  PortOfUnlading,  COUNT(DISTINCT h.EntryGUID) AS DeclarationCount from txdgvimportheader h WITH (NOLOCK)  WHERE 1=1 AND @IMPORTDATERANGE AND PartnerID = @PartnerID  GROUP BY PortOfUnlading  ORDER BY DeclarationCount DESC', N'All Ports of Unlading by Declaration Volume', N'This report shows all ports of unlading and the total number of associated declarations filed.', CAST(N'2016-02-18T13:06:17.040' AS DateTime), N'jmerwin', N'jmerwin', 0x1D56BB2E1B42AB921F571A67B6B54E7A, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.030' AS DateTime), 323, N'5b73e37d-e1af-435d-9880-accdb0998e3b', N'select   PartnerID, PortOfUnlading, datepart(year, ImportDate) as ImportYear, CAST(SUM(EstBaseTotalDeclarationValue) as Numeric(28,2)) as EstBaseTotalDeclarationValue INTO #CurrentYear  from txdgvimportheader h WITH (NOLOCK) WHERE 1=1 AND PartnerID = @PartnerID and  datepart(year, ImportDate) =  DATEPART(year, GetDate())  group by PartnerID, PortOfUnlading, datepart(year, ImportDate)  select   PartnerID, PortOfUnlading, datepart(year, ImportDate) as ImportYear, CAST(SUM(EstBaseTotalDeclarationValue) as Numeric(28,2)) as EstBaseTotalDeclarationValue INTO #LastYear  from txdGVImportHeader  WHERE   datepart(year, ImportDate) =  DATEPART(year, dateadd(year, -1, GetDate()))  group by PartnerID, PortOfUnlading, datepart(year, ImportDate)   SELECT TOP 10   h.PortOfUnlading,    ISNULL(sum(h.EstBaseTotalDeclarationValue),0) as [@CurrentYear],  ISNULL(sum(h2.EstBaseTotalDeclarationValue),0) as [@LastYear] FROM #CurrentYear h join #LastYear h2 on   h.PortOfUnlading = h2.PortOfUnlading and  h.PartnerID = h2.PartnerID Group By h.PortOfUnlading ORDER BY sum(h.EstBaseTotalDeclarationValue) DESC', N'Ports of Unlading by Value - YoY', N'This comparison report shows the ports of unlading with the highest associated total declaration value on all declarations filed for the current year compared to the highest associated total declaration value on all declarations filed for the previous year. ', CAST(N'2016-02-18T13:06:17.030' AS DateTime), N'jmerwin', N'jmerwin', 0x34AE1E2868D59F8D761F3988D2A285EB, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.030' AS DateTime), 324, N'9fb2056c-bf01-418a-be00-b2ece29d2008', N'SELECT PartnerID  ,PortOfUnlading  ,datepart(year, ImportDate) AS ImportYear  ,CAST(SUM(EstBaseTotalDeclarationDuty) AS NUMERIC(28, 2)) AS EstBaseTotalDeclarationDuty INTO #CurrentYear from txdgvimportheader h WITH (NOLOCK) WHERE 1=1 AND PartnerID = @PartnerID  AND datepart(year, ImportDate) = DATEPART(year, GetDate()) GROUP BY PartnerID  ,PortOfUnlading  ,datepart(year, ImportDate)  SELECT PartnerID  ,PortOfUnlading  ,datepart(year, ImportDate) AS ImportYear  ,CAST(SUM(EstBaseTotalDeclarationDuty) AS NUMERIC(28, 2)) AS EstBaseTotalDeclarationDuty INTO #LastYear FROM txdGVImportHeader WHERE datepart(year, ImportDate) = DATEPART(year, dateadd(year, - 1, GetDate())) and ImportDate <= (GETDATE()-365) GROUP BY PartnerID  ,PortOfUnlading  ,datepart(year, ImportDate)  SELECT TOP 10 h.PortOfUnlading  ,isnull(sum(h.EstBaseTotalDeclarationDuty), 0) AS [@CurrentYear]  ,isnull(sum(h2.EstBaseTotalDeclarationDuty), 0) AS [@LastYear] FROM #CurrentYear h LEFT JOIN #LastYear h2   ON h.PortOfUnlading = h2.PortOfUnlading  AND h.PartnerID = h2.PartnerID GROUP BY h.PortOfUnlading ORDER BY sum(h.EstBaseTotalDeclarationDuty) DESC', N'Top Ports of Unlading by Duty - YoY', N'This comparison report shows the ports of unlading with the highest associated total duty paid on all declarations filed for the current year compared to the highest associated total duty paid on all declarations filed for the previous year. ', CAST(N'2016-02-18T13:06:17.030' AS DateTime), N'jmerwin', N'jmerwin', 0xA4854AC8AEAA202CFFEFD9B9888FA4FA, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.997' AS DateTime), 325, N'41b93f99-7fa9-47c7-a19c-3088d3ef2bbf', N'SELECT h.PortOfUnlading  ,CAST(SUM(h.EstBaseTotalDeclarationDuty) AS NUMERIC(28, 2)) as [EstBaseTotalDuty (@CurrencyCode)]         ,COUNT(DISTINCT h.EntryGUID) AS DeclarationCount  ,CAST(SUM(h.EstBaseTotalDeclarationDuty)/COUNT(DISTINCT  h.EntryGUID) as Numeric(28,2)) as [EstBaseAvgDutyPerDeclaration (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.PortOfUnlading ORDER BY SUM(h.EstBaseTotalDeclarationDuty) DESC', N'All Ports of Unlading by Duty', N'This report shows all ports of unlading and the associated total line duty paid on all declarations filed, volume of declarations, and the average duty paid per declaration for each port of unlading.', CAST(N'2016-02-18T13:06:16.997' AS DateTime), N'jmerwin', N'jmerwin', 0xFC3FF845A9E4C229C2E098EB040F06A7, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.987' AS DateTime), 326, N'bcbf28df-8ef1-4aaa-8a74-4df43f6e7aca', N'SELECT TOP 10 h.PortOfUnlading  ,CAST(SUM(h.EstBaseTotalDeclarationDuty) AS NUMERIC(28, 2)) as [EstBaseTotalDuty (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) WHERE 1=1 AND @IMPORTDATERANGE AND PartnerID = @PartnerID GROUP BY h.PortOfUnlading ORDER BY SUM(h.EstBaseTotalDeclarationDuty) DESC', N'Top Ports of Unlading by Duty', N'This report shows the ports of unlading with the highest associated total duty paid on all declarations filed.', CAST(N'2016-02-18T13:06:16.987' AS DateTime), N'jmerwin', N'jmerwin', 0xC5ECDD5A28BAD65D00A2B78ADCC0BF7D, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.983' AS DateTime), 327, N'4574f771-eea0-450b-8021-24866d37efe1', N'Select   h.PortOfUnlading,   CAST(SUM(d.EstBaseTotalLineValue * (ctr.MainPercent- ctr.PreferentialPercent)) as numeric (28,2)) as [EstBaseSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID   and d.AdValoremDutyRate = ctr.PreferentialPercent  and ctr.MainPercent > ctr.PreferentialPercent  and ctr.PreferentialPercent <>  -1 Group By h.PortOfUnlading ORDER BY [EstBaseSavings (@CurrencyCode)] desc', N'All Preferential Duty Savings By Port Of Unlading ', N'Pending: This report shows all ports of unlading where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported.', CAST(N'2016-02-18T13:06:16.983' AS DateTime), N'jmerwin', N'jmerwin', 0x711F1213A71B3F04588F08AB0B2F11C0, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.980' AS DateTime), 328, N'0d99ef44-ddee-45f9-810e-8b4d6e1ca3e7', N'select         h.PortOfUnlading,         CAST(SUM(d.EstBaseTotalLineValue * ((d.AdValoremDutyRate - d.ContentLowestPrefRate)))as numeric (28,2)) as [EstBasePotentialSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on          h.EntryGuid = d.EntryGuid and         h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE and         d.ContentLowestPrefRate <> -1 and d.AdValoremDutyRate > d.ContentLowestPrefRate and         d.ContentLowestPrefRateProgramID <>'''' and         d.PreferenceCode1 = '''' and         d.PreferenceCode2 = '''' and         d.AdValoremDutyRate <> d.ContentLowestPrefRate and          h.PartnerID = (select PartnerID from tmfDefaults) group by h.PortOfUnlading ORDER BY [EstBasePotentialSavings (@CurrencyCode)] desc', N'All Potential Preferential Rates by Port of Unlading', N'This report shows the difference between the duty rate paid by the client on a product and the preferential duty rate expected by Customs, multiplied by that product''s value. The duty rate paid is greater than the preferential rate associated with a potential FTA listed in Integration Point Global Trade Content. This report shows the results by port of unlading and the associated potential savings. ', CAST(N'2016-02-18T13:06:16.980' AS DateTime), N'jmerwin', N'jmerwin', 0xF12208AB1E1D6F94ADE49FA9C02ABBB6, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.973' AS DateTime), 329, N'2d423077-cd1b-474c-b733-6e8831fbdc7a', N'SELECT TOP 10   h.PortOfUnlading,   CAST(SUM(d.EstBaseTotalLineValue * (d.AdValoremDutyRate-ctr.MainPercent))AS numeric (28,2)) as [EstBasePotentialSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr WITH (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID   AND ctr.MainPercent < d.AdValoremDutyRate     AND ctr.MainPercent <> -1 GROUP BY h.PortOfUnlading ORDER BY [EstBasePotentialSavings (@CurrencyCode)] DESC', N'Duty Rate Exceeds Main Rate by Port of Unlading', N'Pending: This report shows the difference between the duty rate paid by the client on a product and the normal duty rate expected by Customs, multiplied by that product''s value. The duty rate paid is greater than the normal rate in Integration Point Global Trade Content. This report shows the results by top port of unlading and the associated overpaid duty. ', CAST(N'2016-02-18T13:06:16.973' AS DateTime), N'jmerwin', N'jmerwin', 0x4861DE00A0FA357D644143ACAA8D9D7A, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.970' AS DateTime), 330, N'147363b8-c88d-48d3-9b4b-842f12ac2076', N'select top 10         h.PortOfUnlading,         CAST(SUM(d.EstBaseTotalLineValue * ((d.AdValoremDutyRate - d.ContentLowestPrefRate)))as numeric (28,2)) as [EstBasePotentialSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on          h.EntryGuid = d.EntryGuid and         h.PartnerID = d.PartnerID WHERE 1=1 AND @IMPORTDATERANGE and         d.ContentLowestPrefRate <> -1 and d.AdValoremDutyRate > d.ContentLowestPrefRate and         d.ContentLowestPrefRateProgramID <>'''' and         d.PreferenceCode1 = '''' and         d.PreferenceCode2 = '''' and         d.AdValoremDutyRate <> d.ContentLowestPrefRate and          h.PartnerID = (select PartnerID from tmfDefaults) group by h.PortOfUnlading ORDER BY [EstBasePotentialSavings (@CurrencyCode)] desc', N'Top Potential Preferential Rates by Port of Unlading', N'This report shows the difference between the duty rate paid by the client on a product and the preferential duty rate expected by Customs, multiplied by that product''s value. The duty rate paid is greater than the preferential rate associated with a potential FTA listed in Integration Point Global Trade Content. This report shows the results by top ports of unlading and the associated potential savings. ', CAST(N'2016-02-18T13:06:16.970' AS DateTime), N'jmerwin', N'jmerwin', 0x8DDE2014A0C84D63500B920A9E6524D8, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.967' AS DateTime), 331, N'0ba4cc93-0d7b-466f-9526-e47283e96888', N'Select top 10   h.PortOfUnlading,   CAST(SUM(d.EstBaseTotalLineValue * (ctr.MainPercent- ctr.PreferentialPercent)) as numeric (28,2)) as [EstBaseSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID   and d.AdValoremDutyRate = ctr.PreferentialPercent  and ctr.MainPercent > ctr.PreferentialPercent  and ctr.PreferentialPercent <>  -1 Group By h.PortOfUnlading ORDER BY [EstBaseSavings (@CurrencyCode)] desc', N'Top Preferential Duty Savings by Port of Unlading ', N'Pending: This report shows the top ports of unlading where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported.', CAST(N'2016-02-18T13:06:16.967' AS DateTime), N'jmerwin', N'jmerwin', 0x03003B5B2F530203316C11BE9F742966, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.947' AS DateTime), 332, N'f5f15196-915f-419b-aa44-1b75312ef8eb', N'SELECT top 10  h.PortOfUnlading,   CAST(SUM(h.EstBaseTotalDeclarationValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)]  from txdgvimportheader h WITH (NOLOCK) WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID   GROUP BY h.PortOfUnlading ORDER BY SUM(h.EstBaseTotalDeclarationValue) DESC', N'Top Ports of Unlading by Value', N'This report shows the ports of unlading with the highest associated total declaration value on all declarations filed.', CAST(N'2016-02-18T13:06:16.947' AS DateTime), N'jmerwin', N'jmerwin', 0x7869FC0253A85BC4952A78A5FDCA1139, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.950' AS DateTime), 333, N'fd20ed2a-ec0d-4e17-af7f-f3a80db6e1e3', N'SELECT TOP 10  PortOfUnlading,  COUNT(DISTINCT h.EntryGUID) AS DeclarationCount from txdgvimportheader h WITH (NOLOCK) WHERE 1=1 AND @IMPORTDATERANGE AND PartnerID = @PartnerID  GROUP BY PortOfUnlading  ORDER BY COUNT(DISTINCT h.EntryGUID) DESC', N'Top Ports of Unlading by Declaration Volume', N'This report shows the ports of unlading with the highest total number of associated declarations filed.', CAST(N'2016-02-18T13:06:16.950' AS DateTime), N'jmerwin', N'jmerwin', 0xA128F413FF4858ECF502064808E31B89, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.947' AS DateTime), 334, N'c9abdb25-ce6a-43a4-a326-babbbe9c5420', N'SELECT   h.PortOfUnlading,   CAST(SUM(h.EstBaseTotalDeclarationValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)],   COUNT(DISTINCT h.EntryGUID) AS DeclarationCount,   CAST(SUM(h.EstBaseTotalDeclarationValue)/COUNT(DISTINCT h.EntryGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID   GROUP BY h.PortOfUnlading ORDER BY SUM(h.EstBaseTotalDeclarationValue) DESC', N'All Ports Of Unlading By Value', N'This report shows all ports of unlading and the associated total line value on all declarations filed, volume of declarations, and the average value per declaration for each port of unlading.', CAST(N'2016-02-18T13:06:16.947' AS DateTime), N'jmerwin', N'jmerwin', 0x90A19DA047A4312183A7B7B0DDF6F93E, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-08-09T14:03:30.330' AS DateTime), 335, N'915e53cf-6237-4ffd-b063-7dd7270069b3', N'SELECT CAST(DATEPART(MONTH, ImportDate)as varchar (2)) + ''-'' + RIGHT(CAST(DATEPART(YEAR, ImportDate) as varchar (4)),2) as ImportMonth, COUNT(DeclarationNum) as [Declaration Count] from txdGVImportHeader h WITH (NOLOCK) WHERE PartnerID = @PartnerID AND @TargetString GROUP BY YEAR(h.ImportDate), month(h.ImportDate) ORDER BY YEAR(h.ImportDate), month(h.ImportDate)	', N'2304AD8B-2381-4C8B-AD8E-D6657973C83E', N'Declaration Count by Month', CAST(N'2016-08-09T14:03:30.330' AS DateTime), N'6433dee3-705e-4c9c-9b14-0478f5e651cf', N'system', 0x2EE772AC48B74B7FF34DCBD2A9D0CFD3, N'ScoreCard', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-08-09T14:03:49.690' AS DateTime), 336, N'93a9d3ea-e8a4-4220-9895-83c864bc4ddc', N'SELECT CAST(DATEPART(MONTH, ImportDate)as varchar (2)) + ''-'' + RIGHT(CAST(DATEPART(YEAR, ImportDate) as varchar (4)),2) as ImportMonth, CAST(SUM(EstBaseTotalDeclarationValue) as Numeric(28,4)) as [Declaration Value] FROM txdGVImportHeader h WITH (NOLOCK) WHERE PartnerID = @PartnerID AND @TargetString GROUP BY YEAR(h.ImportDate), month(h.ImportDate) ORDER BY YEAR(h.ImportDate), month(h.ImportDate)	', N'2304AD8B-2381-4C8B-AD8E-D6657973C83E', N'Total Entered Value by Month', CAST(N'2016-08-09T14:03:49.690' AS DateTime), N'6433dee3-705e-4c9c-9b14-0478f5e651cf', N'system', 0xBE1596872335D30A44F27E89D0C24C11, N'ScoreCard', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-08-09T14:04:09.143' AS DateTime), 337, N'321d7b78-884b-4bd8-ab2f-f5bf9137aff6', N'SELECT CAST(DATEPART(MONTH, ImportDate)as varchar (2)) + ''-'' + RIGHT(CAST(DATEPART(YEAR, ImportDate) as varchar (4)),2) as ImportMonth, CAST(SUM(EstBaseTotalDeclarationDuty) as Numeric(28,4)) as [Declaration Value] FROM txdGVImportHeader h WITH (NOLOCK) WHERE PartnerID = @PartnerID AND @TargetString GROUP BY YEAR(h.ImportDate), month(h.ImportDate) ORDER BY YEAR(h.ImportDate), month(h.ImportDate)	', N'2304AD8B-2381-4C8B-AD8E-D6657973C83E', N'Total Duty Paid by Month', CAST(N'2016-08-09T14:04:09.143' AS DateTime), N'6433dee3-705e-4c9c-9b14-0478f5e651cf', N'system', 0x89FC2BF81D3161CFB84528FBB53C05EF, N'ScoreCard', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-08-09T14:04:25.893' AS DateTime), 338, N'b5f5ec13-f8af-4b90-9f92-236d9ad151a2', N'SELECT CAST(DATEPART(MONTH, ImportDate)as varchar (2)) + ''-'' + RIGHT(CAST(DATEPART(YEAR, ImportDate) as varchar (4)),2) as ImportMonth, CAST((SUM(d.AdValoremDutyRate)/COUNT(d.LineGuid) * 100) as numeric(28,3)) as [Declaration Value] FROM txdGVImportHeader h WITH (NOLOCK) JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID WHERE h.PartnerID = @PartnerID AND @TargetString GROUP BY YEAR(h.ImportDate), month(h.ImportDate) ORDER BY YEAR(h.ImportDate), month(h.ImportDate)	', N'2304AD8B-2381-4C8B-AD8E-D6657973C83E', N'Average Monthly Duty Rate', CAST(N'2016-08-09T14:04:25.893' AS DateTime), N'6433dee3-705e-4c9c-9b14-0478f5e651cf', N'system', 0x833032388AA0B208672E1993527CEF87, N'ScoreCard', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.203' AS DateTime), 339, N'9b5c18d7-ef9a-465a-b613-39ff989f450a', N'SELECT PortOfFiling, COUNT(Distinct h.EntryGUID) as [Declaration Count],  CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as [EstBaseTotalValue (@CurrencyCode)] FROM txdGVImportHeader h WITH (NOLOCK)  JOIN txdGVImportDetail d WITH (NOLOCK) ON d.PartnerID = h.PartnerID AND d.EntryGUID = h.EntryGUID WHERE 1=1  AND ImportCountry = ''US'' AND ( h.ImportDate >= CONVERT(DATE,DATEADD(YEAR, -1, GETDATE())) ) AND h.PartnerID = @PartnerID GROUP BY PortOfFiling ORDER BY count(distinct h.entryguid) desc', N'Potential Zone Ports', N'JHM Test', CAST(N'2017-10-30T10:25:40.663' AS DateTime), N'jmerwin', N'jmerwin', 0x61CB06B7BBA1C08A519C3716D7953EBD, N'GTV Report', N'17.3', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.203' AS DateTime), 340, N'97d25175-0853-4932-ae54-a1167f67c48e', N'SELECT COUNT(Distinct h.EntryGUID),  CAST(SUM(h.EstBaseTotalDeclarationValue) as Numeric(28,2)), CAST(SUM(h.EstBaseTotalDeclarationDuty) as Numeric(28,2)), SUM(CASE WHEN h.EstBaseTotalDeclarationValue * .003464 < 25 THEN 25   WHEN h.EstBaseTotalDeclarationValue * .003464 > 485 THEN 485  ELSE h.EstBaseTotalDeclarationValue * .003464 END) as TotalMPF FROM txdGVImportHeader h WITH (NOLOCK) WHERE 1=1 AND ( h.ImportDate >= CONVERT(DATE,DATEADD(YEAR, -1, GETDATE())) ) AND ImportCountry = ''US''  AND h.PartnerID = @PartnerID', N'Zone ROI Calculator', N'JHM Test', CAST(N'2017-10-30T10:25:40.663' AS DateTime), N'jmerwin', N'jmerwin', 0xE03955BC49D12051F6F49CFAE0E1CC92, N'GTV Report', N'17.3', N'N', N'N')
, (4000, CAST(N'2016-04-20T14:28:09.690' AS DateTime), 341, N'f0ebbc06-4abc-4d32-a445-9a6b7658b793', N'SELECT h.ExportCountry
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(USD)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(USD)]
	,COUNT(DISTINCT h.ExportGUID) AS TotalShipment
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(DISTINCT h.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(USD)]
FROM txdGVExportHeader h WITH (NOLOCK)
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.ExportCountry
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Shipment Charges by Export Country', N'This report shows all countries of export and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each country of export. ', CAST(N'2017-10-30T10:25:40.663' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xAC4D4F2C6F02F5DDA1031D8AF0FE7E21, N'GTV Report', N'17.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-20T14:28:09.690' AS DateTime), 342, N'f0ebbc06-4abc-4d32-a445-9a6b7658b793', N'SELECT h.ExportCountry
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(USD)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(USD)]
	,COUNT(DISTINCT h.ExportGUID) AS TotalShipment
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(DISTINCT h.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(USD)]
FROM txdGVExportHeader h WITH (NOLOCK)
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.ExportCountry
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Shipment Charges by Export Country', N'This report shows all countries of export and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each country of export. ', CAST(N'2016-04-20T14:28:09.690' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xAC4D4F2C6F02F5DDA1031D8AF0FE7E21, N'GTV Report', N'17.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-08-15T09:29:37.373' AS DateTime), 343, N'24b1857f-0ccf-438b-8f3a-7efc3449dcd3', N'select        h.PartnerID, d.HSNum, datepart(year, h.ImportDate) as ImportYear, CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as EstBaseTotalLineValue  INTO #CurrentYear  from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on       h.EntryGuid = d.EntryGuid and        h.PartnerID = d.PartnerID WHERE 1=1 AND h.PartnerID = @PartnerID and       datepart(year, ImportDate) =  DATEPART(year, GetDate())  group by h.PartnerID, d.HSNum, datepart(year, h.ImportDate)  select        h.PartnerID, d.HSNum, datepart(year, h.ImportDate) as ImportYear, CAST(SUM(d.EstBaseTotalLineValue) as Numeric(28,2)) as EstBaseTotalLineValue  INTO #LastYear  from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on       h.EntryGuid = d.EntryGuid and        h.PartnerID = d.PartnerID WHERE        datepart(year, ImportDate) =  DATEPART(year, dateadd(year, -1, GetDate())) and ImportDate <= (GETDATE()-365) group by h.PartnerID, d.HSNum, datepart(year, h.ImportDate)   SELECT TOP 10        h.HSNum         isnull(sum(h.EstBaseTotalLineValue), 0) as [@CurrentYear],       isnull(sum(h2.EstBaseTotalLineValue), 0) as [@LastYear] FROM #CurrentYear h left join #LastYear h2 on        h.HSnum = h2.HSnum and       h.PartnerID = h2.PartnerID Group By h.HSnum ORDER BY sum(h.EstBaseTotalLineValue) DESC', N'HS Numbers by Import Value - YoY', N'This comparison report shows the HS Numbers with the highest associated total line value on all declarations filed for the current year compared to the highest associated total line value on all declarations filed for the previous year.', CAST(N'2017-10-30T10:25:40.663' AS DateTime), N'6433dee3-705e-4c9c-9b14-0478f5e651cf', N'', 0xAD1961C1C86ADEB936DBF7F24B28332D, N'GTV Report', N'17.3', N'N', N'N')
, (4000, CAST(N'2016-04-20T17:15:17.730' AS DateTime), 344, N'16905564-be14-4bc1-974e-b8749693ed81', N'SELECT  h.CarrierName,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.CarrierName ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Shipment Charges By Carrier', N'', CAST(N'2017-10-30T10:25:40.663' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x0304736AE26CCB9A996D5F8705995E4A, N'GTV Report', N'17.3', N'N', N'N')
, (4000, CAST(N'2018-01-22T10:00:38.073' AS DateTime), 345, N'16905564-be14-4bc1-974e-b8749693ed81', N'SELECT h.CarrierName
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(@CurrencyCode)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
LEFT JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGuid = d.ExportGUID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.CarrierName
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Shipment Charges By Carrier', N'This report shows all carriers and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each carrier. ', CAST(N'2018-01-22T10:00:38.073' AS DateTime), N'180FE977-33AD-41B4-BA11-C09C53553E60', N'', 0x5B3D41C10706FB0941A51957C6BCE467, N'GTV Report', N'17.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-20T17:17:53.133' AS DateTime), 346, N'7333a4b9-cbca-489d-a267-a1939a0cdf2a', N'SELECT  h.ForwarderCompanyName,   CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) as [EstBaseTotalShipmentCharges(@CurrencyCode)],  CAST(SUM(h.EstBaseTotalShipmentValue) as Numeric(28,2)) as [EstBaseTotalShipmentValue(@CurrencyCode)],   COUNT(d.ExportDetailGUID) AS TotalShipments,   CAST(SUM(h.EstBaseTotalShipmentValue)/COUNT(d.ExportDetailGUID) as Numeric(28,2)) as [EstBaseAvgValuePerDeclaration(@CurrencyCode)] from txdGVExportHeader h WITH (NOLOCK) WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID GROUP BY h.ForwarderCompanyName ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) as Numeric(28,2)) DESC', N'All Shipment Charges by Forwarder', N'This report shows all forwarders and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each forwarder. ', CAST(N'2017-10-30T10:25:40.663' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x54A151E095A420A56A68F3FBDEA3B926, N'GTV Report', N'17.3', N'N', N'N')
, (4000, CAST(N'2016-04-20T17:22:55.517' AS DateTime), 347, N'159b1264-31bc-44f0-bcb4-cd926be09a42', N'SELECT h.ImportCountry
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(@CurrencyCode)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.ImportCountry
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC
', N'All Shipment Charges by Import Country', N'This report shows all countries of import and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each country of import. ', CAST(N'2017-10-30T10:25:40.663' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x1B29CB804FD060A6D4B39BF95F1A152B, N'GTV Report', N'17.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-20T17:26:35.527' AS DateTime), 348, N'f85759e1-123b-43ba-8396-353025fe340e', N'SELECT h.PortOfUnlading
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(@CurrencyCode)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.PortOfUnlading
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Shipment Charges by Port of Unlading', N'This report shows all ports of unlading and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each port of unlading. ', CAST(N'2017-10-30T10:25:40.663' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x828D63618632CAB7630BCE035F311ACB, N'GTV Report', N'17.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-20T17:24:51.577' AS DateTime), 349, N'c98876cf-d1a0-440f-a52f-238424ac5fb2', N'SELECT h.PortOfLading
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(@CurrencyCode)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.PortOfLading
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Shipment Charges by Port of Lading', N'This report shows all ports of lading and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each port of lading. ', CAST(N'2017-10-30T10:25:40.663' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0xC34EBB37506782B4B45D05D0EFBCBFA8, N'GTV Report', N'17.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-20T17:24:01.620' AS DateTime), 350, N'78688e01-0328-4b68-ad4c-cfb86d5cf648', N'SELECT h.ModeOfTransport
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(@CurrencyCode)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.ModeOfTransport
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Shipment Charges by Mode of Transport', N'This report shows all modes of transport and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each mode of transport. ', CAST(N'2017-10-30T10:25:40.663' AS DateTime), N'BD293BC8-8141-4F09-A0A5-2CD50CD0E763', N'', 0x5732B7B9DB78845EB9754F9DE1B11454, N'GTV Report', N'17.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-01-22T10:02:29.487' AS DateTime), 351, N'16905564-be14-4bc1-974e-b8749693ed81', N'SELECT h.CarrierName
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(@CurrencyCode)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGuid = d.ExportGUID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.CarrierName
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Shipment Charges By Carrier', N'This report shows all carriers and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each carrier. ', CAST(N'2018-01-22T10:02:29.487' AS DateTime), N'180FE977-33AD-41B4-BA11-C09C53553E60', N'', 0x2FBBFE276D44FE60ACB159A11590986A, N'GTV Report', N'17.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-01-22T10:04:08.777' AS DateTime), 352, N'7333a4b9-cbca-489d-a267-a1939a0cdf2a', N'SELECT h.ForwarderCompanyName
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(@CurrencyCode)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGuid = d.ExportGUID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.ForwarderCompanyName
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Shipment Charges by Forwarder', N'This report shows all forwarders and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each forwarder. ', CAST(N'2018-01-22T10:04:08.777' AS DateTime), N'180FE977-33AD-41B4-BA11-C09C53553E60', N'', 0x79B736BCA14D84C6955150B7E1807456, N'GTV Report', N'17.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-01-22T10:05:17.370' AS DateTime), 353, N'159b1264-31bc-44f0-bcb4-cd926be09a42', N'SELECT h.ImportCountry
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(@CurrencyCode)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGuid = d.ExportGUID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.ImportCountry
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Shipment Charges by Import Country', N'This report shows all countries of import and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each country of import. ', CAST(N'2018-01-22T10:05:17.370' AS DateTime), N'180FE977-33AD-41B4-BA11-C09C53553E60', N'', 0x18F32F2EFA3DB473058259D50302700E, N'GTV Report', N'17.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-01-22T10:09:17.603' AS DateTime), 354, N'78688e01-0328-4b68-ad4c-cfb86d5cf648', N'SELECT h.ModeOfTransport
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(@CurrencyCode)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGuid = d.ExportGUID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.ModeOfTransport
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Shipment Charges by Mode of Transport', N'This report shows all modes of transport and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each mode of transport. ', CAST(N'2018-01-22T10:09:17.603' AS DateTime), N'180FE977-33AD-41B4-BA11-C09C53553E60', N'', 0x3C8EC3771CC0DBA262124A2BC28056F5, N'GTV Report', N'17.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-01-22T10:07:25.100' AS DateTime), 355, N'c98876cf-d1a0-440f-a52f-238424ac5fb2', N'SELECT h.PortOfLading
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(@CurrencyCode)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGuid = d.ExportGUID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.PortOfLading
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Shipment Charges by Port of Lading', N'This report shows all ports of lading and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each port of lading. ', CAST(N'2018-01-22T10:07:25.100' AS DateTime), N'180FE977-33AD-41B4-BA11-C09C53553E60', N'', 0x6B71CDD6407AF80BB3633B447C124838, N'GTV Report', N'17.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-01-22T10:06:01.090' AS DateTime), 356, N'f85759e1-123b-43ba-8396-353025fe340e', N'SELECT h.PortOfUnlading
	,CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentCharges(@CurrencyCode)]
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(d.ExportDetailGUID) AS TotalShipments
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(d.ExportDetailGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
JOIN txdGVExportDetail d WITH (NOLOCK) ON h.ExportGuid = d.ExportGUID
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY h.PortOfUnlading
ORDER BY CAST(SUM(h.EstBaseTotalShipmentCharges) AS NUMERIC(28, 2)) DESC', N'All Shipment Charges by Port of Unlading', N'This report shows all ports of unlading and the associated total shipment charges on all shipments filed, the count of shipments, and the average charge incurred per shipment for each port of unlading. ', CAST(N'2018-01-22T10:06:01.090' AS DateTime), N'180FE977-33AD-41B4-BA11-C09C53553E60', N'', 0x77BC4CA88C454F5386EC7C22AA07DDA1, N'GTV Report', N'17.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.333' AS DateTime), 357, N'3182d74e-5fc4-405a-8ecd-49ef6be6983e', N'SELECT        h.PartnerID, datepart(month, max(h.ExportDate)) as ExportMonth,     CAST(SUM(h.EstBaseForwardingFees) as Numeric(28,2)) as Fees INTO #YTDForwardingFees from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND PartnerID = @PartnerID and datepart(year, h.ExportDate) = DATEPART(year, GetDate()) GROUP BY h.PartnerID, YEAR(h.ExportDate), month(h.ExportDate)  ORDER BY YEAR(h.ExportDate), month(h.ExportDate)   SELECT        h.PartnerID, datepart(month, max(h.ExportDate)) as ExportMonth,        CAST(SUM(h.EstBaseForwardingFees) as Numeric(28,2)) as Fees INTO #YTDForwardingFees2 from txdGVExportHeader h WITH (NOLOCK)  WHERE datepart(year, h.ExportDate) = DATEPART(year, dateadd(year, -1, GetDate())) and ExportDate <= (GETDATE()-365) GROUP BY h.PartnerID, YEAR(h.ExportDate), month(h.ExportDate)  ORDER BY YEAR(h.ExportDate), month(h.ExportDate)   SELECT       b.ExportMonth,        ISNULL((             select sum(a.Fees)              FROM #YTDForwardingFees a             where                         a.ExportMonth <= b.ExportMonth and                          a.PartnerID = b.PartnerID       ),0) as [@CurrentYear],       ISNULL((             select sum(c.Charges)              FROM #YTDForwardingFees2 c             where                         c.ExportMonth <= b.ExportMonth and                         c.PartnerID = b.PartnerID       ),0) as [@LastYear] from #YTDForwardingFees b where b.PartnerID = @PartnerID ', N'Forwarding Fees YTD - YoY', N'', CAST(N'2018-02-08T08:17:41.237' AS DateTime), N'jmerwin', N'jmerwin', 0x5E30DE8157066D917EE77C80C215578F, N'GTV Report', N'17.4', N'N', N'N')
, (4000, CAST(N'2016-05-09T12:15:09.257' AS DateTime), 358, N'66e79aff-3abf-4f7b-9631-0b61160340de', N'SELECT h.ForwarderCompanyName
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(h.ExportGUID) AS RoutedExportCount
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(h.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND h.RoutedExportFlag = ''Y''
GROUP BY h.ForwarderCompanyName
ORDER BY count(h.ExportGuid) DESC', N'All Routed Export Forwaders', N'This report shows how many routed exports are done by forwarder. ', CAST(N'2018-02-08T08:17:41.237' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xE72271E756A8FEB5FECD38D947EFE6B7, N'GTV Report', N'17.4', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.390' AS DateTime), 359, N'42714a30-9c2b-46b4-8f24-7ad7d29b11b7', N'select   PartnerID, h.CarrierName, datepart(year, ExportDate) as ExportYear, COUNT(DISTINCT ExportGUID) AS NumberOfEntries INTO #CurrentYear  from txdGVExportHeader h WITH (NOLOCK) WHERE 1=1 AND @EXPORTDATERANGE AND PartnerID = @PartnerID and  datepart(year, ExportDate) =  DATEPART(year, GetDate()) and RoutedExportFlag = ''Y'' group by PartnerID, CarrierName, datepart(year, ExportDate)  select   PartnerID, h.CarrierName, datepart(year, ExportDate) as ExportYear, COUNT(DISTINCT ExportGUID) AS NumberOfEntries INTO #LastYear  from txdGVExportHeader h WHERE   datepart(year, ExportDate) =  DATEPART(year, dateadd(year, -1, GetDate())) and ExportDate <= (GETDATE()-365) and RoutedExportFlag = ''Y'' group by PartnerID, CarrierName, datepart(year, ExportDate)   SELECT TOP 10   h.CarrierName,    isnull(sum(h.NumberOfEntries), 0) as [@CurrentYear],  isnull(sum(h2.NumberOfEntries), 0) as [@LastYear]  FROM #CurrentYear h left join #LastYear h2 on   h.CarrierName = h2.CarrierName and  h.PartnerID = h2.PartnerID Group By h.CarrierName ORDER BY sum(h.NumberOfEntries) DESC', N'Routed Shipments by Carier - YoY', N'This comparison report shows the carriers with the highest associated total count on all routed shipments for the current year compared to the highest associated total count on all shipments for the previous year. ', CAST(N'2018-02-08T08:17:41.237' AS DateTime), N'jmerwin', N'jmerwin', 0x4FD8B1A08D10EE28F7C981BB901D75F0, N'GTV Report', N'17.4', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.383' AS DateTime), 360, N'6c2d8798-7c05-41c8-bc50-d9e9e595e993', N'SELECT top 10   d.ECNNum,   Count(h.ExportGuid) as  RoutedExportCount from txdGVExportHeader h WITH (NOLOCK)  JOIN txdGVExportDetail d WITH (NOLOCK) ON  h.ExportGuid = d.ExportGUID AND  h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID AND h.RoutedExportFlag = ''Y'' Group By d.ECNNum ORDER BY Count(h.ExportGuid) DESC', N'Top Routed ECN Numers', N'This report shows the top ECN numbers in routed shipments. ', CAST(N'2018-02-08T08:17:41.237' AS DateTime), N'jmerwin', N'jmerwin', 0xB57588448051FFDCCD06746B749C2039, N'GTV Report', N'17.4', N'N', N'N')
, (4000, CAST(N'2018-06-22T13:04:57.110' AS DateTime), 361, N'65624540-7e40-4a5f-870e-487c4cb16e9b', N'SELECT count(*) AS [Balanced Parts] , (SELECT COUNT (*) FROM TXDINVBALRECON AS [TotalProducts]) AS [Total Products], CAST ((CAST(COUNT (*) AS numeric(16,4))  / CAST((SELECT COUNT (*) FROM TXDINVBALRECON AS [TOTAL PRODUCTS]) AS numeric(16,4))) AS NUMERIC(16,4)) AS [Balance Rate]  FROM  (
SELECT * FROM (
          SELECT  
                                 @PartnerID AS Partnerid,
                                 '''' AS UserName,
                                 GetDate() AS Effdate,
                                 ProductTypeCode, 
                                 IMH.ProductNum, 
                                 MAX(TxnQtyUom) as TxnQtyUom, 
                                 SUM(FifoReceiptQty) as FifoReceiptQty, 
          SUM(PositiveStagingQty) AS PositiveStagingQty,
                                 SUM(NegativeStagingQty)  AS NegativeStagingQty ,
                                 SUM(PositiveFIFOQty) AS PositiveFIFOQty,
                                 SUM(NegativeFIFOQty) AS NegativeFIFOQty,
          SUM(ExportsPreProcessedQty) as  ExportsPreProcessedQty, 
                                 SUM(PreProcessedQty) AS PreProcessedQty,
          SUM(PendingQty) as PendingPCQty,
                                 SUM(PendingIMQty) AS PendingIMQty,
                                 SUM(IssuedPCQty) as IssuedPCQty, 
                                 sum(IssuedIMQty) as IssuedIMQty, 
                                 SUM(ScrapHoldQty) as ScrapHoldQty,
          ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) as IPBalance,
                                 SUM(ImQty) as ImQty,
                                 ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) - SUM(ImQty) as ImComparative,
                                 MAX(TxnDate) AS txndate,
                                 MAX(IMH.value) AS Value,
                                 (ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2)) * MAX(IMH.value) AS [IP Balance Total Value],
                                 SUM(ImQty) * MAX(IMH.value) AS [ERP Balance Total Value],
                                 (ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) - SUM(ImQty)) * MAX(IMH.value) AS [Comparative Total Value]
                               FROM
         (
--fncInsertFIFOReceiptQty
SELECT FR.ProductNum, IM.ProductTypeCode, MAX(FR.TxnQtyUom) AS TxnQtyUom , SUM(FR.TxnQty) AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 
0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty,  0 AS 
 IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdFifoReceipt FR (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = FR.productnum AND IM.partnerid = FR.partnerid
WHERE  FR.PartnerID = @PartnerID AND  FR.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY FR.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertPositiveStagingQty
SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, SUM(ABS(SFP.TxnQty)) AS PositiveStagingQty,
0 AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 0 AS IssuedPCQty,
0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM ttdStagingFifoProcessing SFP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
WHERE SFP.TxnCode IN (''RPPC'',''APPC'',''INPC'',''XNPC'', ''RPIM'',''APIM'',''INIM'',''XNIM'') AND 
SFP.PartnerID = @PartnerID AND  SFP.Effdate <= (select  max(effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY SFP.ProductNum, IM.ProductTypeCode
            
UNION ALL

--fncInsertNegativeStagingQty
SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
SUM(ABS(SFP.TxnQty)) AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty,
0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM ttdStagingFifoProcessing SFP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
WHERE  SFP.TxnCode IN (''SPPC'',''IPPC'',''XPPC'',''RNPC'',''ANPC'', ''SPIM'',''IPIM'',''XPIM'',''RNIM'',''ANIM'') 
AND SFP.PartnerID = @PartnerID AND  SFP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY SFP.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertPendingQty
SELECT  PC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
    0 AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 
    SUM(PC.TxnQty) AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty 
                FROM txdPendingPC PC WITH (nolock)
                JOIN tmdItemMaster IM (nolock)
ON IM.productnum = PC.productnum AND IM.partnerid = PC.partnerid
WHERE PC.PartnerID = @PartnerID AND  PC.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY PC.ProductNum, IM.ProductTypeCode

UNION ALL
--fncInsertPendingIMQty

SELECT  PIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty,0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 
0 AS PendingQty,0 AS IssuedPCQty,  0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate,Sum(PIM.TxnQty) AS PendingIMQty
FROM txdPendingIM PIM (nolock)
JOIN tmdItemMaster IM (nolock)
ON PIM.productnum = IM.productnum AND PIM.partnerid = IM.partnerid
WHERE 
PIM.PartnerID = @PartnerID AND  txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY PIM.ProductNum, IM.ProductTypeCode
            


UNION ALL

--fncInsertIssuedPCQty
SELECT  IPC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
SUM(IPC.TxnQty) AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdIssuedPC IPC WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IPC.productnum = IM.productnum AND IPC.partnerid = IM.partnerid
WHERE IPC.PartnerID = @PartnerID AND  IPC.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY IPC.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertIssuedIMQty
SELECT  IIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
0 AS IssuedPCQty, SUM(IIM.TxnQty) AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdIssuedIM IIM WITH (nolock)
  JOIN tmdItemMaster IM (nolock)
ON IIM.productnum = IM.productnum AND IIM.partnerid = IM.partnerid
WHERE IIM.PartnerID = @PartnerID AND  IIM.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY IIM.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertScrapHoldQty
SELECT  SH.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, SUM(SH.TxnQty) AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdScrapHold SH WITH (nolock) 
JOIN tmdItemMaster IM (nolock)
ON SH.productnum = IM.productnum AND SH.partnerid = IM.partnerid
WHERE SH.PartnerID = @PartnerID AND  SH.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY SH.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertInvBalReconQty
SELECT  IR.ProductNum, IM.ProductTypeCode, MAX(IR.TxnQtyUom), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, SUM(IR.TxnQty) AS ImQty, 0 AS ImComparative, MAX(IR.txndate) AS txndate, 0 AS PendingIMQty 
 FROM txdInvBalRecon IR (nolock)
JOIN tmdItemMaster IM (nolock)
ON IR.productnum = IM.productnum AND IR.partnerid = IM.partnerid
WHERE IR.PartnerID = @PartnerID AND  IR.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY IR.ProductNum, IM.ProductTypeCode

UNION ALL
--fncInsertExportsPreProcessedQty
SELECT EPP.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty,
SUM(ABS(EPP.TxnQty)) as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,  0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty,
  0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty 
FROM txdExportsPreProcessed EPP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON EPP.productnum = IM.productnum AND EPP.partnerid = IM.partnerid
WHERE EPP.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
AND EPP.PartnerID = @PartnerID AND  EPP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY EPP.ProductNum, IM.ProductTypeCode

union all
          
--fncInsertPreProcessedTxns
SELECT PPT.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS 
NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty , SUM(ABS(TxnQty)) AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty  
 FROM txdPreProcessedTxns PPT WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON PPT.productnum = IM.productnum AND PPT.partnerid = IM.partnerid
WHERE PPT.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
AND PPT.PartnerID = @PartnerID AND  PPT.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY PPT.ProductNum, IM.ProductTypeCode
  
  union all         
  
--fncInsertPositiveFIFOTxns

SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS
NegativeStagingQty, SUM(ABS(FP.TxnQty)) as PositiveFIFOQty, 0 as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdFIFOProcessing FP (NOLOCK)
JOIN tmdItemMaster IM (nolock)
ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid 
WHERE TxnCode IN ( ''RPPC'',''APPC'',''INPC'',''XNPC'',''RPIM'',''APIM'',''INIM'',''XNIM'')
AND FP.PartnerID = @PartnerID AND  FP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
AND FP.FIFOFlag = ''N'' 
GROUP BY FP.ProductNum, IM.ProductTypeCode

  union all     
  
--fncInsertNegativeFIFOTxns

SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 as PositiveFIFOQty, SUM(ABS(FP.TxnQty)) as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty,
  0 AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdFIFOProcessing FP (NOLOCK) 
  JOIN tmdItemMaster IM (nolock)
ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid 
WHERE FP.TxnCode IN ( ''SPPC'',''ANPC'',''IPPC'',''XPPC'',''RNIM'',''ANIM'',''IPIM'',''XPIM'')
AND FP.PartnerID = @PartnerID AND  FP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
AND FP.FIFOFlag = ''N'' 
GROUP BY FP.ProductNum, IM.ProductTypeCode

) ttdTempComponentBalanceAuditIM
JOIN tmdItemMasterHTSValues IMH (nolock)
ON IMH.productnum = ttdTempComponentBalanceAuditIM.productnum AND IMH.partnerid = 112683 GROUP BY IMH.ProductNum, ProductTypeCode)n
WHERE ABS(ImComparative) = 0

UNION ALL

SELECT * FROM (
          SELECT  
                                 @PartnerID AS Partnerid,
                                 '''' AS UserName,
                                 GetDate() AS Effdate,
                                 ProductTypeCode, 
                                 IMH.ProductNum, 
                                 MAX(TxnQtyUom) as TxnQtyUom, 
                                 SUM(FifoReceiptQty) as FifoReceiptQty, 
          SUM(PositiveStagingQty) AS PositiveStagingQty,
                                 SUM(NegativeStagingQty)  AS NegativeStagingQty ,
                                 SUM(PositiveFIFOQty) AS PositiveFIFOQty,
                                 SUM(NegativeFIFOQty) AS NegativeFIFOQty,
          SUM(ExportsPreProcessedQty) as  ExportsPreProcessedQty, 
                                 SUM(PreProcessedQty) AS PreProcessedQty,
          SUM(PendingQty) as PendingPCQty,
                                 SUM(PendingIMQty) AS PendingIMQty,
                                 SUM(IssuedPCQty) as IssuedPCQty, 
                                 sum(IssuedIMQty) as IssuedIMQty, 
                                 SUM(ScrapHoldQty) as ScrapHoldQty,
          ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) as IPBalance,
                                 SUM(ImQty) as ImQty,
                                 ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) - SUM(ImQty) as ImComparative,
                                 MAX(TxnDate) AS txndate,
                                 MAX(IMH.value) AS Value,
                                 (ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2)) * MAX(IMH.value) AS [IP Balance Total Value],
                                 SUM(ImQty) * MAX(IMH.value) AS [ERP Balance Total Value],
                                 (ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) - SUM(ImQty)) * MAX(IMH.value) AS [Comparative Total Value]
                               FROM
         (
--fncInsertFIFOReceiptQty
SELECT FR.ProductNum, IM.ProductTypeCode, MAX(FR.TxnQtyUom) AS TxnQtyUom , SUM(FR.TxnQty) AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 
0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty,  0 AS 
 IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdFifoReceipt FR (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = FR.productnum AND IM.partnerid = FR.partnerid
WHERE  FR.PartnerID = @PartnerID AND  FR.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY FR.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertPositiveStagingQty
SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, SUM(ABS(SFP.TxnQty)) AS PositiveStagingQty,
0 AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 0 AS IssuedPCQty,
0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM ttdStagingFifoProcessing SFP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
WHERE SFP.TxnCode IN (''RPPC'',''APPC'',''INPC'',''XNPC'', ''RPIM'',''APIM'',''INIM'',''XNIM'') AND 
SFP.PartnerID = @PartnerID AND  SFP.Effdate <= (select  max(effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY SFP.ProductNum, IM.ProductTypeCode
            
UNION ALL

--fncInsertNegativeStagingQty
SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
SUM(ABS(SFP.TxnQty)) AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty,
0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM ttdStagingFifoProcessing SFP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
WHERE  SFP.TxnCode IN (''SPPC'',''IPPC'',''XPPC'',''RNPC'',''ANPC'', ''SPIM'',''IPIM'',''XPIM'',''RNIM'',''ANIM'') 
AND SFP.PartnerID = @PartnerID AND  SFP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY SFP.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertPendingQty
SELECT  PC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
    0 AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 
    SUM(PC.TxnQty) AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty 
                FROM txdPendingPC PC WITH (nolock)
                JOIN tmdItemMaster IM (nolock)
ON IM.productnum = PC.productnum AND IM.partnerid = PC.partnerid
WHERE PC.PartnerID = @PartnerID AND  PC.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY PC.ProductNum, IM.ProductTypeCode

UNION ALL
--fncInsertPendingIMQty

SELECT  PIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty,0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 
0 AS PendingQty,0 AS IssuedPCQty,  0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate,Sum(PIM.TxnQty) AS PendingIMQty
FROM txdPendingIM PIM (nolock)
JOIN tmdItemMaster IM (nolock)
ON PIM.productnum = IM.productnum AND PIM.partnerid = IM.partnerid
WHERE 
PIM.PartnerID = @PartnerID AND  txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY PIM.ProductNum, IM.ProductTypeCode
            


UNION ALL

--fncInsertIssuedPCQty
SELECT  IPC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
SUM(IPC.TxnQty) AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdIssuedPC IPC WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IPC.productnum = IM.productnum AND IPC.partnerid = IM.partnerid
WHERE IPC.PartnerID = @PartnerID AND  IPC.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY IPC.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertIssuedIMQty
SELECT  IIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
0 AS IssuedPCQty, SUM(IIM.TxnQty) AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdIssuedIM IIM WITH (nolock)
  JOIN tmdItemMaster IM (nolock)
ON IIM.productnum = IM.productnum AND IIM.partnerid = IM.partnerid
WHERE IIM.PartnerID = @PartnerID AND  IIM.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY IIM.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertScrapHoldQty
SELECT  SH.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, SUM(SH.TxnQty) AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdScrapHold SH WITH (nolock) 
JOIN tmdItemMaster IM (nolock)
ON SH.productnum = IM.productnum AND SH.partnerid = IM.partnerid
WHERE SH.PartnerID = @PartnerID AND  SH.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY SH.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertInvBalReconQty
SELECT  IR.ProductNum, IM.ProductTypeCode, MAX(IR.TxnQtyUom), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, SUM(IR.TxnQty) AS ImQty, 0 AS ImComparative, MAX(IR.txndate) AS txndate, 0 AS PendingIMQty 
 FROM txdInvBalRecon IR (nolock)
JOIN tmdItemMaster IM (nolock)
ON IR.productnum = IM.productnum AND IR.partnerid = IM.partnerid
WHERE IR.PartnerID = @PartnerID AND  IR.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY IR.ProductNum, IM.ProductTypeCode

UNION ALL
--fncInsertExportsPreProcessedQty
SELECT EPP.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty,
SUM(ABS(EPP.TxnQty)) as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,  0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty,
  0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty 
FROM txdExportsPreProcessed EPP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON EPP.productnum = IM.productnum AND EPP.partnerid = IM.partnerid
WHERE EPP.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
AND EPP.PartnerID = @PartnerID AND  EPP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY EPP.ProductNum, IM.ProductTypeCode

union all
          
--fncInsertPreProcessedTxns
SELECT PPT.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS 
NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty , SUM(ABS(TxnQty)) AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty  
 FROM txdPreProcessedTxns PPT WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON PPT.productnum = IM.productnum AND PPT.partnerid = IM.partnerid
WHERE PPT.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
AND PPT.PartnerID = @PartnerID AND  PPT.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY PPT.ProductNum, IM.ProductTypeCode
  
  union all         
  
--fncInsertPositiveFIFOTxns

SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS
NegativeStagingQty, SUM(ABS(FP.TxnQty)) as PositiveFIFOQty, 0 as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdFIFOProcessing FP (NOLOCK)
JOIN tmdItemMaster IM (nolock)
ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid 
WHERE TxnCode IN ( ''RPPC'',''APPC'',''INPC'',''XNPC'',''RPIM'',''APIM'',''INIM'',''XNIM'')
AND FP.PartnerID = @PartnerID AND  FP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
AND FP.FIFOFlag = ''N'' 
GROUP BY FP.ProductNum, IM.ProductTypeCode

  union all     
  
--fncInsertNegativeFIFOTxns

SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 as PositiveFIFOQty, SUM(ABS(FP.TxnQty)) as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty,
  0 AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdFIFOProcessing FP (NOLOCK) 
  JOIN tmdItemMaster IM (nolock)
ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid 
WHERE FP.TxnCode IN ( ''SPPC'',''ANPC'',''IPPC'',''XPPC'',''RNIM'',''ANIM'',''IPIM'',''XPIM'')
AND FP.PartnerID = @PartnerID AND  FP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
AND FP.FIFOFlag = ''N'' 
GROUP BY FP.ProductNum, IM.ProductTypeCode

) ttdTempComponentBalanceAuditPC
JOIN tmdItemMasterHTSValues IMH (nolock)
ON IMH.productnum = ttdTempComponentBalanceAuditPC.productnum AND IMH.partnerid = @PartnerID GROUP BY IMH.ProductNum, ProductTypeCode) q
WHERE ABS(ImComparative) = 0
) AS C

--GROUP BY
--ORDER BY', N'00C73052-3411-46F7-9049-3CF20EBD888E', N'', CAST(N'2018-06-22T13:04:57.110' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xABDA0C453D0AAD02C30AB370CB227739, N'ScoreCard', N'18.1', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-06-22T13:05:41.000' AS DateTime), 362, N'a6f08988-2fca-4aac-b16f-a901c22a79c9', N'SELECT TOP 1 ''Balanced Parts'' AS [Description],count(*) AS [PartCount]
FROM  (
SELECT * FROM (
          SELECT  
                                 @PartnerID AS Partnerid,
                                 '''' AS UserName,
                                 GetDate() AS Effdate,
                                 ProductTypeCode, 
                                 IMH.ProductNum, 
                                 MAX(TxnQtyUom) as TxnQtyUom, 
                                 SUM(FifoReceiptQty) as FifoReceiptQty, 
          SUM(PositiveStagingQty) AS PositiveStagingQty,
                                 SUM(NegativeStagingQty)  AS NegativeStagingQty ,
                                 SUM(PositiveFIFOQty) AS PositiveFIFOQty,
                                 SUM(NegativeFIFOQty) AS NegativeFIFOQty,
          SUM(ExportsPreProcessedQty) as  ExportsPreProcessedQty, 
                                 SUM(PreProcessedQty) AS PreProcessedQty,
          SUM(PendingQty) as PendingPCQty,
                                 SUM(PendingIMQty) AS PendingIMQty,
                                 SUM(IssuedPCQty) as IssuedPCQty, 
                                 sum(IssuedIMQty) as IssuedIMQty, 
                                 SUM(ScrapHoldQty) as ScrapHoldQty,
          ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) as IPBalance,
                                 SUM(ImQty) as ImQty,
                                 ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) - SUM(ImQty) as ImComparative,
                                 MAX(TxnDate) AS txndate,
                                 MAX(IMH.value) AS Value,
                                 (ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2)) * MAX(IMH.value) AS [IP Balance Total Value],
                                 SUM(ImQty) * MAX(IMH.value) AS [ERP Balance Total Value],
                                 (ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) - SUM(ImQty)) * MAX(IMH.value) AS [Comparative Total Value]
                               FROM
         (
--fncInsertFIFOReceiptQty
SELECT FR.ProductNum, IM.ProductTypeCode, MAX(FR.TxnQtyUom) AS TxnQtyUom , SUM(FR.TxnQty) AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 
0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty,  0 AS 
 IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdFifoReceipt FR (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = FR.productnum AND IM.partnerid = FR.partnerid
WHERE  FR.PartnerID = @PartnerID AND  FR.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY FR.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertPositiveStagingQty
SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, SUM(ABS(SFP.TxnQty)) AS PositiveStagingQty,
0 AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 0 AS IssuedPCQty,
0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM ttdStagingFifoProcessing SFP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
WHERE SFP.TxnCode IN (''RPPC'',''APPC'',''INPC'',''XNPC'', ''RPIM'',''APIM'',''INIM'',''XNIM'') AND 
SFP.PartnerID = @PartnerID AND  SFP.Effdate <= (select  max(effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY SFP.ProductNum, IM.ProductTypeCode
            
UNION ALL

--fncInsertNegativeStagingQty
SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
SUM(ABS(SFP.TxnQty)) AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty,
0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM ttdStagingFifoProcessing SFP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
WHERE  SFP.TxnCode IN (''SPPC'',''IPPC'',''XPPC'',''RNPC'',''ANPC'', ''SPIM'',''IPIM'',''XPIM'',''RNIM'',''ANIM'') 
AND SFP.PartnerID = @PartnerID AND  SFP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY SFP.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertPendingQty
SELECT  PC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
    0 AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 
    SUM(PC.TxnQty) AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty 
                FROM txdPendingPC PC WITH (nolock)
                JOIN tmdItemMaster IM (nolock)
ON IM.productnum = PC.productnum AND IM.partnerid = PC.partnerid
WHERE PC.PartnerID = @PartnerID AND  PC.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY PC.ProductNum, IM.ProductTypeCode

UNION ALL
--fncInsertPendingIMQty

SELECT  PIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty,0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 
0 AS PendingQty,0 AS IssuedPCQty,  0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate,Sum(PIM.TxnQty) AS PendingIMQty
FROM txdPendingIM PIM (nolock)
JOIN tmdItemMaster IM (nolock)
ON PIM.productnum = IM.productnum AND PIM.partnerid = IM.partnerid
WHERE 
PIM.PartnerID = @PartnerID AND  txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY PIM.ProductNum, IM.ProductTypeCode
            


UNION ALL

--fncInsertIssuedPCQty
SELECT  IPC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
SUM(IPC.TxnQty) AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdIssuedPC IPC WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IPC.productnum = IM.productnum AND IPC.partnerid = IM.partnerid
WHERE IPC.PartnerID = @PartnerID AND  IPC.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY IPC.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertIssuedIMQty
SELECT  IIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
0 AS IssuedPCQty, SUM(IIM.TxnQty) AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdIssuedIM IIM WITH (nolock)
  JOIN tmdItemMaster IM (nolock)
ON IIM.productnum = IM.productnum AND IIM.partnerid = IM.partnerid
WHERE IIM.PartnerID = @PartnerID AND  IIM.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY IIM.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertScrapHoldQty
SELECT  SH.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, SUM(SH.TxnQty) AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdScrapHold SH WITH (nolock) 
JOIN tmdItemMaster IM (nolock)
ON SH.productnum = IM.productnum AND SH.partnerid = IM.partnerid
WHERE SH.PartnerID = @PartnerID AND  SH.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY SH.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertInvBalReconQty
SELECT  IR.ProductNum, IM.ProductTypeCode, MAX(IR.TxnQtyUom), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, SUM(IR.TxnQty) AS ImQty, 0 AS ImComparative, MAX(IR.txndate) AS txndate, 0 AS PendingIMQty 
 FROM txdInvBalRecon IR (nolock)
JOIN tmdItemMaster IM (nolock)
ON IR.productnum = IM.productnum AND IR.partnerid = IM.partnerid
WHERE IR.PartnerID = @PartnerID AND  IR.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY IR.ProductNum, IM.ProductTypeCode

UNION ALL
--fncInsertExportsPreProcessedQty
SELECT EPP.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty,
SUM(ABS(EPP.TxnQty)) as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,  0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty,
  0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty 
FROM txdExportsPreProcessed EPP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON EPP.productnum = IM.productnum AND EPP.partnerid = IM.partnerid
WHERE EPP.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
AND EPP.PartnerID = @PartnerID AND  EPP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY EPP.ProductNum, IM.ProductTypeCode

union all
          
--fncInsertPreProcessedTxns
SELECT PPT.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS 
NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty , SUM(ABS(TxnQty)) AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty  
 FROM txdPreProcessedTxns PPT WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON PPT.productnum = IM.productnum AND PPT.partnerid = IM.partnerid
WHERE PPT.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
AND PPT.PartnerID = @PartnerID AND  PPT.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY PPT.ProductNum, IM.ProductTypeCode
  
  union all         
  
--fncInsertPositiveFIFOTxns

SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS
NegativeStagingQty, SUM(ABS(FP.TxnQty)) as PositiveFIFOQty, 0 as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdFIFOProcessing FP (NOLOCK)
JOIN tmdItemMaster IM (nolock)
ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid 
WHERE TxnCode IN ( ''RPPC'',''APPC'',''INPC'',''XNPC'',''RPIM'',''APIM'',''INIM'',''XNIM'')
AND FP.PartnerID = @PartnerID AND  FP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
AND FP.FIFOFlag = ''N'' 
GROUP BY FP.ProductNum, IM.ProductTypeCode

  union all     
  
--fncInsertNegativeFIFOTxns

SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 as PositiveFIFOQty, SUM(ABS(FP.TxnQty)) as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty,
  0 AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdFIFOProcessing FP (NOLOCK) 
  JOIN tmdItemMaster IM (nolock)
ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid 
WHERE FP.TxnCode IN ( ''SPPC'',''ANPC'',''IPPC'',''XPPC'',''RNIM'',''ANIM'',''IPIM'',''XPIM'')
AND FP.PartnerID = @PartnerID AND  FP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
AND FP.FIFOFlag = ''N'' 
GROUP BY FP.ProductNum, IM.ProductTypeCode

) ttdTempComponentBalanceAuditIM
JOIN tmdItemMasterHTSValues IMH (nolock)
ON IMH.productnum = ttdTempComponentBalanceAuditIM.productnum AND IMH.partnerid = 112683 GROUP BY IMH.ProductNum, ProductTypeCode)n
WHERE ABS(ImComparative) = 0

UNION ALL

SELECT * FROM (
          SELECT  
                                 @PartnerID AS Partnerid,
                                 '''' AS UserName,
                                 GetDate() AS Effdate,
                                 ProductTypeCode, 
                                 IMH.ProductNum, 
                                 MAX(TxnQtyUom) as TxnQtyUom, 
                                 SUM(FifoReceiptQty) as FifoReceiptQty, 
          SUM(PositiveStagingQty) AS PositiveStagingQty,
                                 SUM(NegativeStagingQty)  AS NegativeStagingQty ,
                                 SUM(PositiveFIFOQty) AS PositiveFIFOQty,
                                 SUM(NegativeFIFOQty) AS NegativeFIFOQty,
          SUM(ExportsPreProcessedQty) as  ExportsPreProcessedQty, 
                                 SUM(PreProcessedQty) AS PreProcessedQty,
          SUM(PendingQty) as PendingPCQty,
                                 SUM(PendingIMQty) AS PendingIMQty,
                                 SUM(IssuedPCQty) as IssuedPCQty, 
                                 sum(IssuedIMQty) as IssuedIMQty, 
                                 SUM(ScrapHoldQty) as ScrapHoldQty,
          ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) as IPBalance,
                                 SUM(ImQty) as ImQty,
                                 ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) - SUM(ImQty) as ImComparative,
                                 MAX(TxnDate) AS txndate,
                                 MAX(IMH.value) AS Value,
                                 (ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2)) * MAX(IMH.value) AS [IP Balance Total Value],
                                 SUM(ImQty) * MAX(IMH.value) AS [ERP Balance Total Value],
                                 (ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) - SUM(ImQty)) * MAX(IMH.value) AS [Comparative Total Value]
                               FROM
         (
--fncInsertFIFOReceiptQty
SELECT FR.ProductNum, IM.ProductTypeCode, MAX(FR.TxnQtyUom) AS TxnQtyUom , SUM(FR.TxnQty) AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 
0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty,  0 AS 
 IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdFifoReceipt FR (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = FR.productnum AND IM.partnerid = FR.partnerid
WHERE  FR.PartnerID = @PartnerID AND  FR.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY FR.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertPositiveStagingQty
SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, SUM(ABS(SFP.TxnQty)) AS PositiveStagingQty,
0 AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 0 AS IssuedPCQty,
0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM ttdStagingFifoProcessing SFP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
WHERE SFP.TxnCode IN (''RPPC'',''APPC'',''INPC'',''XNPC'', ''RPIM'',''APIM'',''INIM'',''XNIM'') AND 
SFP.PartnerID = @PartnerID AND  SFP.Effdate <= (select  max(effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY SFP.ProductNum, IM.ProductTypeCode
            
UNION ALL

--fncInsertNegativeStagingQty
SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
SUM(ABS(SFP.TxnQty)) AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty,
0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM ttdStagingFifoProcessing SFP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
WHERE  SFP.TxnCode IN (''SPPC'',''IPPC'',''XPPC'',''RNPC'',''ANPC'', ''SPIM'',''IPIM'',''XPIM'',''RNIM'',''ANIM'') 
AND SFP.PartnerID = @PartnerID AND  SFP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY SFP.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertPendingQty
SELECT  PC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
    0 AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 
    SUM(PC.TxnQty) AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty 
                FROM txdPendingPC PC WITH (nolock)
                JOIN tmdItemMaster IM (nolock)
ON IM.productnum = PC.productnum AND IM.partnerid = PC.partnerid
WHERE PC.PartnerID = @PartnerID AND  PC.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY PC.ProductNum, IM.ProductTypeCode

UNION ALL
--fncInsertPendingIMQty

SELECT  PIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty,0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 
0 AS PendingQty,0 AS IssuedPCQty,  0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate,Sum(PIM.TxnQty) AS PendingIMQty
FROM txdPendingIM PIM (nolock)
JOIN tmdItemMaster IM (nolock)
ON PIM.productnum = IM.productnum AND PIM.partnerid = IM.partnerid
WHERE 
PIM.PartnerID = @PartnerID AND  txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY PIM.ProductNum, IM.ProductTypeCode
            


UNION ALL

--fncInsertIssuedPCQty
SELECT  IPC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
SUM(IPC.TxnQty) AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdIssuedPC IPC WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IPC.productnum = IM.productnum AND IPC.partnerid = IM.partnerid
WHERE IPC.PartnerID = @PartnerID AND  IPC.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY IPC.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertIssuedIMQty
SELECT  IIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
0 AS IssuedPCQty, SUM(IIM.TxnQty) AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdIssuedIM IIM WITH (nolock)
  JOIN tmdItemMaster IM (nolock)
ON IIM.productnum = IM.productnum AND IIM.partnerid = IM.partnerid
WHERE IIM.PartnerID = @PartnerID AND  IIM.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY IIM.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertScrapHoldQty
SELECT  SH.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, SUM(SH.TxnQty) AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdScrapHold SH WITH (nolock) 
JOIN tmdItemMaster IM (nolock)
ON SH.productnum = IM.productnum AND SH.partnerid = IM.partnerid
WHERE SH.PartnerID = @PartnerID AND  SH.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY SH.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertInvBalReconQty
SELECT  IR.ProductNum, IM.ProductTypeCode, MAX(IR.TxnQtyUom), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, SUM(IR.TxnQty) AS ImQty, 0 AS ImComparative, MAX(IR.txndate) AS txndate, 0 AS PendingIMQty 
 FROM txdInvBalRecon IR (nolock)
JOIN tmdItemMaster IM (nolock)
ON IR.productnum = IM.productnum AND IR.partnerid = IM.partnerid
WHERE IR.PartnerID = @PartnerID AND  IR.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY IR.ProductNum, IM.ProductTypeCode

UNION ALL
--fncInsertExportsPreProcessedQty
SELECT EPP.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty,
SUM(ABS(EPP.TxnQty)) as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,  0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty,
  0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty 
FROM txdExportsPreProcessed EPP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON EPP.productnum = IM.productnum AND EPP.partnerid = IM.partnerid
WHERE EPP.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
AND EPP.PartnerID = @PartnerID AND  EPP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY EPP.ProductNum, IM.ProductTypeCode

union all
          
--fncInsertPreProcessedTxns
SELECT PPT.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS 
NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty , SUM(ABS(TxnQty)) AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty  
 FROM txdPreProcessedTxns PPT WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON PPT.productnum = IM.productnum AND PPT.partnerid = IM.partnerid
WHERE PPT.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
AND PPT.PartnerID = @PartnerID AND  PPT.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY PPT.ProductNum, IM.ProductTypeCode
  
  union all         
  
--fncInsertPositiveFIFOTxns

SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS
NegativeStagingQty, SUM(ABS(FP.TxnQty)) as PositiveFIFOQty, 0 as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdFIFOProcessing FP (NOLOCK)
JOIN tmdItemMaster IM (nolock)
ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid 
WHERE TxnCode IN ( ''RPPC'',''APPC'',''INPC'',''XNPC'',''RPIM'',''APIM'',''INIM'',''XNIM'')
AND FP.PartnerID = @PartnerID AND  FP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
AND FP.FIFOFlag = ''N'' 
GROUP BY FP.ProductNum, IM.ProductTypeCode

  union all     
  
--fncInsertNegativeFIFOTxns

SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 as PositiveFIFOQty, SUM(ABS(FP.TxnQty)) as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty,
  0 AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdFIFOProcessing FP (NOLOCK) 
  JOIN tmdItemMaster IM (nolock)
ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid 
WHERE FP.TxnCode IN ( ''SPPC'',''ANPC'',''IPPC'',''XPPC'',''RNIM'',''ANIM'',''IPIM'',''XPIM'')
AND FP.PartnerID = @PartnerID AND  FP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
AND FP.FIFOFlag = ''N'' 
GROUP BY FP.ProductNum, IM.ProductTypeCode

) ttdTempComponentBalanceAuditPC
JOIN tmdItemMasterHTSValues IMH (nolock)
ON IMH.productnum = ttdTempComponentBalanceAuditPC.productnum AND IMH.partnerid = @PartnerID GROUP BY IMH.ProductNum, ProductTypeCode) q
WHERE ABS(ImComparative) = 0
) AS C

UNION ALL

/*-------------------------------*/

SELECT TOP 1 ''Parts Out of balance'' AS [Description],
CAST((SELECT COUNT (*) FROM TXDINVBALRECON AS TOTAL) AS INT )  - CAST(count(*) AS INT)
FROM  (
SELECT * FROM (
          SELECT  
                                 @PartnerID AS Partnerid,
                                 '''' AS UserName,
                                 GetDate() AS Effdate,
                                 ProductTypeCode, 
                                 IMH.ProductNum, 
                                 MAX(TxnQtyUom) as TxnQtyUom, 
                                 SUM(FifoReceiptQty) as FifoReceiptQty, 
          SUM(PositiveStagingQty) AS PositiveStagingQty,
                                 SUM(NegativeStagingQty)  AS NegativeStagingQty ,
                                 SUM(PositiveFIFOQty) AS PositiveFIFOQty,
                                 SUM(NegativeFIFOQty) AS NegativeFIFOQty,
          SUM(ExportsPreProcessedQty) as  ExportsPreProcessedQty, 
                                 SUM(PreProcessedQty) AS PreProcessedQty,
          SUM(PendingQty) as PendingPCQty,
                                 SUM(PendingIMQty) AS PendingIMQty,
                                 SUM(IssuedPCQty) as IssuedPCQty, 
                                 sum(IssuedIMQty) as IssuedIMQty, 
                                 SUM(ScrapHoldQty) as ScrapHoldQty,
          ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) as IPBalance,
                                 SUM(ImQty) as ImQty,
                                 ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) - SUM(ImQty) as ImComparative,
                                 MAX(TxnDate) AS txndate,
                                 MAX(IMH.value) AS Value,
                                 (ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2)) * MAX(IMH.value) AS [IP Balance Total Value],
                                 SUM(ImQty) * MAX(IMH.value) AS [ERP Balance Total Value],
                                 (ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) - SUM(ImQty)) * MAX(IMH.value) AS [Comparative Total Value]
                               FROM
         (
--fncInsertFIFOReceiptQty
SELECT FR.ProductNum, IM.ProductTypeCode, MAX(FR.TxnQtyUom) AS TxnQtyUom , SUM(FR.TxnQty) AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 
0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty,  0 AS 
 IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdFifoReceipt FR (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = FR.productnum AND IM.partnerid = FR.partnerid
WHERE  FR.PartnerID = @PartnerID AND  FR.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY FR.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertPositiveStagingQty
SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, SUM(ABS(SFP.TxnQty)) AS PositiveStagingQty,
0 AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 0 AS IssuedPCQty,
0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM ttdStagingFifoProcessing SFP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
WHERE SFP.TxnCode IN (''RPPC'',''APPC'',''INPC'',''XNPC'', ''RPIM'',''APIM'',''INIM'',''XNIM'') AND 
SFP.PartnerID = @PartnerID AND  SFP.Effdate <= (select  max(effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY SFP.ProductNum, IM.ProductTypeCode
            
UNION ALL

--fncInsertNegativeStagingQty
SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
SUM(ABS(SFP.TxnQty)) AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty,
0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM ttdStagingFifoProcessing SFP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
WHERE  SFP.TxnCode IN (''SPPC'',''IPPC'',''XPPC'',''RNPC'',''ANPC'', ''SPIM'',''IPIM'',''XPIM'',''RNIM'',''ANIM'') 
AND SFP.PartnerID = @PartnerID AND  SFP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY SFP.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertPendingQty
SELECT  PC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
    0 AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 
    SUM(PC.TxnQty) AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty 
                FROM txdPendingPC PC WITH (nolock)
                JOIN tmdItemMaster IM (nolock)
ON IM.productnum = PC.productnum AND IM.partnerid = PC.partnerid
WHERE PC.PartnerID = @PartnerID AND  PC.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY PC.ProductNum, IM.ProductTypeCode

UNION ALL
--fncInsertPendingIMQty

SELECT  PIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty,0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 
0 AS PendingQty,0 AS IssuedPCQty,  0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate,Sum(PIM.TxnQty) AS PendingIMQty
FROM txdPendingIM PIM (nolock)
JOIN tmdItemMaster IM (nolock)
ON PIM.productnum = IM.productnum AND PIM.partnerid = IM.partnerid
WHERE 
PIM.PartnerID = @PartnerID AND  txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY PIM.ProductNum, IM.ProductTypeCode
            


UNION ALL

--fncInsertIssuedPCQty
SELECT  IPC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
SUM(IPC.TxnQty) AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdIssuedPC IPC WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IPC.productnum = IM.productnum AND IPC.partnerid = IM.partnerid
WHERE IPC.PartnerID = @PartnerID AND  IPC.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY IPC.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertIssuedIMQty
SELECT  IIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
0 AS IssuedPCQty, SUM(IIM.TxnQty) AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdIssuedIM IIM WITH (nolock)
  JOIN tmdItemMaster IM (nolock)
ON IIM.productnum = IM.productnum AND IIM.partnerid = IM.partnerid
WHERE IIM.PartnerID = @PartnerID AND  IIM.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY IIM.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertScrapHoldQty
SELECT  SH.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, SUM(SH.TxnQty) AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdScrapHold SH WITH (nolock) 
JOIN tmdItemMaster IM (nolock)
ON SH.productnum = IM.productnum AND SH.partnerid = IM.partnerid
WHERE SH.PartnerID = @PartnerID AND  SH.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY SH.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertInvBalReconQty
SELECT  IR.ProductNum, IM.ProductTypeCode, MAX(IR.TxnQtyUom), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, SUM(IR.TxnQty) AS ImQty, 0 AS ImComparative, MAX(IR.txndate) AS txndate, 0 AS PendingIMQty 
 FROM txdInvBalRecon IR (nolock)
JOIN tmdItemMaster IM (nolock)
ON IR.productnum = IM.productnum AND IR.partnerid = IM.partnerid
WHERE IR.PartnerID = @PartnerID AND  IR.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY IR.ProductNum, IM.ProductTypeCode

UNION ALL
--fncInsertExportsPreProcessedQty
SELECT EPP.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty,
SUM(ABS(EPP.TxnQty)) as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,  0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty,
  0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty 
FROM txdExportsPreProcessed EPP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON EPP.productnum = IM.productnum AND EPP.partnerid = IM.partnerid
WHERE EPP.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
AND EPP.PartnerID = @PartnerID AND  EPP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY EPP.ProductNum, IM.ProductTypeCode

union all
          
--fncInsertPreProcessedTxns
SELECT PPT.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS 
NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty , SUM(ABS(TxnQty)) AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty  
 FROM txdPreProcessedTxns PPT WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON PPT.productnum = IM.productnum AND PPT.partnerid = IM.partnerid
WHERE PPT.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
AND PPT.PartnerID = @PartnerID AND  PPT.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
GROUP BY PPT.ProductNum, IM.ProductTypeCode
  
  union all         
  
--fncInsertPositiveFIFOTxns

SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS
NegativeStagingQty, SUM(ABS(FP.TxnQty)) as PositiveFIFOQty, 0 as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdFIFOProcessing FP (NOLOCK)
JOIN tmdItemMaster IM (nolock)
ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid 
WHERE TxnCode IN ( ''RPPC'',''APPC'',''INPC'',''XNPC'',''RPIM'',''APIM'',''INIM'',''XNIM'')
AND FP.PartnerID = @PartnerID AND  FP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
AND FP.FIFOFlag = ''N'' 
GROUP BY FP.ProductNum, IM.ProductTypeCode

  union all     
  
--fncInsertNegativeFIFOTxns

SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 as PositiveFIFOQty, SUM(ABS(FP.TxnQty)) as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty,
  0 AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdFIFOProcessing FP (NOLOCK) 
  JOIN tmdItemMaster IM (nolock)
ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid 
WHERE FP.TxnCode IN ( ''SPPC'',''ANPC'',''IPPC'',''XPPC'',''RNIM'',''ANIM'',''IPIM'',''XPIM'')
AND FP.PartnerID = @PartnerID AND  FP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''IM''
AND FP.FIFOFlag = ''N'' 
GROUP BY FP.ProductNum, IM.ProductTypeCode

) ttdTempComponentBalanceAuditIM
JOIN tmdItemMasterHTSValues IMH (nolock)
ON IMH.productnum = ttdTempComponentBalanceAuditIM.productnum AND IMH.partnerid = 112683 GROUP BY IMH.ProductNum, ProductTypeCode)n
WHERE ABS(ImComparative) = 0

UNION ALL

SELECT * FROM (
          SELECT  
                                 @PartnerID AS Partnerid,
                                 '''' AS UserName,
                                 GetDate() AS Effdate,
                                 ProductTypeCode, 
                                 IMH.ProductNum, 
                                 MAX(TxnQtyUom) as TxnQtyUom, 
                                 SUM(FifoReceiptQty) as FifoReceiptQty, 
          SUM(PositiveStagingQty) AS PositiveStagingQty,
                                 SUM(NegativeStagingQty)  AS NegativeStagingQty ,
                                 SUM(PositiveFIFOQty) AS PositiveFIFOQty,
                                 SUM(NegativeFIFOQty) AS NegativeFIFOQty,
          SUM(ExportsPreProcessedQty) as  ExportsPreProcessedQty, 
                                 SUM(PreProcessedQty) AS PreProcessedQty,
          SUM(PendingQty) as PendingPCQty,
                                 SUM(PendingIMQty) AS PendingIMQty,
                                 SUM(IssuedPCQty) as IssuedPCQty, 
                                 sum(IssuedIMQty) as IssuedIMQty, 
                                 SUM(ScrapHoldQty) as ScrapHoldQty,
          ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) as IPBalance,
                                 SUM(ImQty) as ImQty,
                                 ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) - SUM(ImQty) as ImComparative,
                                 MAX(TxnDate) AS txndate,
                                 MAX(IMH.value) AS Value,
                                 (ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2)) * MAX(IMH.value) AS [IP Balance Total Value],
                                 SUM(ImQty) * MAX(IMH.value) AS [ERP Balance Total Value],
                                 (ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)),  2) - SUM(ImQty)) * MAX(IMH.value) AS [Comparative Total Value]
                               FROM
         (
--fncInsertFIFOReceiptQty
SELECT FR.ProductNum, IM.ProductTypeCode, MAX(FR.TxnQtyUom) AS TxnQtyUom , SUM(FR.TxnQty) AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 
0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty,  0 AS 
 IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdFifoReceipt FR (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = FR.productnum AND IM.partnerid = FR.partnerid
WHERE  FR.PartnerID = @PartnerID AND  FR.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY FR.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertPositiveStagingQty
SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, SUM(ABS(SFP.TxnQty)) AS PositiveStagingQty,
0 AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 0 AS IssuedPCQty,
0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM ttdStagingFifoProcessing SFP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
WHERE SFP.TxnCode IN (''RPPC'',''APPC'',''INPC'',''XNPC'', ''RPIM'',''APIM'',''INIM'',''XNIM'') AND 
SFP.PartnerID = @PartnerID AND  SFP.Effdate <= (select  max(effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY SFP.ProductNum, IM.ProductTypeCode
            
UNION ALL

--fncInsertNegativeStagingQty
SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
SUM(ABS(SFP.TxnQty)) AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty,
0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM ttdStagingFifoProcessing SFP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
WHERE  SFP.TxnCode IN (''SPPC'',''IPPC'',''XPPC'',''RNPC'',''ANPC'', ''SPIM'',''IPIM'',''XPIM'',''RNIM'',''ANIM'') 
AND SFP.PartnerID = @PartnerID AND  SFP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY SFP.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertPendingQty
SELECT  PC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
    0 AS NegativeStagingQty,  0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 
    SUM(PC.TxnQty) AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty 
                FROM txdPendingPC PC WITH (nolock)
                JOIN tmdItemMaster IM (nolock)
ON IM.productnum = PC.productnum AND IM.partnerid = PC.partnerid
WHERE PC.PartnerID = @PartnerID AND  PC.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY PC.ProductNum, IM.ProductTypeCode

UNION ALL
--fncInsertPendingIMQty

SELECT  PIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty,0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 
0 AS PendingQty,0 AS IssuedPCQty,  0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate,Sum(PIM.TxnQty) AS PendingIMQty
FROM txdPendingIM PIM (nolock)
JOIN tmdItemMaster IM (nolock)
ON PIM.productnum = IM.productnum AND PIM.partnerid = IM.partnerid
WHERE 
PIM.PartnerID = @PartnerID AND  txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY PIM.ProductNum, IM.ProductTypeCode
            


UNION ALL

--fncInsertIssuedPCQty
SELECT  IPC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
SUM(IPC.TxnQty) AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdIssuedPC IPC WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON IPC.productnum = IM.productnum AND IPC.partnerid = IM.partnerid
WHERE IPC.PartnerID = @PartnerID AND  IPC.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY IPC.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertIssuedIMQty
SELECT  IIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
0 AS IssuedPCQty, SUM(IIM.TxnQty) AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdIssuedIM IIM WITH (nolock)
  JOIN tmdItemMaster IM (nolock)
ON IIM.productnum = IM.productnum AND IIM.partnerid = IM.partnerid
WHERE IIM.PartnerID = @PartnerID AND  IIM.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY IIM.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertScrapHoldQty
SELECT  SH.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, SUM(SH.TxnQty) AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdScrapHold SH WITH (nolock) 
JOIN tmdItemMaster IM (nolock)
ON SH.productnum = IM.productnum AND SH.partnerid = IM.partnerid
WHERE SH.PartnerID = @PartnerID AND  SH.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY SH.ProductNum, IM.ProductTypeCode

UNION ALL

--fncInsertInvBalReconQty
SELECT  IR.ProductNum, IM.ProductTypeCode, MAX(IR.TxnQtyUom), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 
0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, SUM(IR.TxnQty) AS ImQty, 0 AS ImComparative, MAX(IR.txndate) AS txndate, 0 AS PendingIMQty 
 FROM txdInvBalRecon IR (nolock)
JOIN tmdItemMaster IM (nolock)
ON IR.productnum = IM.productnum AND IR.partnerid = IM.partnerid
WHERE IR.PartnerID = @PartnerID AND  IR.effdate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY IR.ProductNum, IM.ProductTypeCode

UNION ALL
--fncInsertExportsPreProcessedQty
SELECT EPP.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty,
SUM(ABS(EPP.TxnQty)) as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,  0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty,
  0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty 
FROM txdExportsPreProcessed EPP WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON EPP.productnum = IM.productnum AND EPP.partnerid = IM.partnerid
WHERE EPP.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
AND EPP.PartnerID = @PartnerID AND  EPP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY EPP.ProductNum, IM.ProductTypeCode

union all
          
--fncInsertPreProcessedTxns
SELECT PPT.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS 
NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty , SUM(ABS(TxnQty)) AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty  
 FROM txdPreProcessedTxns PPT WITH (nolock)
JOIN tmdItemMaster IM (nolock)
ON PPT.productnum = IM.productnum AND PPT.partnerid = IM.partnerid
WHERE PPT.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
AND PPT.PartnerID = @PartnerID AND  PPT.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
GROUP BY PPT.ProductNum, IM.ProductTypeCode
  
  union all         
  
--fncInsertPositiveFIFOTxns

SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS
NegativeStagingQty, SUM(ABS(FP.TxnQty)) as PositiveFIFOQty, 0 as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 
 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
FROM txdFIFOProcessing FP (NOLOCK)
JOIN tmdItemMaster IM (nolock)
ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid 
WHERE TxnCode IN ( ''RPPC'',''APPC'',''INPC'',''XNPC'',''RPIM'',''APIM'',''INIM'',''XNIM'')
AND FP.PartnerID = @PartnerID AND  FP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
AND FP.FIFOFlag = ''N'' 
GROUP BY FP.ProductNum, IM.ProductTypeCode

  union all     
  
--fncInsertNegativeFIFOTxns

SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
0 AS NegativeStagingQty, 0 as PositiveFIFOQty, SUM(ABS(FP.TxnQty)) as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty,
  0 AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
  FROM txdFIFOProcessing FP (NOLOCK) 
  JOIN tmdItemMaster IM (nolock)
ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid 
WHERE FP.TxnCode IN ( ''SPPC'',''ANPC'',''IPPC'',''XPPC'',''RNIM'',''ANIM'',''IPIM'',''XPIM'')
AND FP.PartnerID = @PartnerID AND  FP.txndate <= (select  max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode  = ''PC''
AND FP.FIFOFlag = ''N'' 
GROUP BY FP.ProductNum, IM.ProductTypeCode

) ttdTempComponentBalanceAuditPC
JOIN tmdItemMasterHTSValues IMH (nolock)
ON IMH.productnum = ttdTempComponentBalanceAuditPC.productnum AND IMH.partnerid = @PartnerID GROUP BY IMH.ProductNum, ProductTypeCode) q
WHERE ABS(ImComparative) = 0
) AS C
--order by
--group by', N'00C73052-3411-46F7-9049-3CF20EBD888E', N'', CAST(N'2018-06-22T13:05:41.000' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x748EE7F8AC441D3DB475DA0A94B901D9, N'ScoreCard', N'18.1', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-06-22T13:16:25.180' AS DateTime), 363, N'c3ba9091-ff30-4082-916a-84f0963d5e48', N'SELECT ''<'' + ''a href="/GV/fxdScoreCard.aspx?GUID=261875A3-30C3-4E3E-B470-D357FB858752&0=''+productnum+''"""""''+'' target="_blank">''+ productnum AS [Productnum], FifoReceiptQty ,PendingPCQty,PositiveStagingQty,NegativeStagingQty,IssuedPCQty,IssuedIMQty,ImQty,TxnQtyUom
FROM (
	SELECT * FROM (
		SELECT
			@PartnerID AS Partnerid,
			'''' AS UserName,
			GetDate() AS Effdate,
			ProductTypeCode,
			IMH.ProductNum,
			MAX(TxnQtyUom) as TxnQtyUom,
			SUM(FifoReceiptQty) as FifoReceiptQty,
			SUM(PositiveStagingQty) AS PositiveStagingQty,
			SUM(NegativeStagingQty) AS NegativeStagingQty ,
			SUM(PositiveFIFOQty) AS PositiveFIFOQty,
			SUM(NegativeFIFOQty) AS NegativeFIFOQty,
			SUM(ExportsPreProcessedQty) as ExportsPreProcessedQty,
			SUM(PreProcessedQty) AS PreProcessedQty,
			SUM(PendingQty) as PendingPCQty,
			SUM(PendingIMQty) AS PendingIMQty,
			SUM(IssuedPCQty) as IssuedPCQty,
			sum(IssuedIMQty) as IssuedIMQty,
			SUM(ScrapHoldQty) as ScrapHoldQty,
			ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)), 2) as IPBalance,
			SUM(ImQty) as ImQty,
			ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)), 2) - SUM(ImQty) as ImComparative,
			MAX(TxnDate) AS txndate,
			MAX(IMH.value) AS Value,
			(ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)), 2)) * MAX(IMH.value) AS [IP Balance Total Value],
			SUM(ImQty) * MAX(IMH.value) AS [ERP Balance Total Value],
			(ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)), 2) - SUM(ImQty)) * MAX(IMH.value) AS [Comparative Total Value]
		FROM (

			--fncInsertFIFOReceiptQty
			SELECT FR.ProductNum, IM.ProductTypeCode, MAX(FR.TxnQtyUom) AS TxnQtyUom , SUM(FR.TxnQty) AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty,
			0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty, 0 AS
			 IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdFifoReceipt FR (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON IM.productnum = FR.productnum AND IM.partnerid = FR.partnerid
			WHERE FR.PartnerID = @PartnerID AND FR.txndate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''IM''
			GROUP BY FR.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertPositiveStagingQty
			SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, SUM(ABS(SFP.TxnQty)) AS PositiveStagingQty,
			0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 0 AS IssuedPCQty,
			0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM ttdStagingFifoProcessing SFP WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
			WHERE SFP.TxnCode IN (''RPPC'',''APPC'',''INPC'',''XNPC'', ''RPIM'',''APIM'',''INIM'',''XNIM'') AND
			SFP.PartnerID = @PartnerID AND SFP.Effdate <= (select max(effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''IM''
			GROUP BY SFP.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertNegativeStagingQty
			SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			SUM(ABS(SFP.TxnQty)) AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty,
			0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM ttdStagingFifoProcessing SFP WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
			WHERE SFP.TxnCode IN (''SPPC'',''IPPC'',''XPPC'',''RNPC'',''ANPC'', ''SPIM'',''IPIM'',''XPIM'',''RNIM'',''ANIM'')
			AND SFP.PartnerID = @PartnerID AND SFP.txndate <= (select max(effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''IM''
			GROUP BY SFP.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertPendingQty
			SELECT PC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty,
			SUM(PC.TxnQty) AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdPendingPC PC WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON IM.productnum = PC.productnum AND IM.partnerid = PC.partnerid
			WHERE PC.PartnerID = @PartnerID AND PC.txndate <= (select max(effdate) from txdinvbalrecon) AND IM.productTypeCode = ''IM''
			GROUP BY PC.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertPendingIMQty
			SELECT PIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			0 AS NegativeStagingQty,0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty,
			0 AS PendingQty,0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate,Sum(PIM.TxnQty) AS PendingIMQty
			FROM txdPendingIM PIM (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON PIM.productnum = IM.productnum AND PIM.partnerid = IM.partnerid
			WHERE PIM.PartnerID = @PartnerID AND txndate <= (select max(effdate) from txdinvbalrecon) AND IM.productTypeCode = ''IM''
			GROUP BY PIM.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertIssuedPCQty
			SELECT IPC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
			SUM(IPC.TxnQty) AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdIssuedPC IPC WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON IPC.productnum = IM.productnum AND IPC.partnerid = IM.partnerid
			WHERE IPC.PartnerID = @PartnerID AND IPC.effdate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''IM''
			GROUP BY IPC.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertIssuedIMQty
			SELECT IIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
			0 AS IssuedPCQty, SUM(IIM.TxnQty) AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdIssuedIM IIM WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON IIM.productnum = IM.productnum AND IIM.partnerid = IM.partnerid
			WHERE IIM.PartnerID = @PartnerID AND IIM.effdate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''IM''
			GROUP BY IIM.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertScrapHoldQty
			SELECT SH.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
			0 AS IssuedPCQty, 0 AS IssuedIMQty, SUM(SH.TxnQty) AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdScrapHold SH WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON SH.productnum = IM.productnum AND SH.partnerid = IM.partnerid
			WHERE SH.PartnerID = @PartnerID AND SH.effdate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''IM''
			GROUP BY SH.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertInvBalReconQty
			SELECT IR.ProductNum, IM.ProductTypeCode, MAX(IR.TxnQtyUom), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
			0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, SUM(IR.TxnQty) AS ImQty, 0 AS ImComparative, MAX(IR.txndate) AS txndate, 0 AS PendingIMQty
			FROM txdInvBalRecon IR (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON IR.productnum = IM.productnum AND IR.partnerid = IM.partnerid
			WHERE IR.PartnerID = @PartnerID AND IR.effdate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''IM''
			GROUP BY IR.ProductNum, IM.ProductTypeCode

			UNION ALL
			--fncInsertExportsPreProcessedQty
			SELECT EPP.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty,
			SUM(ABS(EPP.TxnQty)) as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty,
			0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdExportsPreProcessed EPP WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON EPP.productnum = IM.productnum AND EPP.partnerid = IM.partnerid
			WHERE EPP.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
			AND EPP.PartnerID = @PartnerID AND EPP.txndate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''IM''
			GROUP BY EPP.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertPreProcessedTxns
			SELECT PPT.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS
			NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty , SUM(ABS(TxnQty)) AS PreProcessedQty, 0 AS PendingQty,
			0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdPreProcessedTxns PPT WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON PPT.productnum = IM.productnum AND PPT.partnerid = IM.partnerid
			WHERE PPT.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
			AND PPT.PartnerID = @PartnerID AND PPT.txndate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''IM''
			GROUP BY PPT.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertPositiveFIFOTxns
			SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS
			NegativeStagingQty, SUM(ABS(FP.TxnQty)) as PositiveFIFOQty, 0 as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
			0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdFIFOProcessing FP (NOLOCK)
			JOIN tmdItemMaster IM (nolock)
			ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid
			WHERE TxnCode IN ( ''RPPC'',''APPC'',''INPC'',''XNPC'',''RPIM'',''APIM'',''INIM'',''XNIM'')
			AND FP.PartnerID = @PartnerID AND FP.txndate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''IM''
			AND FP.FIFOFlag = ''N''
			GROUP BY FP.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertNegativeFIFOTxns
			SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			0 AS NegativeStagingQty, 0 as PositiveFIFOQty, SUM(ABS(FP.TxnQty)) as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty,
			0 AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdFIFOProcessing FP (NOLOCK)
			JOIN tmdItemMaster IM (nolock)
			ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid
			WHERE FP.TxnCode IN ( ''SPPC'',''ANPC'',''IPPC'',''XPPC'',''RNIM'',''ANIM'',''IPIM'',''XPIM'')
			AND FP.PartnerID = @PartnerID AND FP.txndate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''IM''
			AND FP.FIFOFlag = ''N''
			GROUP BY FP.ProductNum, IM.ProductTypeCode

		) ttdTempComponentBalanceAuditIM
		JOIN tmdItemMasterHTSValues IMH (nolock)
		ON IMH.productnum = ttdTempComponentBalanceAuditIM.productnum AND IMH.partnerid = @PartnerID
		GROUP BY IMH.ProductNum, ProductTypeCode
	)n
	WHERE ABS(ImComparative) = 0

	UNION ALL

	SELECT * FROM (
		SELECT
			@PartnerID AS Partnerid,
			'''' AS UserName,
			GetDate() AS Effdate,
			ProductTypeCode,
			IMH.ProductNum,
			MAX(TxnQtyUom) as TxnQtyUom,
			SUM(FifoReceiptQty) as FifoReceiptQty,
			SUM(PositiveStagingQty) AS PositiveStagingQty,
			SUM(NegativeStagingQty) AS NegativeStagingQty ,
			SUM(PositiveFIFOQty) AS PositiveFIFOQty,
			SUM(NegativeFIFOQty) AS NegativeFIFOQty,
			SUM(ExportsPreProcessedQty) as ExportsPreProcessedQty,
			SUM(PreProcessedQty) AS PreProcessedQty,
			SUM(PendingQty) as PendingPCQty,
			SUM(PendingIMQty) AS PendingIMQty,
			SUM(IssuedPCQty) as IssuedPCQty,
			sum(IssuedIMQty) as IssuedIMQty,
			SUM(ScrapHoldQty) as ScrapHoldQty,
			ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)), 2) as IPBalance,
			SUM(ImQty) as ImQty,
			ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)), 2) - SUM(ImQty) as ImComparative,
			MAX(TxnDate) AS txndate,
			MAX(IMH.value) AS Value,
			(ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)), 2)) * MAX(IMH.value) AS [IP Balance Total Value],
			SUM(ImQty) * MAX(IMH.value) AS [ERP Balance Total Value],
			(ROUND(SUM((FifoReceiptQty + PositiveStagingQty + ExportsPreProcessedQty + PreProcessedQty + IssuedIMQty+ PositiveFIFOQty) - (NegativeStagingQty + PendingQty + IssuedPCQty + ScrapHoldQty + PendingIMQty)), 2) - SUM(ImQty)) * MAX(IMH.value) AS [Comparative Total Value]
		FROM (
			--fncInsertFIFOReceiptQty
			SELECT FR.ProductNum, IM.ProductTypeCode, MAX(FR.TxnQtyUom) AS TxnQtyUom , SUM(FR.TxnQty) AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty,
			0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty, 0 AS
			IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdFifoReceipt FR (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON IM.productnum = FR.productnum AND IM.partnerid = FR.partnerid
			WHERE FR.PartnerID = @PartnerID AND FR.txndate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''PC''
			GROUP BY FR.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertPositiveStagingQty
			SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, SUM(ABS(SFP.TxnQty)) AS PositiveStagingQty,
			0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 0 AS IssuedPCQty,
			0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM ttdStagingFifoProcessing SFP WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
			WHERE SFP.TxnCode IN (''RPPC'',''APPC'',''INPC'',''XNPC'', ''RPIM'',''APIM'',''INIM'',''XNIM'') AND
			SFP.PartnerID = @PartnerID AND SFP.Effdate <= (select max(effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''PC''
			GROUP BY SFP.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertNegativeStagingQty
			SELECT SFP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			SUM(ABS(SFP.TxnQty)) AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty, 0 AS PendingQty,
			0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM ttdStagingFifoProcessing SFP WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON IM.productnum = SFP.productnum AND IM.partnerid = SFP.partnerid
			WHERE SFP.TxnCode IN (''SPPC'',''IPPC'',''XPPC'',''RNPC'',''ANPC'', ''SPIM'',''IPIM'',''XPIM'',''RNIM'',''ANIM'')
			AND SFP.PartnerID = @PartnerID AND SFP.txndate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''PC''
			GROUP BY SFP.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertPendingQty
			SELECT PC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty,
			SUM(PC.TxnQty) AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdPendingPC PC WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON IM.productnum = PC.productnum AND IM.partnerid = PC.partnerid
			WHERE PC.PartnerID = @PartnerID AND PC.txndate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''PC''
			GROUP BY PC.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertPendingIMQty
			SELECT PIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			0 AS NegativeStagingQty,0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty,
			0 AS PendingQty,0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate,Sum(PIM.TxnQty) AS PendingIMQty
			FROM txdPendingIM PIM (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON PIM.productnum = IM.productnum AND PIM.partnerid = IM.partnerid
			WHERE
			PIM.PartnerID = @PartnerID AND txndate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''PC''
			GROUP BY PIM.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertIssuedPCQty
			SELECT IPC.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
			SUM(IPC.TxnQty) AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdIssuedPC IPC WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON IPC.productnum = IM.productnum AND IPC.partnerid = IM.partnerid
			WHERE IPC.PartnerID = @PartnerID AND IPC.effdate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''PC''
			GROUP BY IPC.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertIssuedIMQty
			SELECT IIM.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
			0 AS IssuedPCQty, SUM(IIM.TxnQty) AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdIssuedIM IIM WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON IIM.productnum = IM.productnum AND IIM.partnerid = IM.partnerid
			WHERE IIM.PartnerID = @PartnerID AND IIM.effdate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''PC''
			GROUP BY IIM.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertScrapHoldQty
			SELECT SH.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM) AS txnqtyUOM, 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
			0 AS IssuedPCQty, 0 AS IssuedIMQty, SUM(SH.TxnQty) AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdScrapHold SH WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON SH.productnum = IM.productnum AND SH.partnerid = IM.partnerid
			WHERE SH.PartnerID = @PartnerID AND SH.effdate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''PC''
			GROUP BY SH.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertInvBalReconQty
			SELECT IR.ProductNum, IM.ProductTypeCode, MAX(IR.TxnQtyUom), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 AS ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
			0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, SUM(IR.TxnQty) AS ImQty, 0 AS ImComparative, MAX(IR.txndate) AS txndate, 0 AS PendingIMQty
			FROM txdInvBalRecon IR (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON IR.productnum = IM.productnum AND IR.partnerid = IM.partnerid
			WHERE IR.PartnerID = @PartnerID AND IR.effdate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''PC''
			GROUP BY IR.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertExportsPreProcessedQty
			SELECT EPP.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty,
			SUM(ABS(EPP.TxnQty)) as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty,
			0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdExportsPreProcessed EPP WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON EPP.productnum = IM.productnum AND EPP.partnerid = IM.partnerid
			WHERE EPP.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
			AND EPP.PartnerID = @PartnerID AND EPP.txndate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''PC''
			GROUP BY EPP.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertPreProcessedTxns
			SELECT PPT.ProductNum, IM.ProductTypeCode, '''', 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS
			NegativeStagingQty, 0 AS PositiveFIFOQty, 0 AS NegativeFIFOQty, 0 as ExportsPreProcessedQty , SUM(ABS(TxnQty)) AS PreProcessedQty, 0 AS PendingQty,
			0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdPreProcessedTxns PPT WITH (nolock)
			JOIN tmdItemMaster IM (nolock)
			ON PPT.productnum = IM.productnum AND PPT.partnerid = IM.partnerid
			WHERE PPT.TxnCode IN (''SPPC'',''ANPC'',''SPIM'',''ANIM'')
			AND PPT.PartnerID = @PartnerID AND PPT.txndate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''PC''
			GROUP BY PPT.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertPositiveFIFOTxns
			SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty, 0 AS
			NegativeStagingQty, SUM(ABS(FP.TxnQty)) as PositiveFIFOQty, 0 as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 AS PreProcessedQty, 0 AS PendingQty,
			0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdFIFOProcessing FP (NOLOCK)
			JOIN tmdItemMaster IM (nolock)
			ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid
			WHERE TxnCode IN ( ''RPPC'',''APPC'',''INPC'',''XNPC'',''RPIM'',''APIM'',''INIM'',''XNIM'')
			AND FP.PartnerID = @PartnerID AND FP.txndate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''PC''
			AND FP.FIFOFlag = ''N''
			GROUP BY FP.ProductNum, IM.ProductTypeCode

			UNION ALL

			--fncInsertNegativeFIFOTxns
			SELECT FP.ProductNum, IM.ProductTypeCode,MAX(IM.txnqtyUOM), 0 AS FifoReceiptQty, 0 AS PositiveStagingQty,
			0 AS NegativeStagingQty, 0 as PositiveFIFOQty, SUM(ABS(FP.TxnQty)) as NegativeFIFOQty, 0 as ExportsPreProcessedQty, 0 as PreProcessedQty,
			0 AS PendingQty, 0 AS IssuedPCQty, 0 AS IssuedIMQty, 0 AS ScrapHoldQty, 0 AS ImQty, 0 AS ImComparative, '''' AS txndate, 0 AS PendingIMQty
			FROM txdFIFOProcessing FP (NOLOCK)
			JOIN tmdItemMaster IM (nolock)
			ON FP.productnum = IM.productnum AND FP.partnerid = IM.partnerid
			WHERE FP.TxnCode IN ( ''SPPC'',''ANPC'',''IPPC'',''XPPC'',''RNIM'',''ANIM'',''IPIM'',''XPIM'')
			AND FP.PartnerID = @PartnerID AND FP.txndate <= (select max ( effdate) from txdinvbalrecon ) AND IM.productTypeCode = ''PC''
			AND FP.FIFOFlag = ''N''
			GROUP BY FP.ProductNum, IM.ProductTypeCode
		) ttdTempComponentBalanceAuditPC
		JOIN tmdItemMasterHTSValues IMH (nolock)
		ON IMH.productnum = ttdTempComponentBalanceAuditPC.productnum AND IMH.partnerid = @PartnerID
		GROUP BY IMH.ProductNum, ProductTypeCode
	) q
	WHERE ABS(ImComparative) = 0
) AS C
--ORDER BY
--GROUP BY', N'00C73052-3411-46F7-9049-3CF20EBD888E', N'Balanced Parts', CAST(N'2018-06-22T13:16:25.180' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x03A5F6B3BC9E69F5531C538ED099E6CA, N'ScoreCard', N'18.1', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-06-22T13:35:45.283' AS DateTime), 364, N'77b99864-0e52-4816-a1fa-e456a6ae84f7', N'select
Invoicetype,
Count (*) AS [Total Invoices]
from txdMXInvoiceHeader with (nolock) 
WHERE partnerid = @PartnerID
AND YEAR(ShipDate) = YEAR(GetDate())
AND month(ShipDate) = ''02''
group by YEAR(ShipDate),MONTH(ShipDate),invoicetype
ORDER BY month(ShipDate)', N'6DE8ECB8-3092-4CA1-B2BC-E70CCA169E26', N'February Invoices', CAST(N'2018-06-22T13:35:45.283' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x4040E5D60F5F0A353EED3C4A6DCAEB1B, N'ScoreCard', N'18.1', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-06-22T13:40:01.133' AS DateTime), 365, N'0be67daa-6c18-4920-92ee-2c06c4877f00', N'select
Invoicetype,
Count (*) AS [Total Invoices]
from txdMXInvoiceHeader with (nolock) 
WHERE partnerid = @PartnerID
AND YEAR(ShipDate) = YEAR(GetDate())
AND month(ShipDate) = ''08''
group by YEAR(ShipDate),MONTH(ShipDate),invoicetype
ORDER BY month(ShipDate)', N'6DE8ECB8-3092-4CA1-B2BC-E70CCA169E26', N'August Invoices', CAST(N'2018-06-22T13:40:01.133' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xB4A8011F67DF086F69EAB2C45375C643, N'ScoreCard', N'18.1', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-06-22T13:29:59.603' AS DateTime), 366, N'92743cb3-4a3a-4734-a0b3-e2d2b685b30d', N'SELECT CONVERT(date,LastProcessedDate) AS [ProcessedDate],InvoiceType,count(*) AS [ProcessedInvoicesPerDate]
FROM txdMXInvoiceheader WITH (nolock)
WHERE LastProcessedDate BETWEEN CAST(YEAR(GETDATE()) AS varchar(MAX)) + ''-01-01'' AND CAST(YEAR(GETDATE()) AS varchar(MAX)) + ''-12-31''
AND FIFOGenerated = ''Y''
AND Invoicestatus = ''C''
AND partnerid = @PartnerID
GROUP BY CONVERT(date,LastProcessedDate),InvoiceType
ORDER BY 1 ASC', N'6DE8ECB8-3092-4CA1-B2BC-E70CCA169E26', N'Invoices Processed', CAST(N'2018-06-22T13:29:59.603' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xFCBF339F5C67B4B4349DDA9FCF9ECFAF, N'ScoreCard', N'18.1', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.417' AS DateTime), 367, N'36a5c8dd-4ce1-4a2a-a499-f21ae700c2ea', N'SELECT   h.ExportCountry,   AVG(cast(DATEDIFF(d, h.ShipDate, h.ReceiptLocationDate) as float)) as AvgDaysShipToReceipt from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID and h.ShipDate <> '''' and h.ReceiptLocationDate <> '''' GROUP BY h.ExportCountry  ORDER BY AvgDaysShipToReceipt DESC', N'All  Avg Days Ship to Receipt by Import Country', N'', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0x368225B32A9057741D1518BE9D5D1DAC, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.317' AS DateTime), 368, N'df72d4f7-ec88-4e7c-ba69-86d8a0ceac0c', N'SELECT DISTINCT h.ExportCountry  ,d.ProductNum INTO #tmpUnitCount FROM txdGVExportHeader h WITH (NOLOCK) JOIN txdGVExportDetail d WITH (NOLOCK) ON h.Exportguid = d.ExportGuid  AND h.PartnerID = d.PartnerID WHERE 1=1 AND @EXPORTDATERANGE  AND h.PartnerID = @PartnerID GROUP BY ExportCountry  ,ProductNum HAVING count(DISTINCT UnitValue) > 1  SELECT ExportCountry  ,COUNT(ProductNum) AS Count FROM #tmpUnitCount GROUP BY ExportCountry ORDER BY Count DESC', N'Export Fluctuation - Unit Value By Export Country', N'', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0x087B86CC3194D18EEF3E475FE2EBCF2E, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.337' AS DateTime), 369, N'd2ce018f-a6db-4312-955f-e39d37ea5dd5', N'SELECT top 10  h.ModeOfTransport,   AVG(cast(DATEDIFF(d, h.ExportDate, h.ArrivalDate) as float)) as AvgDaysExportToArrival from txdGVExportHeader h WITH (NOLOCK)  WHERE 1=1 AND @EXPORTDATERANGE AND h.PartnerID = @PartnerID and h.ExportDate <> '''' and h.ArrivalDate <> '''' GROUP BY h.ModeOfTransport ORDER BY AvgDaysExportToArrival DESC', N'Avg Days Export to Arrival by ModeOfTransport', N'This report evaluates mode of transportation performance by displaying the modes with the longest average amount of days from the export date to the arrival date. ', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0x364FE84521DD47A687E9E69387DB11A1, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-05-09T12:15:51.167' AS DateTime), 370, N'c6c45cf3-0c23-424e-89d5-5c6791f9328f', N'SELECT h.ImportCountry
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(h.ExportGUID) AS RoutedExportCount
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(h.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND h.RoutedExportFlag = ''Y''
GROUP BY h.ImportCountry
ORDER BY count(h.ExportGuid) DESC
', N'All Routed Import Country', N'This report shows how many routed exports are done by import country.', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0x70A840D691468E5AFB0669CCC81ECD9F, N'GTV Report', N'18.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-05-09T12:16:56.227' AS DateTime), 371, N'64bcb503-801a-4b75-bd82-303845d5b8ad', N'SELECT h.PortOfLading
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(h.ExportGUID) AS RoutedExportCount
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(h.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND h.RoutedExportFlag = ''Y''
GROUP BY h.PortOfLading
ORDER BY count(h.ExportGuid) DESC
', N'All Routed Port of Lading', N'This report shows how many routed exports are done by port of lading. ', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xE3F1339E45ADFE02F86ACF5781CFB25B, N'GTV Report', N'18.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-05-09T12:17:25.757' AS DateTime), 372, N'9ad1f064-17cb-4a35-a8b1-e8a9150deafe', N'SELECT h.PortOfUnlading
	,CAST(SUM(h.EstBaseTotalShipmentValue) AS NUMERIC(28, 2)) AS [EstBaseTotalShipmentValue(@CurrencyCode)]
	,COUNT(h.ExportGUID) AS RoutedExportCount
	,CAST(SUM(h.EstBaseTotalShipmentValue) / COUNT(h.ExportGUID) AS NUMERIC(28, 2)) AS [EstBaseAvgValuePerDeclaration(@CurrencyCode)]
FROM txdGVExportHeader h WITH (NOLOCK)
WHERE 1=1
	AND @EXPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND h.RoutedExportFlag = ''Y''
GROUP BY h.PortOfUnlading
ORDER BY count(h.ExportGuid) DESC', N'All Routed Port of Unlading', N'This report shows how many routed exports are done by port of unlading. ', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'41c55542-19fa-4d26-86ca-e21c53ec1a5d', N'', 0xE8B89963C377558EFD907B35654F614F, N'GTV Report', N'18.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:16.980' AS DateTime), 373, N'43adafcf-f987-4e98-b516-9e12c5d26379', N'Select   h.BrokerName,   CAST(SUM(d.EstBaseTotalLineValue * (ctr.MainPercent - ctr.PreferentialPercent)) as numeric (28,2)) as [EstBaseSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and d.AdValoremDutyRate = ctr.PreferentialPercent  and ctr.MainPercent > ctr.PreferentialPercent  and ctr.PreferentialPercent <>  -1 Group By h.BrokerName ORDER BY [EstBaseSavings (@CurrencyCode)] desc', N'All Preferential Duty Savings By Broker', N'Pending: This report shows all brokers where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported.', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0x62948C167C1F024F98830EC898F1D2CC, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.980' AS DateTime), 374, N'75464a33-e2ab-4095-a1a9-5ed51acc731d', N'Select   d.BusinessUnit,   CAST(SUM(d.EstBaseTotalLineValue * ((ctr.MainPercent - ctr.PreferentialPercent)))as numeric (28,2)) as [EstBaseSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and d.AdValoremDutyRate = ctr.PreferentialPercent  and ctr.MainPercent > ctr.PreferentialPercent  and ctr.PreferentialPercent <>  -1 Group By d.BusinessUnit ORDER BY [EstBaseSavings (@CurrencyCode)] desc', N'All Preferential Duty Savings By Business Unit', N'Pending: This report shows all business units where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported.', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0x2618C14AC11700D1F15234B444B61DB6, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.980' AS DateTime), 375, N'65b6fd55-99de-460f-9366-c157fca4e78d', N'Select   d.HsNum,   CAST(SUM(d.EstBaseTotalLineValue * ((ctr.MainPercent- ctr.PreferentialPercent)))as numeric (28,2)) as [EstBaseSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and d.AdValoremDutyRate = ctr.PreferentialPercent  and ctr.MainPercent > ctr.PreferentialPercent  and ctr.PreferentialPercent <>  -1 Group By d.HsNum ORDER BY [EstBaseSavings (@CurrencyCode)] desc', N'All Preferential Duty Savings By Hs Number', N'Pending: This report shows all HS numbers where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported.', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0x1C6871B5C7A1E0ABEA7D0972FEF49998, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.983' AS DateTime), 376, N'1d4bbca7-52de-4be1-a251-2d10d4d50b30', N'Select   h.ImportCountry,   CAST(SUM(d.EstBaseTotalLineValue * (ctr.MainPercent - ctr.PreferentialPercent)) as numeric (28,2)) as [EstBaseSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and d.AdValoremDutyRate = ctr.PreferentialPercent  and ctr.MainPercent > ctr.PreferentialPercent  and ctr.PreferentialPercent <>  -1 Group By h.ImportCountry ORDER BY [EstBaseSavings (@CurrencyCode)] desc', N'All Preferential Duty Savings By Import Country', N'Pending: This report shows all countries of import where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported.', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0x5B8350D4A4A5946CAC4B3F8E6D6C8D5A, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.983' AS DateTime), 377, N'4574f771-eea0-450b-8021-24866d37efe1', N'SELECT d.PortOfUnlading,
	CAST(SUM(d.EstBaseTotalLineValue * (ctr.MainPercent - ctr.PreferentialPercent)) AS NUMERIC(28, 2)) AS [EstBaseSavings (@CurrencyCode)]
FROM txdgvimportheader h WITH (NOLOCK)
JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
	AND h.PartnerID = d.PartnerID
JOIN txdGVContentTariffRates ctr WITH (NOLOCK) ON h.PartnerID = ctr.PartnerID
	AND h.ImportCountry = ctr.ImportCountry
	AND d.CountryOfOrigin = ctr.CountryOfOrigin
	AND d.HsNum = ctr.HsNum
WHERE 1=1
	AND @IMPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND d.AdValoremDutyRate = ctr.PreferentialPercent
	AND ctr.MainPercent > ctr.PreferentialPercent
	AND ctr.PreferentialPercent <> - 1
GROUP BY d.PortOfUnlading
ORDER BY [EstBaseSavings (@CurrencyCode)] DESC', N'All Preferential Duty Savings By Port Of Unlading ', N'Pending: This report shows all ports of unlading where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported.', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'17.1 SQL Updates', N'jmerwin', 0x711F1213A71B3F04588F08AB0B2F11C0, N'GTV Report', N'18.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:16.983' AS DateTime), 378, N'ecab520a-b76e-4e71-b229-254acf559ad8', N'Select   d.ProductNum,   CAST(SUM(d.EstBaseTotalLineValue * (ctr.MainPercent - ctr.PreferentialPercent)) as numeric (28,2)) as [EstBaseSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and d.AdValoremDutyRate = ctr.PreferentialPercent  and ctr.MainPercent > ctr.PreferentialPercent  and ctr.PreferentialPercent <>  -1 Group By d.ProductNum ORDER BY [EstBaseSavings (@CurrencyCode)] desc ', N'All Preferential Duty Savings By Product Number', N'Pending: This report shows all product numbers where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported.', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0x1764CD6B27D6A3A8E58604FF6EC04F26, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:17.040' AS DateTime), 379, N'98a13550-e21a-4132-a325-e1bb05a17a5c', N'Select  h.PartnerID,  h.ImportCountry,   datepart(year, ImportDate) as ImportYear,   CAST(SUM(d.EstBaseTotalLineValue * (ctr.MainPercent - ctr.PreferentialPercent)) as numeric (28,2)) as Value INTO #tmpCurrentYear from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND h.PartnerID = @PartnerID  and d.AdValoremDutyRate = ctr.PreferentialPercent  and ctr.MainPercent > ctr.PreferentialPercent  and ctr.PreferentialPercent <>  -1  and datepart(year, ImportDate) =  DATEPART(year, GetDate())  Group By h.PartnerID, h.ImportCountry, datepart(year, ImportDate) Order By Value  desc    Select  h.PartnerID,  h.ImportCountry,   datepart(year, ImportDate) as ImportYear,   CAST(SUM(d.EstBaseTotalLineValue * (ctr.MainPercent - ctr.PreferentialPercent)) as numeric (28,2)) as Value INTO #tmpLastYear from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE   d.AdValoremDutyRate = ctr.PreferentialPercent  and ctr.MainPercent > ctr.PreferentialPercent  and ctr.PreferentialPercent <>  -1  and datepart(year, ImportDate) =  DATEPART(year, dateadd(year, -1, GetDate()))           and ImportDate <= (GETDATE()-365) Group By h.PartnerID, h.ImportCountry, datepart(year, ImportDate) Order By Value  desc    SELECT TOP 10   h.ImportCountry,    isnull(sum(h.Value), 0) as [@CurrentYear],  isnull(sum(h2.Value), 0) as [@LastYear] FROM #tmpCurrentYear h left join #tmpLastYear h2 on   h.ImportCountry = h2.ImportCountry and  h.PartnerID = h2.PartnerID Group By h.ImportCountry ORDER BY sum(h.Value) DESC   ', N'Preferential Duty Savings by Import Country - YoY', N'Pending:  This comparison report shows the duty savings by country of import from the current year and the previous year.', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0x98C753EA3F4751D8D3B6DEC528B9110A, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.967' AS DateTime), 380, N'a383c689-0b65-4d57-8ee8-a1aca268d54e', N'Select TOP 5   h.BrokerName,   CAST(SUM(d.EstBaseTotalLineValue * (ctr.MainPercent - ctr.PreferentialPercent)) as numeric (28,2)) as [EstBaseSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and d.AdValoremDutyRate = ctr.PreferentialPercent  and ctr.MainPercent > ctr.PreferentialPercent  and ctr.PreferentialPercent <>  -1 Group By h.BrokerName ORDER BY [EstBaseSavings (@CurrencyCode)] desc', N'Top Preferential Duty Savings By Broker', N'Pending: This report shows the top brokers where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported.', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0x32572146E8A77A76AA74F31A20C603AD, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.967' AS DateTime), 381, N'9575d3bb-1b4a-452f-b2c9-eba6d7f292b8', N'Select TOP 5   d.BusinessUnit,   CAST(SUM(d.EstBaseTotalLineValue * ((ctr.MainPercent - ctr.PreferentialPercent)))as numeric (28,2)) as [EstBaseSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and d.AdValoremDutyRate = ctr.PreferentialPercent  and ctr.MainPercent > ctr.PreferentialPercent  and ctr.PreferentialPercent <>  -1 Group By d.BusinessUnit ORDER BY [EstBaseSavings (@CurrencyCode)] desc', N'Top Preferential Duty Savings By Business Unit', N'Pending: This report shows the top business units where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported.', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0xD87FD042D69BFF7ED1B3ACBB0016CB43, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.967' AS DateTime), 382, N'3957b953-3cab-4c91-a6b9-fe8c35f106f3', N'Select top 10   d.HsNum,   CAST(SUM(d.EstBaseTotalLineValue * ((ctr.MainPercent- ctr.PreferentialPercent)))as numeric (28,2)) as [EstBaseSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and d.AdValoremDutyRate = ctr.PreferentialPercent  and ctr.MainPercent > ctr.PreferentialPercent  and ctr.PreferentialPercent <>  -1 Group By d.HsNum ORDER BY [EstBaseSavings (@CurrencyCode)] desc', N'Top Preferential Duty Savings By Hs Number', N'Pending: This report shows the top HS numbers where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported.', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0xF301C06BC804CEC7DE7940A362A2B13B, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.967' AS DateTime), 383, N'9adfa606-110c-48bb-b602-49d4f5c1d358', N'Select top 10   h.ImportCountry,   CAST(SUM(d.EstBaseTotalLineValue * (ctr.MainPercent - ctr.PreferentialPercent)) as numeric (28,2)) as [EstBaseSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and d.AdValoremDutyRate = ctr.PreferentialPercent  and ctr.MainPercent > ctr.PreferentialPercent  and ctr.PreferentialPercent <>  -1 Group By h.ImportCountry ORDER BY [EstBaseSavings (@CurrencyCode)] desc', N'Top Preferential Duty Savings By Import Country', N'Pending: This report shows the top countries of import where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported.', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0x49F4ED8B54A66BF1228412FD2F84050B, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.967' AS DateTime), 384, N'0ba4cc93-0d7b-466f-9526-e47283e96888', N'SELECT TOP 10 d.PortOfUnlading,
	CAST(SUM(d.EstBaseTotalLineValue * (ctr.MainPercent - ctr.PreferentialPercent)) AS NUMERIC(28, 2)) AS [EstBaseSavings (@CurrencyCode)]
FROM txdgvimportheader h WITH (NOLOCK)
JOIN txdgvimportdetail d WITH (NOLOCK) ON h.EntryGuid = d.EntryGuid
	AND h.PartnerID = d.PartnerID
JOIN txdGVContentTariffRates ctr WITH (NOLOCK) ON h.PartnerID = ctr.PartnerID
	AND h.ImportCountry = ctr.ImportCountry
	AND d.CountryOfOrigin = ctr.CountryOfOrigin
	AND d.HsNum = ctr.HsNum
WHERE 1=1
	AND @IMPORTDATERANGE
	AND h.PartnerID = @PartnerID
	AND d.AdValoremDutyRate = ctr.PreferentialPercent
	AND ctr.MainPercent > ctr.PreferentialPercent
	AND ctr.PreferentialPercent <> - 1
GROUP BY d.PortOfUnlading
ORDER BY [EstBaseSavings (@CurrencyCode)] DESC', N'Top Preferential Duty Savings by Port of Unlading ', N'Pending: This report shows the top ports of unlading where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported.', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'17.1 SQL Updates', N'jmerwin', 0x03003B5B2F530203316C11BE9F742966, N'GTV Report', N'18.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-02-18T13:06:17.020' AS DateTime), 385, N'300517fa-4483-4110-a62c-354ff3bb6cd6', N'Select top 10   d.PreferenceCode1,   CAST(SUM(d.EstBaseTotalLineValue * (ctr.MainPercent - ctr.PreferentialPercent)) as numeric (28,2)) as [EstBaseSavings (@CurrencyCode)]  from txdgvimportheader h WITH (NOLOCK)  join txdgvimportdetail d WITH (NOLOCK) on  h.EntryGuid = d.EntryGuid and  h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON  h.PartnerID = ctr.PartnerID AND  h.ImportCountry = ctr.ImportCountry AND  d.CountryOfOrigin = ctr.CountryOfOrigin AND  d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID and d.AdValoremDutyRate = ctr.PreferentialPercent and  ctr.MainPercent > ctr.PreferentialPercent and  ctr.PreferentialPercent <> -1 and d.PreferenceCode1 <> '''' Group By d.PreferenceCode1  Order By [EstBaseSavings (@CurrencyCode)] desc ', N'Top Preferential Duty Savings By Preference Code', N'Pending: This report shows the top preference codes claimed where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported. ', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0xA94EB57B4AD88B10FD89525B6A2A0269, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-02-18T13:06:16.970' AS DateTime), 386, N'358c8150-3a72-4ef2-9c3a-342bef5b640e', N'Select top 10   d.ProductNum,   CAST(SUM(d.EstBaseTotalLineValue * (ctr.MainPercent - ctr.PreferentialPercent)) as numeric (28,2)) as [EstBaseSavings (@CurrencyCode)] from txdgvimportheader h WITH (NOLOCK) join txdgvimportdetail d WITH (NOLOCK) on h.EntryGuid = d.EntryGuid and h.PartnerID = d.PartnerID  JOIN txdGVContentTariffRates ctr with (nolock) ON h.PartnerID = ctr.PartnerID   AND h.ImportCountry = ctr.ImportCountry   AND d.CountryOfOrigin = ctr.CountryOfOrigin   AND d.HsNum = ctr.HsNum  WHERE 1=1 AND @IMPORTDATERANGE AND h.PartnerID = @PartnerID  and d.AdValoremDutyRate = ctr.PreferentialPercent  and ctr.MainPercent > ctr.PreferentialPercent  and ctr.PreferentialPercent <>  -1 Group By d.ProductNum ORDER BY [EstBaseSavings (@CurrencyCode)] desc ', N'Top Preferential Duty Savings By Product Number', N'Pending: This report shows the top product numbers where savings were realized through the use of a preferential duty rate. This report utilizes Integration Point Global Trade Content to compare the normal duty rate to the preferential duty rate, multiplying the difference in those rates by the value of goods imported.', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'jmerwin', N'jmerwin', 0x863BC0CE534BF098A5D02CFBCB940A90, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2018-11-21T14:41:17.047' AS DateTime), 387, N'e385a7cc-7bc7-4bdb-a068-c98721fccff2', N'SELECT TOP(10) eh.ImportCountry
	,COUNT(*) AS TotalShipments
FROM txdExportHeader eh WITH (NOLOCK)
WHERE eh.RecordType = ''E''
	AND @TargetString
	AND eh.STATUS NOT IN (''V'',''H'',''U'','''')
GROUP BY eh.ImportCountry
ORDER BY COUNT(*) DESC', N'B8CC8D5C-B897-41FA-A96D-060CF407727A', N'', CAST(N'2018-11-21T14:41:17.047' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xA189B248F09451B4393D9756F0C79EA5, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T14:44:34.033' AS DateTime), 388, N'8b8d19e5-02fd-44f0-a3d8-ca5ae3faa046', N'SELECT ''Month '' + CAST(MONTH(m.Month) AS VARCHAR(5)) AS Month
	,ISNULL((
			SELECT COUNT(*)
			FROM txdExportHeader eh WITH (NOLOCK)
			WHERE eh.RecordType = ''E''
      			AND @TargetString
      			--and eh.Status not in (''V'',''H'',''U'','''')
				AND eh.CarrierID <> ''''
				AND EffDate BETWEEN DATEADD(year, - 1, m.Month)
					AND DATEADD(year, - 1, DATEADD(month, 1, m.Month))
			), '''') AS [Last Year]
	,ISNULL((
			SELECT COUNT(*)
			FROM txdExportHeader eh WITH (NOLOCK)
			WHERE eh.RecordType = ''E''
      			AND @TargetString
      			--and eh.Status not in (''V'',''H'',''U'','''')
				AND eh.CarrierID <> ''''
      			AND EffDate BETWEEN m.Month
					AND DATEADD(month, 1, m.Month)
			), '''') AS [This Year]
FROM (
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 1, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 2, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 3, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 4, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 5, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 6, GETDATE())), 0) AS Month  
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 7, GETDATE())), 0) AS Month  
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 8, GETDATE())), 0) AS Month    
	) m
ORDER BY Month', N'B8CC8D5C-B897-41FA-A96D-060CF407727A', N'Top Carrier by Shipments Year over Year', CAST(N'2018-11-21T14:44:34.033' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x82C4D771BF36A9AF893C77027F1DD460, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T14:57:56.917' AS DateTime), 389, N'3567f52e-1db9-40b5-a297-0a4bcf2def07', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Country of Export', CAST(N'2018-11-21T14:57:56.917' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T14:58:07.537' AS DateTime), 390, N'e1328eef-1e48-44f5-8498-56b58c836a39', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Number of Shipments', CAST(N'2018-11-21T14:58:07.537' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T14:58:19.440' AS DateTime), 391, N'4d6e52ff-2172-45f1-9724-10d698c2827c', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Start Date', CAST(N'2018-11-21T14:58:19.440' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T14:58:26.663' AS DateTime), 392, N'2cb7ae0e-e0ad-42e1-b944-178e930a9e34', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'End Date', CAST(N'2018-11-21T14:58:26.663' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T14:58:38.997' AS DateTime), 393, N'd7207325-b5e4-4e84-aff6-a6b9848ef293', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Ten Countries Shipped To', CAST(N'2018-11-21T14:58:38.997' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T14:58:54.757' AS DateTime), 394, N'3db0efbb-9943-4602-8d31-5e36999a594e', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Ten Port Pairings', CAST(N'2018-11-21T14:58:54.757' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:02:02.177' AS DateTime), 395, N'52b7dfb3-a84a-477c-bebf-4a74f11106bb', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ship From''s by Shipment Count', CAST(N'2018-11-21T15:02:02.177' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:02:11.997' AS DateTime), 396, N'cb2c87ca-9b9a-4a14-bbb2-ddb149a23630', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ship From''s by Value', CAST(N'2018-11-21T15:02:11.997' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:02:20.963' AS DateTime), 397, N'd03bc80d-7e6a-4df8-ab94-b108e9d2624f', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ship To''s by Shipment Count', CAST(N'2018-11-21T15:02:20.963' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:02:29.910' AS DateTime), 398, N'da16660e-2cc3-4700-b228-c1ec69afa838', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ship To''s by Value', CAST(N'2018-11-21T15:02:29.910' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:02:50.980' AS DateTime), 399, N'61814230-24f8-47cf-a4c6-6ed1e69e8df8', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ult Consignees by Value', CAST(N'2018-11-21T15:02:50.980' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:06:14.990' AS DateTime), 400, N'da16660e-2cc3-4700-b228-c1ec69afa838', N'SELECT TOP(5) ed.TotalValue
       ,ep.UltimateConsigneeCompanyName
FROM txdexportparties ep WITH (NOLOCK)
JOIN (
       SELECT PartnerID
              ,ExportGUID
              ,SUM(TOTALVALUE) AS TOTALVALUE
       FROM txdexportdetail ed WITH (NOLOCK)
       GROUP BY PartnerID
              ,ExportGUID
       ) ED
ON ED.PartnerID = EP.PartnerID and ED.ExportGUID = EP.ExportGUID
JOIN txdexportheader eh WITH (NOLOCK) ON EP.exportguid = EP.exportguid
       AND EP.partnerid = EP.partnerid
WHERE eh.recordtype = ''E''
AND @TargetString
--and eh.Status not in (''V'',''H'',''U'','''') 
GROUP BY ep.UltimateConsigneeCompanyName
       ,ed.totalvalue
ORDER BY ed.totalvalue DESC', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ship To''s by Value', CAST(N'2018-11-21T15:06:14.990' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xDA37B4B18615CAFCAD2818C2F0EC5167, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T15:03:03.073' AS DateTime), 401, N'dd2ce4da-a1e7-49e6-99ac-4686d0007c93', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Shipment Count: Year over Year', CAST(N'2018-11-21T15:03:03.073' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:05:54.130' AS DateTime), 402, N'd03bc80d-7e6a-4df8-ab94-b108e9d2624f', N'SELECT TOP(5) COUNT(ep.UltimateConsigneeCompanyName), ep.UltimateConsigneeCompanyName
FROM txdexportparties ep WITH (NOLOCK)
INNER JOIN txdexportheader eh WITH (NOLOCK)
	ON ep.exportguid = eh.exportguid
	AND ep.partnerid = eh.partnerid
WHERE eh.recordtype = ''E''
AND @TargetString
--and eh.Status not in (''V'',''H'',''U'','''') 
GROUP BY ep.UltimateConsigneeCompanyName
ORDER BY COUNT(ep.UltimateConsigneeCompanyName) DESC', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ship To''s by Shipment Count', CAST(N'2018-11-21T15:05:54.130' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xCE00C2694F96F77C02118B2BF6AEC1B3, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T15:05:08.710' AS DateTime), 403, N'cb2c87ca-9b9a-4a14-bbb2-ddb149a23630', N'SELECT TOP(5) ed.totalvalue
       ,ep.ShipToCompanyName
FROM txdexportparties ep WITH (NOLOCK)
INNER JOIN (
       SELECT PartnerID
              ,ExportGUID
              ,SUM(TOTALVALUE) AS TOTALVALUE
       FROM txdexportdetail ed WITH (NOLOCK)
       GROUP BY PartnerID
              ,ExportGUID
       ) ED
ON ED.PartnerID = EP.PartnerID and ED.ExportGUID = EP.ExportGUID
INNER JOIN txdexportheader eh WITH (NOLOCK)
	ON EP.exportguid = EP.exportguid
	AND EP.partnerid = EP.partnerid
WHERE eh.recordtype = ''E''
AND @TargetString
--and eh.Status not in (''V'',''H'',''U'','''') 
GROUP BY ep.ShipToCompanyName
       ,ed.totalvalue
ORDER BY ed.totalvalue DESC', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ship From''s by Value', CAST(N'2018-11-21T15:05:08.710' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x76BE98AAD73AC147A1551254B14CF132, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T15:08:07.673' AS DateTime), 404, N'cb2c87ca-9b9a-4a14-bbb2-ddb149a23630', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ship From''s by Value', CAST(N'2018-11-21T15:08:07.673' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:07:58.410' AS DateTime), 405, N'd03bc80d-7e6a-4df8-ab94-b108e9d2624f', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ship To''s by Shipment Count', CAST(N'2018-11-21T15:07:58.410' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:06:55.140' AS DateTime), 406, N'da16660e-2cc3-4700-b228-c1ec69afa838', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ship To''s by Value', CAST(N'2018-11-21T15:06:55.140' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:02:40.597' AS DateTime), 407, N'694d7a38-d7f9-438c-a276-b5275a7a53ac', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ult Consignee by Shipment Count', CAST(N'2018-11-21T15:02:40.597' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:11:07.963' AS DateTime), 408, N'52570615-a4d5-4b7a-81f4-ec9bb3dfa723', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Ten HS Numbers', CAST(N'2018-11-21T15:11:07.963' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:11:21.233' AS DateTime), 409, N'ca21be98-194c-459e-ac4f-c010fae6684d', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'ECN''s by %', CAST(N'2018-11-21T15:11:21.233' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:11:33.340' AS DateTime), 410, N'bfec284b-0384-4cb3-8689-586bf1d49e5d', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'% Lines FTA Certificates Utilized', CAST(N'2018-11-21T15:11:33.340' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:11:43.410' AS DateTime), 411, N'9f49a023-9350-4780-8a32-e882f46afbdf', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'% Lines Allocated to a License', CAST(N'2018-11-21T15:11:43.410' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:11:54.830' AS DateTime), 412, N'4f4a40f5-a286-4ded-8bcb-01e3f5afc4a7', N'', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'% Products Exported Domestic vs Foreign', CAST(N'2018-11-21T15:11:54.830' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-21T15:13:00.520' AS DateTime), 413, N'52570615-a4d5-4b7a-81f4-ec9bb3dfa723', N'SELECT TOP(10) ed.ExportTariffNum
	,COUNT(*) AS Count
FROM txdExportDetail ed WITH (NOLOCK)
JOIN txdExportHeader eh WITH (NOLOCK)
	ON eh.PartnerID = ed.PartnerID
	AND eh.ExportGUID = ed.ExportGUID
WHERE eh.PartnerID = (SELECT PartnerID FROM tmfDefaults WITH (NOLOCK))
	AND eh.RecordType = ''E''
    AND ed.ExportTariffNum <> ''''
    AND @TargetString
	/*AND eh.STATUS IN (''P'',''F'')*/
GROUP BY ed.ExportTariffNum
ORDER BY COUNT(*) DESC, ExportTariffNum', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Ten HS Numbers', CAST(N'2018-11-21T15:13:00.520' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xBA73C9C781BD0351F0748281061C5273, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T15:13:48.730' AS DateTime), 414, N'ca21be98-194c-459e-ac4f-c010fae6684d', N'SELECT ed.ECNNum
	,((count(*) * 100.0) / sum(count(*)) OVER ()) AS Percentage
FROM txdExportDetail ed WITH (NOLOCK)
INNER JOIN txdExportHeader eh WITH (NOLOCK)
	ON eh.PartnerID = ed.PartnerID
	AND eh.ExportGUID = ed.ExportGUID
WHERE eh.PartnerID = (SELECT PartnerID FROM tmfDefaults WITH (NOLOCK))
	AND eh.RecordType = ''E''
    AND @TargetString
	/*AND eh.STATUS IN (''P'',''F'')*/
GROUP BY ed.ECNNum
ORDER BY Percentage DESC, ed.ECNNum', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'ECN''s by %', CAST(N'2018-11-21T15:13:48.730' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x11E792B0D1CB2B3B379A790EC394A3FE, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T15:04:12.010' AS DateTime), 415, N'52b7dfb3-a84a-477c-bebf-4a74f11106bb', N'SELECT TOP(5) ExportCountry
	,count(*) AS TotalShipments
FROM txdexportheader eh WITH (NOLOCK)
WHERE recordtype = ''E''
	AND @TargetString
	/*AND h.STATUS NOT IN (''V'',''H'',''U'','''')*/
GROUP BY Exportcountry
ORDER BY count(*) DESC', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ship From''s by Shipment Count', CAST(N'2018-11-21T15:04:12.010' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x5974917C1521608FB26A3238F5EEDA8B, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T15:09:45.003' AS DateTime), 416, N'd03bc80d-7e6a-4df8-ab94-b108e9d2624f', N'SELECT TOP(5) count(ep.ShipToCompanyName) as Total
	,ep.ShipToCompanyName
FROM txdexportparties ep WITH (NOLOCK)
JOIN txdexportheader eh WITH (NOLOCK) ON ep.exportguid = eh.exportguid
	AND ep.partnerid = eh.partnerid
WHERE eh.recordtype = ''E''
AND @TargetString
--and eh.Status not in (''V'',''H'',''U'','''') 
GROUP BY ep.ShipToCompanyName
ORDER BY count(ep.ShipToCompanyName) DESC', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ship To''s by Shipment Count', CAST(N'2018-11-21T15:09:45.003' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x145F89939F889A6CA22446CB83EF4374, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T15:09:59.810' AS DateTime), 417, N'da16660e-2cc3-4700-b228-c1ec69afa838', N'SELECT TOP(5) ed.totalvalue
       ,ep.ShipToCompanyName
FROM txdexportparties ep WITH (NOLOCK)
JOIN (
       SELECT PartnerID
              ,ExportGUID
              ,SUM(TOTALVALUE) AS TOTALVALUE
       FROM txdexportdetail ed WITH (NOLOCK)
       GROUP BY PartnerID
              ,ExportGUID
       ) ED
ON ED.PartnerID = EP.PartnerID and ED.ExportGUID = EP.ExportGUID
JOIN txdexportheader eh WITH (NOLOCK) ON EP.exportguid = EP.exportguid
       AND EP.partnerid = EP.partnerid
WHERE eh.recordtype = ''E''
AND @TargetString
--and eh.Status not in (''V'',''H'',''U'','''') 
GROUP BY ep.ShipToCompanyName
       ,ed.totalvalue
ORDER BY ed.totalvalue DESC', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ship To''s by Value', CAST(N'2018-11-21T15:09:59.810' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x25683AFB9A40E2F045FEEEE3071E2A2B, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T15:10:42.737' AS DateTime), 418, N'694d7a38-d7f9-438c-a276-b5275a7a53ac', N'SELECT TOP(5) COUNT(ep.UltimateConsigneeCompanyName), ep.UltimateConsigneeCompanyName
FROM txdexportparties ep WITH (NOLOCK)
INNER JOIN txdexportheader eh WITH (NOLOCK)
	ON ep.exportguid = eh.exportguid
	AND ep.partnerid = eh.partnerid
WHERE eh.recordtype = ''E''
	AND @TargetString
	--and eh.Status not in (''V'',''H'',''U'','''') 
GROUP BY ep.UltimateConsigneeCompanyName
ORDER BY COUNT(ep.UltimateConsigneeCompanyName) DESC', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ult Consignee by Shipment Count', CAST(N'2018-11-21T15:10:42.737' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x7DBDCB16657218BAD178267CA965EFF3, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T15:06:48.537' AS DateTime), 419, N'61814230-24f8-47cf-a4c6-6ed1e69e8df8', N'SELECT TOP(5) ed.TotalValue
       ,ep.UltimateConsigneeCompanyName
FROM txdexportparties ep WITH (NOLOCK)
JOIN (
       SELECT PartnerID
              ,ExportGUID
              ,SUM(TOTALVALUE) AS TOTALVALUE
       FROM txdexportdetail ed WITH (NOLOCK)
       GROUP BY PartnerID
              ,ExportGUID
       ) ED
ON ED.PartnerID = EP.PartnerID and ED.ExportGUID = EP.ExportGUID
JOIN txdexportheader eh WITH (NOLOCK) ON EP.exportguid = EP.exportguid
       AND EP.partnerid = EP.partnerid
WHERE eh.recordtype = ''E''
AND @TargetString
--and eh.Status not in (''V'',''H'',''U'','''') 
GROUP BY ep.UltimateConsigneeCompanyName
       ,ed.totalvalue
ORDER BY ed.totalvalue DESC', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ult Consignees by Value', CAST(N'2018-11-21T15:06:48.537' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xDA37B4B18615CAFCAD2818C2F0EC5167, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T15:07:33.100' AS DateTime), 420, N'dd2ce4da-a1e7-49e6-99ac-4686d0007c93', N'SELECT ''Month '' + CAST(MONTH(m.Month) AS VARCHAR(5)) AS Month
	,ISNULL((
			SELECT count(*)
			FROM txdExportHeader eh WITH (NOLOCK)
			WHERE RecordType = ''E''
      			AND @TargetString
      			--and eh.Status not in (''V'',''H'',''U'','''')
      AND EffDate BETWEEN DATEADD(year, - 1, m.Month)
					AND DATEADD(year, - 1, DATEADD(month, 1, m.Month))
			), '''') AS [Last Year]
	,ISNULL((
			SELECT count(*)
			FROM txdExportHeader eh WITH (NOLOCK)
			WHERE RecordType = ''E''
      			AND @TargetString
      			--and eh.Status not in (''V'',''H'',''U'','''')
      			AND EffDate BETWEEN m.Month
					AND DATEADD(month, 1, m.Month)
			), '''') AS [This Year]
FROM (
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 1, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 2, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 3, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 4, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 5, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 6, GETDATE())), 0) AS Month  
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 7, GETDATE())), 0) AS Month  
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 8, GETDATE())), 0) AS Month    
	) m
ORDER BY Month', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Shipment Count: Year over Year', CAST(N'2018-11-21T15:07:33.100' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xCE1BD9270212AF5A9C8AEEFA8D28B9EA, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T14:47:43.683' AS DateTime), 421, N'8b8d19e5-02fd-44f0-a3d8-ca5ae3faa046', N'SELECT ''Month '' + CAST(MONTH(m.Month) AS VARCHAR(5)) AS Month
	,ISNULL((
			SELECT COUNT(*)
			FROM txdExportHeader eh WITH (NOLOCK)
			WHERE eh.RecordType = ''E''
      			AND @TargetString
      			--and eh.Status not in (''V'',''H'',''U'','''')
				AND eh.CarrierID <> ''''
				AND EffDate BETWEEN DATEADD(year, - 1, m.Month)
					AND DATEADD(year, - 1, DATEADD(month, 1, m.Month))
			), '''') AS [Last Year]
	,ISNULL((
			SELECT COUNT(*)
			FROM txdExportHeader eh WITH (NOLOCK)
			WHERE eh.RecordType = ''E''
      			AND @TargetString
      			--and eh.Status not in (''V'',''H'',''U'','''')
				AND eh.CarrierID <> ''''
      			AND EffDate BETWEEN m.Month
					AND DATEADD(month, 1, m.Month)
			), '''') AS [This Year]
FROM (
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 1, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 2, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 3, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 4, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 5, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 6, GETDATE())), 0) AS Month  
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 7, GETDATE())), 0) AS Month  
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 8, GETDATE())), 0) AS Month    
	) m
ORDER BY Month', N'B8CC8D5C-B897-41FA-A96D-060CF407727A', N'Top Carrier by Shipments Year over Year', CAST(N'2018-11-21T14:47:43.683' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x82C4D771BF36A9AF893C77027F1DD460, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T14:46:32.830' AS DateTime), 422, N'c88a17c3-fb9b-419c-86c7-190e6460d97e', N'SELECT ''Month '' + CAST(MONTH(m.Month) AS VARCHAR(5)) AS Month
	,ISNULL((
			SELECT COUNT(*)
			FROM txdExportHeader eh WITH (NOLOCK)
			JOIN txdExportParties ep WITH (NOLOCK)
			ON eh.Exportguid = ep.Exportguid
			AND eh.PartnerID = ep.PartnerID
			WHERE RecordType = ''E''
      			--AND @TargetString
      			--and eh.Status not in (''V'',''H'',''U'','''')
				AND ForwarderCompanyName <> ''''
				AND eh.EffDate BETWEEN DATEADD(year, - 1, m.Month)
					AND DATEADD(year, - 1, DATEADD(month, 1, m.Month))
			), '''') AS [Last Year]
	,ISNULL((
			SELECT COUNT(*)
			FROM txdExportHeader eh WITH (NOLOCK)
			JOIN txdExportParties ep WITH (NOLOCK)
			ON eh.Exportguid = ep.Exportguid
			AND eh.PartnerID = ep.PartnerID
			WHERE RecordType = ''E''			
      			--AND @TargetString
      			--and eh.Status not in (''V'',''H'',''U'','''')
				AND ForwarderCompanyName <> ''''
      			AND eh.EffDate BETWEEN m.Month
					AND DATEADD(month, 1, m.Month)
			), '''') AS [This Year]
FROM (
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 1, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 2, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 3, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 4, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 5, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 6, GETDATE())), 0) AS Month  
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 7, GETDATE())), 0) AS Month  
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 8, GETDATE())), 0) AS Month    
	) m
ORDER BY Month', N'B8CC8D5C-B897-41FA-A96D-060CF407727A', N'Top Forwarder by Shipments Year over Year', CAST(N'2018-11-21T14:46:32.830' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x47A577F2A7BD451EC655EC61203C7FFB, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T14:47:32.327' AS DateTime), 423, N'c4dbc9eb-918c-4f69-ba36-c1497cdbf687', N'SELECT ''Month '' + CAST(MONTH(m.Month) AS VARCHAR(5)) AS Month
	,ISNULL((
			SELECT COUNT(*)
			FROM (
				SELECT DATEDIFF(day, eh.effdate, eh.ExportDate) AVGDays
				FROM txdExportHeader eh WITH (NOLOCK)
				WHERE eh.RecordType = ''E''
					AND eh.STATUS NOT IN (
						''V''
						,''H''
						,''U''
						,''''
						)
					AND eh.partnerid = (
						SELECT PartnerId
						FROM tmfDefaults
						)
					AND EffDate BETWEEN DATEADD(year, - 1, m.Month)
						AND DATEADD(year, - 1, DATEADD(month, 1, m.Month))
					AND @TargetString
				) eh
			), '''') AS [Last Year]
	,ISNULL((
			SELECT COUNT(*)
			FROM (
				SELECT DATEDIFF(day, eh.effdate, eh.ExportDate) AVGDays
				FROM txdExportHeader eh WITH (NOLOCK)
				WHERE eh.RecordType = ''E''
					AND eh.STATUS NOT IN (
						''V''
						,''H''
						,''U''
						,''''
						)
					AND eh.partnerid = (
						SELECT PartnerId
						FROM tmfDefaults
						)
					AND @TargetString
					AND EffDate BETWEEN m.Month
						AND DATEADD(month, 1, m.Month)
				) eh
			), '''') AS [This Year]
FROM (
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 1, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 2, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 3, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 4, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 5, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 6, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 7, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 8, GETDATE())), 0) AS Month
	) m
ORDER BY Month', N'B8CC8D5C-B897-41FA-A96D-060CF407727A', N'Average Days from Record Create to Export Date: Year over Year', CAST(N'2018-11-21T14:47:32.327' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x5E6EC5B05FE2213ADF11EC118B37318A, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T15:48:10.070' AS DateTime), 424, N'c88a17c3-fb9b-419c-86c7-190e6460d97e', N'SELECT ''Month '' + CAST(MONTH(m.Month) AS VARCHAR(5)) AS Month
	,ISNULL((
			SELECT COUNT(*)
			FROM txdExportHeader eh WITH (NOLOCK)
			JOIN txdExportParties ep WITH (NOLOCK)
			ON eh.Exportguid = ep.Exportguid
			AND eh.PartnerID = ep.PartnerID
			WHERE RecordType = ''E''
      			--AND @TargetString
      			and eh.Status not in (''V'',''H'',''U'','''')
				AND ForwarderCompanyName <> ''''
				AND eh.EffDate BETWEEN DATEADD(year, - 1, m.Month)
					AND DATEADD(year, - 1, DATEADD(month, 1, m.Month))
			), '''') AS [Last Year]
	,ISNULL((
			SELECT COUNT(*)
			FROM txdExportHeader eh WITH (NOLOCK)
			JOIN txdExportParties ep WITH (NOLOCK)
			ON eh.Exportguid = ep.Exportguid
			AND eh.PartnerID = ep.PartnerID
			WHERE RecordType = ''E''			
      			--AND @TargetString
      			and eh.Status not in (''V'',''H'',''U'','''')
				AND ForwarderCompanyName <> ''''
      			AND eh.EffDate BETWEEN m.Month
					AND DATEADD(month, 1, m.Month)
			), '''') AS [This Year]
FROM (
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 1, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 2, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 3, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 4, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 5, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 6, GETDATE())), 0) AS Month  
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 7, GETDATE())), 0) AS Month  
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 8, GETDATE())), 0) AS Month    
	) m
ORDER BY Month', N'B8CC8D5C-B897-41FA-A96D-060CF407727A', N'Top Forwarder by Shipments Year over Year', CAST(N'2018-11-21T15:48:10.070' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x57A4A50674D94E2FB769BB9850E2A5A5, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T14:52:56.547' AS DateTime), 425, N'c5773eef-201b-4aee-8e13-f7ff2a6de39f', N'SELECT ''Month '' + CAST(MONTH(m.Month) AS VARCHAR(5)) AS Month
	,ISNULL((
			SELECT COUNT(*)
			FROM txdExportHeader eh WITH (NOLOCK)
			WHERE eh.RecordType = ''E''
      			AND @TargetString
      			--and eh.Status not in (''V'',''H'',''U'','''')
				--and eh.PartnerID = (SELECT PartnerID from tmfDefaults WITH (NOLOCK))
				AND eh.ModeOfTransport in (''40'',''41'')
				AND EffDate BETWEEN DATEADD(year, - 1, m.Month)
					AND DATEADD(year, - 1, DATEADD(month, 1, m.Month))
			), '''') AS [Last Year]
	,ISNULL((
			SELECT COUNT(*)
			FROM txdExportHeader eh WITH (NOLOCK)
			WHERE eh.RecordType = ''E''
      			AND @TargetString
      			--and eh.Status not in (''V'',''H'',''U'','''')
				--and eh.PartnerID = (SELECT PartnerID from tmfDefaults WITH (NOLOCK))
				AND eh.ModeOfTransport in (''40'',''41'')
      			AND EffDate BETWEEN m.Month
					AND DATEADD(month, 1, m.Month)
			), '''') AS [This Year]
FROM (
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 1, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 2, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 3, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 4, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 5, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 6, GETDATE())), 0) AS Month  
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 7, GETDATE())), 0) AS Month  
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 8, GETDATE())), 0) AS Month    
	) m
ORDER BY Month', N'B8CC8D5C-B897-41FA-A96D-060CF407727A', N'% Air of all shipments YoY', CAST(N'2018-11-21T14:52:56.547' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xC9DB989D0E12EFFF2E3BB1B4027A5971, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T15:32:36.490' AS DateTime), 426, N'dd2ce4da-a1e7-49e6-99ac-4686d0007c93', N'SELECT ''Month '' + CAST(MONTH(m.Month) AS VARCHAR(5)) AS Month
	,ISNULL((
			SELECT count(*)
			FROM txdExportHeader eh WITH (NOLOCK)
			WHERE RecordType = ''E''
      			AND @TargetString
      			and eh.Status not in (''V'',''H'',''U'','''')
      AND EffDate BETWEEN DATEADD(year, - 1, m.Month)
					AND DATEADD(year, - 1, DATEADD(month, 1, m.Month))
			), '''') AS [Last Year]
	,ISNULL((
			SELECT count(*)
			FROM txdExportHeader eh WITH (NOLOCK)
			WHERE RecordType = ''E''
      			AND @TargetString
      			--and eh.Status not in (''V'',''H'',''U'','''')
      			AND EffDate BETWEEN m.Month
					AND DATEADD(month, 1, m.Month)
			), '''') AS [This Year]
FROM (
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 1, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 2, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 3, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 4, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 5, GETDATE())), 0) AS Month
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 6, GETDATE())), 0) AS Month  
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 7, GETDATE())), 0) AS Month  
	UNION ALL
	SELECT DATEADD(MONTH, DATEDIFF(MONTH, 0, DATEADD(MONTH, - 8, GETDATE())), 0) AS Month    
	) m
ORDER BY Month', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Shipment Count: Year over Year', CAST(N'2018-11-21T15:32:36.490' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x6A81A2D84EBAF4CC071CC5FA7C2C8FAE, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2016-04-01T10:03:19.823' AS DateTime), 427, N'938c4f3e-aa69-4dd1-9142-0e33022680d0', N'select distinct h.BrokerName, COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e join ttdStagingGVImportHeader h on h.EntryGuid = e.EntryGUID and h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on e.GVValidationGUID = c.GVValidationGUID and e.PartnerID = c.PartnerID WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and c.ActiveFlag = ''Y'' and (c.Attribute = ''Hard'' or c.Attribute = ''Required'') and c.CategoryType = ''I'' and e.PartnerID = (select PartnerID from tmfDefaults) and e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc ', N'test report 2', N'test description', CAST(N'2016-04-01T10:03:19.823' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0xCB0312E5900506692A67DC0AC11E930E, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-01T10:03:19.823' AS DateTime), 428, N'938c4f3e-aa69-4dd1-9142-0e33022680d0', N'select distinct h.BrokerName, COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e join ttdStagingGVImportHeader h on h.EntryGuid = e.EntryGUID and h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on e.GVValidationGUID = c.GVValidationGUID and e.PartnerID = c.PartnerID WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and c.ActiveFlag = ''Y'' and (c.Attribute = ''Hard'' or c.Attribute = ''Required'') and c.CategoryType = ''I'' and e.PartnerID = (select PartnerID from tmfDefaults) and e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc ', N'test report 2', N'test description', CAST(N'2017-10-30T10:25:40.663' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0xCB0312E5900506692A67DC0AC11E930E, N'GTV Report', N'17.3', N'N', N'N')
, (4000, CAST(N'2016-04-01T10:03:19.823' AS DateTime), 429, N'938c4f3e-aa69-4dd1-9142-0e33022680d0', N'select distinct h.BrokerName, COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e join ttdStagingGVImportHeader h on h.EntryGuid = e.EntryGUID and h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on e.GVValidationGUID = c.GVValidationGUID and e.PartnerID = c.PartnerID WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and c.ActiveFlag = ''Y'' and (c.Attribute = ''Hard'' or c.Attribute = ''Required'') and c.CategoryType = ''I'' and e.PartnerID = (select PartnerID from tmfDefaults) and e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc ', N'test report 2', N'test description', CAST(N'2018-02-08T08:17:41.237' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0xCB0312E5900506692A67DC0AC11E930E, N'GTV Report', N'17.4', N'N', N'N')
, (4000, CAST(N'2016-04-01T10:03:19.823' AS DateTime), 430, N'938c4f3e-aa69-4dd1-9142-0e33022680d0', N'select distinct h.BrokerName, COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e join ttdStagingGVImportHeader h on h.EntryGuid = e.EntryGUID and h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on e.GVValidationGUID = c.GVValidationGUID and e.PartnerID = c.PartnerID WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and c.ActiveFlag = ''Y'' and (c.Attribute = ''Hard'' or c.Attribute = ''Required'') and c.CategoryType = ''I'' and e.PartnerID = (select PartnerID from tmfDefaults) and e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc ', N'test report 2', N'test description', CAST(N'2018-04-24T09:54:57.680' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0xCB0312E5900506692A67DC0AC11E930E, N'GTV Report', N'18.1', N'N', N'N')
, (4000, CAST(N'2016-04-01T10:03:19.823' AS DateTime), 431, N'938c4f3e-aa69-4dd1-9142-0e33022680d0', N'select distinct h.BrokerName, COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e join ttdStagingGVImportHeader h on h.EntryGuid = e.EntryGUID and h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on e.GVValidationGUID = c.GVValidationGUID and e.PartnerID = c.PartnerID WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and c.ActiveFlag = ''Y'' and (c.Attribute = ''Hard'' or c.Attribute = ''Required'') and c.CategoryType = ''I'' and e.PartnerID = (select PartnerID from tmfDefaults) and e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc ', N'test report 2', N'test description', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0xCB0312E5900506692A67DC0AC11E930E, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-04-01T10:03:19.823' AS DateTime), 432, N'938c4f3e-aa69-4dd1-9142-0e33022680d0', N'select distinct h.BrokerName, COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e join ttdStagingGVImportHeader h on h.EntryGuid = e.EntryGUID and h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on e.GVValidationGUID = c.GVValidationGUID and e.PartnerID = c.PartnerID WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and c.ActiveFlag = ''Y'' and (c.Attribute = ''Hard'' or c.Attribute = ''Required'') and c.CategoryType = ''I'' and e.PartnerID = (select PartnerID from tmfDefaults) and e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc ', N'test report 2', N'test description', CAST(N'2018-11-06T13:00:19.877' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0xCB0312E5900506692A67DC0AC11E930E, N'GTV Report', N'18.3', N'N', N'N')
, (4000, CAST(N'2016-04-01T09:30:57.863' AS DateTime), 433, N'019f0d09-183f-4f47-bd2c-e9881e6ec39c', N'select distinct h.BrokerName, COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e join ttdStagingGVImportHeader h on h.EntryGuid = e.EntryGUID and h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on e.GVValidationGUID = c.GVValidationGUID and e.PartnerID = c.PartnerID WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and c.ActiveFlag = ''Y'' and (c.Attribute = ''Hard'' or c.Attribute = ''Required'') and c.CategoryType = ''I'' and e.PartnerID = (select PartnerID from tmfDefaults) and e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc', N'test report', N'', CAST(N'2016-04-01T09:30:57.863' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0x1C61D2B50C6DB6D704F5CFFCF0947D8F, N'GTV Report', N'17.2', N'N', N'N')
, (4000, CAST(N'2016-04-01T09:30:57.863' AS DateTime), 434, N'019f0d09-183f-4f47-bd2c-e9881e6ec39c', N'select distinct h.BrokerName, COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e join ttdStagingGVImportHeader h on h.EntryGuid = e.EntryGUID and h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on e.GVValidationGUID = c.GVValidationGUID and e.PartnerID = c.PartnerID WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and c.ActiveFlag = ''Y'' and (c.Attribute = ''Hard'' or c.Attribute = ''Required'') and c.CategoryType = ''I'' and e.PartnerID = (select PartnerID from tmfDefaults) and e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc', N'test report', N'', CAST(N'2017-10-30T10:25:40.663' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0x1C61D2B50C6DB6D704F5CFFCF0947D8F, N'GTV Report', N'17.3', N'N', N'N')
, (4000, CAST(N'2016-04-01T09:30:57.863' AS DateTime), 435, N'019f0d09-183f-4f47-bd2c-e9881e6ec39c', N'select distinct h.BrokerName, COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e join ttdStagingGVImportHeader h on h.EntryGuid = e.EntryGUID and h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on e.GVValidationGUID = c.GVValidationGUID and e.PartnerID = c.PartnerID WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and c.ActiveFlag = ''Y'' and (c.Attribute = ''Hard'' or c.Attribute = ''Required'') and c.CategoryType = ''I'' and e.PartnerID = (select PartnerID from tmfDefaults) and e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc', N'test report', N'', CAST(N'2018-02-08T08:17:41.237' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0x1C61D2B50C6DB6D704F5CFFCF0947D8F, N'GTV Report', N'17.4', N'N', N'N')
, (4000, CAST(N'2016-04-01T09:30:57.863' AS DateTime), 436, N'019f0d09-183f-4f47-bd2c-e9881e6ec39c', N'select distinct h.BrokerName, COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e join ttdStagingGVImportHeader h on h.EntryGuid = e.EntryGUID and h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on e.GVValidationGUID = c.GVValidationGUID and e.PartnerID = c.PartnerID WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and c.ActiveFlag = ''Y'' and (c.Attribute = ''Hard'' or c.Attribute = ''Required'') and c.CategoryType = ''I'' and e.PartnerID = (select PartnerID from tmfDefaults) and e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc', N'test report', N'', CAST(N'2018-04-24T09:54:57.680' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0x1C61D2B50C6DB6D704F5CFFCF0947D8F, N'GTV Report', N'18.1', N'N', N'N')
, (4000, CAST(N'2016-04-01T09:30:57.863' AS DateTime), 437, N'019f0d09-183f-4f47-bd2c-e9881e6ec39c', N'select distinct h.BrokerName, COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e join ttdStagingGVImportHeader h on h.EntryGuid = e.EntryGUID and h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on e.GVValidationGUID = c.GVValidationGUID and e.PartnerID = c.PartnerID WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and c.ActiveFlag = ''Y'' and (c.Attribute = ''Hard'' or c.Attribute = ''Required'') and c.CategoryType = ''I'' and e.PartnerID = (select PartnerID from tmfDefaults) and e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc', N'test report', N'', CAST(N'2018-07-24T14:21:32.853' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0x1C61D2B50C6DB6D704F5CFFCF0947D8F, N'GTV Report', N'18.2', N'N', N'N')
, (4000, CAST(N'2016-04-01T09:30:57.863' AS DateTime), 438, N'019f0d09-183f-4f47-bd2c-e9881e6ec39c', N'select distinct h.BrokerName, COUNT(e.EntryGUID) as Count from txdGTVImportValidationErrors e join ttdStagingGVImportHeader h on h.EntryGuid = e.EntryGUID and h.PartnerID = e.PartnerID join tmgGVValidationConfiguration c on e.GVValidationGUID = c.GVValidationGUID and e.PartnerID = c.PartnerID WHERE 1=1 AND (@IMPORTDATERANGE or ImportDate= '''') and c.ActiveFlag = ''Y'' and (c.Attribute = ''Hard'' or c.Attribute = ''Required'') and c.CategoryType = ''I'' and e.PartnerID = (select PartnerID from tmfDefaults) and e.StatusCode = ''OPEN'' group by h.BrokerName order by Count desc', N'test report', N'', CAST(N'2018-11-06T13:00:19.877' AS DateTime), N'6689d4eb-76c5-45d6-bd02-abe6a4fb8f02', N'', 0x1C61D2B50C6DB6D704F5CFFCF0947D8F, N'GTV Report', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-27T11:41:06.007' AS DateTime), 439, N'f45afcd3-e9d0-4d90-af45-427a3cfdedd5', N'declare @year1 int
declare @year2 int
DECLARE @ParmDefinition nvarchar(500); 
declare @sql nvarchar(1000) 
declare @column varchar(30)

set @year2 = year(GETDATE())
set @year1 = @year2 - 1
set @column = ''DeferredDutySavings''


set @ParmDefinition = ''@year1a int, @year2a int''


set @sql = N''
select m.Month [ ],
  sum(case when year = @year1a then v.'' + @column + '' else 0 end) ['' + cast(@year1 as varchar(4)) + ''],
  sum(case when year = @year2a then v.'' + @column + '' else 0 end) ['' + cast(@year2 as varchar(4)) + '']
from trdDutySavingsSummary v
right join (
select 1 monthNum, ''''Jan'''' Month
union select 2, ''''Feb''''
union select 3, ''''Mar''''
union select 4, ''''Apr''''
union select 5, ''''May''''
union select 6, ''''Jun''''
union select 7, ''''Jul''''
union select 8, ''''Aug''''
union select 9, ''''Sep''''
union select 10, ''''Oct''''
union select 11, ''''Nov''''
union select 12, ''''Dec'''') as m on v.month = m.monthNum
group by m.Month, m.monthNum
order by m.monthNum''

exec sp_executeSql @sql, @ParmDefinition, @year1, @year2
', N'D548E07C-4B31-44B3-BF0B-708BA1EA00ED', N'Deferred Duty Savings', CAST(N'2018-11-27T11:41:06.007' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x16C18C5CAFE8DED84C34F5CDD6B0BCBA, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-27T11:41:51.397' AS DateTime), 440, N'd7f56105-9888-4841-b97a-a4905fb54448', N'declare @year1 int
declare @year2 int
DECLARE @ParmDefinition nvarchar(500); 
declare @sql nvarchar(1000) 
declare @column varchar(30)

set @year2 = year(GETDATE())
set @year1 = @year2 - 1
set @column = ''DeferredDutySavings''


set @ParmDefinition = ''@year1a int, @year2a int''


set @sql = N''
select m.Month [ ],
  sum(case when year = @year1a then v.'' + @column + '' else 0 end) ['' + cast(@year1 as varchar(4)) + ''],
  sum(case when year = @year2a then v.'' + @column + '' else 0 end) ['' + cast(@year2 as varchar(4)) + '']
from trdDutySavingsSummary v
right join (
select 1 monthNum, ''''Jan'''' Month
union select 2, ''''Feb''''
union select 3, ''''Mar''''
union select 4, ''''Apr''''
union select 5, ''''May''''
union select 6, ''''Jun''''
union select 7, ''''Jul''''
union select 8, ''''Aug''''
union select 9, ''''Sep''''
union select 10, ''''Oct''''
union select 11, ''''Nov''''
union select 12, ''''Dec'''') as m on v.month = m.monthNum
group by m.Month, m.monthNum
order by m.monthNum''

exec sp_executeSql @sql, @ParmDefinition, @year1, @year2
', N'D548E07C-4B31-44B3-BF0B-708BA1EA00ED', N'Deferred Duty Savings', CAST(N'2018-11-27T11:41:51.397' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x16C18C5CAFE8DED84C34F5CDD6B0BCBA, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-27T11:49:37.760' AS DateTime), 441, N'c5fb7cc2-3a5a-4d55-bb56-daef5c1b00ea', N'', N'A6AE60EE-16DE-40F5-8FBF-84BDB55D6240', N'E214 - Timing of Filing', CAST(N'2018-11-27T11:49:37.760' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-27T11:49:59.263' AS DateTime), 442, N'cc0712bf-50c4-45d2-8ae9-f2b406d4d1ab', N'', N'A6AE60EE-16DE-40F5-8FBF-84BDB55D6240', N'Bills of Lading - GO Status Messages', CAST(N'2018-11-27T11:49:59.263' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-27T11:50:34.023' AS DateTime), 443, N'979e93cf-701d-4697-bf51-a18f24efcf72', N'', N'A6AE60EE-16DE-40F5-8FBF-84BDB55D6240', N'Out of Balance - Number of Parts', CAST(N'2018-11-27T11:50:34.023' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-27T11:50:57.130' AS DateTime), 444, N'1abcd22c-f322-4429-82b6-85f5042cfd71', N'', N'A6AE60EE-16DE-40F5-8FBF-84BDB55D6240', N'Out of Balance - Total Days with Discrepancies for All Parts', CAST(N'2018-11-27T11:50:57.130' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-27T11:51:21.043' AS DateTime), 445, N'dea6f6cb-5375-4d60-9fcf-4f37bf89df59', N'', N'A6AE60EE-16DE-40F5-8FBF-84BDB55D6240', N'Out of Balance - Sum of Transaction Quantity', CAST(N'2018-11-27T11:51:21.043' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-29T15:37:11.560' AS DateTime), 446, N'dea6f6cb-5375-4d60-9fcf-4f37bf89df59', N'DECLARE @BeginDate AS datetime
declare @year1 int
declare @year2 int

---------------------------------------------------
SET @BeginDate = DATEADD(yy, DATEDIFF(yy, 0, dateadd(DD, -1, dateadd(YY,datediff(yy,0,getdate()),0))), 0) --First day of previous year
--set @BeginDate = ''1/1/2009''
--select @BeginDate

set @year2 = year(GETDATE())
set @year2 = (YEAR(@BeginDate) + 1)
set @year1 = @year2 - 1

IF OBJECT_ID(''tempdb..#TempAuditData'') IS NOT NULL 
  DROP TABLE #TempAuditData

select *, dateadd(month, monthnum, cast(''1/1/'' + cast(case when monthNum > month(getdate()) then @year1 else @year2 end as varchar(4)) as DATE)) endMonth,
  cast(0 as numeric(38,20)) txnQty 
into #TempAuditData
from (
  select 1 monthNum, ''Jan'' Month
  union select 2, ''Feb''
  union select 3, ''Mar''
  union select 4, ''Apr''
  union select 5, ''May''
  union select 6, ''Jun''
  union select 7, ''Jul''
  union select 8, ''Aug''
  union select 9, ''Sep''
  union select 10, ''Oct''
  union select 11, ''Nov''
  union select 12, ''Dec'') mm


--select month + '' '' + cast(year(dateadd(month, -1, endMonth)) as varchar(4)) [Month & Year], sum(txnQty) DaysOutOfBalance,
-- ''fxdScoreCard.aspx?GUID=1546F6E0-F068-46CC-BF60-5C43CCD1C66B&0=@value'' LINK
--*
DECLARE @endMonth as date
DECLARE table_cursor CURSOR FOR
select endMonth from #TempAuditData

OPEN table_cursor  

FETCH NEXT FROM table_cursor   
INTO @endMonth

WHILE @@FETCH_STATUS = 0  
BEGIN 
  update #TempAuditData set txnQty = (
      select SUM(abs(imcomparative)) from (
        select row_number() over (partition by ProductNum order by txnDate desc) as rn,
            productNum, imcomparative
           from trdSummaryDetailComponentBalanceAudit m
           where PartnerID = @PartnerID
           and txnDate < @endMonth
         ) m2
      where m2.rn = 1 )
  where endMonth = @endMonth
  
    
    FETCH NEXT FROM table_cursor   
    INTO @endMonth
END   
CLOSE table_cursor;  
DEALLOCATE table_cursor; 

select month + '' '' + cast(year(dateadd(month, -1, endMonth)) as varchar(4)) [ ], isnull(TxnQty, 0) [TotalTxnQty],
 ''fxdScoreCard.aspx?GUID=c51f934b-8631-42ba-8f29-348e5fdf3ee3&0=@value'' LINK 
from #TempAuditData
order by endMonth

DROP TABLE #TempAuditData', N'A6AE60EE-16DE-40F5-8FBF-84BDB55D6240', N'Out of Balance - Sum of Transaction Quantity', CAST(N'2018-11-29T15:37:11.560' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xAE13535BB34D84067E5687AD3FA977BF, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-27T11:51:59.287' AS DateTime), 447, N'4f92a714-a5ec-41a7-92d3-9e540b30b49a', N'', N'A6AE60EE-16DE-40F5-8FBF-84BDB55D6240', N'Validations - Average by Month', CAST(N'2018-11-27T11:51:59.287' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-27T11:52:14.890' AS DateTime), 448, N'f07b6e62-a730-437f-8d42-a6c72c645fbd', N'', N'A6AE60EE-16DE-40F5-8FBF-84BDB55D6240', N'Pushback to Staging - Transaction Count', CAST(N'2018-11-27T11:52:14.890' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-11-27T11:52:32.953' AS DateTime), 449, N'57d3f2e8-e7a6-430a-b4c0-b633a236d5cb', N'', N'A6AE60EE-16DE-40F5-8FBF-84BDB55D6240', N'Adjustments - Sum of Transaction Quantity', CAST(N'2018-11-27T11:52:32.953' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:01:35.330' AS DateTime), 450, N'f1d4ca9b-b993-42b5-90c3-51882af9caf9', N'', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Searches by Type', CAST(N'2018-12-11T12:01:35.330' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:01:23.797' AS DateTime), 451, N'00db7d95-382d-426e-beea-a383eff9ccff', N'', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Total Searches', CAST(N'2018-12-11T12:01:23.797' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:02:03.003' AS DateTime), 452, N'f1d4ca9b-b993-42b5-90c3-51882af9caf9', N'', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Searches by Type', CAST(N'2018-12-11T12:02:03.003' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:01:55.860' AS DateTime), 453, N'59e4ea6e-0c54-4dc4-b331-da9353588e8e', N'', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Companies by Status', CAST(N'2018-12-11T12:01:55.860' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:03:35.943' AS DateTime), 454, N'aaabd939-0ebd-41a7-85d4-f616f671a556', N'', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Top Ten Lists Hit', CAST(N'2018-12-11T12:03:35.943' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:04:01.550' AS DateTime), 455, N'cbb8cfc7-0a8d-4fb2-aa87-fd7a90564fe5', N'', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Countries Hits Received In', CAST(N'2018-12-11T12:04:01.550' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:04:18.410' AS DateTime), 456, N'c64a9808-faa2-479a-9d6b-2bd9304a4e0b', N'', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'# of Hits per Month (YoY)', CAST(N'2018-12-11T12:04:18.410' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:08:41.943' AS DateTime), 457, N'3e5bdc48-61d3-495d-900e-92b18ff08727', N'', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'% Hits by Results Score', CAST(N'2018-12-11T12:08:41.943' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:08:54.870' AS DateTime), 458, N'3667dcad-5629-451d-8638-cfa421b748f1', N'', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'% Hits Escalated by Results Score', CAST(N'2018-12-11T12:08:54.870' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:09:12.600' AS DateTime), 459, N'bd5e3aea-d437-47d1-b64a-8bcf0f67d840', N'', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'	# of Overrides by Top Ten Most Active Users', CAST(N'2018-12-11T12:09:12.600' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:09:29.810' AS DateTime), 460, N'42e63c39-e624-4f9f-bd9d-6f5fa1ceadf9', N'', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Avg Days to Resolve Hits', CAST(N'2018-12-11T12:09:29.810' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:09:46.843' AS DateTime), 461, N'a0014e2b-c536-4511-9863-c83260b84e63', N'', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Top Ten Lists Hits Escalated From', CAST(N'2018-12-11T12:09:46.843' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:10:05.827' AS DateTime), 462, N'c88e88ac-fab8-486e-9e08-19c29c60b518', N'', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'# of Overrides per Month', CAST(N'2018-12-11T12:10:05.827' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:10:19.763' AS DateTime), 463, N'63e9e118-b9e3-43db-9036-5f4ba019ba11', N'', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'% of Overrides by Country of Screened Party', CAST(N'2018-12-11T12:10:19.763' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:18:45.607' AS DateTime), 464, N'61520daa-6827-4232-a677-73b334925b06', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Receipts and Shipment transactions', CAST(N'2018-12-11T12:18:45.607' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:23:43.930' AS DateTime), 465, N'20446bee-feb6-47d1-b426-77db68502304', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'FIFO Runs Validation', CAST(N'2018-12-11T12:23:43.930' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:24:40.043' AS DateTime), 466, N'f379d624-ac84-4390-9202-74d6f1807551', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Client Import', CAST(N'2018-12-11T12:24:40.043' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:24:52.467' AS DateTime), 467, N'6e384179-8451-4763-afed-e739394712bb', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'User Login', CAST(N'2018-12-11T12:24:52.467' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:25:09.760' AS DateTime), 468, N'78c05f25-483e-4548-a59a-f44dd27f984d', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Missing Logins', CAST(N'2018-12-11T12:25:09.760' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:25:31.283' AS DateTime), 469, N'78c05f25-483e-4548-a59a-f44dd27f984d', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Missing Logins', CAST(N'2018-12-11T12:25:31.283' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:24:13.430' AS DateTime), 470, N'20446bee-feb6-47d1-b426-77db68502304', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'FIFO Runs Validation', CAST(N'2018-12-11T12:24:13.430' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:24:06.703' AS DateTime), 471, N'890aab03-11b1-489d-a36d-14aa25018f60', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'SAAI Invoices', CAST(N'2018-12-11T12:24:06.703' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:25:20.730' AS DateTime), 472, N'f379d624-ac84-4390-9202-74d6f1807551', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Client Import', CAST(N'2018-12-11T12:25:20.730' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:18:17.650' AS DateTime), 473, N'1dd94c30-9a73-49ba-af09-d1084a92202f', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Transaction Review', CAST(N'2018-12-11T12:18:17.650' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:19:20.540' AS DateTime), 474, N'61520daa-6827-4232-a677-73b334925b06', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Receipts and Shipment Transactions', CAST(N'2018-12-11T12:19:20.540' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:19:12.963' AS DateTime), 475, N'74e5f8e5-24a9-4913-b1a1-2075e724bb27', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Fixed Asset and Spare Parts Transactions', CAST(N'2018-12-11T12:19:12.963' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:19:43.320' AS DateTime), 476, N'8e904315-620c-4c5f-a336-287cfc24a835', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Production Transactions', CAST(N'2018-12-11T12:19:43.320' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:20:04.630' AS DateTime), 477, N'148dbb0c-80a1-4d76-8b3d-6afb5996f6d1', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Scrap Transactions', CAST(N'2018-12-11T12:20:04.630' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:20:25.010' AS DateTime), 478, N'5b86518f-7d7b-4c3b-a5eb-02d4733bb3b2', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'IMMEX Catalogs', CAST(N'2018-12-11T12:20:25.010' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:20:46.080' AS DateTime), 479, N'40e85dbc-2be6-4649-a082-6db18b01336e', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Daily Processing Transaction Correction', CAST(N'2018-12-11T12:20:46.080' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:21:06.440' AS DateTime), 480, N'4fb6927b-3783-41c1-a520-5e5ddb2d9060', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Pedimentos Process', CAST(N'2018-12-11T12:21:06.440' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:21:27.620' AS DateTime), 481, N'37e5c3ff-97a3-4d91-8442-9e871f111c1d', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Staging Sources by Source', CAST(N'2018-12-11T12:21:27.620' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:22:14.153' AS DateTime), 482, N'4386dfda-670c-4d6a-816f-675ea197b086', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Security Groups', CAST(N'2018-12-11T12:22:14.153' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:25:25.743' AS DateTime), 483, N'6e384179-8451-4763-afed-e739394712bb', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'User Login', CAST(N'2018-12-11T12:25:25.743' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:25:40.023' AS DateTime), 484, N'78c05f25-483e-4548-a59a-f44dd27f984d', N'', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Missing Logins', CAST(N'2018-12-11T12:25:40.023' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:54:14.180' AS DateTime), 485, N'30f27359-0bba-4fde-92d1-68b7b8196034', N'', N'56AB2A86-89DF-480B-B3C1-94D249566F10', N'Balances Review', CAST(N'2018-12-11T12:54:14.180' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:54:34.683' AS DateTime), 486, N'167e06d6-1e3b-4911-9be0-108d293ffe3f', N'', N'56AB2A86-89DF-480B-B3C1-94D249566F10', N'Expiration by Document Code', CAST(N'2018-12-11T12:54:34.683' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:54:52.860' AS DateTime), 487, N'55e41b53-b6bd-4a58-8270-ecda424672f3', N'', N'56AB2A86-89DF-480B-B3C1-94D249566F10', N'Audit Reports', CAST(N'2018-12-11T12:54:52.860' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:55:13.063' AS DateTime), 488, N'47dcc2bd-f50a-44a2-8510-3bddffd7143f', N'', N'56AB2A86-89DF-480B-B3C1-94D249566F10', N'Special Process', CAST(N'2018-12-11T12:55:13.063' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xD41D8CD98F00B204E9800998ECF8427E, N'ScoreCard', N'18.3', N'N', N'N')
, (4000, CAST(N'2018-12-11T12:50:30.243' AS DateTime), 489, N'6e384179-8451-4763-afed-e739394712bb', N'SELECT ''User Login'' AS [Validation], ''X'', ''An error has occured. Please see your System Administrator'' AS [Reason]

/* This query must be configured
USE SEC_123456;

SELECT ''User Login'' AS [Validation], CASE WHEN (
	SELECT count(*)
	FROM (
		SELECT TOP 1 *
		FROM dbo.tmguser WITH (nolock)
		WHERE enabled = 1
			AND EMail NOT LIKE ''%Integrationpoint%''
			AND LastUserLoginDate = ''''
	)X
) >0 THEN ''X'' ELSE ''O'' END AS [Status]
*/', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'User Login', CAST(N'2018-12-11T12:50:30.243' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x8C5D58F5E09CF59CAF345C6F7A331335, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-12-11T12:52:15.200' AS DateTime), 490, N'78c05f25-483e-4548-a59a-f44dd27f984d', N'SELECT ''Missing Logins'' AS [Validation], ''X'', ''An error has occured. Please see your System Administrator'' AS [Reason]

/* This query must be configured
USE SEC_123456;

SELECT UserLogin, UserFirstName, UserLastName, email, LastUserLoginDate
FROM dbo.tmguser WITH (nolock)
	WHERE enabled = 1
	AND EMail NOT LIKE ''%Integrationpoint%''
	AND LastUserLoginDate = ''''
*/', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Missing Logins', CAST(N'2018-12-11T12:52:15.200' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x371712C94519643C8B220F8DCFCDA82D, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-12-11T12:48:52.157' AS DateTime), 491, N'4386dfda-670c-4d6a-816f-675ea197b086', N'SELECT ''User Group Security'' AS [Validation], ''X'', ''An error has occured. Please see your System Administrator'' AS [Reason]

/* This query must be configured
USE SEC_123456;

SELECT ''User Group Security'' AS [Validation], CASE WHEN (
	SELECT count(*) 
	FROM (
		SELECT TOP(1) GH.groupguid
		FROM dbo.tmgGroup GH WITH (nolock)
		JOIN dbo.tmgGroupAccess GA WITH (nolock)
			ON GA.GroupGUID = GH.GroupGUID
		JOIN dbo.tmgUserPartnerGroup UG WITH (nolock)
			ON UG.GroupGUID = GA.GroupGUID
		JOIN dbo.tmguser US WITH (nolock)
			ON US.userguid = UG.userguid
		WHERE GH.Description LIKE ''%admin%''
			AND GH.description NOT LIKE ''%IP%''
			AND GH.description NOT LIKE ''%User Administrator%''
			AND enabled = 1
			AND EMail NOT LIKE ''%Integrationpoint%''

		UNION ALL

		SELECT TOP(1) GH.groupguid
		FROM dbo.tmgGroup GH WITH (nolock)
		JOIN dbo.tmgGroupAccess GA WITH (nolock)
			ON GA.GroupGUID = GH.GroupGUID
		JOIN dbo.tmgUserPartnerGroup UG WITH (nolock)
			ON UG.GroupGUID = GA.GroupGUID
		JOIN dbo.tmguser US WITH (nolock)
			ON US.userguid = UG.userguid
		WHERE GH.Description LIKE ''%Zone Operator Group%''
			AND GH.description NOT LIKE ''%IP%''
			AND GH.description NOT LIKE ''%User Administrator%''
			AND enabled = 1
			AND EMail NOT LIKE ''%Integrationpoint%''
	)x
) = 2 THEN ''O'' ELSE ''X'' END AS [Status]
*/', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Security Groups', CAST(N'2018-12-11T12:48:52.157' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xA6E64168EBACE850DFB0CE161FF7061C, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-12-11T16:01:23.740' AS DateTime), 492, N'4386dfda-670c-4d6a-816f-675ea197b086', N'SELECT ''User Group Security'' AS [Validation], , ''X'' AS [Status]

/* This query must be configured
USE SEC_123456;

SELECT ''User Group Security'' AS [Validation], CASE WHEN (
	SELECT count(*) 
	FROM (
		SELECT TOP(1) GH.groupguid
		FROM dbo.tmgGroup GH WITH (nolock)
		JOIN dbo.tmgGroupAccess GA WITH (nolock)
			ON GA.GroupGUID = GH.GroupGUID
		JOIN dbo.tmgUserPartnerGroup UG WITH (nolock)
			ON UG.GroupGUID = GA.GroupGUID
		JOIN dbo.tmguser US WITH (nolock)
			ON US.userguid = UG.userguid
		WHERE GH.Description LIKE ''%admin%''
			AND GH.description NOT LIKE ''%IP%''
			AND GH.description NOT LIKE ''%User Administrator%''
			AND enabled = 1
			AND EMail NOT LIKE ''%Integrationpoint%''

		UNION ALL

		SELECT TOP(1) GH.groupguid
		FROM dbo.tmgGroup GH WITH (nolock)
		JOIN dbo.tmgGroupAccess GA WITH (nolock)
			ON GA.GroupGUID = GH.GroupGUID
		JOIN dbo.tmgUserPartnerGroup UG WITH (nolock)
			ON UG.GroupGUID = GA.GroupGUID
		JOIN dbo.tmguser US WITH (nolock)
			ON US.userguid = UG.userguid
		WHERE GH.Description LIKE ''%Zone Operator Group%''
			AND GH.description NOT LIKE ''%IP%''
			AND GH.description NOT LIKE ''%User Administrator%''
			AND enabled = 1
			AND EMail NOT LIKE ''%Integrationpoint%''
	)x
) = 2 THEN ''O'' ELSE ''X'' END AS [Status]
*/', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Security Groups', CAST(N'2018-12-11T16:01:23.740' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x9B083EAB85BE881B335E89E3180AF93E, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-12-11T16:01:11.890' AS DateTime), 493, N'78c05f25-483e-4548-a59a-f44dd27f984d', N'SELECT ''Missing Logins'' AS [Validation], ''X'' AS [Status]

/* This query must be configured
USE SEC_123456;

SELECT UserLogin, UserFirstName, UserLastName, email, LastUserLoginDate
FROM dbo.tmguser WITH (nolock)
	WHERE enabled = 1
	AND EMail NOT LIKE ''%Integrationpoint%''
	AND LastUserLoginDate = ''''
*/', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Missing Logins', CAST(N'2018-12-11T16:01:11.890' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x2FE67BBDBA14C6A95C4367033142B80B, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-12-11T16:00:53.387' AS DateTime), 494, N'6e384179-8451-4763-afed-e739394712bb', N'SELECT ''User Login'' AS [Validation], ''X'' AS [Status]

/* This query must be configured
USE SEC_123456;

SELECT ''User Login'' AS [Validation], CASE WHEN (
	SELECT count(*)
	FROM (
		SELECT TOP 1 *
		FROM dbo.tmguser WITH (nolock)
		WHERE enabled = 1
			AND EMail NOT LIKE ''%Integrationpoint%''
			AND LastUserLoginDate = ''''
	)X
) >0 THEN ''X'' ELSE ''O'' END AS [Status]
*/', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'User Login', CAST(N'2018-12-11T16:00:53.387' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x6DE1467EF415586B8459BA6E7AF77568, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-12-11T16:07:11.950' AS DateTime), 495, N'4386dfda-670c-4d6a-816f-675ea197b086', N'SELECT ''User Group Security'' AS [Validation], ''X'' AS [Status]

/* This query must be configured
USE SEC_123456;

SELECT ''User Group Security'' AS [Validation], CASE WHEN (
	SELECT count(*) 
	FROM (
		SELECT TOP(1) GH.groupguid
		FROM dbo.tmgGroup GH WITH (nolock)
		JOIN dbo.tmgGroupAccess GA WITH (nolock)
			ON GA.GroupGUID = GH.GroupGUID
		JOIN dbo.tmgUserPartnerGroup UG WITH (nolock)
			ON UG.GroupGUID = GA.GroupGUID
		JOIN dbo.tmguser US WITH (nolock)
			ON US.userguid = UG.userguid
		WHERE GH.Description LIKE ''%admin%''
			AND GH.description NOT LIKE ''%IP%''
			AND GH.description NOT LIKE ''%User Administrator%''
			AND enabled = 1
			AND EMail NOT LIKE ''%Integrationpoint%''

		UNION ALL

		SELECT TOP(1) GH.groupguid
		FROM dbo.tmgGroup GH WITH (nolock)
		JOIN dbo.tmgGroupAccess GA WITH (nolock)
			ON GA.GroupGUID = GH.GroupGUID
		JOIN dbo.tmgUserPartnerGroup UG WITH (nolock)
			ON UG.GroupGUID = GA.GroupGUID
		JOIN dbo.tmguser US WITH (nolock)
			ON US.userguid = UG.userguid
		WHERE GH.Description LIKE ''%Zone Operator Group%''
			AND GH.description NOT LIKE ''%IP%''
			AND GH.description NOT LIKE ''%User Administrator%''
			AND enabled = 1
			AND EMail NOT LIKE ''%Integrationpoint%''
	)x
) = 2 THEN ''O'' ELSE ''X'' END AS [Status]
*/', N'A0CBFEC9-3ACE-4B26-BE46-298F06F8AECD', N'Security Groups', CAST(N'2018-12-11T16:07:11.950' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0x9753E57F2F7FC52B74D55DE31F8D0597, N'ScoreCard', N'18.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-01-28T15:12:38.163' AS DateTime), 496, N'ac9262f8-d833-494e-9656-532517463eaf', N'Select count(*) from tlgEventFlowStatus with (Nolock)', N'39FAA606-1C7F-4DA0-9878-E021AF105051', N'Event Flow Status - Record Count', CAST(N'2019-03-05T09:16:51.330' AS DateTime), N'acd46cbb-7745-4959-88be-358b7616ca64', N'system', 0x70812A100A924C5B4C3FA3A618D1ADD3, N'ScoreCard', N'18.4', N'N', N'N')
, (4000, CAST(N'2019-01-28T15:13:05.477' AS DateTime), 497, N'bcafdac0-60f7-4021-99a2-9f2177e22b71', N'Select count(*) from tlgEventFlowStatus with (Nolock) where effdate > getdate() -1 ', N'39FAA606-1C7F-4DA0-9878-E021AF105051', N'Event Flow Status - Record Count in past 24 hours', CAST(N'2019-03-05T09:16:51.330' AS DateTime), N'acd46cbb-7745-4959-88be-358b7616ca64', N'system', 0x89D3ACC9AD38620258517A1C72962C21, N'ScoreCard', N'18.4', N'N', N'N')
, (4000, CAST(N'2019-03-11T15:49:00.000' AS DateTime), 498, N'00db7d95-382d-426e-beea-a383eff9ccff', N'SELECT COUNT(DISTINCT SearchGUID) AS TotalSearches
FROM txdDTSSearchResultsHist WITH (NOLOCK)
WHERE EffDate > DATEADD(YEAR, -1, GETDATE())', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Total Searches', CAST(N'2019-03-11T15:49:00.000' AS DateTime), N'00112233-4455-6677-8899-AABBCCDDEEFF', N'system', 0x4F24615F1DFBA25592EF28E6A7DD69C2, N'ScoreCard', N'19.1', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-03-11T15:49:00.000' AS DateTime), 499, N'00db7d95-382d-426e-beea-a383eff9ccff', N'SELECT COUNT(DISTINCT SearchGUID) AS TotalSearches
FROM txdDTSSearchResultsHist WITH (NOLOCK)
WHERE EffDate > DATEADD(YEAR, -1, GETDATE())', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Total Searches', CAST(N'2019-03-11T15:49:00.000' AS DateTime), N'00112233-4455-6677-8899-AABBCCDDEEFF', N'system', 0x4F24615F1DFBA25592EF28E6A7DD69C2, N'ScoreCard', N'19.1', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-03-11T15:49:00.000' AS DateTime), 500, N'f1d4ca9b-b993-42b5-90c3-51882af9caf9', N'select
	q.SearchType,
	count(*) as Total
from
(
	select distinct
		sr.SearchGUID,
		case when sr.Username = ''DTS Batch User'' then ''Batch''
			when exref.SearchGUID is not null then ''Export''
			else ''Ad Hoc'' end as SearchType
	from txdDTSSearchResultsHist sr with (nolock)
	left join txdExportDTSHistReference exref with (nolock)
		on sr.SearchGUID = exref.SearchGUID
	where sr.EffDate > DATEADD(YEAR, -1, GETDATE())
) q
group by
	q.SearchType', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Searches by Type', CAST(N'2019-03-11T15:49:00.000' AS DateTime), N'00112233-4455-6677-8899-AABBCCDDEEFF', N'system', 0xA7A3542334A95CA8C77C2A473D7E4183, N'ScoreCard', N'19.1', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-03-11T15:49:00.000' AS DateTime), 501, N'f1d4ca9b-b993-42b5-90c3-51882af9caf9', N'select
	q.SearchType,
	count(*) as Total
from
(
	select distinct
		sr.SearchGUID,
		case when sr.Username = ''DTS Batch User'' then ''Batch''
			when exref.SearchGUID is not null then ''Export''
			else ''Ad Hoc'' end as SearchType
	from txdDTSSearchResultsHist sr with (nolock)
	left join txdExportDTSHistReference exref with (nolock)
		on sr.SearchGUID = exref.SearchGUID
	where sr.EffDate > DATEADD(YEAR, -1, GETDATE())
) q
group by
	q.SearchType', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Searches by Type', CAST(N'2019-03-11T15:49:00.000' AS DateTime), N'00112233-4455-6677-8899-AABBCCDDEEFF', N'system', 0xA7A3542334A95CA8C77C2A473D7E4183, N'ScoreCard', N'19.1', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-03-11T15:49:00.000' AS DateTime), 502, N'59e4ea6e-0c54-4dc4-b331-da9353588e8e', N'SELECT DTSStatus, Count(*) As Count 
FROM tmgCompany with (nolock)
where DTSSearchFlag = ''Y''
GROUP BY DTSStatus', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Companies by Status', CAST(N'2019-03-11T15:49:00.000' AS DateTime), N'00112233-4455-6677-8899-AABBCCDDEEFF', N'system', 0xB3B6825953BF64AE8CD49988AE5D69E1, N'ScoreCard', N'19.1', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-03-11T15:49:00.000' AS DateTime), 503, N'59e4ea6e-0c54-4dc4-b331-da9353588e8e', N'SELECT DTSStatus, Count(*) As Count 
FROM tmgCompany with (nolock)
where DTSSearchFlag = ''Y''
GROUP BY DTSStatus', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Companies by Status', CAST(N'2019-03-11T15:49:00.000' AS DateTime), N'00112233-4455-6677-8899-AABBCCDDEEFF', N'system', 0xB3B6825953BF64AE8CD49988AE5D69E1, N'ScoreCard', N'19.1', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-07-08T09:14:13.717' AS DateTime), 504, N'59e4ea6e-0c54-4dc4-b331-da9353588e8e', N'SELECT DTSStatus, Count(*) As Count 
FROM tmgCompany with (nolock)
where DTSSearchFlag = ''Y''
GROUP BY DTSStatus', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Companies by Status', CAST(N'2019-07-08T09:14:13.717' AS DateTime), N'acd46cbb-7745-4959-88be-358b7616ca64', N'system', 0x191D80F9A85364D4899FE67F89C14EB6, N'ScoreCard', N'19.1', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-11-21T15:09:14.500' AS DateTime), 505, N'cb2c87ca-9b9a-4a14-bbb2-ddb149a23630', N'SELECT TOP(5) ExportCountry
	,cast(sum(totalvalue) AS NUMERIC(38, 2)) AS TotalValue
FROM txdexportheader eh WITH (NOLOCK)
INNER JOIN txdexportdetail d WITH (NOLOCK)
	ON eh.exportguid = d.exportguid
WHERE recordtype = ''E''
	AND @TargetString
	AND h.STATUS NOT IN (''V'',''H'',''U'','''')
GROUP BY Exportcountry
ORDER BY sum(totalvalue) DESC', N'CB7CFA20-57F5-4C63-A88C-0E6280D7FEDB', N'Top Five Ship From''s by Value', CAST(N'2019-07-29T15:19:06.940' AS DateTime), N'BD1253F1-7FF9-47D3-90DE-BB79768A4D87', N'system', 0xBA6D4E3FA53A7F501A4425586FDC5BD2, N'ScoreCard', N'19.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-09-18T12:22:30.837' AS DateTime), 506, N'a0014e2b-c536-4511-9863-c83260b84e63', N'
SELECT TOP(10)   tab.ListName,   COUNT(*) AS ''Total Number of Escalations for Hits from This List''  FROM (   SELECT    distinct H.CompanyID,    T.ResultSet.value(''.'', ''varchar(500)'') AS ''ListName''   FROM txdDTSSearchResultsHist H   INNER JOIN txdDTSSearchResultDetailHist HD ON HD.ResultGUID = H.ResultGUID   CROSS APPLY ResultSet.nodes(''//*[local-name() = ''''list_name'''']'') AS T(ResultSet)   INNER JOIN txdDPSSearchStatus ss WITH (NOLOCK)    ON hd.ResultGUID = ss.LastResultGUID    AND hd.PartnerID = ss.PartnerID    AND ss.EscalationLevel > 0   WHERE h.EffDate > DATEADD(YEAR, -1, GETDATE())  ) AS tab  GROUP BY tab.ListName  ORDER BY COUNT(*) DESC
', N'9C09B9B5-79B1-459C-8D7C-5E36A4D40571', N'Top Ten Lists Hits Escalated From', CAST(N'2019-09-30T13:18:20.453' AS DateTime), N'vthompson', N'vthompson', 0xE3D4D6D93953A403103ADB1E8B988FE1, N'ScoreCard', N'19.2', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-12-27T16:44:09.503' AS DateTime), 507, N'98b7ac77-0d01-4dd3-a915-37fc3dd0a293', N'SELECT 
	h.BrokerName, 
	d.EstBaseLineDuty, 
	d.EstBaseTotalDutiableLineValue, 
	d.LineGUID,
	SUM(w.Rate) as Rate
INTO #tmpWhatIF
FROM txdGVImportHeader h WITH (NOLOCK)
       JOIN txdGVImportDetail d WITH (NOLOCK) ON h.PartnerID = d.PartnerID AND h.EntryGuid = d.EntryGuid
       JOIN tmgGTVWhatIfTariffs w WITH (NOLOCK) 
              ON w.PartnerID = h.PartnerID AND w.UserGUID = @UserGUID AND w.ImportCountry = H.ImportCountry AND (w.HSNum = d.HsNum 
              OR (LEN(w.HSNum) = 2 AND LEFT(w.HSNum,2) = LEFT(d.HsNum,2)) 
              OR (LEN(w.HSNum) = 4 AND LEFT(w.HSNum,4) = LEFT(d.HsNum,4))
              OR (LEN(w.HSNum) = 6 AND LEFT(w.HSNum,6) = LEFT(d.HsNum,6)) 
              OR (LEN(w.HSNum) = 8 AND LEFT(w.HSNum,8) = LEFT(d.HsNum,8)))
       WHERE 1=1
	   AND @IMPORTDATERANGE
       AND h.PartnerID = @PartnerID  
GROUP BY h.BrokerName, 
	d.EstBaseLineDuty, 
	d.EstBaseTotalDutiableLineValue, 
	d.LineGUID
	   
SELECT 
	X.BrokerName, 
        X.EstBaseLineDuty as [current duty],
	X.EstBaseLineDuty + Y.NewDuty as [new duties]
FROM ( SELECT BrokerName, SUM(EstBaseLineDuty)  as [EstBaseLineDuty] 
	   FROM #tmpWhatIF GROUP BY BrokerName) X
JOIN ( SELECT BrokerName, SUM(EstBaseTotalDutiableLineValue * Rate) as NewDuty 
	   FROM #tmpWhatIF GROUP BY BrokerName ) Y 
	ON X.BrokerName = Y.BrokerName	
ORDER BY X.EstBaseLineDuty + Y.NewDuty DESC', N'Tariffs: Comparison Broker by Duty - What If + Previous Duties', N'Tariffs: Comparison Broker by Duty - What If + Previous Duties', CAST(N'2019-12-27T16:44:09.503' AS DateTime), N'E27A4AD9-10BA-4259-A7E3-A351B9C35D84', N'', 0x61CA6B647F051545B248EAA99EF2257C, N'GTV Report', N'19.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-02-20T17:15:00.000' AS DateTime), 508, N'43abd523-7835-46ec-a617-f3db5e36551d', N'SELECT CAST(MONTH(h.ImportDate) AS VARCHAR(50)) + ''-'' + CAST(YEAR(h.ImportDate) AS VARCHAR(50)) AS ImportMonth
	,CAST(ISNULL(SUM(d.EstBaseTotalDutiableLineValue * t.Tariff), 0) AS NUMERIC(28, 2)) AS [NewDuty (@CurrencyCode)]
FROM txdGVImportHeader h WITH (NOLOCK)
JOIN txdGVImportDetail d WITH (NOLOCK) ON h.PartnerID = d.PartnerID
	AND h.EntryGuid = d.EntryGuid
CROSS APPLY (
	SELECT CASE Tariff
			WHEN ''Main''
				THEN main.MainRate
			WHEN ''Avg''
				THEN average.AvgRate
			ELSE Tariff
			END AS Tariff
	FROM tmgGTVWhatIfSourcing w WITH (NOLOCK)
	LEFT JOIN [vid_CI_GTV_Import_WhatIfMainRates] main WITH (NOLOCK) ON w.PartnerID = main.PartnerID
		AND w.ImportCountry = main.ImportCountry
		AND w.NewSourceCountry = main.NewSourceCountry 
		AND d.HsNum = main.HsNum
		AND h.EntryGuid = main.EntryGuid
		AND d.LineGuid = main.LineGuid
	LEFT JOIN (
		SELECT h1.ImportCountry
			,AVG(d1.AdValoremDutyRate) AS AvgRate
		FROM txdGVImportHeader h1 WITH (NOLOCK)
		JOIN txdGVImportDetail d1 WITH (NOLOCK) ON h1.PartnerID = d1.PartnerID
			AND h1.EntryGuid = d1.EntryGuid
		GROUP BY ImportCountry
		) average ON average.ImportCountry = w.ImportCountry
      WHERE w.PartnerID = h.PartnerID AND w.UserGUID = @UserGUID  
       AND w.ImportCountry = h.ImportCountry 
       AND w.PreviousSourceCountry = d.ExportCountry
       AND (
             (w.IDType = ''HSNum'' AND d.HsNum LIKE w.Identifier1 + ''%'' ) OR
              (w.IDType = ''ProductNum'' AND w.Identifier1 = d.ProductNum ) OR
              (w.IDType = ''ManufacturerID'' AND w.Identifier1 = d.ManufacturerID ) OR
              (w.IDType = ''SupplierID'' AND w.Identifier1 = d.SupplierID) OR
              (w.IDType = ''BrokerID'' AND w.Identifier1 = h.BrokerID) OR
              (w.IDType = ''BusinessUnit'' AND w.Identifier1 = d.BusinessUnit) OR
              (w.IDType = ''BusinessDivision'' AND w.Identifier1 = d.BusinessDivision) OR
              (w.IDType = ''ALL'')
       )
	) AS t
WHERE 1=1
	AND ActiveVersionFlag = ''Y''
	AND @IMPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY YEAR(h.ImportDate)
	,MONTH(h.ImportDate)
ORDER BY YEAR(h.ImportDate)
	,MONTH(h.ImportDate)', N'Sourcing: Total Declaration Duties by Month - What If Duties Only', N'', CAST(N'2019-07-16T03:14:00.000' AS DateTime), N'dd3d6eab-20f3-4e77-882f-4c6eafc9f94f', N'', 0x468BADEB25C01D5748769C7A0967A668, N'GTV Report', N'19.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-12-31T12:57:44.803' AS DateTime), 509, N'43abd523-7835-46ec-a617-f3db5e36551d', N'SELECT CAST(MONTH(h.ImportDate) AS VARCHAR(50)) + ''-'' + CAST(YEAR(h.ImportDate) AS VARCHAR(50)) AS ImportMonth
	,CAST(ISNULL(SUM(d.EstBaseTotalDutiableLineValue * t.Tariff), 0) AS NUMERIC(28, 2)) AS [NewDuty (@CurrencyCode)]
FROM txdGVImportHeader h WITH (NOLOCK)
JOIN txdGVImportDetail d WITH (NOLOCK) ON h.PartnerID = d.PartnerID
	AND h.EntryGuid = d.EntryGuid
CROSS APPLY (
	SELECT CASE Tariff
			WHEN ''Main''
				THEN main.MainRate
			WHEN ''Avg''
				THEN average.AvgRate
			ELSE Tariff
			END AS Tariff
	FROM tmgGTVWhatIfSourcing w WITH (NOLOCK)
	LEFT JOIN [vid_CI_GTV_Import_WhatIfMainRates] main WITH (NOLOCK) ON w.PartnerID = main.PartnerID
		AND w.ImportCountry = main.ImportCountry
		AND w.NewSourceCountry = main.NewSourceCountry 
		AND d.HsNum = main.HsNum
		AND h.EntryGuid = main.EntryGuid
		AND d.LineGuid = main.LineGuid
	LEFT JOIN (
		SELECT h1.ImportCountry
			,AVG(d1.AdValoremDutyRate) AS AvgRate
		FROM txdGVImportHeader h1 WITH (NOLOCK)
		JOIN txdGVImportDetail d1 WITH (NOLOCK) ON h1.PartnerID = d1.PartnerID
			AND h1.EntryGuid = d1.EntryGuid
		GROUP BY ImportCountry
		) average ON average.ImportCountry = w.ImportCountry
      WHERE w.PartnerID = h.PartnerID AND w.UserGUID = @UserGUID  
       AND w.ImportCountry = h.ImportCountry 
       AND w.PreviousSourceCountry = d.ExportCountry
       AND (
             (w.IDType = ''HSNum'' AND d.HsNum LIKE w.Identifier1 + ''%'' ) OR
              (w.IDType = ''ProductNum'' AND w.Identifier1 = d.ProductNum ) OR
              (w.IDType = ''ManufacturerID'' AND w.Identifier1 = d.ManufacturerID ) OR
              (w.IDType = ''SupplierID'' AND w.Identifier1 = d.SupplierID) OR
              (w.IDType = ''BrokerID'' AND w.Identifier1 = h.BrokerID) OR
              (w.IDType = ''BusinessUnit'' AND w.Identifier1 = d.BusinessUnit) OR
              (w.IDType = ''BusinessDivision'' AND w.Identifier1 = d.BusinessDivision) OR
              (w.IDType = ''ALL'')
       )
	) AS t
WHERE 1=1
	AND ActiveVersionFlag = ''Y''
	AND @IMPORTDATERANGE
	AND h.PartnerID = @PartnerID
GROUP BY YEAR(h.ImportDate)
	,MONTH(h.ImportDate)
ORDER BY YEAR(h.ImportDate)
	,MONTH(h.ImportDate)', N'Sourcing: Total Declaration Duties by Month - What If Duties Only', N'', CAST(N'2019-12-31T12:57:44.803' AS DateTime), N'E27A4AD9-10BA-4259-A7E3-A351B9C35D84', N'', 0x468BADEB25C01D5748769C7A0967A668, N'GTV Report', N'19.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-08-30T13:27:00.000' AS DateTime), 510, N'e3f1207b-70b4-442d-91c9-a49752ca4a9f', N'SELECT 
	 d.ProductNum, 
	d.EstBaseLineDuty, 
	d.EstBaseTotalDutiableLineValue, 
	d.LineGUID,
	SUM(w.Rate) as Rate
INTO #tmpWhatIF
FROM txdGVImportHeader h WITH (NOLOCK)
       JOIN txdGVImportDetail d WITH (NOLOCK) ON h.PartnerID = d.PartnerID AND h.EntryGuid = d.EntryGuid
       JOIN tmgGTVWhatIfTariffs w WITH (NOLOCK) 
              ON w.PartnerID = h.PartnerID AND w.UserGUID = @UserGUID AND w.ImportCountry = H.ImportCountry AND (w.HSNum = d.HsNum 
              OR (LEN(w.HSNum) = 2 AND LEFT(w.HSNum,2) = LEFT(d.HsNum,2)) 
              OR (LEN(w.HSNum) = 4 AND LEFT(w.HSNum,4) = LEFT(d.HsNum,4))
              OR (LEN(w.HSNum) = 6 AND LEFT(w.HSNum,6) = LEFT(d.HsNum,6)) 
              OR (LEN(w.HSNum) = 8 AND LEFT(w.HSNum,8) = LEFT(d.HsNum,8)))
       WHERE 1=1
	   AND @IMPORTDATERANGE
       AND h.PartnerID = @PartnerID  
GROUP BY d.ProductNum, 
	d.EstBaseLineDuty, 
	d.EstBaseTotalDutiableLineValue, 
	d.LineGUID
	   
SELECT TOP 10
	X.ProductNum, 
	X.EstBaseLineDuty + Y.NewDuty as [new duties]
FROM ( SELECT ProductNum, SUM(EstBaseLineDuty) as [EstBaseLineDuty] 
	   FROM #tmpWhatIF GROUP BY ProductNum) X
JOIN ( SELECT ProductNum, SUM(EstBaseTotalDutiableLineValue * Rate) as NewDuty 
	   FROM #tmpWhatIF GROUP BY ProductNum ) Y 
	ON X.ProductNum = Y.ProductNum	
ORDER BY X.EstBaseLineDuty + Y.NewDuty', N'Tariffs: Top Products by Duty - What If + Previous Duties', N'Tariffs: Top Products by Duty - What If + Prev Duties', CAST(N'2019-08-30T13:27:00.000' AS DateTime), N'dd3d6eab-20f3-4e77-882f-4c6eafc9f94f', N'', 0xAE8033B1BF6113CB83978BAF47995037, N'GTV Report', N'19.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-08-30T13:18:00.000' AS DateTime), 511, N'e9334840-3fb8-4375-ad26-83f302308b45', N'SELECT 
	 d.ProductNum, 
	d.EstBaseLineDuty, 
	d.EstBaseTotalDutiableLineValue, 
	d.LineGUID,
	SUM(w.Rate) as Rate
INTO #tmpWhatIF
FROM txdGVImportHeader h WITH (NOLOCK)
       JOIN txdGVImportDetail d WITH (NOLOCK) ON h.PartnerID = d.PartnerID AND h.EntryGuid = d.EntryGuid
       JOIN tmgGTVWhatIfTariffs w WITH (NOLOCK) 
              ON w.PartnerID = h.PartnerID AND w.UserGUID = @UserGUID AND w.ImportCountry = H.ImportCountry AND (w.HSNum = d.HsNum 
              OR (LEN(w.HSNum) = 2 AND LEFT(w.HSNum,2) = LEFT(d.HsNum,2)) 
              OR (LEN(w.HSNum) = 4 AND LEFT(w.HSNum,4) = LEFT(d.HsNum,4))
              OR (LEN(w.HSNum) = 6 AND LEFT(w.HSNum,6) = LEFT(d.HsNum,6)) 
              OR (LEN(w.HSNum) = 8 AND LEFT(w.HSNum,8) = LEFT(d.HsNum,8)))
       WHERE 1=1
	   AND @IMPORTDATERANGE
       AND h.PartnerID = @PartnerID  
GROUP BY d.ProductNum, 
	d.EstBaseLineDuty, 
	d.EstBaseTotalDutiableLineValue, 
	d.LineGUID
	   
SELECT 
	X.ProductNum, 
	X.EstBaseLineDuty + Y.NewDuty as [new duties]
FROM ( SELECT ProductNum, SUM(EstBaseLineDuty)  as [EstBaseLineDuty] 
	   FROM #tmpWhatIF GROUP BY ProductNum) X
JOIN ( SELECT ProductNum, SUM(EstBaseTotalDutiableLineValue * Rate) as NewDuty 
	   FROM #tmpWhatIF GROUP BY ProductNum ) Y 
	ON X.ProductNum = Y.ProductNum	
ORDER BY X.EstBaseLineDuty + Y.NewDuty', N'Tariffs: All Products by Duty - What If + Previous Duties', N'Tariffs: All Products by Duty - What If + Prev Duties', CAST(N'2019-08-30T13:18:00.000' AS DateTime), N'dd3d6eab-20f3-4e77-882f-4c6eafc9f94f', N'', 0x1A8D8AD0AD6929E7F9F6186AA75BD89B, N'GTV Report', N'19.3', N'N', N'N')
INSERT [dbo].[tbgSQLCommandsHist] ([PartnerID], [EffDate], [SQLID], [SQLGUID], [SQLCommand], [Description], [LongDescription], [CreatedDate], [CreatedBy], [ApprovedBy], [SQLHash], [SQLType], [Version], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-02-20T17:14:00.000' AS DateTime), 512, N'203e5a46-17bf-4fe8-8bd0-ba7e0aa8514b', N'	SELECT TOP 10 d.HSNum
		,SUM(d.EstBaseTotalDutiableLineValue * s.Tariff) AS [NewDuty]
	FROM txdGVImportHeader h WITH (NOLOCK)
	JOIN txdGVImportDetail d WITH (NOLOCK) ON h.PartnerID = d.PartnerID
		AND h.EntryGuid = d.EntryGuid
	CROSS APPLY (
		SELECT CASE Tariff
				WHEN ''Main''
					THEN main.MainRate
				WHEN ''Avg''
					THEN average.AvgRate
				ELSE Tariff
				END AS Tariff
		FROM tmgGTVWhatIfSourcing w WITH (NOLOCK)
		LEFT JOIN vid_CI_GTV_Import_WhatIfMainRates main WITH (NOLOCK) ON w.PartnerID = main.PartnerID
			AND w.ImportCountry = main.ImportCountry
			AND w.NewSourceCountry = main.NewSourceCountry 
			AND d.HsNum = main.HsNum
			AND h.EntryGuid = main.EntryGuid
			AND d.LineGuid = main.LineGuid
		LEFT JOIN (
			SELECT h1.ImportCountry
				,AVG(d1.AdValoremDutyRate) AS AvgRate
			FROM txdGVImportHeader h1 WITH (NOLOCK)
			JOIN txdGVImportDetail d1 WITH (NOLOCK) ON h1.PartnerID = d1.PartnerID
				AND h1.EntryGuid = d1.EntryGuid
			GROUP BY ImportCountry
			) average ON average.ImportCountry = w.ImportCountry
      WHERE w.PartnerID = h.PartnerID AND w.UserGUID = @UserGUID  
       AND w.ImportCountry = h.ImportCountry 
       AND w.PreviousSourceCountry = d.ExportCountry
       AND (
              (w.IDType = ''HSNum'' AND d.HsNum LIKE w.Identifier1 + ''%'' ) OR	
              (w.IDType = ''ProductNum'' AND w.Identifier1 = d.ProductNum ) OR
              (w.IDType = ''ManufacturerID'' AND w.Identifier1 = d.ManufacturerID ) OR
              (w.IDType = ''SupplierID'' AND w.Identifier1 = d.SupplierID) OR
              (w.IDType = ''BrokerID'' AND w.Identifier1 = h.BrokerID) OR
              (w.IDType = ''BusinessUnit'' AND w.Identifier1 = d.BusinessUnit) OR
              (w.IDType = ''BusinessDivision'' AND w.Identifier1 = d.BusinessDivision) OR
              (w.IDType = ''ALL'')
       )
		) AS s
	WHERE 1=1
		AND @IMPORTDATERANGE
		AND h.PartnerID = @PartnerID
	GROUP BY d.HSNum
	ORDER BY SUM(d.EstBaseTotalDutiableLineValue * s.Tariff) DESC', N'Sourcing: Top HS Numbers by Duty - What If Duties Only', N'', CAST(N'2019-07-16T03:14:00.000' AS DateTime), N'dd3d6eab-20f3-4e77-882f-4c6eafc9f94f', N'', 0x9D056D9E3B40A2DD219A6E1D0CA101F0, N'GTV Report', N'19.3', N'N', N'N')
SET IDENTITY_INSERT [dbo].[tbgSQLCommandsHist] OFF
INSERT [dbo].[tbgXSDSchemas] ([PartnerID], [EffDate], [ProductName], [SchemaName], [SchemaXPath], [Assembly], [ClassName], [XSDSchema], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-10-16T15:07:31.110' AS DateTime), N'Export Management', N'CISLI', N'configuration/export/ci_sli', N'', N'', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" id="Export" attributeFormDefault="unqualified" elementFormDefault="qualified"><xs:element name="configuration"><xs:annotation /><xs:complexType mixed="true"><xs:sequence><xs:element maxOccurs="unbounded" name="ci_sli"><xs:complexType><xs:all><xs:element minOccurs="0" maxOccurs="1" name="customs_transmission_url"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="tfs" type="xs:string" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="aes_enabled"><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="evaluate_exemption" type="YesNo" use="optional"><xs:annotation><xs:documentation>Setting value to Y provides link to AES Exemption screens to check for possible AES Exemptions.</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="submit_dts" type="YesNo"><xs:annotation><xs:documentation>Determines if parties supplied in Parties tab will be screened against denied entity lists as a part of content validations.</xs:documentation></xs:annotation></xs:element><xs:element name="allocate_licenses"><xs:complexType><xs:annotation><xs:documentation>Specify Y to show Manage License window when adding line item details. </xs:documentation></xs:annotation><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="use_upgraded_version" type="YesNo" use="optional"><xs:annotation><xs:documentation>Set to Y uses our current license management. Set to N uses legacy license functionality. Should not be set to N for future clients.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="allocate_purchaseorder" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will run allocation logic for purchase orders (RecordType=''P'') when the shipment is processed.
                                  Hold messages will occur if this shipment''s line items contain more quantity than what is available on purchase order records. 
                                  See Consulting Guide for more detail.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="allow_hold_override" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will allow the "Override and Process" button to be displayed when a shipment is placed on hold.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="bypass_hold_review"><xs:complexType><xs:annotation><xs:documentation>Setting this element to Y will prevent the user from entering a note when overriding a shipment</xs:documentation></xs:annotation><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="allow_domestic"><xs:complexType><xs:annotation><xs:documentation>Setting this element to Y will allow shipments to have the same Export Country as Import Country</xs:documentation></xs:annotation><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="hide_manual_ordernumship"><xs:complexType><xs:annotation><xs:documentation>Setting this element to Y will hide the ordernumship textbox when creating a new shipment</xs:documentation></xs:annotation><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="vertical_align"><xs:complexType><xs:annotation><xs:documentation>DEPRECATED: As of 18.3, there is no longer option to align forms horizontally. All forms are positioned vertically.</xs:documentation></xs:annotation><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="invoice_email_body"><xs:annotation><xs:documentation>Deprecated. Should not be in new partners going forward.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="processing_queue"><xs:complexType><xs:all><xs:element name="enabled" type="YesNo"><xs:annotation><xs:documentation>Set to Y to queue processed shipments to TTM workflow queue.</xs:documentation></xs:annotation></xs:element></xs:all><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="disable_actions"><xs:complexType><xs:all><xs:element minOccurs="0" maxOccurs="1" name="new"><xs:annotation><xs:documentation>Add underscore separated group names to prevent that group from creating new shipments. Specify "ALL" to disable always</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="save"><xs:annotation><xs:documentation>Add underscore separated group names to prevent that group from saving shipments. Specify "ALL" to disable always</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="save_as_template"><xs:annotation><xs:documentation>Add underscore separated group names to prevent that group from saving shipments as a template. Specify "ALL" to disable always</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="void"><xs:annotation><xs:documentation>Add underscore separated group names to prevent that group from voiding shipments. Specify "ALL" to disable always</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="reactivate"><xs:annotation><xs:documentation>Add underscore separated group names to prevent that group from reactivating shipments. Specify "ALL" to disable always</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="preview"><xs:annotation><xs:documentation>Add underscore separated group names to prevent that group from previewing documentation. Specify "ALL" to disable always</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="undo_processing"><xs:annotation><xs:documentation>Add underscore separated group names to prevent that group from undoing shipment processing. Specify "ALL" to disable always</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="process_override"><xs:annotation><xs:documentation>Add underscore separated group names to prevent that group from overriding a shipment. Specify "ALL" to disable always</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="process"><xs:annotation><xs:documentation>Add underscore separated group names to prevent that group from processing a shipment. Specify "ALL" to disable always</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="transmit" type="xs:string"><xs:annotation><xs:documentation>Deprecated: Transmit File button is no longer supported</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="finalize"><xs:annotation><xs:documentation>Add underscore separated group names to prevent that group from finalizing a shipment. Specify "ALL" to disable always</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="reprint"><xs:annotation><xs:documentation>Add underscore separated group names to prevent that group from reprinting documentation. Specify "ALL" to disable always</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="validate"><xs:annotation><xs:documentation>Add underscore separated group names to prevent that group from validating a shipment. Specify "ALL" to disable always</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="unfinalize"><xs:annotation><xs:documentation>Add underscore separated group names to prevent that group from unfinalizing a shipment. Specify "ALL" to disable always</xs:documentation></xs:annotation></xs:element></xs:all></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="enable_actions"><xs:complexType><xs:all><xs:element minOccurs="0" maxOccurs="1" name="new"><xs:annotation><xs:documentation>Add underscore separated group names to allow that group to create new shipments.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="save"><xs:annotation><xs:documentation>Add underscore separated group names to allow that group to save shipments.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="save_as_template"><xs:annotation><xs:documentation>Add underscore separated group names to allow that group to save shipments as a template.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="void"><xs:annotation><xs:documentation>Add underscore separated group names to allow that group to void shipments.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="reactivate"><xs:annotation><xs:documentation>Add underscore separated group names to allow that group to reactivate shipments.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="preview"><xs:annotation><xs:documentation>Add underscore separated group names to allow that group to preview documentation.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="undo_processing"><xs:annotation><xs:documentation>Add underscore separated group names to allow that group to undo shipment processing.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="process_override"><xs:annotation><xs:documentation>Add underscore separated group names to allow that group to override a shipment.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="process"><xs:annotation><xs:documentation>Add underscore separated group names to allow that group to process a shipment.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="transmit" type="xs:string"><xs:annotation><xs:documentation>Deprecated: Transmit File button is no longer supported</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="finalize"><xs:annotation><xs:documentation>Add underscore separated group names to allow that group to finalize a shipment.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="reprint"><xs:annotation><xs:documentation>Add underscore separated group names to allow that group to reprint documentation.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="validate"><xs:annotation><xs:documentation>Add underscore separated group names to allow that group to validate a shipment.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="unfinalize"><xs:annotation><xs:documentation>Add underscore separated group names to allow that group to unfinalize a shipment.</xs:documentation></xs:annotation></xs:element></xs:all></xs:complexType></xs:element><xs:element name="search"><xs:complexType><xs:sequence><xs:element name="field" type="xs:string"><xs:annotation><xs:documentation>Deprecated: All the fields to search through are configurable through "sql" child elements</xs:documentation></xs:annotation></xs:element><xs:element maxOccurs="unbounded" name="group"><xs:annotation><xs:documentation>Contents of this node determines how the search textbox will be populated depending on User group. 
                              Set up multiple nodes of this type to create different access levels for different user groups. 
                              The first group name found that belongs to logged in user will be used to populate search textbox.</xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="allow_text_search" type="xs:string"><xs:annotation><xs:documentation>Deprecated: allow searching is now default behavior</xs:documentation></xs:annotation></xs:element><xs:element name="sql" type="xs:string"><xs:annotation><xs:documentation>Specifies the SQL that will be used to populate the dropdown if the user belongs to this user group.
                                                Parameters @USERNAME@, @USERGUID@, and @GROUPNAME@ may be used in the SQL.</xs:documentation></xs:annotation></xs:element></xs:all><xs:attribute name="name" type="xs:string" use="required"><xs:annotation><xs:documentation>
                              Specifies the name of the user group that will use the above SQL for search textbox.
                              This can be an underscore seperated list of multiple group names
                            </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" name="email"><xs:complexType><xs:all><xs:element minOccurs="0" maxOccurs="1" name="snippet_value_query" type="xs:string"><xs:annotation><xs:documentation>
                              Specifies a query that can be used to create parameters in the email body. Each column name in the query will create an upper case parameter surrounded by @ @.
                              This query can use @EXPORTGUID@ and @PARTNERID@ as parameters
                            </xs:documentation></xs:annotation></xs:element><xs:element maxOccurs="1" name="snippets"><xs:annotation><xs:documentation>Specify the name for each snippet in the above query to populate in the email window</xs:documentation></xs:annotation><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="snippet"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="name" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="product_list_queries"><xs:complexType><xs:annotation><xs:documentation>
                            allows the user to insert data lists via table or spreadsheet with shipment specific data into e-mails. 
                          </xs:documentation></xs:annotation><xs:choice maxOccurs="unbounded"><xs:element minOccurs="0" maxOccurs="unbounded" name="product_list_query"><xs:complexType><xs:annotation><xs:documentation>
                                  Specify query that will populate list or table. 
                                  Available parameters: @EXPORTGUID@, @PARTNERID@
                                </xs:documentation></xs:annotation><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="name" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                        Specify name that will appear in email template dropdown
                                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="attach_as_spreadsheet" type="YesNo" use="optional"><xs:annotation><xs:documentation>
                                        Specify Y to attach query as a spreadsheet. Otherwise will be added to email body
                                      </xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:element name="reports"><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element minOccurs="0" maxOccurs="1" name="custom_report_sql" type="xs:string"><xs:annotation><xs:documentation>
                          Specify SQL to populate custom reporting tables
                          SQL Parameters: @PartnerID, @ExportGUID, @UserName, @UserGUID, @GroupName, @Draft, @RecordType
                          String replacement Parameters:  @PartnerID@, @ExportGUID@, @UserName@, @UserGUID@, @GroupName@, @Draft@, @RecordType@
                          
                          @Draft: Y if only draft documentation is being printed, otherwise N
                        </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" name="reporting_web_service"><xs:complexType><xs:sequence><xs:element name="title" type="xs:string"><xs:annotation><xs:documentation>
                                specify a title for use in notification e-mails. the default title is "Trade Transaction Management"
                              </xs:documentation></xs:annotation></xs:element></xs:sequence><xs:attribute name="enabled" type="YesNo" use="required"><xs:annotation><xs:documentation>
                              configures the use of reporting web services for generating export documentation
                            </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element minOccurs="0" name="pdf_version"><xs:complexType><xs:simpleContent><xs:annotation><xs:documentation>
                              specifies the Adobe version to use for generated PDFs. valid values: 0 (default),12-17 (12=v1.2, 13=v1.3, etc.
                            </xs:documentation></xs:annotation><xs:extension base="xs:decimal"><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="filters"><xs:complexType><xs:annotation><xs:documentation>
                                    Provides a filter expression for the documents grid and documents archive grid. Similar to the /search section. This can be configured by user group
                                    he first filter node with a group name that matches the user''s group name will be used in the query that displays the grid on the screen.
                                  </xs:documentation></xs:annotation><xs:sequence><xs:element name="filter"><xs:complexType><xs:simpleContent><xs:annotation><xs:documentation>
                                    Provides a filter expression for the documents grid and documents archive grid. This will only be used if the logged in user''s belongs to the group specified in the group attribute
                                  </xs:documentation></xs:annotation><xs:extension base="xs:string"><xs:attribute name="group" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="unbounded" name="report"><xs:complexType><xs:sequence minOccurs="0"><xs:element name="sql" type="xs:string" /></xs:sequence><xs:attribute name="generated" type="xs:string" use="optional" /><xs:attribute name="type" type="xs:string" use="required" /><xs:attribute name="name" type="xs:string" use="required" /></xs:complexType></xs:element><xs:element minOccurs="0" name="exportws"><xs:complexType><xs:annotation><xs:documentation>
                            Provides a filter expression for the documents grid and documents archive grid. This will only be used if the logged in user''s belongs to the group specified in the group attribute
                          </xs:documentation></xs:annotation><xs:sequence><xs:element name="username" type="xs:string" /><xs:element name="password" type="xs:string" /><xs:element name="file_transfer"><xs:complexType><xs:sequence><xs:element name="protocol" type="xs:string" /><xs:element name="address" /><xs:element name="username" /><xs:element name="password" /><xs:element name="port" /><xs:element name="remote_directory" /></xs:sequence></xs:complexType></xs:element><xs:element name="output_file_options"><xs:complexType><xs:sequence><xs:element name="param_sql" type="xs:string" /><xs:element name="output_filename"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="field"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="name" type="xs:string" use="required" /><xs:attribute name="format" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence><xs:attribute name="separator" type="xs:string" use="required" /></xs:complexType></xs:element></xs:sequence><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:complexType></xs:element></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:complexType></xs:element><xs:element name="disable_actions"><xs:complexType><xs:sequence><xs:element name="change_format" /><xs:element name="delete" type="xs:string" /></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" name="document_transmissions"><xs:complexType><xs:sequence><xs:element minOccurs="0" maxOccurs="unbounded" name="document_transmission"><xs:complexType><xs:sequence><xs:element name="documents_to_include" type="xs:string"><xs:annotation><xs:documentation>
                                Use this configuration element to write SQL that pulls documents to include in file transmission.
                                
                                  SQL Parameters available: @ExportGUID, @UserName, @GroupName, @UserGUID
                                  SQL String Replacements: @EXPORTGUID@, @USERNAME@, @GROUPNAME@, @USERGUID@, @RECORDTYPE@
                              </xs:documentation></xs:annotation></xs:element><xs:element name="file_transfer"><xs:complexType><xs:sequence><xs:element name="protocol" type="xs:string" /><xs:element name="address" type="xs:string" /><xs:element name="username" type="xs:string" /><xs:element name="password" type="xs:string" /><xs:element name="port" type="xs:unsignedByte" /><xs:element name="remote_directory" type="xs:string" /></xs:sequence></xs:complexType></xs:element></xs:sequence><xs:attribute name="name" type="xs:string" use="required" /><xs:attribute name="display_name" type="xs:string" use="required" /><xs:attribute name="display" type="xs:string" use="required" /></xs:complexType></xs:element></xs:sequence><xs:attribute name="owner" type="xs:string" use="required" /><xs:attribute name="tfs" type="xs:unsignedShort" use="required" /></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element><xs:element name="header"><xs:complexType><xs:all><xs:element name="fields_per_row" type="xs:integer" /><xs:element name="field_configurations" type="field_configurations" /></xs:all><xs:attribute name="supplemental_table" type="xs:string" use="optional" /><xs:attribute name="disable_calendars" type="YesNo" use="optional"><xs:annotation><xs:documentation>Setting this to Y will prevent DateTimePickers to automatically opening calendar upon selection.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disabled_when_processed" type="YesNo" use="optional"><xs:annotation><xs:documentation>Set to Y to prevent section to disable this section when ProcessedFlag = ''Y''</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disabled_group" type="xs:string" use="optional"><xs:annotation><xs:documentation>Provide an underscore deliminated list of Security groups that will not have access to this section.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="enabled_group" type="xs:string" use="optional"><xs:annotation><xs:documentation>Provide an underscore deliminated list of Security groups that will have access to this section. All other security groups will not have access to this section.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disabled_status" type="xs:string" use="optional"><xs:annotation><xs:documentation>Provide an underscore deliminated list of Statuses that will cause this section to be disabled.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="set_effdate" type="YesNo" use="optional" /></xs:complexType></xs:element><xs:element name="parties"><xs:complexType mixed="true"><xs:all><xs:element minOccurs="0" maxOccurs="1" name="import_country_party"><xs:annotation><xs:documentation>
                             Specify a partner name to automatically update Import Country in txdExportHeader with that party''s country code. 
                            options: seller, shipfrom, billto, shipto, intermediateconsignee, ultimateconsignee, forwarder, forwardto exportingcarrier, inlandcarrier
                            </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="export_country_party"><xs:annotation><xs:documentation>
                             Specify a partner name to automatically update Export Country in txdExportHeader with that party''s country code. 
                            options: seller, shipfrom, billto, shipto, intermediateconsignee, ultimateconsignee, forwarder, forwardto exportingcarrier, inlandcarrier
                            </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="state_max_length"><xs:complexType><xs:simpleContent><xs:annotation><xs:documentation>
                             Specify the maximum length a state code
                           </xs:documentation></xs:annotation><xs:extension base="xs:integer"><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="country_max_length"><xs:complexType><xs:simpleContent><xs:annotation><xs:documentation>
                             Specify the maximum length a country code
                           </xs:documentation></xs:annotation><xs:extension base="xs:integer"><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element maxOccurs="1" name="party_configurations"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="party_configuration"><xs:complexType><xs:all minOccurs="0" maxOccurs="1"><xs:element name="field_configurations" type="field_configurations" /></xs:all><xs:attribute name="disabled_when_processed" type="YesNo" use="optional" /><xs:attribute name="disabled_group" type="xs:string" use="optional" /><xs:attribute name="enabled_group" type="xs:string" use="optional" /><xs:attribute name="disabled_status" type="xs:string" use="optional" /><xs:attribute name="disabled_source" type="xs:string" use="optional" /><xs:attribute name="party" type="xs:string" use="required" /><xs:attribute name="hidden" type="xs:string" use="optional" /><xs:attribute name="dts_required" type="YesNo" use="optional" /><xs:attribute name="display_name" type="xs:string" use="optional" /><xs:attribute name="default" type="xs:string" use="optional" /><xs:attribute name="hide_dts" type="YesNo" use="optional" /><xs:attribute name="enable_copy" type="YesNo" use="optional" /><xs:attribute name="source" type="xs:string" use="optional" /><xs:attribute name="disable_search" type="xs:string" use="optional" /></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="disallow_override_groups"><xs:complexType><xs:all><xs:element name="shipment"><xs:annotation><xs:documentation>
                                Specify a ''_'' deliminated list of group names that are not able to perform a shipment override on a denied party
                                
                                Shipment override: clearing the block of a denied party for this shipment only. A shipment override does not impact future screenings
                              </xs:documentation></xs:annotation></xs:element><xs:element name="global"><xs:annotation><xs:documentation>
                                Specify a ''_'' deliminated list of group names that are not able to perform a global override on a denied party
                                
                                global override: performing an override on a denied party. Future screenings with the same search data 
                                will not be blocked unless search results contain new entities or information.
                              </xs:documentation></xs:annotation></xs:element></xs:all><xs:attribute name="tfs" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="show_ultimateconsigneetype_dropdown"><xs:complexType><xs:simpleContent><xs:annotation><xs:documentation>
                                Specify whether or not to display a dropdown for the ultimate consignee type. 
                                This data is pulled from tmgGlobalCodes with fieldName = ''UltimateConsigneeType''
                              </xs:documentation></xs:annotation><xs:extension base="YesNo"><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="disable_actions"><xs:complexType><xs:all><xs:element minOccurs="0" maxOccurs="1" name="new"><xs:annotation><xs:documentation>
                                Specify ''_'' deliminated list of user groups that are prohibited from creating new parties
                              </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="copy"><xs:annotation><xs:documentation>
                                Specify ''_'' deliminated list of user groups that are prohibited from copying existing parties
                              </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="delete"><xs:annotation><xs:documentation>
                                Specify ''_'' deliminated list of user groups that are prohibited from deleting existing parties
                              </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="add_company"><xs:annotation><xs:documentation>
                                Specify ''_'' deliminated list of user groups that are prohibited from adding parties to company maintenance
                              </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="save"><xs:annotation><xs:documentation>
                                Specify ''_'' deliminated list of user groups that are prohibited from saving parties
                              </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="view"><xs:annotation><xs:documentation>
                                Specify ''_'' deliminated list of user groups that are prohibited from viewing the parties tab
                              </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="edit"><xs:annotation><xs:documentation>
                                Specify ''_'' deliminated list of user groups that are prohibited from editing parties
                              </xs:documentation></xs:annotation></xs:element></xs:all><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element></xs:all><xs:attribute name="disabled_when_processed" type="YesNo" use="optional"><xs:annotation><xs:documentation>
                        Specify ''Y'' to disable this tab when a shipment is processed
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disabled_group" type="xs:string" use="optional"><xs:annotation><xs:documentation>Provide an underscore deliminated list of Security groups that will not have access to this section.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="enabled_group" type="xs:string" use="optional"><xs:annotation><xs:documentation>Provide an underscore deliminated list of Security groups that will have access to this section. All other security groups will not have access to this section.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disabled_status" type="xs:string" use="optional"><xs:annotation><xs:documentation>Provide an underscore deliminated list of Statuses that will cause this section to be disabled.</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="detail"><xs:complexType><xs:all><xs:element minOccurs="0" maxOccurs="1" name="fields_per_row" type="xs:integer" /><xs:element name="value_qty_field" /><xs:element name="calculate_rptqty" type="YesNo"><xs:annotation><xs:documentation>
                        Specify ''Y'' to automatically update RptQty and AddlRptQty during content validations 
                        
                        RptQty = TxnQty * UOMConvFactor
                        AddlRptQty = TxnQty * AddlUOMConvFactor
                      
                      </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="content_validation"><xs:complexType><xs:all><xs:element minOccurs="0" maxOccurs="1" name="holds"><xs:complexType><xs:all><xs:element minOccurs="0" maxOccurs="1" name="invalid_hs" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will put a shipment on hold if hs is not valid. Default is Y if not provided.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="hs_declarable" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will put a shipment on hold if hs is not export declarable. Default is Y if not provided.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="rptqtyuom_differ" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will put a shipment on hold if supplied primary uom is different from actual uom. Default is Y if not provided.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="no_hs_rptqtyuom" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will put a shipment on hold if primary uom is supplied by client but hs doesn''t have uom. Default is Y if not provided.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="addlrptqtyuom_differ" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will put a  shipment on hold if supplied secondary uom is different from actual uom. Default is Y if not provided.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="no_hs_addlrptqtyuom" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will put a  shipment on hold if secondary uom is supplied by client but hs doesn''t have uom. Default is Y if not provided.</xs:documentation></xs:annotation></xs:element></xs:all><xs:attribute name="disable_license_validation" type="YesNo" use="optional" /></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="tariffs"><xs:complexType><xs:sequence><xs:element minOccurs="0" maxOccurs="unbounded" name="tariff"><xs:complexType><xs:all><xs:element name="type" type="xs:string"><xs:annotation><xs:documentation>Specify whether this is an Import or Export Tariff</xs:documentation></xs:annotation></xs:element><xs:element name="validate"><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="type" type="xs:string" use="optional"><xs:annotation><xs:documentation>Specify "multi" to validate multiple HS numbers in the same web call</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="content_link" type="YesNo"><xs:annotation><xs:documentation>Specify "Y" to create a link from this field to Content''s Global Tariffs Detail page</xs:documentation></xs:annotation></xs:element><xs:element name="rptqtyuom_field"><xs:complexType><xs:annotation><xs:documentation>Specify field name containing UOM to validate against content. Default value RptQtyUOM</xs:documentation></xs:annotation><xs:attribute name="table" type="xs:string" use="optional" /></xs:complexType></xs:element><xs:element name="addlrptqtyuom_field"><xs:complexType><xs:annotation><xs:documentation>Specify field name containing UOM to validate against content. Default value AddlRptQtyUOM</xs:documentation></xs:annotation><xs:attribute name="table" type="xs:string" use="optional" /></xs:complexType></xs:element><xs:element minOccurs="0" name="always_set_uom" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will always set the Unit of Measure equal to the expected value found in content.
                                                            Unit of Measure fields that are validated is specified in the rptqtyuom_field and addlrptqtyuom_field above.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="validate_uom" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will put shipment on hold if Unit of Measure (RptQtyUOM) entered by user against expected value found in content.
                                          Unit of Measure fields that are validated is specified in the rptqtyuom_field and addlrptqtyuom_field above.
                                          </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="validate_controls" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will validate HS numbers for Import Controls.</xs:documentation></xs:annotation></xs:element><xs:element name="holds"><xs:complexType><xs:all><xs:element minOccurs="0" maxOccurs="1" name="invalid_hs" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will put a shipment on hold if hs is not valid. Default is Y if not provided.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="hs_declarable" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will put a shipment on hold if hs is not export declarable. Default is Y if not provided.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="rptqtyuom_differ" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will put a shipment on hold if supplied primary uom is different from actual uom. Default is Y if not provided.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="no_hs_rptqtyuom" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will put a shipment on hold if primary uom is supplied by client but hs doesn''t have uom. Default is Y if not provided.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="addlrptqtyuom_differ" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will put a shipment on hold if supplied secondary uom is different from actual uom. Default is Y if not provided.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="no_hs_addlrptqtyuom" type="YesNo"><xs:annotation><xs:documentation>Setting this element to Y will put a shipment on hold if secondary uom is supplied by client but hs doesn''t have uom. Default is Y if not provided.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="controls" type="YesNo"><xs:annotation><xs:documentation>
                                                  Setting this element to Y will put a shipment on hold if the HS Number returns a control from content.
                                                  Setting this element to N will only create an informational message.
                                                  this configuration element only works with content_validation/validate_controls = ''Y''.
                                                </xs:documentation></xs:annotation></xs:element></xs:all></xs:complexType></xs:element></xs:all><xs:attribute name="field" type="xs:string" use="required" /></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" name="ecns"><xs:complexType><xs:sequence><xs:element minOccurs="0" maxOccurs="unbounded" name="ecn"><xs:complexType><xs:all><xs:element name="content_link" type="YesNo" /></xs:all><xs:attribute name="field" type="xs:string" use="required" /></xs:complexType></xs:element></xs:sequence><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="reexport"><xs:complexType><xs:all><xs:element name="enabled" type="YesNo"><xs:annotation><xs:documentation>
                                                  TODO: ReExport
                                                </xs:documentation></xs:annotation></xs:element><xs:element name="countries"><xs:complexType><xs:all><xs:element name="country" type="ISOCountryCode" /></xs:all></xs:complexType></xs:element><xs:element name="field"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="enable_validation"><xs:complexType><xs:choice maxOccurs="unbounded"><xs:element minOccurs="0" maxOccurs="1" name="import" type="YesNo" /><xs:element minOccurs="0" maxOccurs="1" name="export" type="YesNo" /></xs:choice></xs:complexType></xs:element></xs:all><xs:attribute name="enabled" type="YesNo" use="optional" /><xs:attribute name="log_response" type="YesNo" use="optional"><xs:annotation><xs:documentation>
                              TODO: log_response
                            </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="enable_pga" type="YesNo" /><!-- Display query could be left out, default query would be used on screen--><xs:element minOccurs="0" maxOccurs="1" name="display_query" type="xs:string" /><xs:element name="product_search_query" type="xs:string"><xs:annotation><xs:documentation>Specify query that will be used to populate the product number autocomplete textbox on Edit Detail Window. 
                        Available parameters @PARTNERID@, @EXPORTCOUNTRY@, @IMPORTCOUNTRY@, @SEARCH@. @SEARCH@ is the current text in the search box.</xs:documentation></xs:annotation></xs:element><xs:element name="classification_lookup" type="xs:string"><xs:annotation><xs:documentation>
                          Specify query that will be used auto populate values in the edit detail form, based on the product num selection in the product_search_query.
                          Available parameters @PARTNERID@, @USERNAME@, @USERGUID@, @EXPORTGUID@, @EXPORTDETAILGUID@, @EXPORTCOUNTRY@, @IMPORTCOUNTRY@, @VALUE@.
                          @VALUE@ is the selected item from product_search_query.
                        </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" name="display_configurations" type="display_configurations"><xs:annotation><xs:documentation>
                          DEPRECATED: This no longer specifies configurations of the Item detail display grid. This is now done through Dynamic Controls Screen.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="disable_actions"><xs:complexType><xs:all><xs:element minOccurs="0" maxOccurs="1" name="new" /><xs:element minOccurs="0" maxOccurs="1" name="save" /><xs:element minOccurs="0" maxOccurs="1" name="view" /><xs:element minOccurs="0" maxOccurs="1" name="edit" /><xs:element minOccurs="0" maxOccurs="1" name="manage_licenses" type="xs:string" /><xs:element minOccurs="0" maxOccurs="1" name="manage_pga" type="xs:string" /><xs:element minOccurs="0" maxOccurs="1" name="copy" /><xs:element minOccurs="0" maxOccurs="1" name="delete" type="xs:string" /><xs:element minOccurs="0" maxOccurs="1" name="attach_docs" /></xs:all><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /></xs:complexType></xs:element><xs:element name="field_configurations" type="field_configurations"><xs:annotation><xs:documentation>
                          DEPRECATED: This no longer specifies configurations of the Edit Detail Form. This is now done through Dynamic Controls Screen.
                        </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="after_save_sql" type="xs:string" /><xs:element minOccurs="0" maxOccurs="1" name="before_save_sql"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="parent_child_detail"><xs:complexType><xs:sequence><xs:element name="display_query" /></xs:sequence><xs:attribute name="disable_license_validation" type="YesNo" use="optional"><xs:annotation><xs:documentation>
                          Set to Y to disable License validation checks when validating shipment.
                          License Validations will put a shipment on hold if a product potentially needs an Export License using the ECCN of the line number.
                        </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="enabled" type="YesNo" use="required" /></xs:complexType></xs:element></xs:all><xs:attribute name="supplemental_table" type="xs:string" use="optional" /><xs:attribute name="set_effdate" type="YesNo" use="optional" /><xs:attribute name="disable_calendars" type="YesNo" use="optional"><xs:annotation><xs:documentation>Setting this to Y will prevent DateTimePickers to automatically opening calendar upon selection.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disabled_when_processed" type="YesNo" use="optional"><xs:annotation><xs:documentation>Set to Y to prevent section to disable this section when ProcessedFlag = ''Y''</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disabled_group" type="xs:string" use="optional"><xs:annotation><xs:documentation>Provide an underscore deliminated list of Security groups that will not have access to this section.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="enabled_group" type="xs:string" use="optional"><xs:annotation><xs:documentation>Provide an underscore deliminated list of Security groups that will have access to this section. All other security groups will not have access to this section.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disabled_status" type="xs:string" use="optional"><xs:annotation><xs:documentation>Provide an underscore deliminated list of Statuses that will cause this section to be disabled.</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element minOccurs="0" name="delivery_instruction"><xs:complexType><xs:complexContent mixed="true"><xs:extension base="subConfigSection"><xs:choice minOccurs="0" maxOccurs="1" /></xs:extension></xs:complexContent></xs:complexType></xs:element><xs:element minOccurs="0" name="assist" type="subConfigSection" /><xs:element minOccurs="0" name="equipment" type="subConfigSection" /><xs:element minOccurs="0" maxOccurs="1" name="purchase_order" type="subConfigSection" /><xs:element minOccurs="0" maxOccurs="1" name="fee" type="subConfigSection" /><xs:element minOccurs="0" maxOccurs="1" name="generic1" type="subConfigSection" /><xs:element minOccurs="0" maxOccurs="1" name="generic2" type="subConfigSection" /><xs:element minOccurs="0" maxOccurs="1" name="fta"><xs:complexType><xs:choice maxOccurs="unbounded"><xs:element minOccurs="0" maxOccurs="1" name="disable_actions"><xs:complexType><xs:all><xs:element minOccurs="0" maxOccurs="1" name="new" /><xs:element minOccurs="0" maxOccurs="1" name="save" /><xs:element minOccurs="0" maxOccurs="1" name="view" /><xs:element minOccurs="0" maxOccurs="1" name="edit" /><xs:element minOccurs="0" maxOccurs="1" name="copy" /><xs:element minOccurs="0" maxOccurs="1" name="delete" /></xs:all><xs:attribute name="release" type="xs:string" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:integer" use="optional" /></xs:complexType></xs:element><xs:element name="request_header_query"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="request_detail_query"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:choice><xs:attribute name="enabled" type="YesNo" use="required" /></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="after_save_sql" type="xs:string"><xs:annotation><xs:documentation>
                        SQL that runs after save but before validation. Provides ability to run custom updates on client specific logic.
                        
                       SQL Parameters: @PartnerID, @ExportGUID, @UserName, @UserGUID, @GroupName, @Draft, @RecordType
                       String replacement Parameters:  @PartnerID@, @ExportGUID@, @UserName@, @UserGUID@, @GroupName@, @Draft@, @RecordType@
                         
                      </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="validation_sql_ttm" type="xs:string" /><xs:element minOccurs="1" maxOccurs="1" name="validation_sql" type="xs:string"><xs:annotation><xs:documentation>
                        SQL to create custom validations. SQL Statements should insert records into txdExportSystemMessages to create shipment hold messages
                        
                       SQL Parameters: @PartnerID, @ExportGUID, @UserName, @UserGUID, @GroupName, @Draft, @RecordType
                       String replacement Parameters:  @PartnerID@, @ExportGUID@, @UserName@, @UserGUID@, @GroupName@, @Draft@, @RecordType@
                         
                      </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="license_validation_sql" type="xs:string" /><xs:element minOccurs="1" maxOccurs="1" name="determine_status_sql" type="xs:string" /><xs:element minOccurs="0" maxOccurs="1" name="ttm_finalize_extract_sql" type="xs:string" /><xs:element minOccurs="0" maxOccurs="1" name="status_alerts"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="status_alert"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:sequence><xs:element minOccurs="0" maxOccurs="1" name="email" type="xs:string" /><xs:element minOccurs="0" maxOccurs="1" name="message" type="xs:string" /></xs:sequence><xs:attribute name="status" type="xs:string" use="required" /></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="file_extracts"><xs:complexType><xs:sequence><xs:element minOccurs="0" maxOccurs="unbounded" name="file_extract"><xs:complexType><xs:attribute name="name" type="xs:string" use="required"><xs:annotation><xs:documentation>
                            the name should match a workflow name specified under: /configuration/common/integration/outbound/file_definitions/workflow_command.
                          </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="display" type="xs:string" use="required" /></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="file_import"><xs:complexType><xs:all><xs:element name="file_import_config" type="xs:string" /><xs:element name="file_import_downloadpath" type="xs:string" /><xs:element name="file_import_ftp"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="username" type="xs:string" use="required" /><xs:attribute name="password" type="xs:string" use="required" /><xs:attribute name="host" type="xs:string" use="required" /><xs:attribute name="path" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="file_import_patterns"><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="file_import_pattern" type="xs:string" /></xs:sequence></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="file_export"><xs:complexType><xs:all><xs:element name="file_export_config" type="xs:string" /><xs:element name="file_export_downloadpath" type="xs:string" /><xs:element name="file_export_ftp"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="username" type="xs:string" use="required" /><xs:attribute name="password" type="xs:string" use="required" /><xs:attribute name="host" type="xs:string" use="required" /><xs:attribute name="path" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="spreadsheet_management"><xs:complexType><xs:all><xs:element minOccurs="0" maxOccurs="1" name="extracts"><xs:complexType><xs:sequence><xs:element minOccurs="0" maxOccurs="unbounded" name="extract"><xs:complexType><xs:all><xs:element name="sql" type="xs:string" /></xs:all><xs:attribute name="name" type="xs:string" use="required" /></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="uploads"><xs:complexType><xs:sequence><xs:element minOccurs="0" maxOccurs="unbounded" name="upload"><xs:complexType><xs:all><xs:element name="table" type="xs:string" /><xs:element name="sql" type="xs:string" /></xs:all><xs:attribute name="name" type="xs:string" use="required" /></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="ordernumship_sequences"><xs:complexType><xs:all><xs:element name="ordernumship_sequence"><xs:complexType><xs:attribute name="name" type="xs:string" use="required" /><xs:attribute name="prefix" type="xs:string" use="required" /><xs:attribute name="identifier" type="xs:string" use="required" /><xs:attribute name="primary" type="xs:string" use="required" /><xs:attribute name="length" type="xs:string" use="required" /></xs:complexType></xs:element></xs:all><xs:attribute name="enabled" type="xs:string" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="before_save_sql"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:integer" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="system_messages"><xs:complexType><xs:attribute name="enabled" type="YesNo" use="required"><xs:annotation><xs:documentation>
                        Setting this element to Y will use upgraded system message functionality. This should be set to Y by default
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="process_note_enabled"><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="set_hazmatflag"><xs:complexType><xs:annotation><xs:documentation>
                      Setting this element to Y will automatically update the HazMatFlag on Header depending on HazMatFlag values on details.
                      
                  When this element is Y: If ANY line item details have HazMatFlag = ''Y'' Set Header HazMatFlag = ''Y'', Otherwise set to ''N''
                  When this element is N: If ANY line item details have HazMatFlag = ''Y'' Set Header HazMatFlag = ''Y'', Otherwise do not update HazMatFlag on Header
                    </xs:documentation></xs:annotation><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:all><xs:attribute name="type" type="xs:string" use="required" /><xs:attribute name="validate_on_save" type="YesNo" use="required"><xs:annotation><xs:documentation>
                  Setting this attribute to Y will create a "Save and Validate" button rather than two separate buttons "Save" and "Validate". 
                  User''s will not be able to save without running configured validations.
                </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="validate_on_preview" type="YesNo" use="required"><xs:annotation><xs:documentation>
                  Setting this attribute to Y will automatically run validations when draft documentation is created. 
                </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="default" type="xs:string" use="optional" /><xs:attribute name="txn_type" type="xs:string" use="optional" /></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:complexType name="display_configurations"><xs:sequence><xs:element minOccurs="0" maxOccurs="unbounded" name="display_configuration"><xs:annotation><xs:documentation>
            After the 18.3 release, this configuration element will no longer be needed. Grid Configuration will be done through Configuration/fugFormConfiguration.aspx
            Documentation can be found on the shared drive under Product Management/Cross Product/Dynamic_Controls_Operating_Instructions.pdf
          </xs:documentation></xs:annotation><xs:complexType><xs:attribute name="field" type="xs:string" use="required" /><xs:attribute name="width" type="xs:integer" use="optional" /><xs:attribute name="format" type="xs:string" use="optional" /><xs:attribute name="align" type="xs:string" use="optional" /></xs:complexType></xs:element></xs:sequence></xs:complexType><xs:complexType name="field_configurations"><xs:sequence><xs:element minOccurs="0" maxOccurs="unbounded" name="field_configuration"><xs:annotation><xs:documentation>
              After the 18.3 release, this configuration element will no longer be needed. Form Configuration will be done through Configuration/fugFormConfiguration.aspx
              Documentation can be found on the shared drive under Product Management/Cross Product/Dynamic_Controls_Operating_Instructions.pdf
            </xs:documentation></xs:annotation><xs:complexType><xs:attribute name="field" type="xs:string" use="required" /><xs:attribute name="separator" type="YesNo" use="optional" /><xs:attribute name="disabled_status" type="xs:string" use="optional" /><xs:attribute name="display_name" type="xs:string" use="optional" /><xs:attribute name="disabled" type="xs:string" use="optional" /><xs:attribute name="source" type="xs:string" use="optional" /><xs:attribute name="required" type="YesNo" use="optional" /><xs:attribute name="disable_when_processed" type="xs:string" use="optional" /><xs:attribute name="default" type="xs:string" use="optional" /><xs:attribute name="type" type="xs:string" use="optional" /><xs:attribute name="hidden" type="xs:string" use="optional" /><xs:attribute name="numeric_cast" type="xs:string" use="optional" /><xs:attribute name="enabled_group" type="xs:string" use="optional" /><xs:attribute name="disabled_group" type="xs:string" use="optional" /><xs:attribute name="disabled_source" type="xs:string" use="optional" /><xs:attribute name="format" type="xs:string" use="optional" /><xs:attribute name="text_rows" type="xs:integer" use="optional" /><xs:attribute name="supplemental" type="xs:string" use="optional" /><xs:attribute name="enable_time" type="YesNo" use="optional" /></xs:complexType></xs:element></xs:sequence></xs:complexType><xs:complexType name="delivery_instruction_detail"><xs:choice maxOccurs="unbounded"><xs:element minOccurs="0" maxOccurs="1" name="line_selection_sql" type="xs:string" /><xs:element minOccurs="0" name="display_configurations" type="display_configurations" /><xs:element minOccurs="0" maxOccurs="1" name="display_query" type="xs:string" /><xs:element name="fields_per_row" type="xs:integer" /><xs:element name="field_configurations" type="field_configurations" /><xs:element minOccurs="1" maxOccurs="1" name="after_save_sql"><xs:annotation><xs:documentation>Specify SQL that will be run directly after saving inserting/updating export tables.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:integer" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="before_save_sql"><xs:annotation><xs:documentation>Specify SQL that will be run directly before saving inserting/updating export tables.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:integer" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:choice><xs:attribute name="supplemental_table" type="xs:string" use="optional" /></xs:complexType><xs:complexType name="subConfigSection" mixed="true"><!-- Decision Here: xs:all allows any order, but cannot be used in extensions, creating more work for detail, delivery instructin, assist sections
                      xs:choice unbounded does not validate that the same element is added multiple times"--><xs:choice maxOccurs="unbounded"><xs:element minOccurs="0" maxOccurs="1" name="blank_rows" type="xs:string"><xs:annotation><xs:documentation>DEPRECATED: This element does not change anything on the entities form or grid.
                      This element may exist in older partners but should not be used going forward.</xs:documentation></xs:annotation></xs:element><xs:element minOccurs="0" maxOccurs="1" name="display_query" type="xs:string" /><xs:element minOccurs="0" maxOccurs="1" name="display_configurations" type="display_configurations" /><xs:element minOccurs="0" maxOccurs="1" name="fields_per_row" type="xs:unsignedByte" /><xs:element minOccurs="0" maxOccurs="1" name="disable_actions"><xs:complexType><xs:all><xs:element minOccurs="0" maxOccurs="1" name="new" /><xs:element minOccurs="0" maxOccurs="1" name="save" /><xs:element minOccurs="0" maxOccurs="1" name="save_as_template" /><xs:element minOccurs="0" maxOccurs="1" name="view" /><xs:element minOccurs="0" maxOccurs="1" name="edit" /><xs:element minOccurs="0" maxOccurs="1" name="copy" /><xs:element minOccurs="0" maxOccurs="1" name="delete" /><!-- Evaluate only available for "assist" --><xs:element minOccurs="0" maxOccurs="1" name="evaluate" /></xs:all><xs:attribute name="release" type="xs:string" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:integer" use="optional" /></xs:complexType></xs:element><xs:element name="field_configurations" type="field_configurations" /><xs:element minOccurs="0" maxOccurs="1" name="after_save_sql"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element minOccurs="0" maxOccurs="1" name="before_save_sql"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><!-- Need Product Validation to prevent this from existing in a  section other than Delivery Instruction, --><xs:element minOccurs="0" maxOccurs="1" name="delivery_instruction_detail" type="delivery_instruction_detail" /><!-- Need Product Validation to prevent this from existing in a  section other than ASSIST, --><xs:element minOccurs="0" maxOccurs="1" name="use_assist_management"><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><!-- Need Product Validation to prevent this from existing in a  section other than EQUIPMENT --><xs:element minOccurs="0" maxOccurs="1" name="children"><xs:complexType><xs:sequence><xs:element name="display_query" type="xs:string" /></xs:sequence><xs:attribute name="enabled" type="YesNo" use="optional" /></xs:complexType></xs:element></xs:choice><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:integer" use="optional" /><xs:attribute name="enabled" type="xs:string" use="required" /><xs:attribute name="disabled_when_processed" type="YesNo" use="optional"><xs:annotation><xs:documentation>Set to Y to prevent section to disable this section when ProcessedFlag = ''Y''</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="hidden" type="xs:string" use="optional"><xs:annotation><xs:documentation>Provide an underscore deliminated list of Security groups that will not be able to see this section.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disabled_group" type="xs:string" use="optional"><xs:annotation><xs:documentation>Provide an underscore deliminated list of Security groups that will not have access to this section. Specify "ALL" to disable for all groups.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="enabled_group" type="xs:string" use="optional"><xs:annotation><xs:documentation>Provide an underscore deliminated list of Security groups that will have access to this section. All other security groups will not have access to this section.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disabled_status" type="xs:string" use="optional"><xs:annotation><xs:documentation>Provide an underscore deliminated list of Statuses that will cause this section to be disabled.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disable_calendars" type="YesNo" use="optional"><xs:annotation><xs:documentation>Setting this to Y will prevent DateTimePickers to automatically opening calendar upon selection.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="set_effdate" type="YesNo" use="optional" /><xs:attribute name="supplemental_table" type="xs:string" use="optional" /></xs:complexType></xs:schema>', N'N', N'N')
INSERT [dbo].[tbgXSDSchemas] ([PartnerID], [EffDate], [ProductName], [SchemaName], [SchemaXPath], [Assembly], [ClassName], [XSDSchema], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-10-16T15:07:31.127' AS DateTime), N'FTA', N'FTA', N'configuration/fta', N'', N'', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified"><xs:element name="configuration"><xs:complexType><xs:all><xs:element name="fta"><xs:complexType><xs:all><xs:element name="ltsdretrosplit"><xs:annotation><xs:documentation>
                    This tag will determine if the ltsd will generate both a retro certificate and a future certificate or just one normal cert.
                  </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="version" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="retrostartdate"><xs:annotation><xs:documentation>
                    This tag will set what day of the signature year client wants the ltsd retro certificate start date to default to.
                  </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="version" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="defaultdatestocurrentyear"><xs:annotation><xs:documentation>
                    This tag will autofill the FROM and TO Dates on a Certificate or BOM Analysis to 01/01 and 12/31 of the current year.
                  </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="version" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="fta_cert_company_columns" type="xs:string"><xs:annotation><xs:documentation>
                    When loading the Party Dropdown on frdFTACertificates, this is the display value that is shown on the screen. The underlying value is always the ''CompanyId'', but this display value is configurable.
                  </xs:documentation></xs:annotation></xs:element><xs:element name="supplier_column"><xs:annotation><xs:documentation>
                    Supplier field being used from product_location table, on the FTA Product Maintenance screen. This is used when setting the selected product.
                  </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="suppliername_column"><xs:annotation><xs:documentation>
                    This is the column used for the Supplier Name field from tmgCompany table. It defaults to the "ShortName" field.
                  </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="product_location"><xs:annotation><xs:documentation>
                    Defines which table that the product info is pulled from (i.e. tmdUSProductClassification)
                  </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="validate_products"><xs:annotation><xs:documentation>
                    If set to ''Y'', a validation will be shown if user tries to add a product to FTA Product Records that does not exist in product_location table.
                  </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="bom_separate_listing"><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="hssourcecountry"><xs:annotation><xs:documentation>
                    This determines the country tariff that should the source for HSNumber validation during the supplier solicitation process.
                  </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="ISOCountryCode"><xs:attribute name="fta" type="xs:string" use="required"><xs:annotation><xs:documentation>
                            This is the fully qualified Free Trade Agreement name(ie. NAFTA-US). You can use the &lt;agreements&gt; tag in the Rules Engine documentation as a reference for these values.
                          </xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="show_analysis_report_resultsgrid"><xs:annotation><xs:documentation>
                    If ''Y'', this will add a link to fidFTAMassResultsReport for each grid row. It has the Mass Report Analysis on that screen.
                  </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="country_of_origin"><xs:annotation><xs:documentation>
                    COO section: Contains elements affecting the COO determination tool if a client uses COO, the use attribute should be set to Y
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="after_accept_sql" type="xs:string"><xs:annotation><xs:documentation>
                          After Accept SQL that runs following a successful acceptance of a COO determination result(s)
                          Runs for ALL accepted records regardless of criteria
                          Parameters:
                          - @PARTNERID@ : replaces with ParnterID
                          - @BOMGUID@ : replaces with the BOMGUID of the accepted record
                          - @ResultGUID@ : replaces with the new ResultGUID of the newly created txdBOMCooAnalysisResults record
                          - @COOResult@ : replaces with the actual countryoforigin result value stored to txdBOMCooAnalysisResults
                        </xs:documentation></xs:annotation></xs:element><xs:element name="gc_update"><xs:annotation><xs:documentation>
                          SQL to update GC following a successful acceptance of a COO determination result(s)
                          Will not run unless use is set to Y or y and the UpdateGC checkbox is selected in the acceptance screen                          Parameters:
                          - @PARTNERID@ : replaces with PartnerID
                          - @BOMGUID@ : replaces with the BOMGUID of the accepted record
                          - @ResultGUID@ : replaces with the new ResultGUID of the newly created txdBOMCooAnalysisResults record
                          - @COOResult@ : replaces with the actual countryoforigin result value stored to txdBOMCooAnalysisResults
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="use" type="YesNo" use="required"><xs:annotation><xs:documentation>
                                  If this is ''Y'', this element is ran, otherwise it is not run. Defaults to ''N''.
                                </xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:all><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="use" type="YesNo" use="required"><xs:annotation><xs:documentation>
                        If this is ''Y'', this element is ran, otherwise it is not run. Defaults to ''N''.
                      </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="asean_local"><xs:complexType><xs:simpleContent><xs:extension base="ISOCountryCode"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="mcs"><xs:annotation><xs:documentation>
                    MCS stands for ''Manufacturing Cost Statement''. This is a container for all things MCS.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="company_name"><xs:annotation><xs:documentation>
                          Default value for the ''Company Name'' textbox on the MCS Report Generation screen, blank if not specified.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="managing_director"><xs:annotation><xs:documentation>
                          Default value for the ''Managing Director'' textbox on the MCS Report Generation screen, blank if not specified.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="accountant"><xs:annotation><xs:documentation>
                          Default value for the ''Accountant'' textbox on the MCS Report Generation screen, blank if not specified.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="phone_number"><xs:annotation><xs:documentation>
                          Default value for the ''Phone Number'' textbox on the MCS Report Generation screen, blank if not specified.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="uenno"><xs:annotation><xs:documentation>
                          Default value for the ''UEN Number'' textbox on the MCS Report Generation screen, blank if not specified.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="currency"><xs:annotation><xs:documentation>
                          Default value for the ''Currency'' textbox on the MCS Report Generation screen, blank if not specified.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="export_counties"><xs:annotation><xs:documentation>
                          Container for the Export Countries element.
                        </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="asean" type="xs:string" /><xs:element name="asean-china" type="xs:string" /><xs:element name="asean-korea" type="xs:string" /><xs:element name="ceca" type="xs:string" /></xs:all></xs:complexType></xs:element><xs:element name="agreements"><xs:annotation><xs:documentation>
                          Container for the agreements. The ''displayname'' for each agreement child is the print name on the report, ''ftaname'' must match rulesengine agreement tag (can ignore caps)
                        </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" minOccurs="0" name="agreement"><xs:complexType><xs:attribute name="displayname" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                    This is the Display Name for the agreement on MCS Reports.
                                  </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="ftaname" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                    This is how the code matches the actual FTA agreement to the display text, it must match rulesengine agreement tag (can ignore caps).
                                  </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element></xs:all><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element><xs:element name="reporting"><xs:annotation><xs:documentation>
                    For BOM worksheet and Worksheet Origin, this element contains information on the BOM Product Component Reporting.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="bom_worksheet_pcmax"><xs:annotation><xs:documentation>
                          This is the threshold for the BOM Product Component Maxmimum threshold counts. The code uses ''1000'' as a default if this is not specified or blank.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:unsignedShort"><xs:attribute name="default" type="xs:unsignedShort" use="optional"><xs:annotation><xs:documentation>
                                  This attribute is deprecated. Use the inner text of the ''bom_worksheet_pcmax'' instead.
                                </xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:all><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element><xs:element name="show_bom_upload" minOccurs="0"><xs:annotation><xs:documentation>
                    If this is ''N'', the BOM Upload panel/links will be hidden. Defaults to ''N''.
                  </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="certs"><xs:annotation><xs:documentation>
                    This is the container element for all things having to do with FTA Certificates.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="signatureuserfield" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                          This is the database column that pulls the certificate signature user''s name. Defaults to "sig.SignatureName" from the tmgSignature table.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="nafta_print_separate_traced_sections" minOccurs="0"><xs:annotation><xs:documentation>
                          For NAFTA reports, if client does not want to print separate traced sections, set to ''Y''. Defaults to ''N''.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="remove_solicitation_response_link" minOccurs="0"><xs:annotation><xs:documentation>
                          If client does wants to remove the login link from solicitation submitted response, set to ''Y'', Defaults to ''N''.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="aggregate_qualifying" minOccurs="0"><xs:annotation><xs:documentation>
                          If client wants to use aggregate dates, set to ''Y''. Defaults to ''N''.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="allow_past_supplier_signature_dates" minOccurs="0"><xs:annotation><xs:documentation>
                          If the signature date is older than the current date and this is set to ''N'', it will display a warning on screen and also not allow you to Generate/Save Signature. Basically just doesn''t allow older signatures.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="default" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="logo_filename" minOccurs="0"><xs:annotation><xs:documentation>
                          In case you want to give a special name to the logo filename, otherwise it''ll just be named ''default.gif''.
                        </xs:documentation></xs:annotation><xs:complexType><xs:attribute name="owner" type="xs:string" use="optional" /></xs:complexType></xs:element><xs:element name="default_importer_selection" minOccurs="0"><xs:annotation><xs:documentation>
                          This is the default party selection for the Importer field, an blank or an Importer from the tmgCompany table.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:unsignedByte"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="default_producer_selection" minOccurs="0"><xs:annotation><xs:documentation>
                          This is the default party name for the Producer field. Available to Customs Upon Request or a Producer from the Company table.

                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="default_exporter_selection" minOccurs="0"><xs:annotation><xs:documentation>
                          This is the default party selection for the Exporter field, an blank or an Exporter from the tmgCompany table.
                        </xs:documentation></xs:annotation><xs:complexType><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element><xs:element name="supp_default_exporter" minOccurs="0"><xs:annotation><xs:documentation>
                          Defaults to ''N''. If ''N'' this field will be blank. If ''Y'', it pulls tmgCompany on SupplierID or otherwise a lookup on tmgCompany with text as ID.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="supp_default_importer" minOccurs="0"><xs:annotation><xs:documentation>
                          Defaults to ''N''. If ''N'' this field will be blank. If ''Y'', it pulls tmgCompany on SupplierID or otherwise a lookup on tmgCompany with text as ID.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="supp_default_producer"><xs:annotation><xs:documentation>
                          Defaults to ''N''. If ''N'' this field will be blank. If ''Y'', it pulls tmgCompany on SupplierID or otherwise a lookup on tmgCompany with text as ID.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="automotive"><xs:annotation><xs:documentation>
                          If the client is an automotive client, set this to ''Y''. Defaults to ''N''. This field will then enable tracing to be done on the Bill of Materials(BOM).
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="allow_supplier_product_search"><xs:annotation><xs:documentation>
                          This flag determines whether a supplier has the ability to search for a product or add a product. Defaults to ''N''.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="show_supplier_contact_update" minOccurs="0"><xs:annotation><xs:documentation>
                          If ''N'', does not show update link on frdFTASuppCert screen. If ''Y'' then it both shows the link and allows updates. Defaults to ''N''.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="autogenerate_ma_for_nafta" minOccurs="0"><xs:annotation><xs:documentation>
                          If ''Y'' it will autogenerate Manufacturer''s Affidavit on the NAFTA solicitation.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="show_attach_signed_cert_box" minOccurs="0"><xs:annotation><xs:documentation>
                          If ''Y'', show a box for the user to upload a signed certificate on the FTA Supplier Certificates screen.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="product_search_query" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation></xs:element><xs:element name="usereferenceproductnum"><xs:annotation><xs:documentation>
                          If ''Y'', this column allows suppliers to enter their own product number that they would use as a reference. Defaults to ''N''.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="solicitation"><xs:annotation><xs:documentation>
                          This is the parent element of all things to do with FTA Certificates Solicitation.
                        </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="disable_create_supplier_accounts"><xs:annotation><xs:documentation>
                                If set to ''Y'', will disable creating supplier accounts upon reject and sending adhoc reminders.
                              </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="cc_email_list"><xs:annotation><xs:documentation>
                                Will allow multiple email addresses to be copied on solicitation emails. Specified in the child email element
                              </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="email" minOccurs="0"><xs:annotation><xs:documentation>
                                      The inner text of this element is appended to the CC email list for a solicitation email.
                                    </xs:documentation></xs:annotation><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[^@]+@[^\.]+\..+" /></xs:restriction></xs:simpleType></xs:element></xs:all><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element><xs:element name="solicitation_available_query"><xs:annotation><xs:documentation>
                                The query that drives the grid of products can be added to an unsent solicitation on fmgSolicitationManagement. You must have an attribute of agreement=''default'', but you can also specify actual agreements in this attribute.

                                SQL Parameters:
                                - @BeginDate : start date of the solicitation
                                - @EndDate : end date of the solicitation
                                - @PartnerID: -
                                - @Agreement: the FTA/solicitation type
                                - @DocReqGuid: the current DocReqGuid for the request
                              </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="email_column_name" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                        This is which column should receive email validation (invalid email addresses prevent sending and are placed in a tab)
                                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="order_by" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                                        This is how to order the results if you want. It is optional. You can specify "ColName DESC" for instance.
                                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="agreement" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                        FTA that this query drives. You must have an attribute of agreement=''default'', but you can also specify actual agreements in this attribute to override the default.
                                      </xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="solicitation_selected_query"><xs:annotation><xs:documentation>
                                The query that drives grid of selected products on fmgSolicitationManagement.
                              </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="order_by" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                                        This is how to order the results if you want. It is optional. You can specify "ColName DESC" for instance.
                                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="agreement" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                        FTA that this query drives. You must have an attribute of agreement=''default'', but you can also specify actual agreements in this attribute to override the default.
                                      </xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="solicitation_available_invalid_productdesc" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                                This is a SQL query that is included in a larger Solicitation query for an Invalid DataSource. Defines the subquery that will provide the Product Description on the invalid items tab for unsent solicitations on fmgSolicitationManagement.
                              </xs:documentation></xs:annotation></xs:element><xs:element name="solicitation_available_addproduct" minOccurs="0"><xs:annotation><xs:documentation>
                                This is a SQL query. Used when the client uses more unique keys in their solicitation management grid besides the standard productnum/supplierid combo.
                              </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="addlparameters" type="xs:string"><xs:annotation><xs:documentation>
                                        This is a comma-separated value list of columns that can be added to the Availble Add Product Grid.
                                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="solicitation_docchild_query" type="xs:string"><xs:annotation><xs:documentation>
                                SQL query to defines the data source used by the grid displayed when a document on fmgSolicitationManagement is expanded.

                                Variables:
                                - @PartnerID
                                - @Filename : the name of the file that is expanded (which will be either an actual cert or non-qualifying document)
                                - @DocReqGuid : The DocReqGuid of the solicitation
                              </xs:documentation></xs:annotation></xs:element><xs:element name="solicitation_docchild_columns"><xs:annotation><xs:documentation>
                                Defines the actual columns displayed on the grid displayed when a document on fmgSolicitationManagement is expanded. These columns have the ability to be linked.
                              </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="column"><xs:complexType><xs:attribute name="visible" type="YesNo" use="required"><xs:annotation><xs:documentation>
                                          Whether or not the column is actually displayed
                                        </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="link" type="YesNo" use="required"><xs:annotation><xs:documentation>
                                          Whether or not the column is a hyperlink.
                                        </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="textfield" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                                          (Only usable if link="Y"): Which field(s) from the datasource above should be used as the hyperlink''s text
                                        </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="textformat" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                                          (Only usable if link="Y"): The format string to apply to the textfield (use blank for no formatting)
                                        </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="urlfield" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                                          (Only usable if link="Y") Which field(s) from the datasource above should be used as the hyperlink''s url
                                        </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="urlformatstring" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                                          (Only usable if link="Y"): The format string to apply to the urlfield (use blank for no formatting).
                                        </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="headertext" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                          The text that is displayed in the column''s header on the grid on the page.
                                        </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="datafield" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                                          (Only usable if link="N"): Which column from the datasource in the query above should be pulled from.
                                        </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="update_doc_retention_sql" type="xs:string"><xs:annotation><xs:documentation>
                                Configurable SQL statement that runs when a document is accepted, specifically for the purpose of updated tmdDocRetention.
                                Ex: Can be used to attach the document to a GC part.

                                Variables:
                                - @PARTNERID@
                                - @FILENAME@ : The name of the file that is accepted
                                - @DOCREQGUID@ : The DocReqGuid of the solicitation
                              </xs:documentation></xs:annotation></xs:element><xs:element name="after_accept_sql" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                                Configurable SQL statement that runs when a document is accepted.
                                Allows you to manipulate data or move data from the accepted certificate to somewhere else in the system.
                                Ex:Push SPI or Country of Origin to Global Classification.

                                Variables:
                                - @PARTNERID@
                                - @FILENAME@ : The name of the file that is accepted
                                - @DOCREQGUID@ : The DocReqGuid of the solicitation
                              </xs:documentation></xs:annotation></xs:element><xs:element name="after_reject_sql" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                                Configurable SQL statement that runs when a document is rejected.

                                Variables:
                                - @PARTNERID@
                                - @FILENAME@ : The name of the file that is accepted
                                - @DOCREQGUID@ : The DocReqGuid of the solicitation
                              </xs:documentation></xs:annotation></xs:element><xs:element name="after_reject_sql_obsolete" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                                Configurable SQL statement that runs after rejecting obsolete records.

                                Variables:
                                - @PARTNERID@
                                - @DOCREQGUID@ : The DocReqGuid of the solicitation
                              </xs:documentation></xs:annotation></xs:element><xs:element name="email_product_list" minOccurs="0"><xs:annotation><xs:documentation>
                                Whether or not the product list is included in the body of the email that the supplier receives when solicited.
                              </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="solicitation_authtoken_timeout_length" minOccurs="0"><xs:annotation><xs:documentation>
                                Supplier authentication token timeout in DAYS.  After the specified number of days, links sent to allow supplier auto-login will expire. Defaults to 90.
                              </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:unsignedByte"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="default" type="xs:unsignedByte" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="custom_client_supplier_validation"><xs:annotation><xs:documentation>
                                This is a container for all of the client-specific SQL validations that can be run.
                              </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element minOccurs="0" maxOccurs="unbounded" name="validation_sql"><xs:annotation><xs:documentation>
                                      Each node represents a validation SQL that needs to be run against the client supplier''s data.
                                    </xs:documentation></xs:annotation><xs:complexType><xs:attribute name="message" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                          The custom message to be displayed if the validation does not pass. This will only show up if the attribute messagetype="0"
                                        </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="messagetype" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                          If the messagetype is "0", it will log the validation message. Otherwise it doesn''t do anything.
                                        </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="agreement" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                          This is a comma-separated list of agreements that these validations should be run for.
                                        </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="type" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                          Can be "Q" or "BOTH".
                                        </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="sqlguid" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                                          You can use this or the ''sql'' attribute. It will prefer the SQLGUID attribute if both are specified. ''sql'' is for pasting SQL directly into the attribute, whereas SQL GUID goes to tmgSQL for the SQL to validate against. If the records return any rows then it''ll loop through them and log each one if they''re set to log.
                                        </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="sql" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                                          You can use this or the ''sqlguid'' attribute. It will prefer the SQLGUID attribute if both are specified. ''sql'' is for pasting SQL directly into the attribute, whereas SQL GUID goes to tmgSQL for the SQL to validate against. If the records return any rows then it''ll loop through them and log each one if they''re set to log.
                                        </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element><xs:element name="solicitation_dateformat"><xs:annotation><xs:documentation>
                                The format should appear in a format similar but not limited to "dd/mm/yyyy".
                              </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="custom_solicitationref"><xs:annotation><xs:documentation>
                                If ''N'', it will get the Agreement Additional Info Ref List during the Solicitation Management Workflow. Defaults to ''N''.
                              </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:element name="exportercompanytypes"><xs:annotation><xs:documentation>
                          Any company type listed under tmgGlobalCodes where field name = CompanyType, if left blank the default will be ''EXPTR''. It uses an IN statement so you could have multiple CompanyType, eg. ''Type1'',''Type2'',''Type3''. Must have single quotes('') around the value.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="importercompanytypes"><xs:annotation><xs:documentation>
                          Any company type listed under tmgGlobalCodes where field name = CompanyType, if left blank the default will be ''IMPTR''. It uses an IN statement so you could have multiple CompanyType, eg. ''Type1'',''Type2'',''Type3''. Must have single quotes('') around the value.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="producercompanytypes"><xs:annotation><xs:documentation>
                          Any company type listed under tmgGlobalCodes where field name = CompanyType, if left blank the default will be ''PRDCR''. It uses an IN statement so you could have multiple CompanyType, eg. ''Type1'',''Type2'',''Type3''. Must have single quotes('') around the value.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="suppliercompanytypes"><xs:annotation><xs:documentation>
                          Any company type listed under tmgGlobalCodes where field name = CompanyType, if left blank the default will be ''SUPID''. It uses an IN statement so you could have multiple CompanyType, eg. ''Type1'',''Type2'',''Type3''. Must have single quotes('') around the value.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="product_helptext" minOccurs="0"><xs:annotation><xs:documentation>
                          The screen has a help text area for the ''Generate'' feature, and the inner text of this element will be displayed there. It can be translated however in the tmgMessages security database with the MessageGUID "FTASUPPCERT_HelpProducts". The config helptext will not be translated, though.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="validation_helptext" minOccurs="0"><xs:annotation><xs:documentation>
                          The screen has a help text area for the ''Generate'' feature, and the inner text of this element will be displayed there. It can be translated however in the tmgMessages security database with the MessageGUID "FTASUPPCERT_HelpValidation". The config helptext will not be translated, though.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="parties_helptext" minOccurs="0"><xs:annotation><xs:documentation>
                          The screen has a help text area for the ''Generate'' feature, and the inner text of this element will be displayed there. It can be translated however in the tmgMessages security database with the MessageGUID "FTASUPPCERT_HelpSignatures". The config helptext will not be translated, though.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="signatures_helptext" minOccurs="0"><xs:annotation><xs:documentation>
                          The screen has a help text area for the ''Generate'' feature, and the inner text of this element will be displayed there. It can be translated however in the tmgMessages security database with the MessageGUID "FTASUPPCERT_HelpGenerate". The config helptext will not be translated, though.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="generate_helptext" minOccurs="0"><xs:annotation><xs:documentation>
                          The screen has a help text area for the ''Generate'' feature, and the inner text of this element will be displayed there. It can be translated however in the tmgMessages security database with the MessageGUID "FTASUPPCERT_HelpGenerate". The config helptext will not be translated, though.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="usereferenceproductnum_certsandletters"><xs:annotation><xs:documentation>
                          If set to ''Y'', this will show the "Reference Product". Defaults to ''N''.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="default" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="supplier_show_copy_values_prev_year" minOccurs="0"><xs:annotation><xs:documentation>
                          If set to ''Y'', will show the link button for "Copy from Previous Year". Defaults to ''Y''.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="default" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="allow_past_customer_signature_dates" minOccurs="0"><xs:annotation><xs:documentation>
                          If set to ''N'', if the signature date is less than "today", it will not allow Saving/Generating and will display a warning. Defaults to ''N''.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="default" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="textile"><xs:annotation><xs:documentation>
                          If set to ''Y'', the Add Parties button in the Parties tab for the Supplier Cert screen is visible.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:element name="bom_filter_fields" minOccurs="0"><xs:annotation><xs:documentation>
                    This tag contains a comma-delimited list of fields from txdBOMIM that, if configured, allow clients to filter BOMs selected for Mass Analysis.  A typical use would be the addition of CountryOfManufacture or PlantID to allow Mass to run on only BOMs from a given country or plant.  This tag affects both BOM and Origin analysis. This will also update the columns which display when choosing BOMs for single analysis.
                  </xs:documentation></xs:annotation><xs:complexType><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element><xs:element name="bom_plantid_query" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                    This tag contains SQL that will load the PlantID list in the BOM Upload screen.  If not existing or if blank, a default will be used to pull all ManufacturerIDs from tmfManufacturer.

                    It takes @PARTNERID@ as its sole parameter.
                  </xs:documentation></xs:annotation></xs:element><xs:element name="bom_upload_fill_source" minOccurs="0"><xs:annotation><xs:documentation>
                    This tag contains a series of tags used to define the Source for the BOM Upload page''s Fill From Source capability.  When adding a new or updating a BOM, columns can be checked and the ''Fill From Source'' button clicked.  These tags define, for the txdBOMIM and txdBOMPC tables, where that source should come from.  IM columns are defined in the &lt;header&gt; tag, PC in the &lt;detail&gt;.  Each &lt;column&gt; tag is defined by its value attribute (use lowercase), indicating which field in IM/PC it points to. All column tags must have a &lt;source&gt; containing the source table name and a &lt;field&gt; containing the target field.  Both IM and PC HS num column tags may have a &lt;field2&gt; tag, indicating a secondary source (usually HSInProcess) in case the first source is blank.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="header" maxOccurs="1"><xs:annotation><xs:documentation>
                          &lt;header&gt; tag defines the txdBOMIM columns.
                        </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element minOccurs="1" maxOccurs="unbounded" name="column"><xs:complexType><xs:all><xs:element name="source" type="xs:string"><xs:annotation><xs:documentation>
                                      The table name to pull data from.
                                    </xs:documentation></xs:annotation></xs:element><xs:element name="field" type="xs:string"><xs:annotation><xs:documentation>
                                      The field from the database that this column is mapped to.
                                    </xs:documentation></xs:annotation></xs:element></xs:all><xs:attribute name="value" use="required"><xs:annotation><xs:documentation>
                                    The column "type"(called value but it''s really more of a type) that the underlying value is representing. So maybe your PlantID "value" is being pulled from the tmgGlobalCodes field.
                                  </xs:documentation></xs:annotation><xs:simpleType><xs:union><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="countryoforigin" /><xs:enumeration value="value" /><xs:enumeration value="weight" /><xs:enumeration value="htsnum" /><xs:enumeration value="manufacturerid" /><xs:enumeration value="countryofmanufacture" /><xs:enumeration value="plantid" /><xs:enumeration value="commercialvalue" /></xs:restriction></xs:simpleType><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[Cc][Oo][Uu][Nn][Tt][Rr][Yy][Oo][Ff][Oo][Rr][Ii][Gg][Ii][Nn]" /><xs:pattern value="[Vv][Aa][Ll][Uu][Ee]" /><xs:pattern value="[Ww][Ee][Ii][Gg][Hh][Tt]" /><xs:pattern value="[Hh][Tt][Ss][Nn][Uu][Mm]" /><xs:pattern value="[Mm][Aa][Nn][Uu][Ff][Aa][Cc][Tt][Uu][Rr][Ee][Rr][Ii][Dd]" /><xs:pattern value="[Cc][Oo][Uu][Nn][Tt][Rr][Yy][Oo][Ff][Mm][Aa][Nn][Uu][Ff][Aa][Cc][Tt][Uu][Rr][Ee]" /><xs:pattern value="[Pp][Ll][Aa][Nn][Tt][Ii][Dd]" /><xs:pattern value="[Cc][Oo][Mm][Mm][Ee][Rr][Cc][Ii][Aa][Ll][Vv][Aa][Ll][Uu][Ee]" /></xs:restriction></xs:simpleType></xs:union></xs:simpleType></xs:attribute><xs:attribute name="show" type="YesNo" use="optional"><xs:annotation><xs:documentation>
                                    Set to ''Y'' if you want the field to show. ''Y'' by default.
                                  </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="detail" maxOccurs="1"><xs:annotation><xs:documentation>
                          &lt;detail&gt; tag defines the txdBOMIM columns.
                        </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element minOccurs="1" maxOccurs="unbounded" name="column"><xs:complexType><xs:all><xs:element name="source" type="xs:string"><xs:annotation><xs:documentation>
                                      The table name to pull data from.
                                    </xs:documentation></xs:annotation></xs:element><xs:element name="field" type="xs:string"><xs:annotation><xs:documentation>
                                      The field from the database that this column is mapped to.
                                    </xs:documentation></xs:annotation></xs:element></xs:all><xs:attribute name="value" use="required"><xs:annotation><xs:documentation>
                                    The column "type"(called value but it''s really more of a type) that the underlying value is representing. So maybe your PlantID "value" is being pulled from the tmgGlobalCodes field.
                                  </xs:documentation></xs:annotation><xs:simpleType><xs:union><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="countryoforigin" /><xs:enumeration value="value" /><xs:enumeration value="weight" /><xs:enumeration value="htsnum" /><xs:enumeration value="manufacturerid" /><xs:enumeration value="countryofmanufacture" /><xs:enumeration value="plantid" /><xs:enumeration value="commercialvalue" /></xs:restriction></xs:simpleType><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[Cc][Oo][Uu][Nn][Tt][Rr][Yy][Oo][Ff][Oo][Rr][Ii][Gg][Ii][Nn]" /><xs:pattern value="[Vv][Aa][Ll][Uu][Ee]" /><xs:pattern value="[Ww][Ee][Ii][Gg][Hh][Tt]" /><xs:pattern value="[Hh][Tt][Ss][Nn][Uu][Mm]" /><xs:pattern value="[Mm][Aa][Nn][Uu][Ff][Aa][Cc][Tt][Uu][Rr][Ee][Rr][Ii][Dd]" /><xs:pattern value="[Cc][Oo][Uu][Nn][Tt][Rr][Yy][Oo][Ff][Mm][Aa][Nn][Uu][Ff][Aa][Cc][Tt][Uu][Rr][Ee]" /><xs:pattern value="[Pp][Ll][Aa][Nn][Tt][Ii][Dd]" /><xs:pattern value="[Cc][Oo][Mm][Mm][Ee][Rr][Cc][Ii][Aa][Ll][Vv][Aa][Ll][Uu][Ee]" /></xs:restriction></xs:simpleType></xs:union></xs:simpleType></xs:attribute><xs:attribute name="show" type="YesNo" use="optional"><xs:annotation><xs:documentation>
                                    Set to ''Y'' if you want the field to show. ''Y'' by default.
                                  </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:element name="agreements"><xs:annotation><xs:documentation>
                    This list of agreements contain the agreements that will be configured for the client''s solicitations, as well as the countries that belong to that FTA.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="israel-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-taiwan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="pakistan-iran" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="taiwan-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="aanzfta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="switzerland-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-ukraine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-caribbean" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="anztec" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="ukraine-montenegro" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-apta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-civilaircraft" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-eu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-armenia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-moldova" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-peru" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-lesotho" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-norway" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="iceland-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-iceland" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-thailand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-aceno.2" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-newzealand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-vietnam" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="bosniaherzegovina-iran" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="pacificalliance" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-saudiarabia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="aap.ceno.23" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="aap.ceno.57" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-australia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-japan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-hongkong" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-australia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-eba" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-canada" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-gsp-plus" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-esa" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-mar" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="apta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="asean" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="asean-japan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="asean-india" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="asean-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="asean-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-newzealand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-thailand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-malaysia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="cafta-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-costarica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-elsalvador" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-guatemala" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-honduras" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-india" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-malaysia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-nicaragua" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="cafta-dr" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-cafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="cafta-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-turkmenistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-ukraine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-kazakhstan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-uzbekistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-russia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-azerbaijan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-moldova" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-belarus" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-armenia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-tajikistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-kyrgyzstan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-georgia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="norway-gsp-plus" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="cafta-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-costarica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-elsalvador" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-guatemala" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-honduras" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-nicaragua" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-canada" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-costarica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="costarica-canada" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-efta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-eu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-honduras" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="israel-canada" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="israel-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-peru" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-india" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="cefta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="aghadir" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="comesa" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-albania" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-gcc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-egypt" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-macedonia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-serbia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-tunisia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-ukraine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-algeria" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-egypt" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-faroeislands" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-norway" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-palestine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="indonesia-pakistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-lebanon" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-cuba-ecuadorno.2" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-cuba-boliviano.1" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-cuba-ecuadorno.46" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-cuba-paraguayno.3" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-colombia-cubano.49" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-colombia-venezuelano.28" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-colombia-iceland" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-colombia-norway" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-aceno.14" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="aceno.18" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-russia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-turkey" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-southafrica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-argentina" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-czechrepublic" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-poland" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-hungary" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-romania" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-latvia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-lithuania" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-bulgaria" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-slovakrepublic" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-estonia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-laos" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="qiz" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-tunisia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-eu-turkey" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="gafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="madagascar-eu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="macedonia-turkey" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="macedonia-ukraine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="malaysia-pakistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="malaysia-turkey" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-burkinafaso" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-niger" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-togo" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-tunisia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="colombia-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mauritius-pakistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-guinea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-uae" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-iraq" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-mauritania" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-senegal" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-libya" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-saudiarabia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="newzealand-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="newzealand-lldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="newzealand-pac" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="norway-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="norway-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="pafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="caricom-dominicanrepublic" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-vietnam" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-costarica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="israel-mercosur" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-costarica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-gcc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="caricom-cuba" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="caricom-venezuela" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="ecowas" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="gcc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="picta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="sacu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="safta-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-iran" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-nicaragua-cuba" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-cuba-nicaragua" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="safta-non-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="sparteca" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="caricom" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-palestine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-bosnia-herzegovina" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-moldova" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-palestine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-tunisia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-hongkong" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="hongkong-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-lebanon" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-georgia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-philippines" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-montenegro" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-mauritius" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="srilanka-pakistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="switzerland-faroeislands" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="switzerland-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="switzerland-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-cuba-guatemalano.36" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-guatemala-belize" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-lebanon" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-macedonia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-palestinianterritory" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-tunisia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-turkey" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-lebanon" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-macedonia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-palestinianterritory" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-tunisia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-turkey" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-albania" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-efta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-egypt" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-georgia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-plus" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-macedonia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-montenegro" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-serbia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-siabc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-costarica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-macao" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-taiwan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-quad" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-league" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-bosniaherzegovina" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-hongkong" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-ecuador" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-newzealand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-peru" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="colombia-triangulodelnorte" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="honduras-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="costarica-caricom" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="taiwan-guatemala" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="taiwan-nicaragua" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="nicaragua-taiwan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-efta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-peru" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-ecuadorno.2" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-ecuadorno.29" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-albania" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-andorra" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-bosnia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-cariforum" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-ceuta-melilla" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-efta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-switzerland" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-kosovo" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-macedonia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-moldova" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-montenegro" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-oct" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-pacificstates" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="pan-euro-med" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-sadc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-serbia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-southafrica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-cafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-colombia-peru-ecuador" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-brazil" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="iceland-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="indonesia-japan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-brunei" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-india" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-malaysia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-philippines" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-switzerland" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-mexico-epa" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-madagascar" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-croatia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-cuba" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-vietnam" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-japan-epa" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-india" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-boliviano.66" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="bolivia-mexicono.66" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-brazilno.53" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="brazil-mexicono.53" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="colombia-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-cubano.51" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-uruguayno.60" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="uruguay-mexicono.60" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="nafta-alena-ca" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-agoa" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-nepal" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="nafta-tlcan-mx" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="nafta-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="iceland-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="elsalvador-cuba" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-us-nafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-mx-nafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-ca-nafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-us-non-nafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-mx-non-nafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-ca-non-nafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="bolivia-venezuela" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="cacm" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-newzealand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-turkey" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-pakistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-mauritius" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-nepal" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-seychelles" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-thailand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-tonga" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-ptldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="sacu-efta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-chile-cubano.42" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-colombia-caricom" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-colombia-nicaraguano.6" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-colombia-panamano.29" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-peru-paraguayno.58" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-peru-uruguayno.58" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-venezuela-costaricano.26" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-venezuela-cubano.40" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-venezuela-trinidadytobagono.20" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-cbera" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="newzealand-hongkong" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="newzealand-malasya" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="newzealand-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="norway-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-taiwan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-japan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-thailand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="sadc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-efta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-peru" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-australia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="taiwan-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="thailand-australia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="taiwan-elsalvador-honduras" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="thailand-japan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="thailand-newzealand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="transpacific" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-buyamerica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-australia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-bahrain" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="colombia-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-oman" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-peru" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="andean" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="countryoforigin" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mercosur-india" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mercosur-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mercosur-boliviano.36" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mercosur-cubano.62" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-australia-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-australia-papuanewguinea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-australia-forumisland" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-canada" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-australia-dct" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-bolivia-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-bolivia-cuba" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-brazil-guyana" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-georgia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-brazil-venezuelano.69" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-brazil-surinam" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mercosur-chileno.35" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-argentina-colombiano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-argentina-colombiano.72" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-brazil-colombiano.72" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-argentina-ecuadorno.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-argentina-venezuelano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-brazil-colombiano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-brazil-ecuadorno.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-brazil-venezuelano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-paraguay-colombiano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-paraguay-ecuadorno.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-paraguay-venezuelano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-uruguay-colombiano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-uruguay-ecuadorno.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-uruguay-venezuelano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-asiapacific" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-afghanistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-srilanka" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-malaysia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-peru-cubano.50" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mexico-paraguayno.3" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-argentina-brazil-peruno.58" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-uruguay-colombiano.72" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-peru" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-cemac" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-cafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-costarica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="russia-serbia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-ldct" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-ukraine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="cis" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mexico-brazilno.55" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-ecuardorno.2" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mexico-uruguayno.55" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mexico-argentinano.55" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mexico-argentinano.6" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-taiwan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-vietnam" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-switzerland" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-venezuela" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-ukraine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-georgia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-albania" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-senegal" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-rwanda" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-japan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="norway-faroeislands" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="iceland-faroeislands" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-syria" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-syria" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="aap.no.6" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="aap.no.7" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eurasianeconomicunion-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eurasianeconomicunion-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-andean" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-asean" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-waemu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-sadc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-saarc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-caricom" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="egypt-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="israel-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="jordan-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-tunisia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="ar.parno.4" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-dominicanrepublic" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="dominicanrepublic-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-eu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-eu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mercosur-sacu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="usorigin" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eaeu-vietnam" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="colombia-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-mongolia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="costarica-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="ar.am.no.1" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="ar.am.no.2" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="ar.am.no.3" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eac" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="msg" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="thailand-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:element name="insert_into_certdetail" type="xs:string" minOccurs="1"><xs:annotation><xs:documentation> This tag contains the insert statement that inserts each tmgDocRequestDetail record into txdCertDetail when sending a new supplier solicitation on frdFTASupplierCert.  This tag MUST be configured for solicitation to run.  It is also necessary to add products to an existing solicitation thru the Supplier Cert screen if enabled. NOTE: an old version of this tag exists in /common/document_request.  This will not be found or used by the application. Allowed parameters:
                  - @PARTNERID@ - current PartnerID
                  - @IDENTIFIER@ - Identifier of the record currently being added
                  - @DETAILGUID@ - DocReDetailGuid of the record currently being added 
                  - @HEADERGUID@ - HeaderGuid of the solicitation currently being sent
                  - @SUPPLIERID@ - SupplierID of the solicitation currently being sent
                  </xs:documentation></xs:annotation></xs:element><xs:element name="companyproductrequest" minOccurs="0"><xs:annotation><xs:documentation>
                    Contains configuration elements available for ~/FTA/MAINTENANCE/CopmanyProductRequest.aspx and ~/FTA/MAINTENANCE/fmgProductRequestDetail.aspx (modal window).
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="companytypes" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                          This tag contains a comma delimited, quoted list of company types that can appear in the company dropdown in the Request Generation screen for New and Copy requests. The default, if this isn''t set or isn''t in-config, is CUST.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="hiddencolumns" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation> The FTA Request header table was unfortunately originally coded to a specific client''s business process.  Therefore, columns exist that don''t necessarily tie into the normal request process for many clients.  This tag lets those specific columns be hidden and skips validations that run on them. The tag should contain a comma-delimited list of those fields.  The typical hidden set is: TxnQty,UnitVal,BaseDuty,FTADuty,Difference
                        </xs:documentation></xs:annotation></xs:element><xs:element name="manual_product_info_location" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>If the search_product_by_company tag is not defined, the search popup in Request Generation will use a default query.  This query will pull from the fta/product_location table (or just tmdusproductclassification, either), unless this tag is set differently.  If so, then the search window (and the description and HSNum for selected products in the search table) will use the table defined in this config element instead.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="search_product_by_company" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>This tag contains a query that determines the search results on the Add Products popup in Request Generation.  It should pull back at minimum a product, description, and HSNum. It takes the parameters @@PARTNERID@@ and @@COMPANYID@@, where CompanyID is the ID in the request header. If this isn''t defined, a select query pulling back the productnum, desc, and HSNum are run against the defined product location (see manual_product_info_location and fta/product_location tags for more information).
                        </xs:documentation></xs:annotation></xs:element><xs:element name="spreadsheet_upload_sql" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>This tag contains 100% customizable SQL that loads data from a user-uploaded spreadsheet into the Request tables.  EVERYTHING that happens to get data from that spreadsheet data in the user table into the Request tables is done here.  There is no default.  There is no hardcoded logic. It takes the following parameters:

                        @@PARTNERID@@ - replaces with the PartnerID
                        @@USERTABLE@@ - this is the table that the user''s spreadsheet was just uploaded to - Your item source
                        @@REQUESTGUID@@ - the GUID of the current request, can be used to link to txdFTACertRequestHeader, needs to be used on insert to txdFTACertRequestDetail to link product records
                        </xs:documentation></xs:annotation></xs:element><xs:element name="customer_request_detail_show_plantid" type="YesNo" minOccurs="0"><xs:annotation><xs:documentation> This tag should contain a Y/N value.  When set to Y, the detail grid on the Request Management screen will display a PlantID column.  The PlantID will be pulled as the ToZoneID field from tmfProductCrossReference, joining on the request product num to the pcr ExternalProductNum.  [JHM note: I believe this is legacy from the first client-specific buildout and implementation of the Request functionality]
                        </xs:documentation></xs:annotation></xs:element><xs:element name="unqualify_query" minOccurs="0"><xs:annotation><xs:documentation>This tag contains an SQL query as its inner text. This query is part of the SQL that runs every time the detail grid of a request is loaded.  That automatic SQL sets all products on the request to a certificate value of N, then updates those with qualifying records back to Y.  This element''s query exists so that certain records can be set to N manually after the automatic updates.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="use" type="YesNo" use="optional"><xs:annotation><xs:documentation>Y/N flag that denotes whether the unqualify_query element''s inner text query will be ran by the code.
                                </xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="after_gen_sql" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation> After ''generate'' is clicked on the Request Management detail tab, this SQL is that last thing that runs before the screen redirects to the FTA Certs and Letters screen.  It''s completely custom.  It will take the parameters @PARTNERID@ and @HEADERGUID@ where the latter is the RequestGUID of the request (which should be used as the HeaderGUID of the created txdCertHeader and Detail records)
                        </xs:documentation></xs:annotation></xs:element></xs:all></xs:complexType></xs:element><xs:element name="nonfta_letter" minOccurs="0"><xs:annotation><xs:documentation>
                    This tag contains three types of tags. One, the message_body_one and message_body_two tags contain the text of the FTA Letter crystal report message body for the printing of Tariff Letters accompanying non-qualifying certificates or Country of Origin Declarations printed from the FTA certificates and Letters screen. This is the ONLY case that this SQL will affect the text of the FTA Letter.


                    With clients implemented before the 14.3 release, another tag, replacement_value_X, may still be seen. This tag can replicate, with the X increasing. This is an old method to replace values in the message body. Leave the replacement_value_1 tag as "pCompany"; however, as of the 14.3 release, all instances of the text "{0}" in the message body need to be replaced with @AGREEMENT@ in order to replace the signee company on the report. 


                    Lastly, the tag note_body contains the note body section of certificates and letters, and is an optional configuration tag. 
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="message_body_one" minOccurs="0"><xs:annotation><xs:documentation>This tag contains the text of the FTA Letter crystal report message body for the printing of Tariff Letters accompanying qualifying certificates or Country of Origin Declarations printed from the FTA certificates and Letters screen. This is the ONLY case that this SQL will affect the text of the FTA Letter.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="message_body_two" minOccurs="0"><xs:annotation><xs:documentation>This tag contains the text of the FTA Letter crystal report message body for the printing of Tariff Letters accompanying qualifying certificates or Country of Origin Declarations printed from the FTA certificates and Letters screen. This is the ONLY case that this SQL will affect the text of the FTA Letter.</xs:documentation></xs:annotation></xs:element><xs:element name="note_body" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>This tag contains the note body section of certificates and letters.</xs:documentation></xs:annotation></xs:element></xs:all><xs:attribute name="owner" type="xs:string" use="optional" /></xs:complexType></xs:element><xs:element name="fta_letter" minOccurs="0"><xs:annotation><xs:documentation>
                    This tag contains two types of tags. One, the message_body_one&gt; and message_body_two&gt; tags contain the text of the FTA Letter crystal report message body for the printing of Tariff Letters accompanying qualifying certificates or Country of Origin Declarations printed from the FTA certificates and Letters screen. This is the ONLY case that this SQL will affect the text of the FTA Letter.

                    With clients implemented before the 14.3 release, another tag, &lt;replacement_value_X&gt;&lt;span style="background-color: rgb(0, 0, 255);" /&gt;, may still be seen. This tag can replicate, with the X increasing. This is an old method to replace values in the message body. Leave the replacement_value_1 tag as "pCompany"; however, as of the 14.3 release, all instances of the text "{0}" in the message body need to be replaced with @AGREEMENT@ in order to replace the signee company on the report.

                    Lastly, the tag note_body contains the note body section of certificates and letters, and is an optional configuration tag.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="message_body_one" minOccurs="0"><xs:annotation><xs:documentation>This tag contains the text of the FTA Letter crystal report message body for the printing of Tariff Letters accompanying qualifying certificates or Country of Origin Declarations printed from the FTA certificates and Letters screen. This is the ONLY case that this SQL will affect the text of the FTA Letter.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="message_body_two" minOccurs="0"><xs:annotation><xs:documentation>This tag contains the text of the FTA Letter crystal report message body for the printing of Tariff Letters accompanying qualifying certificates or Country of Origin Declarations printed from the FTA certificates and Letters screen. This is the ONLY case that this SQL will affect the text of the FTA Letter.</xs:documentation></xs:annotation></xs:element><xs:element name="note_body" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>This tag contains the note body section of certificates and letters.</xs:documentation></xs:annotation></xs:element></xs:all><xs:attribute name="owner" type="xs:string" use="optional" /></xs:complexType></xs:element><xs:element name="supplier_nonfta_letter" minOccurs="0"><xs:annotation><xs:documentation>
                    This tag contains three tags.  They are: message_body_one, message_body_two, and note_body.  When creating non-qualifying documents from the Supplier Cert screen, these three tags will fill the three text sections of the FTA Letter crystal report. 

                    The following variables can be used, and will replace in all three sections (supplier_nontfta_letter tag ONLY, not the other FTA letter tags):


                    @AGREEMENT@ 
                    @SIGNEEADDRESS@ 
                    @SIGNEECOMPANY@
                    @SIGNEENAME@
                    @SIGNEETITLE@
                    @SIGNEEVOICE@
                    @REQUESTERNAME@
                    @REQUESTEREMAIL@
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="message_body_one" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>When creating non-qualifying documents from the Supplier Cert screen, this tag will fill one of the three text sections of the FTA Letter crystal report. 

                    The following variables can be used:

                    @AGREEMENT@ 
                    @SIGNEEADDRESS@ 
                    @SIGNEECOMPANY@
                    @SIGNEENAME@
                    @SIGNEETITLE@
                    @SIGNEEVOICE@
                    @REQUESTERNAME@
                    @REQUESTEREMAIL@</xs:documentation></xs:annotation></xs:element><xs:element name="message_body_two" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>When creating non-qualifying documents from the Supplier Cert screen, this tag will fill one of the three text sections of the FTA Letter crystal report. 

                    The following variables can be used:

                    @AGREEMENT@ 
                    @SIGNEEADDRESS@ 
                    @SIGNEECOMPANY@
                    @SIGNEENAME@
                    @SIGNEETITLE@
                    @SIGNEEVOICE@
                    @REQUESTERNAME@
                    @REQUESTEREMAIL@</xs:documentation></xs:annotation></xs:element><xs:element name="note_body" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>When creating non-qualifying documents from the Supplier Cert screen, this tag will fill one of the three text sections of the FTA Letter crystal report. 

                    The following variables can be used:

                    @AGREEMENT@ 
                    @SIGNEEADDRESS@ 
                    @SIGNEECOMPANY@
                    @SIGNEENAME@
                    @SIGNEETITLE@
                    @SIGNEEVOICE@
                    @REQUESTERNAME@
                    @REQUESTEREMAIL@</xs:documentation></xs:annotation></xs:element></xs:all></xs:complexType></xs:element><xs:element name="frdftacert"><xs:annotation><xs:documentation>
                    Contains configuration elements available for ~/FTA/REPORTS/frdFTACertificates.aspx.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="before_save_sql" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>Innertext is a CDATA SQL block that runs before the save logic is run when clicking Save.
                          Parameters: @HEADERGUID@</xs:documentation></xs:annotation></xs:element><xs:element name="after_save_sql" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>Innertext is a CDATA SQL block that runs after the save logic is run when clicking Save.
                          Parameters: @HEADERGUID@</xs:documentation></xs:annotation></xs:element><xs:element name="before_gen_sql"><xs:annotation><xs:documentation>Innertext is a CDATA SQL block that runs before a document is generated.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:element name="fidcooresults" minOccurs="0"><xs:annotation><xs:documentation>
                    Contains configuration elements available for ~/FTA/INTERFACES/fidCOOResults.aspx.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="after_save_sql" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>Innertext is a CDATA SQL block that runs after the save logic is run when clicking Save.</xs:documentation></xs:annotation></xs:element></xs:all></xs:complexType></xs:element><xs:element name="frdftacertmultiselect" minOccurs="0"><xs:annotation><xs:documentation>
                    Contains configuration elements available for ~/FTA/REPORTS/frdFTACertMultiSelect.aspx.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="after_save_sql" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>Innertext is a CDATA SQL block that runs after the save logic is run when clicking Save.</xs:documentation></xs:annotation></xs:element></xs:all><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element><xs:element name="frdftasuppliercert" minOccurs="0"><xs:annotation><xs:documentation>
                    Contains configuration elements available for ~/FTA/REPORTS/frdFTASupplierCert.aspx.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="before_save_sql" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>Innertext is a CDATA SQL block that runs before the save logic is run when clicking Save.
                          Parameters: @HEADERGUID@</xs:documentation></xs:annotation></xs:element><xs:element name="after_save_sql" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>Innertext is a CDATA SQL block that runs after the save logic is run when clicking Save.
                          Parameters: @HEADERGUID@</xs:documentation></xs:annotation></xs:element><xs:element name="before_gen_sql"><xs:annotation><xs:documentation>Innertext is a CDATA SQL block that runs before a document is generated (standard or custom).
                          Parameters: @HEADERGUID@ and @USERNAME@</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:element name="fidproductftamaint"><xs:annotation><xs:documentation>
                    Contains configuration elements available for ~/FTA/INTERFACES/fidProductFTAMaint.aspx.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="before_save_sql" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>Innertext is a CDATA SQL block that runs before the save logic is run when clicking Save on FTA Product Maintenance.
                          Parameters: @CERTGUID@</xs:documentation></xs:annotation></xs:element><xs:element name="after_save_sql" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>Innertext is a CDATA SQL block that runs after the save logic is run when clicking Save on FTA Product Maintenance.
                          Parameters: @CERTGUID@</xs:documentation></xs:annotation></xs:element></xs:all></xs:complexType></xs:element><xs:element name="fidftabomrulesanalysis" minOccurs="0"><xs:annotation><xs:documentation>
                    Contains configuration elements available for ~/FTA/INTERFACES/fidFTABOMRulesAnalysis.aspx.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="after_save_sql" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>Innertext is a CDATA SQL block that runs after clicking Save on FTA BOM Rules Analysis.
                          Parameters: @PartnerID</xs:documentation></xs:annotation></xs:element></xs:all></xs:complexType></xs:element><xs:element name="gtndocs"><xs:annotation><xs:documentation>
                    Contains GTN field configuration for FTA functionality.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="solicitation" minOccurs="0"><xs:annotation><xs:documentation>Contains a single field as its inner text. This field is the detail field associated to the GTN document created when generating a supplier cert on the Supplier Cert screen.</xs:documentation></xs:annotation><xs:simpleType><xs:union><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="SUPPLIERID" /><xs:enumeration value="SUPPLIERNAME" /><xs:enumeration value="STARTDATEYEAR" /></xs:restriction></xs:simpleType><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[Ss][Uu][Pp][Pp][Ll][Ii][Ee][Rr][Ii][Dd]" /><xs:pattern value="[Ss][Uu][Pp][Pp][Ll][Ii][Ee][Rr][Nn][Aa][Mm][Ee]" /><xs:pattern value="[Ss][Tt][Aa][Rr][Tt][Dd][Aa][Tt][Ee][Yy][Ee][Aa][Rr]" /></xs:restriction></xs:simpleType></xs:union></xs:simpleType></xs:element><xs:element name="certs" minOccurs="0"><xs:annotation><xs:documentation>Contains a single field as its inner text. This field is the detail field associated to the GTN document created when generating a cert on the Certificates screen.</xs:documentation></xs:annotation><xs:simpleType><xs:union><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="CERTNAME" /><xs:enumeration value="AGREEMENT" /><xs:enumeration value="STARTDATEYEAR" /><xs:enumeration value="CUSTOMERNAME" /></xs:restriction></xs:simpleType><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[Cc][Ee][Rr][Tt][Nn][Aa][Mm][Ee]" /><xs:pattern value="[Aa][Gg][Rr][Ee][Ee][Mm][Ee][Nn][Tt]" /><xs:pattern value="[Ss][Tt][Aa][Rr][Tt][Dd][Aa][Tt][Ee][Yy][Ee][Aa][Rr]" /><xs:pattern value="[Cc][Uu][Ss][Tt][Oo][Mm][Ee][Rr][Nn][Aa][Mm][Ee]" /></xs:restriction></xs:simpleType></xs:union></xs:simpleType></xs:element><xs:element name="companyproductrequest" minOccurs="0"><xs:annotation><xs:documentation>Contains a single field as its inner text. This field is the detail field associated to the GTN document created when generating a cert on the Certificates screen when coming from the Company Product Request screen.</xs:documentation></xs:annotation><xs:simpleType><xs:union><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="CERTNAME" /><xs:enumeration value="AGREEMENT" /><xs:enumeration value="STARTDATEYEAR" /><xs:enumeration value="CUSTOMERNAME" /></xs:restriction></xs:simpleType><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[Cc][Ee][Rr][Tt][Nn][Aa][Mm][Ee]" /><xs:pattern value="[Aa][Gg][Rr][Ee][Ee][Mm][Ee][Nn][Tt]" /><xs:pattern value="[Ss][Tt][Aa][Rr][Tt][Dd][Aa][Tt][Ee][Yy][Ee][Aa][Rr]" /><xs:pattern value="[Cc][Uu][Ss][Tt][Oo][Mm][Ee][Rr][Nn][Aa][Mm][Ee]" /></xs:restriction></xs:simpleType></xs:union></xs:simpleType></xs:element><xs:element name="bomanalysis" minOccurs="0"><xs:annotation><xs:documentation>Contains a single field as its inner text. This field is the detail field associated to the GTN document created for the BOM worksheet when generated from the BOM Analysis screen.</xs:documentation></xs:annotation><xs:simpleType><xs:union><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="AGREEMENT" /><xs:enumeration value="FGPRODUCTNUM" /><xs:enumeration value="PLANTID" /><xs:enumeration value="STARTDATEYEAR" /><xs:enumeration value="PRODUCTATTRIBUTE" /></xs:restriction></xs:simpleType><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[Aa][Gg][Rr][Ee][Ee][Mm][Ee][Nn][Tt]" /><xs:pattern value="[Ff][Gg][Pp][Rr][Oo][Dd][Uu][Cc][Tt][Nn][Uu][Mm]" /><xs:pattern value="[Pp][Ll][Aa][Nn][Tt][Ii][Dd]" /><xs:pattern value="[Ss][Tt][Aa][Rr][Tt][Dd][Aa][Tt][Ee][Yy][Ee][Aa][Rr]" /><xs:pattern value="[Pp][Rr][Oo][Dd][Uu][Cc][Tt][Aa][Tt][Tt][Rr][Ii][Bb][Uu][Tt][Ee]" /></xs:restriction></xs:simpleType></xs:union></xs:simpleType></xs:element><xs:element name="originanalysis" minOccurs="0"><xs:annotation><xs:documentation>Contains a single field as its inner text. This field is the detail field associated to the GTN document created for the BOM worksheet when generated from the BOM Analysis screen in FTA Origin.</xs:documentation></xs:annotation><xs:simpleType><xs:union><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="AGREEMENT" /><xs:enumeration value="FGPRODUCTNUM" /><xs:enumeration value="PLANTID" /><xs:enumeration value="STARTDATEYEAR" /><xs:enumeration value="PRODUCTATTRIBUTE" /></xs:restriction></xs:simpleType><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[Aa][Gg][Rr][Ee][Ee][Mm][Ee][Nn][Tt]" /><xs:pattern value="[Ff][Gg][Pp][Rr][Oo][Dd][Uu][Cc][Tt][Nn][Uu][Mm]" /><xs:pattern value="[Pp][Ll][Aa][Nn][Tt][Ii][Dd]" /><xs:pattern value="[Ss][Tt][Aa][Rr][Tt][Dd][Aa][Tt][Ee][Yy][Ee][Aa][Rr]" /><xs:pattern value="[Pp][Rr][Oo][Dd][Uu][Cc][Tt][Aa][Tt][Tt][Rr][Ii][Bb][Uu][Tt][Ee]" /></xs:restriction></xs:simpleType></xs:union></xs:simpleType></xs:element><xs:element name="massresults" minOccurs="0"><xs:annotation><xs:documentation>Contains a single field as its inner text. This field is the detail field associated to the GTN document created for both the Mass BOM Result Report and the Failed BOM Report from the Mass BOM Analysis screen.</xs:documentation></xs:annotation><xs:simpleType><xs:union><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="ANALYSISNO" /><xs:enumeration value="ANALYSISRUNDATE" /></xs:restriction></xs:simpleType><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[Aa][Nn][Aa][Ll][Yy][Ss][Ii][Ss][Nn][Oo]" /><xs:pattern value="[Aa][Nn][Aa][Ll][Yy][Ss][Ii][Ss][Rr][Uu][Nn][Dd][Aa][Tt][Ee]" /></xs:restriction></xs:simpleType></xs:union></xs:simpleType></xs:element><xs:element name="whatif" minOccurs="0"><xs:annotation><xs:documentation>
                          Contains GTN detail field configuration for both the single change and mass What If analysis reports.
                        </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="single" minOccurs="0"><xs:annotation><xs:documentation>
                                Contains a single field as its inner text. This field is the detail field associated to the GTN document generated for the single change report on the What If screen.
                              </xs:documentation></xs:annotation><xs:simpleType><xs:union><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="agreement" /><xs:enumeration value="fgproductnum" /><xs:enumeration value="plantid" /><xs:enumeration value="startdateyear" /><xs:enumeration value="productattribute" /></xs:restriction></xs:simpleType><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[Aa][Gg][Rr][Ee][Ee][Mm][Ee][Nn][Tt]" /><xs:pattern value="[Ff][Gg][Pp][Rr][Oo][Dd][Uu][Cc][Tt][Nn][Uu][Mm]" /><xs:pattern value="[Pp][Ll][Aa][Nn][Tt][Ii][Dd]" /><xs:pattern value="[Ss][Tt][Aa][Rr][Tt][Dd][Aa][Tt][Ee][Yy][Ee][Aa][Rr]" /><xs:pattern value="[Pp][Rr][Oo][Dd][Uu][Cc][Tt][Aa][Tt][Tt][Rr][Ii][Bb][Uu][Tt][Ee]" /></xs:restriction></xs:simpleType></xs:union></xs:simpleType></xs:element><xs:element name="mass" minOccurs="0"><xs:annotation><xs:documentation>
                                Contains a single field as its inner text. This field is the detail field associated to the GTN document generated for the mass what if report generated on the What If screen.
                              </xs:documentation></xs:annotation><xs:simpleType><xs:union><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="agreement" /><xs:enumeration value="analysisisrundate" /></xs:restriction></xs:simpleType><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[Aa][Gg][Rr][Ee][Ee][Mm][Ee][Nn][Tt]" /><xs:pattern value="[Aa][Nn][Aa][Ll][Yy][Ss][Ii][Ss][Ii][Ss][Rr][Uu][Nn][Dd][Aa][Tt][Ee]" /></xs:restriction></xs:simpleType></xs:union></xs:simpleType></xs:element></xs:all></xs:complexType></xs:element><xs:element name="bomupload" type="xs:string" /></xs:all><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element><xs:element name="frdmcsgeneration" minOccurs="0"><xs:annotation><xs:documentation>
                    Element that contains configuration for MCS Generation as child elements. Currently, the only configuration that exists is before_gen_sql.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="before_gen_sql" minOccurs="0"><xs:annotation><xs:documentation>
                          Innertext is a CDATA SQL block that runs just before MCS report creation on frdMCSGeneration.
                          Parameters:
                          - @PartnerID : replaces with PartnerID
                          - @BOMGUID : replaces with the BOMGUID of the accepted record
                          - @UserName : replaces with current username
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:all></xs:complexType></xs:element></xs:all><xs:attribute name="owner" type="xs:string" use="optional" /></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:complexType name="AgreementInformation"><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="generate_document" type="YesNo" use="required"><xs:annotation><xs:documentation>
              This is used for agreements that do not require documents to be generated in the system. Default is ''Y''.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="use_continuation" type="YesNo" use="required"><xs:annotation><xs:documentation>
              This is used for clients that want certificates to be printed using continutation. Default is ''Y''.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="textile_doc" type="YesNo" use="required"><xs:annotation><xs:documentation>
              This is used for textile clients. Specifies if it is not a standard agreement, but a textile document agreement. Default is ''Y''.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="hsnotrequired" type="YesNo" use="required"><xs:annotation><xs:documentation>
              If this is ''Y'', HS Number will not be required to be entered in Supplier Cert screen, but will still validate the HS if one is entered by the supplier. Default is ''Y''.
            </xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:schema>', N'N', N'N')
INSERT [dbo].[tbgXSDSchemas] ([PartnerID], [EffDate], [ProductName], [SchemaName], [SchemaXPath], [Assembly], [ClassName], [XSDSchema], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-10-16T15:07:31.190' AS DateTime), N'FTA', N'Rules Engine', N'configuration/rulesengine', N'', N'', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified"><xs:simpleType name="hsnumMaxSize"><xs:restriction base="xs:integer"><xs:minInclusive value="7" /><xs:maxInclusive value="10" /></xs:restriction></xs:simpleType><xs:element name="configuration"><xs:complexType><xs:all><xs:element name="rulesengine"><xs:annotation><xs:documentation>
              Rules engine section of the partner config that contains agreement sections that the rules engine and BOM analysis/detail view screens pull to alter their logic on a per-partner basis.
            </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="threadbommemorylimit" default="500"><xs:annotation><xs:documentation>
                    Used to set BOM thread memory limit. Default is 500. Thread limit cannot be set to more than 1000
                  </xs:documentation></xs:annotation><xs:simpleType><xs:restriction base="xs:integer"><xs:minInclusive value="500" /><xs:maxInclusive value="1000" /></xs:restriction></xs:simpleType></xs:element><xs:element name="use_singleproduct_qr_sql" type="YesNo" minOccurs="0"><xs:annotation><xs:documentation>SQL for pulling the Pref Crit of a NAFTA BOM when there''s a possibility of only one product on the BOM. This is currently only being used by BP, as its very custom petroleum transfer logic. Consult KT_FTA before flipping to Y.</xs:documentation></xs:annotation></xs:element><xs:element name="custom_traced" type="YesNo" minOccurs="0"><xs:annotation><xs:documentation>This tag will be flagged either Y or N if it exists.  If it doesn''t exist, it defaults to a blank and the same behavior as an N occurs.  If and only if this tag is set to Y, then the automatic pull from txdRulesTracedItems in the content master database will be turned OFF.  This means that whatever HS numbers are in the client''s txdRulesTracedItems table will stay there and not be updated.  This allows clients to use a static list of their own definition.  However, when the Content team adds or removes HS numbers based on the changing NAFTA regulations, those changes will not propogate to the client.</xs:documentation></xs:annotation></xs:element><xs:element name="agreements"><xs:annotation><xs:documentation>All agreements (FTAs or Origin) that a client is authorized to analyze must be contained in this tag as child elements (e.g. an element name ''nafta-us''). If a client is subscribed to an agreement, but is not configured for it here, their partner will not be able to analyze against it. This tag should have no bearing on the agreements that a client is able to solicit</xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="israel-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-taiwan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="pakistan-iran" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="taiwan-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="aanzfta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="switzerland-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-ukraine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-caribbean" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="anztec" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="ukraine-montenegro" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-apta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-civilaircraft" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-eu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-armenia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-moldova" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-peru" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-lesotho" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-norway" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="iceland-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-iceland" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-thailand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-aceno.2" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-newzealand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-vietnam" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="bosniaherzegovina-iran" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="pacificalliance" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-saudiarabia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="aap.ceno.23" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="aap.ceno.57" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-australia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-japan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-hongkong" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-australia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-eba" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-canada" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-gsp-plus" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-esa" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-mar" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="apta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="asean" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="asean-japan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="asean-india" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="asean-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="asean-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-newzealand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-thailand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-malaysia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="cafta-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-costarica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-elsalvador" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-guatemala" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-honduras" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-india" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-malaysia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-nicaragua" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="cafta-dr" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-cafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="cafta-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-turkmenistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-ukraine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-kazakhstan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-uzbekistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-russia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-azerbaijan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-moldova" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-belarus" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-armenia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-tajikistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="georgia-kyrgyzstan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-georgia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="norway-gsp-plus" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="cafta-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-costarica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-elsalvador" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-guatemala" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-honduras" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-nicaragua" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-canada" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-costarica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="costarica-canada" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-efta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-eu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-honduras" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="israel-canada" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="israel-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-peru" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-india" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="cefta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="aghadir" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="comesa" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-albania" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-gcc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-egypt" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-macedonia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-serbia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-tunisia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-ukraine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-algeria" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-egypt" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-faroeislands" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-norway" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-palestine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="indonesia-pakistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-lebanon" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-cuba-ecuadorno.2" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-cuba-boliviano.1" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-cuba-ecuadorno.46" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-cuba-paraguayno.3" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-colombia-cubano.49" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-colombia-venezuelano.28" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-colombia-iceland" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-colombia-norway" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-aceno.14" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="aceno.18" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-russia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-turkey" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-southafrica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-argentina" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-czechrepublic" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-poland" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-hungary" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-romania" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-latvia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-lithuania" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-bulgaria" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-slovakrepublic" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-estonia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-laos" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="qiz" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-tunisia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-eu-turkey" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="gafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="madagascar-eu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="macedonia-turkey" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="macedonia-ukraine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="malaysia-pakistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="malaysia-turkey" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-burkinafaso" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-niger" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-togo" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-tunisia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="colombia-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mauritius-pakistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-guinea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-uae" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-iraq" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-mauritania" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-senegal" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-libya" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-saudiarabia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="newzealand-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="newzealand-lldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="newzealand-pac" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="norway-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="norway-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="pafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="caricom-dominicanrepublic" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-vietnam" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-costarica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="israel-mercosur" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-costarica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-gcc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="caricom-cuba" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="caricom-venezuela" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="ecowas" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="gcc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="picta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="sacu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="safta-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-iran" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-nicaragua-cuba" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-cuba-nicaragua" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="safta-non-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="sparteca" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="caricom" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-palestine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-bosnia-herzegovina" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-moldova" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-palestine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-tunisia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-hongkong" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="hongkong-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-lebanon" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-georgia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-philippines" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-montenegro" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-mauritius" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="srilanka-pakistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="switzerland-faroeislands" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="switzerland-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="switzerland-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-cuba-guatemalano.36" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-guatemala-belize" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-lebanon" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-macedonia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-palestinianterritory" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-tunisia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-norway-turkey" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-lebanon" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-macedonia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-palestinianterritory" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-tunisia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-turkey" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-albania" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-efta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-egypt" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-georgia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-plus" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-macedonia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-montenegro" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-serbia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-siabc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-costarica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-macao" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-taiwan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-quad" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-league" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-bosniaherzegovina" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-hongkong" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-ecuador" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-newzealand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-peru" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="colombia-triangulodelnorte" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="honduras-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="costarica-caricom" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="taiwan-guatemala" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="taiwan-nicaragua" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="nicaragua-taiwan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-efta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-peru" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-ecuadorno.2" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-ecuadorno.29" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-albania" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-andorra" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-bosnia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-cariforum" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-ceuta-melilla" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-efta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-switzerland" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-kosovo" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-macedonia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-moldova" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-montenegro" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-oct" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-pacificstates" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="pan-euro-med" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-sadc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-serbia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-southafrica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-cafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-colombia-peru-ecuador" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-brazil" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="iceland-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="indonesia-japan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-brunei" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-india" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-malaysia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-philippines" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-switzerland" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-mexico-epa" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-madagascar" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-croatia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-cuba" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-vietnam" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-japan-epa" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-india" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-boliviano.66" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="bolivia-mexicono.66" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-brazilno.53" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="brazil-mexicono.53" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="colombia-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-cubano.51" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-uruguayno.60" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="uruguay-mexicono.60" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="nafta-alena-ca" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-agoa" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-nepal" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="nafta-tlcan-mx" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="nafta-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="iceland-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="elsalvador-cuba" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-us-nafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-mx-nafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-ca-nafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-us-non-nafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-mx-non-nafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-ca-non-nafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="bolivia-venezuela" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="cacm" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-newzealand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="chile-turkey" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-pakistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-mauritius" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-nepal" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-seychelles" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-thailand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-tonga" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-ptldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="sacu-efta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-chile-cubano.42" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-colombia-caricom" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-colombia-nicaraguano.6" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-colombia-panamano.29" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-peru-paraguayno.58" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-peru-uruguayno.58" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-venezuela-costaricano.26" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-venezuela-cubano.40" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-venezuela-trinidadytobagono.20" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-cbera" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="newzealand-hongkong" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="newzealand-malasya" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="newzealand-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="norway-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-taiwan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-japan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-thailand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="sadc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-efta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-peru" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="singapore-australia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-switzerland-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="taiwan-china" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="thailand-australia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="taiwan-elsalvador-honduras" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="thailand-japan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="thailand-newzealand" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="transpacific" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-buyamerica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-australia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-bahrain" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="colombia-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-israel" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-oman" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-peru" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="peru-us" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-singapore" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="andean" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="countryoforigin" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mercosur-india" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mercosur-mexico" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mercosur-boliviano.36" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mercosur-cubano.62" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-australia-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-australia-papuanewguinea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-australia-forumisland" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-canada" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-australia-dct" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-bolivia-chile" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-bolivia-cuba" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-brazil-guyana" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="china-georgia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-brazil-venezuelano.69" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-brazil-surinam" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mercosur-chileno.35" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-argentina-colombiano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-argentina-colombiano.72" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-brazil-colombiano.72" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-argentina-ecuadorno.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-argentina-venezuelano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-brazil-colombiano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-brazil-ecuadorno.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-brazil-venezuelano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-paraguay-colombiano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-paraguay-ecuadorno.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-paraguay-venezuelano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-uruguay-colombiano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-uruguay-ecuadorno.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-uruguay-venezuelano.59" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-asiapacific" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-afghanistan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-srilanka" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="india-malaysia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-peru-cubano.50" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mexico-paraguayno.3" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-argentina-brazil-peruno.58" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-uruguay-colombiano.72" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-peru" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-cemac" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-cafta" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-costarica" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="efta-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="russia-serbia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-ldct" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="canada-ukraine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="cis" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mexico-brazilno.55" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-ecuardorno.2" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mexico-uruguayno.55" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mexico-argentinano.55" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="tra-mexico-argentinano.6" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-taiwan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-vietnam" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-switzerland" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-venezuela" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-ukraine" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-georgia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-albania" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-senegal" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="coo-rwanda" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="australia-japan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="norway-faroeislands" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="iceland-faroeislands" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eu-syria" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="turkey-syria" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="aap.no.6" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="aap.no.7" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eurasianeconomicunion-gsp" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eurasianeconomicunion-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-andean" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-asean" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-waemu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-sadc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-saarc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="us-gsp-caricom" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="egypt-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="israel-jordan" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="jordan-morocco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="morocco-tunisia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="ar.parno.4" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="panama-dominicanrepublic" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="dominicanrepublic-panama" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="korea-eu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mexico-eu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="mercosur-sacu" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="usorigin" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eaeu-vietnam" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="colombia-korea" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="japan-mongolia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="costarica-colombia" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="ar.am.no.1" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="ar.am.no.2" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="ar.am.no.3" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eco" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="eac" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="msg" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element><xs:element name="thailand-ldc" minOccurs="0"><xs:annotation><xs:documentation /></xs:annotation><xs:complexType><xs:complexContent><xs:extension base="AgreementInformation" /></xs:complexContent></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:element name="rules_hsnum_max_size" minOccurs="1" default="10"><xs:annotation><xs:documentation>Inner text contains a single integer and the default value is 10.  Must be higher than 6, cannot be greater than 10.  This limits the dataset to pull a maximum length of HS number for both the IM and PC items. This is used by clients who wish to only classify to the 6 or 8 digit HS level.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="hsnumMaxSize"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="bom_validation_query" type="xs:string" minOccurs="1"><xs:annotation><xs:documentation>This query will run on any BOMs selected for single analysis in both the BOM analysis screen and the Origin analysis screen. It also runs against BOMs in the rules engine during mass analysis. The query should be structured to only pull back results for specific BOMs which meet criteria to cause them to be ineligible.  Both IM and PC parts can be checked for this. The screens and processes that use this query should only find results for invalid BOMs.</xs:documentation></xs:annotation></xs:element><xs:element name="dataset_using_default" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>This isn''t a real element, but it is used often to indicate the fact that the in-code dataset is instead used. Be sure that you aren''t attempting to change this tag''s inner text when altering the dataset, as nothing will happen.</xs:documentation></xs:annotation></xs:element><xs:element name="dataset" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>The query contained here is the basis for all calculations and analysis in the rules engine. It pulls and manipulates data from a BOM, its components, related FTA certificates, and various traced value source tables to create a large dataset for that BOM. The engine then runs rules against that dataset to give a qualification result or, for the origin tool, an origin result. Do not modify this query without review by a qualified individual. If the dataset is not there, then a boilerplate dataset will be used in code.</xs:documentation></xs:annotation></xs:element><xs:element name="cumulation" minOccurs="0"><xs:annotation><xs:documentation>Contains a use attribute which denotes whether cumulation is used by the rules engine.</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="use" type="YesNo" use="optional"><xs:annotation><xs:documentation>Y/N flag that denotes whether or not cumulation is used. If it isn''t equal to Y, or isn''t there at all, cumulation isn''t used.</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="enable_multilevel_analysis" minOccurs="0"><xs:annotation><xs:documentation>Y/N flag as innertext that enables multilevel analysis as part of BOM analysis. N by default.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="enable_nq_analysis_check" minOccurs="0"><xs:annotation><xs:documentation>This is a Y/N flag that, when turned on, will turn on different logging to txdRuleStatus, specifically different RVC percentage logging. N by default.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="custom_traced_query_fg" minOccurs="0"><xs:annotation><xs:documentation>Innertext contains a CDATA SQL block that runs as part of create qualifying records and the BOM worksheet that ultimately replaces the SQL in code that determines whether your finished good is traced.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="custom_traced_query_pc" minOccurs="0"><xs:annotation><xs:documentation>Innertext contains a CDATA SQL block that runs as part of create BOM history that ultimately replaces the SQL in code that determines whether your component is traced.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="allow_invalid_subassembly" minOccurs="0"><xs:annotation><xs:documentation>Y/N flag in the inner text of the element used on the BOM analysis page that lets you run analysis against BOMs with invalid subassemblies.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:all><xs:attribute name="owner" type="xs:string" use="optional" /></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:complexType name="AgreementInformation"><xs:all><xs:annotation><xs:documentation>Agreements information used for BOM Analysis. The rules themselves are set up in Content Partner 6000.</xs:documentation></xs:annotation><xs:element name="columns" minOccurs="1"><xs:annotation><xs:documentation>Columns run against as part of BOM Analysis. These columns must match up to columns in the client''s dataset. A BOM cannot be analyzed on any field that is not listed here. Columns are listed in the inner text in CSV format, and must match the column aliases in the dataset.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string" /></xs:simpleContent></xs:complexType></xs:element><xs:element name="countries" minOccurs="1"><xs:annotation><xs:documentation>Member countries of the FTA. Defined in CSV format in the inner text of the element. Each country must be an ISO country code, separated by apostrophes.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string" /></xs:simpleContent></xs:complexType></xs:element><xs:element name="parent_fta" minOccurs="0"><xs:annotation><xs:documentation>This is obsolete, this is now determined in Content FTA_InProcess.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string" /></xs:simpleContent></xs:complexType></xs:element><xs:element name="deminimis_amount" minOccurs="0"><xs:annotation><xs:documentation>Single inner text decimal value. This decimal will be the threshold used for Deminimis qualification and is defined in the agreement legal text. This is normally .07 or .10 but can be lowered based on client restrictions. It must not under any circumstances be increased beyond the value in Partner 6000.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="net_cost" type="YesNo" use="required"><xs:annotation><xs:documentation>Denotes which of the IM''s values (the actual value or the commercial value) to use when calculating percentages for deminimis.</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="deminimis_textile_amount" minOccurs="0"><xs:annotation><xs:documentation>Used for textiles. This decimal will be the threshold used for Deminimis qualification and is defined in the agreement legal text. It is based off of the sum of the yarn and fiber weight compared to the total weight of the components. This can be lowered based on client restrictions. It must not under any circumstances be increased beyond the value in Partner 6000.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string" /></xs:simpleContent></xs:complexType></xs:element><xs:element name="detail_columns" minOccurs="0"><xs:annotation><xs:documentation>Contains a CSV list of column names that show up in the detail view on the BOM Detail View pop-up (from BOM Analysis).</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string" /></xs:simpleContent></xs:complexType></xs:element><xs:element name="detail_columns_not_to_show" minOccurs="0"><xs:annotation><xs:documentation>On the BOM Detail and BOM analysis reports, these are the columns that aren''t shown. This is CSV list of columns. Columns can still be calculated if they are in detail_columns, but are still hidden by this tag.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string" /></xs:simpleContent></xs:complexType></xs:element><xs:element name="detail_ordering" minOccurs="0"><xs:annotation><xs:documentation>Inner text is an order by statement that can order the detail_columns that show in the report by ASC or DESC.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string" /></xs:simpleContent></xs:complexType></xs:element></xs:all></xs:complexType></xs:schema>', N'N', N'N')
INSERT [dbo].[tbgXSDSchemas] ([PartnerID], [EffDate], [ProductName], [SchemaName], [SchemaXPath], [Assembly], [ClassName], [XSDSchema], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2018-10-16T15:07:31.203' AS DateTime), N'Global Classification', N'Classification Update', N'configuration/product_classification/classification_update', N'', N'', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified"><xs:annotation><xs:documentation>Classification Update</xs:documentation><xs:documentation>XSD Schema for the Classification Update section of the Partner config.</xs:documentation></xs:annotation><xs:element name="configuration"><xs:complexType mixed="true"><xs:sequence><xs:element name="classification_update"><xs:annotation><xs:documentation>Top-level element that contains all configuration for Classification Update screen in GC.</xs:documentation></xs:annotation><xs:complexType><xs:choice maxOccurs="unbounded"><xs:element name="view" minOccurs="1" maxOccurs="unbounded"><xs:annotation><xs:documentation>View element that represents a GC view (default is view type="Admin").</xs:documentation></xs:annotation><xs:complexType><xs:choice maxOccurs="unbounded"><xs:element maxOccurs="unbounded" name="country"><xs:annotation><xs:documentation>Configuration pulled for the selected Country drop down''s value.</xs:documentation></xs:annotation><xs:complexType><xs:choice maxOccurs="unbounded"><xs:element name="initial_display_columns" type="xs:string" minOccurs="1" default="p.EffDate,p.productguid,p.ProductNum,p.ProductDesc,p.HsNum"><xs:annotation><xs:documentation>List of columns loaded in the grid on initial page load. Default: EffDate, ProductGuid, ProductNum, ProductDesc, HsNum.</xs:documentation></xs:annotation></xs:element><xs:element name="where_clause" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>Optional where_clause that contains a CDATA block of SQL that gets appended to the end of the grid''s SQL datasource query. Originally written in to support security.</xs:documentation></xs:annotation></xs:element><xs:element name="tables" minOccurs="1"><xs:annotation><xs:documentation>List of tables that get joined together as part of the grid''s SQL datasource query. At a bare minimum, the country''s product classification table needs to be listed.</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="table" minOccurs="1" maxOccurs="unbounded"><xs:annotation><xs:documentation>Table that is added to the grid''s SQL datasource query.</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="name" type="xs:string" use="required"><xs:annotation><xs:documentation>Name of the database table. {COUNTRY} is available for use in this attribute, and is replaced with the current country code. IS CASE SPECIFIC.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="alias" type="xs:string" use="required"><xs:annotation><xs:documentation>What the database table is aliased to in the grid''s SQL datasource query.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="supplemental_table" type="YesNo" use="optional"><xs:annotation><xs:documentation>Must be Y or N and indicates whether the table is a default product classification table, or if it is a table that must be joined to. When this is set to Y, both the "join" and "jointype" attributes must be set to their proper values.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="join" type="xs:string" use="optional"><xs:annotation><xs:documentation>The join clause that is added to the grid''s SQL datasource query as part of the table''s join. The aliases used in the join clause must be the "alias" values defined for both the current table element and default product classification table element. Example: Two table elements, PC table alias = "p" and supplemental table alias = "a"; join="p.PartnerID = a.PartnerID and p.ProductGuid = a.ProductGuid". When the "supplemental_table" attribute for the table element is set to Y, this attribute must be properly set.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="jointype" use="optional" default="inner"><xs:annotation><xs:documentation>Join type for the table. When the "supplemental_table" attribute for the table element is set to Y, this attribute must be properly set.</xs:documentation></xs:annotation><xs:simpleType><xs:union><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="inner" /><xs:enumeration value="left" /><xs:enumeration value="right" /><xs:enumeration value="full" /><xs:enumeration value="cross" /></xs:restriction></xs:simpleType><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[Ii][Nn][Nn][Ee][Rr]" /><xs:pattern value="[Ll][Ee][Ff][Tt]" /><xs:pattern value="[Rr][Ii][Gg][Hh][Tt]" /><xs:pattern value="[Ff][Uu][Ll][Ll]" /><xs:pattern value="[Cc][Rr][Oo][Ss][Ss]" /></xs:restriction></xs:simpleType></xs:union></xs:simpleType></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="default_edit_selection" type="xs:string" minOccurs="0" maxOccurs="1" default="ProductNum"><xs:annotation><xs:documentation>Inner text can be a CSV list of Columns to Edit that are loaded by default when the screen loads.</xs:documentation></xs:annotation></xs:element><xs:element name="exclude_columns" minOccurs="0" maxOccurs="3"><xs:annotation><xs:documentation>Contains list of columns that are excluded from the add/edit drop downs on screen.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="exclude_type" use="optional"><xs:simpleType><xs:annotation><xs:documentation>Types of exclude columns that can be declared by the exclude_columns element</xs:documentation></xs:annotation><xs:restriction base="xs:string"><xs:enumeration value="" /><xs:enumeration value="add" /><xs:enumeration value="edit" /></xs:restriction></xs:simpleType></xs:attribute></xs:extension></xs:simpleContent></xs:complexType><xs:unique name="uniqueExcludeType"><xs:selector xpath="." /><xs:field xpath="@exclude_type" /></xs:unique></xs:element><xs:element name="include_columns" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>When turned on, the screen will instead only include the columns in the add/edit drop downs that are declared as part of the child columns elements.</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="columns" minOccurs="0" maxOccurs="3"><xs:annotation><xs:documentation>Inner text contains a CSV list of columns that are included in the corresponding drop down on screen (add/edit/both).</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="include_type" use="required"><xs:simpleType><xs:annotation><xs:documentation>Types of include columns that can be declared by the include_columns element</xs:documentation></xs:annotation><xs:restriction base="xs:string"><xs:enumeration value="" /><xs:enumeration value="add" /><xs:enumeration value="edit" /></xs:restriction></xs:simpleType></xs:attribute></xs:extension></xs:simpleContent></xs:complexType><xs:unique name="uniqueIncludeType"><xs:selector xpath="." /><xs:field xpath="@include_type" /></xs:unique></xs:element></xs:sequence><xs:attribute name="enabled" type="xs:string" use="optional" default="N"><xs:annotation><xs:documentation>Default N. When set to Y, the screen will only include the columns defined in this section in both the Fields to Add and Fields to Modify drop downs.</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:choice><xs:attribute name="code" use="required" type="ISOCountryCode"><xs:annotation><xs:documentation>Two-digit country code that represents a GC country profile (includes "" for global).</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="orderby_expression" type="xs:string" use="optional"><xs:annotation><xs:documentation>Order by expression that is appended to the end of the grid. Sorted by effdate desc if this element doesn''t exist.</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:choice><xs:attribute name="type" type="xs:string" use="required"><xs:annotation><xs:documentation>The GC view that contains configuration for when the screen is loaded for that view.</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="before_save_sql" type="xs:string" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>CDATA block inner text of SQL run directly after clicking button to apply updates, but before save logic is run. Parameters that can be run: {CountryCode}, {Country_Code}, {Country}, {Value}, @Country_Code@, @CountryCode@, @Value@ replaced with current country code; {PartnerID}, @CurrentPartnerID@, @PartnerID@ replaced with partner id; @UserName@ replaced with username; @ProductGuid@ replaced with CSV list of productguids, surrounded by parenthesis.</xs:documentation></xs:annotation></xs:element><xs:element name="after_save_sql" type="xs:string" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>CDATA block inner text of SQL run directly after clicking button to apply updates, and after save logic is run. Parameters that can be run: {CountryCode}, {Country_Code}, {Country}, {Value}, @Country_Code@, @CountryCode@, @Value@ replaced with current country code; {PartnerID}, @CurrentPartnerID@, @PartnerID@ replaced with partner id; @UserName@ replaced with username; @ProductGuid@ replaced with CSV list of productguids, surrounded by parenthesis.</xs:documentation></xs:annotation></xs:element><xs:element name="field_links"><xs:annotation><xs:documentation>Collection of link elements whose inner text contain hyperlinks, surrounded by a CDATA block. For each one of these defined, the controls that have links defined in configuration will instead generate hyperlinks to those URLs, instead of plain label text, when the control is selected for modify on screen.</xs:documentation></xs:annotation><xs:complexType><xs:choice><xs:element maxOccurs="unbounded" name="link"><xs:annotation><xs:documentation>Contains a url link in its innertext that gets applied to a hyperlink for the corresponding field to modify control on screen, when it is showing.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="field" type="xs:string" use="required"><xs:annotation><xs:documentation>GC database field name of the modify field above-grid control.</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element><xs:element name="enable_saved_searches" type="xs:string" minOccurs="0" maxOccurs="1" default="N"><xs:annotation><xs:documentation>When the inner text is set to Y, saved searches functionality is enabled on screen. This allows for a user, through the command item in the grid, to save its searches and re-open them at a later time.</xs:documentation></xs:annotation></xs:element></xs:choice><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="throttle" type="YesNo" use="optional"><xs:annotation><xs:documentation>When set to Y, the grid will not load until the grid is filtered at least once.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="filter_limit" type="xs:integer" use="optional"><xs:annotation><xs:documentation>When present, it limits the amount of results returned by the grid. E.g. if you have this attribute set to 25, then for any load of the grid, the Top 25 results are returned.</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:schema>', N'N', N'N')
, (4000, CAST(N'2018-10-16T15:07:31.203' AS DateTime), N'Global Classification', N'Edit Classifications', N'configuration/product_classification/view', N'GCValidations.dll', N'EditClassificationsSection', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified"><xs:element name="configuration"><xs:complexType mixed="true"><xs:sequence><xs:element maxOccurs="unbounded" name="view"><xs:annotation><xs:documentation>GC security view for Edit Classifications and Classification Update.</xs:documentation></xs:annotation><xs:complexType mixed="true"><xs:sequence><xs:element maxOccurs="unbounded" name="country"><xs:annotation><xs:documentation>A country''s configuration underneath a GC view.</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="list"><xs:annotation><xs:documentation>Contains the query that filters records on the Product Search screen and determines security on Edit Classifications.</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="query"><xs:annotation><xs:documentation>The query that filters records on the Product Search screen and determines security on Edit Classifications.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="linkcolumns" type="xs:string" use="optional"><xs:annotation><xs:documentation>Comma-separated list of column names (after aliasing) that get the linktargets links associated to in the grid on Product Search.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="linktargets" type="xs:string" use="optional"><xs:annotation><xs:documentation>Comma-separated list of URL''s inserted into the grid on Product Search</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="detail"><xs:annotation><xs:documentation>Contains all of the tables that a country layout contains. The standards are the tmdProductClassification tables, the tmdHS tables, and the set breakdown tables.</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="table" maxOccurs="unbounded"><xs:annotation><xs:documentation>Represents a table under a country detail layout. Contains columns that get pulled into Edit Classifications, Classification Update, Classification Set Breakdown, etc.</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="columns"><xs:annotation><xs:documentation>Contains a list of columns for a table.</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="column" maxOccurs="unbounded"><xs:annotation><xs:documentation>Represents a field that exists on a GC screen. Many attributes are provided to configure the column to exhibit specific behavior in GC.</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="order" type="xs:integer" use="optional"><xs:annotation><xs:documentation>Display order on Edit Classifications. This is not implemented.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="name" type="xs:string" use="required"><xs:annotation><xs:documentation>Database column name for the field.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="enabled" type="YesNo" use="required"><xs:annotation><xs:documentation>Y = user can edit contents, N = user cannot edit contents </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="audit" type="YesNo" use="required"><xs:annotation><xs:documentation>Y = log change in column contents for audit review, N = do not log changes</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="auditcolumn" type="xs:string" use="optional"><xs:annotation><xs:documentation>Column to force user to enter reason for change. This is not implemented.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="visible" type="YesNo" use="required"><xs:annotation><xs:documentation>Y = field is visible on screen, N = field isn''t visible on screen</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="iskey" type="YesNo" use="required"><xs:annotation><xs:documentation>Y = column is the PK for the database table, N = column is not the PK for the database table</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="controltype" use="required"><xs:annotation><xs:documentation>Type of control the field is rendered as.</xs:documentation></xs:annotation><xs:simpleType><xs:annotation><xs:documentation>Control types that can be declared for the field</xs:documentation></xs:annotation><xs:union><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="textbox" /><xs:enumeration value="numerictextbox" /><xs:enumeration value="dropdownlist" /><xs:enumeration value="checkbox" /><xs:enumeration value="datepicker" /><xs:enumeration value="" /></xs:restriction></xs:simpleType><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[Tt][Ee][Xx][Tt][Bb][Oo][Xx]" /><xs:pattern value="[Nn][Uu][Mm][Ee][Rr][Ii][Cc][Tt][Ee][Xx][Tt][Bb][Oo][Xx]" /><xs:pattern value="[Dd][Rr][Oo][Pp][Dd][Oo][Ww][Nn][Ll][Ii][Ss][Tt]" /><xs:pattern value="[Cc][Hh][Ee][Cc][Kk][Bb][Oo][Xx]" /><xs:pattern value="[Dd][Aa][Tt][Ee][Pp][Ii][Cc][Kk][Ee][Rr]" /><xs:pattern value="" /></xs:restriction></xs:simpleType></xs:union></xs:simpleType></xs:attribute><xs:attribute name="isforeigncolumn" type="YesNo" use="required"><xs:annotation><xs:documentation>Y = uses a separate query and is part of a different table, N = column is part of the same table.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="default" type="xs:string" use="required"><xs:annotation><xs:documentation>The value the control is populated with if it doesn''t have a value in the database.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="query" type="xs:string" use="required"><xs:annotation><xs:documentation>SQL query that is used to populate a dropdownlist field. Must return two columns in Code, Decode format.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="maxrows" type="xs:string" use="optional"><xs:annotation><xs:documentation>The number of rows the text area for a textbox control is, if the field is a textbox.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="width" type="xs:string" use="required"><xs:annotation><xs:documentation>The width, in pixels, of the control at hand. Currently, a textbox can be max 300 pixels (as of the UI update).</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="onlycontrolonrow" type="YesNo" use="required"><xs:annotation><xs:documentation>Y = display this column on a row by itself, N = display this column in regular column order (Edit Classifications and Classification Update)</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="linktable" type="xs:string" use="required"><xs:annotation><xs:documentation>Used in conjunction with the linkcolumn and linksource attributes. Defines which table the column should link to. If left empty, then the column''s source is its ancestor table element''s name.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="linkcolumn" type="xs:string" use="required"><xs:annotation><xs:documentation>Used in conjunction with the linktable and linksource attributes. Defines which column in the linktable that links the source and linktable (joins to). Screen(s) will break if a linktable is defined for a column element and this is attribute is left empty.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="linksource" type="xs:string" use="required"><xs:annotation><xs:documentation>Used in conjunction with the linktable and linkcolumn attributes. Defines which column in the source table to join to the linkcolumn in the defined linktable. Screen(s) will break if a linktable is defined for a column element and this is attribute is left empty, or if a join is defined by a linkcolumn and linksource that doesn''t make sense.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="format" type="xs:string" use="required"><xs:annotation><xs:documentation>A valid .NET format specifier. Works for controltypes DatePicker, TextBox, and NumericTextBox. See this link for more information on how to format strings in .NET: https://docs.microsoft.com/en-us/dotnet/standard/base-types/formatting-types.  </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="length" type="xs:string" use="required"><xs:annotation><xs:documentation>Not used by the code.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="min" type="xs:string" use="required"><xs:annotation><xs:documentation>Not used by the code.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="max" type="xs:string" use="required"><xs:annotation><xs:documentation>Not used by the code.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="enabledonnew" type="YesNo" use="optional" default=""><xs:annotation><xs:documentation>If set to "Y", the column is only enabled during the initial creation of the product record (when you click ''New'' on Edit Classifications). If this isn''t set to "Y", then it does nothing.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="required" type="YesNo" use="optional"><xs:annotation><xs:documentation>The field is required and must be filled in before you can save the product(s) (screens: Edit Classification and Classification Update.)</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="forceucase" type="xs:string" use="optional"><xs:annotation><xs:documentation>Not used by the code.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allowmassupdate" type="YesNo" use="optional"><xs:annotation><xs:documentation>Determines if the field is added to the Fields to Edit on Classification Update for the current view. Must be deliberately set to "N" for it not to show. The field will still show in the drop down if this attribute is set to "Y" or not there at all.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="virtual" type="xs:string" use="optional"><xs:annotation><xs:documentation>Not used by the code. Deprecated pre-Content attribute.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="virtualkeyfield" type="xs:string" use="optional"><xs:annotation><xs:documentation>Not used by the code. Deprecated pre-Content attribute.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="mask" type="xs:unsignedLong" use="optional"><xs:annotation><xs:documentation>Not used in many situations. Under very specific circumstances, will limit the max number of characters that can be typed in a TextBox or NumericTextBox.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="isseparator" type="YesNo" use="optional"><xs:annotation><xs:documentation>Denotes a separator on the Edit Classifications screen. When set to "Y", the name attribute for the column is used to populate the title of the associated separator panel on Edit Classsifications.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="isparent" type="xs:string" use="optional"><xs:annotation><xs:documentation>Not used by the code.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="controlsource" type="xs:string" use="optional"><xs:annotation><xs:documentation>Only used by DropDownList controls. It is highly recommended to use the query attribute instead.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="sourceinsert" type="xs:string" use="optional"><xs:annotation><xs:documentation>Deprecated, do not use.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="sourcetarget" type="xs:string" use="optional"><xs:annotation><xs:documentation>Deprecated, do not use.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="sourcedefault" type="xs:string" use="optional"><xs:annotation><xs:documentation>Deprecated, do not use.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="hyperlink" type="xs:string" use="optional"><xs:annotation><xs:documentation>Not used by code. Please use the link fields element under product_classification if looking to create links on Edit Classifications/Classification Update.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="dropdownmax" type="xs:integer" use="optional"><xs:annotation><xs:documentation>Used by DropDownList control only on Edit Classifications only. Determines how many items get pulled into the dropdown when you open it. Max value is 250.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="sourcevalue" type="xs:string" use="optional"><xs:annotation><xs:documentation>Deprecated, do not use.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="sourcekey" type="xs:string" use="optional"><xs:annotation><xs:documentation>Deprecated, do not use.</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:sequence><xs:attribute name="name" type="xs:string" use="required"><xs:annotation><xs:documentation>The name of the table that each column child, by default, will pull from.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="columnsperrow" type="xs:integer" use="required"><xs:annotation><xs:documentation>The number of columns per row on Edit Classifications that will be rendered in the table. The default number of columns (and highly recommended number) is 2.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="searchfield" type="xs:string" use="optional"><xs:annotation><xs:documentation>The primary field for searching on Edit Classifications. This field is the default populated field in the search drop down. The default is ProductNum.</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element minOccurs="0" name="report"><xs:annotation><xs:documentation>Report that is generated through Document Generation directly from the Edit Classifications screen.</xs:documentation></xs:annotation><xs:complexType><xs:choice minOccurs="0" maxOccurs="unbounded"><xs:element name="report_id" type="xs:string" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>Report ID for generation off of Edit Classifications for a product spec sheet. Currently, this innertext is only used as the filename URL parameter out to fugViewDocument.aspx, once the report has been generated. If not filled out, a new guid is created as the ID.</xs:documentation></xs:annotation></xs:element><xs:element name="report_name" type="xs:string" maxOccurs="1"><xs:annotation><xs:documentation>Report name for the generated .rpt file.</xs:documentation></xs:annotation></xs:element><xs:element name="report_generation_sql" type="xs:string" maxOccurs="1"><xs:annotation><xs:documentation>SQL that refreshes and inserts the relevant data into trdProductClassificationReporting. Takes the following parameters (case sensitive): @ProductGuid@, @PartnerID@, @CountryCode@, @UserName@</xs:documentation></xs:annotation></xs:element></xs:choice></xs:complexType></xs:element></xs:sequence><xs:attribute name="name" type="xs:string" use="required"><xs:annotation><xs:documentation>Name of the country. e.g. "United States"</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="code" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>Two-digit ISO country code for the country. e.g. "US"</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="visible" type="YesNo" use="required"><xs:annotation><xs:documentation>If set to "Y", the country is visible in country drop downs across GC. If this isn''t set to "Y", or if missing, then the country is not visible.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="grouping" type="xs:string" use="optional"><xs:annotation><xs:documentation>Country code that gets sent to content. If missing, will use a variety of alternatives (e.g. declared country, selected country, etc.).</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="show_validation_messages" type="YesNo" use="optional"><xs:annotation><xs:documentation>If set to anything besides "N", or if this attribute doesn''t exist, then the validation messages grid on Edit Classifications for the country shows. If set to "N", the validation messages grid is hidden.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="ContentGUID" type="xs:string" use="optional"><xs:annotation><xs:documentation>Internal identifier that Content uses for a country.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="enable_pga" type="YesNo" use="optional"><xs:annotation><xs:documentation>For the "US" country profile, when this is set to "Y", a link to the PGA screen appears in the action bar on Edit Classifications. A link to the PGA screen also appears for each child set record on the Set Breakdown screen.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_setbreakdown" type="YesNo" use="optional"><xs:annotation><xs:documentation>If set to "Y", a link to the set breakdown screen appears in the action bar on Edit Classifications in this country profile. If set to anything besides "Y", or if this attribute doesn''t exist, then the link in the action bar does not appear. Note that this attribute has lower priority than its version at the view level.</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence><xs:attribute name="type" type="xs:string" use="required"><xs:annotation><xs:documentation>The view type that acts as a unique identifier for the view. By default, the two default types are "Admin" and "Broker". The view type is directly tied to the user''s current IP security group.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_doc_creation" type="YesNo" use="required"><xs:annotation><xs:documentation>If set to "Y", or if this attribute doesn''t exist, a link to create a report document appears on the Edit Classifications. If set to anything besides "Y" and the attribute exists, then the link does not appear.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_create" type="YesNo" use="required"><xs:annotation><xs:documentation>If set to "Y", or if this attribute doesn''t exist, a link to create a new product record appears in the action bar on Edit Classifications for this view. If set to anything besides "Y" and the attribute exists, then the link in the action bar does not appear.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_update" type="YesNo" use="required"><xs:annotation><xs:documentation>If set to "Y", or if this attribute doesn''t exist, the ''Save'' button in the action bar on Edit Classifications appears. If set to anything besides "Y" and the attribute exists, then the link in the action bar disappears.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_delete" type="YesNo" use="required"><xs:annotation><xs:documentation>If set to "Y", or if this attribute doesn''t exist, the delete panel on Edit Classifications appears for the user. If set to anything besides "Y" and the attribute exists, then the delete panel does not appear.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_doc_retention" type="YesNo" use="required"><xs:annotation><xs:documentation>If set to "Y", or if this attribute doesn''t exist, a link to create a new product record appears in the action bar on Edit Classifications for this view. If set to anything besides "Y" and the attribute exists, then the link in the action bar does not appear.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_setbreakdown" type="YesNo" use="optional"><xs:annotation><xs:documentation>This is deprecated, please use the tag at the country level instead.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_classification" type="YesNo" use="required"><xs:annotation><xs:documentation>If set to "Y", or if this attribute doesn''t exist, a Classify link appears in the action bar on Edit Classifications in this country profile. If set to anything besides "Y" and the attribute exists, then the link in the action bar does not appear.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_apply" type="YesNo" use="required"><xs:annotation><xs:documentation>If set to "Y", an Apply link appears appears in the action bar on Edit Classifications in this country profile. If set to anything besides "Y", or if this attribute doesn''t exist, then the link in the action bar does not appear.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_enduse" type="YesNo" use="required"><xs:annotation><xs:documentation>If set to "Y", an End Use link appears in the action bar on Edit Classifications in this country profile. If set to anything besides "Y", or if this attribute doesn''t exist, then the link in the action bar does not appear.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_auditlog" type="YesNo" use="required"><xs:annotation><xs:documentation>If set to "Y", a link to the Audit Log screen appears in the action bar on Edit Classifications in this country profile. If set to anything besides "Y", or if this attribute doesn''t exist, then the link in the action bar does not appear.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_copy" type="YesNo" use="optional"><xs:annotation><xs:documentation>If set to "Y", a link to the Product Copy screen appears in the action bar on Edit Classifications in this country profile. If set to anything besides "Y", or if this attribute doesn''t exist, then the link in the action bar does not appear.</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_statisticalcodes" type="YesNo" use="optional"><xs:annotation><xs:documentation>If set to "Y", a link to the Statistical Codes screen appears in the action bar on Edit Classifications. If set to anything besides "Y", or if this attribute doesn''t exist, then the link in the action bar does not appear.</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:schema>', N'N', N'N')
, (4000, CAST(N'2018-10-16T15:07:31.220' AS DateTime), N'Product Integration', N'CI_PreProcessing', N'configuration/ftzlink_discrete/client_import_preprocessing', N'ProductIntegrationValidations.dll', N'CI_PreProcessing', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified"><xs:element name="configuration"><xs:complexType mixed="true"><xs:sequence><xs:element name="client_import_preprocessing" type="client_import_preprocessing" minOccurs="0" maxOccurs="1" /></xs:sequence></xs:complexType></xs:element><xs:complexType name="client_import_preprocessing"><xs:all><xs:element name="source" minOccurs="0" maxOccurs="1"><xs:complexType><xs:attribute name="type" type="FileTransferType" use="required" /><xs:attribute name="directory" type="xs:string" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="host" type="xs:string" use="optional" /><xs:attribute name="port" type="xs:string" use="optional" /><xs:attribute name="username" type="xs:string" use="optional" /><xs:attribute name="password" type="xs:string" use="optional" /></xs:complexType></xs:element><xs:element name="operation" type="operation" minOccurs="0" maxOccurs="1" /></xs:all><xs:attribute name="workingdirectory" type="xs:string" use="optional" /><xs:attribute name="runprocess" type="StringBoolean" use="required" /><xs:attribute name="owner" type="xs:string" use="required" /><xs:attribute name="outputdirectory" type="xs:string" use="optional" /><xs:attribute name="archivedirectory" type="xs:string" use="optional" /></xs:complexType><xs:complexType name="operation"><xs:attribute name="schemafile" type="xs:string" use="required" /><xs:attribute name="outputfilter" type="xs:string" use="required" /><xs:attribute name="outputextension" type="xs:string" use="required" /><xs:attribute name="name" type="xs:string" use="required" /><xs:attribute name="inputfilter" type="xs:string" use="required" /><xs:attribute name="inputextension" type="xs:string" use="required" /></xs:complexType></xs:schema>', N'N', N'N')
, (4000, CAST(N'2018-10-16T15:07:31.220' AS DateTime), N'Product Integration', N'CI_StageIntegration', N'configuration/ftzlink_discrete/stage_integration_v2', N'ProductIntegrationValidations.dll', N'CI_StageIntegration', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified"><xs:element name="configuration"><xs:complexType mixed="true"><xs:sequence><xs:element name="stage_integration_v2" type="stage_integration_v2" minOccurs="1" maxOccurs="unbounded" /></xs:sequence></xs:complexType></xs:element><xs:complexType name="stage_integration_v2"><xs:sequence maxOccurs="unbounded"><xs:element name="notify" type="notify" minOccurs="0" maxOccurs="unbounded" /><xs:element name="source" type="source" /><xs:element name="processing" type="processing" minOccurs="0" maxOccurs="unbounded" /></xs:sequence><xs:attribute name="workingdirectory" type="xs:string" use="required" /><xs:attribute name="use_integration_db" type="StringBoolean" use="optional" /><xs:attribute name="query_timeout" type="IntegerMinOne" use="optional" /><xs:attribute name="owneremail" type="EmailID" use="required" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="name" type="xs:string" use="required" /><xs:attribute name="calculate_precision" type="StringBoolean" use="optional" /><xs:attribute name="warn_on_no_work" type="StringBoolean" use="optional" /><xs:attribute name="fail_on_no_work" type="StringBoolean" use="optional" /><xs:attribute name="gtn_logging_enabled" type="StringBoolean" use="optional" /><xs:attribute name="archivedirectory" type="xs:string" use="required" /><xs:attribute name="override_duplicate_check" type="StringBoolean" use="optional" /></xs:complexType><xs:complexType name="notify"><xs:attribute name="type" type="notification" use="required" /><xs:attribute name="send_on_success_enabled" type="StringBoolean" use="optional" /><xs:attribute name="send_on_failure_enabled" type="StringBoolean" use="optional" /><xs:attribute name="recipient" type="EmailID" use="required" /><xs:attribute name="owner" type="xs:string" use="optional" /></xs:complexType><xs:simpleType name="notification"><xs:restriction base="xs:string"><xs:enumeration value="report" /><xs:enumeration value="tiny" /></xs:restriction></xs:simpleType><xs:complexType name="source"><xs:attribute name="username" type="xs:string" use="optional" /><xs:attribute name="type" type="FileTransferType" use="required" /><xs:attribute name="port" type="FTPPortsAndEmptyString" use="optional" /><xs:attribute name="password" type="xs:string" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="directory" type="xs:string" use="optional" /><xs:attribute name="remote_directory" type="xs:string" use="optional" /><xs:attribute name="host" type="HostURL" use="optional" /></xs:complexType><xs:complexType name="processing"><xs:sequence><xs:element name="skip_line_regex" type="skip_line_regex" minOccurs="0" /><xs:element name="line_identifier" type="line_identifier" minOccurs="0" /><xs:element name="columns" type="columns" /><xs:element name="processing" type="processing" minOccurs="0" maxOccurs="unbounded" /></xs:sequence><xs:attribute name="table" type="xs:string" use="required" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="delimiter" type="xs:string" use="optional" /><xs:attribute name="trim_right" type="StringBoolean" use="optional" /><xs:attribute name="parser" type="CIParser" use="optional" /><xs:attribute name="name" type="xs:string" use="required" /><xs:attribute name="filter" type="xs:string" use="optional" /><xs:attribute name="enable_bulk_loading" type="StringBoolean" use="optional" /><xs:attribute name="archive_invalid_files" type="StringBoolean" use="optional" /><xs:attribute name="bulk_parse_batch_size" type="xs:integer" use="optional" /><xs:attribute name="bulk_load_batch_size" type="xs:integer" use="optional" /><xs:attribute name="archive" type="StringBoolean" use="optional" /><xs:attribute name="type" type="FileTransferType" use="optional" /><xs:attribute name="username" type="xs:string" use="optional" /><xs:attribute name="port" type="FTPPortsAndEmptyString" use="optional" /><xs:attribute name="password" type="xs:string" use="optional" /><xs:attribute name="host" type="HostURL" use="optional" /><xs:attribute name="directory" type="xs:string" use="optional" /><xs:attribute name="remote_directory" type="xs:string" use="optional" /><xs:attribute name="encoding" type="Encoding" use="optional" /><xs:attribute name="processing_type" type="processing_type" use="optional" /><xs:attribute name="header_column_regex" type="xs:string" use="optional" /><xs:attribute name="header_column_index" type="xs:integer" use="optional" /><xs:attribute name="contains_header" type="StringBoolean" use="optional" /><xs:attribute name="tab_index" type="IntegerMinOne" use="optional" /><xs:attribute name="tab_name_regex" type="xs:string" use="optional" /><xs:attribute name="allow_identity_columns" type="xs:string" use="optional" /><xs:attribute name="allow_nullable_columns" type="xs:string" use="optional" /><xs:attribute name="update" type="StringBoolean" use="optional" /><xs:attribute name="ignore_line_level_syntax_errors" type="StringBoolean" use="optional" /><xs:attribute name="skip_lines" type="xs:integer" use="optional" /><xs:attribute name="skip" type="xs:integer" use="optional" /><xs:attribute name="enable_effdate_check_for_update" type="StringBoolean" use="optional" /><xs:attribute name="fail_on_file_count_not_equal" type="xs:integer" use="optional" /><xs:attribute name="fail_on_file_count_fewer_than" type="xs:integer" use="optional" /><xs:attribute name="one_to_one_relation_to" type="xs:string" use="optional" /><xs:attribute name="warn_on_no_work" type="xs:string" use="optional" /><xs:attribute name="fail_on_no_work" type="xs:string" use="optional" /><xs:attribute name="clearfirst" type="xs:string" use="optional" /></xs:complexType><xs:complexType name="skip_line_regex"><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="owner" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType><xs:complexType name="line_identifier"><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="type" type="xs:string" /><xs:attribute name="required" type="StringBoolean" /><xs:attribute name="min" type="xs:integer" /></xs:extension></xs:simpleContent></xs:complexType><xs:complexType name="columns"><xs:choice maxOccurs="unbounded"><xs:element name="column" type="processingColumn" maxOccurs="unbounded" /><xs:element name="virtual" type="processingColumn" minOccurs="0" maxOccurs="unbounded" /></xs:choice></xs:complexType><xs:complexType name="processingColumn"><xs:sequence><xs:element name="date_format" type="DateFormat" minOccurs="0" maxOccurs="unbounded" /></xs:sequence><xs:attribute name="name" type="xs:string" use="optional" /><xs:attribute name="position" type="xs:integer" use="optional" /><xs:attribute name="length" type="xs:integer" use="optional" /><xs:attribute name="value" type="xs:string" use="optional" /><xs:attribute name="default" type="xs:string" use="optional" /><xs:attribute name="copyof" type="xs:string" use="optional" /><xs:attribute name="onupdate" type="xs:string" use="optional" /><xs:attribute name="update" type="StringBoolean" use="optional" /><xs:attribute name="setdate" type="xs:string" use="optional" /><xs:attribute name="dayadd" type="xs:string" use="optional" /><xs:attribute name="truncatedate" type="xs:string" use="optional" /><xs:attribute name="newid" type="xs:string" use="optional" /><xs:attribute name="sourcefilename" type="StringBoolean" use="optional" /><xs:attribute name="file_line_num" type="StringBoolean" use="optional" /><xs:attribute name="use_logical_linenum" type="StringBoolean" use="optional" /><xs:attribute name="logical_line_num" type="StringBoolean" use="optional" /><xs:attribute name="variable_date_length" type="StringBoolean" use="optional" /><xs:attribute name="blank_date_regex" type="StringBoolean" use="optional" /><xs:attribute name="disregard" type="StringBoolean" use="optional" /><xs:attribute name="pk" type="StringBoolean" use="optional" /><xs:attribute name="trim_right" type="StringBoolean" use="optional" /><xs:attribute name="format" type="DateFormat" use="optional" /><xs:attribute name="use_import_id" type="StringBoolean" use="optional" /><xs:attribute name="ancestor_processing_name" type="xs:string" use="optional" /><xs:attribute name="index" type="xs:short" use="optional" /><xs:attribute name="width" type="xs:integer" use="optional" /><xs:attribute name="type" type="xs:string" use="optional" /><xs:attribute name="ancestor_column_name" type="xs:string" use="optional" /><xs:attribute name="regex" type="xs:string" use="optional" /><xs:attribute name="replace " type="xs:string" use="optional" /></xs:complexType><xs:simpleType name="processing_type"><xs:restriction base="xs:string"><xs:pattern value="[Ee][Xx][Cc][Ee][Ll]" /><xs:pattern value="[Nn][Ee][Ss][Tt][Ee][Dd][Pp][Rr][Oo][Cc][Ee][Ss][Ss][Ii][Nn][Gg]" /></xs:restriction></xs:simpleType></xs:schema>', N'N', N'N')
, (4000, CAST(N'2018-10-16T15:07:31.220' AS DateTime), N'Product Integration', N'WorkflowNotification', N'configuration/common/workflow_notification', N'ProductIntegrationValidations.dll', N'WorkflowNotification', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified"><xs:element name="configuration"><xs:complexType mixed="true"><xs:sequence maxOccurs="unbounded"><xs:element name="workflow_notification" type="workflow_notification" minOccurs="0" maxOccurs="unbounded" /></xs:sequence></xs:complexType></xs:element><xs:complexType name="workflow_notification"><xs:all><xs:element name="listeners" type="listeners" minOccurs="1" maxOccurs="1" /><xs:element name="queries" maxOccurs="1" minOccurs="1"><xs:complexType><xs:sequence maxOccurs="1" minOccurs="1"><xs:element name="query" maxOccurs="unbounded" minOccurs="1" type="query" /></xs:sequence></xs:complexType></xs:element></xs:all><xs:attribute name="workflow" type="xs:string" use="required" /></xs:complexType><xs:complexType name="listeners"><xs:sequence maxOccurs="unbounded"><xs:element name="email" type="email" minOccurs="1" maxOccurs="unbounded" /></xs:sequence><xs:attribute name="use_bcc" type="StringBoolean" use="optional" /></xs:complexType><xs:complexType name="email"><xs:simpleContent><xs:extension base="EmailID"><xs:attribute name="error" type="StringBoolean" use="optional" /><xs:attribute name="success" type="StringBoolean" use="optional" /></xs:extension></xs:simpleContent></xs:complexType><xs:complexType name="query"><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="Success" type="StringBoolean" use="optional" /><xs:attribute name="success" type="StringBoolean" use="optional" /><xs:attribute name="Error" type="StringBoolean" use="optional" /><xs:attribute name="error" type="StringBoolean" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:schema>', N'N', N'N')
, (4000, CAST(N'2018-10-16T15:07:31.220' AS DateTime), N'Product Integration', N'ExecuteSQL', N'configuration/ftzlink_discrete/execute_sql', N'ProductIntegrationValidations.dll', N'ExecuteSQL', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified"><xs:element name="configuration"><xs:complexType mixed="true"><xs:sequence maxOccurs="unbounded"><xs:element name="execute_sql" type="execute_sql" minOccurs="0" maxOccurs="unbounded" /></xs:sequence></xs:complexType></xs:element><xs:complexType name="execute_sql"><xs:sequence maxOccurs="1"><xs:element name="wf" type="wf" minOccurs="0" maxOccurs="unbounded" /><!--min occurance should alway be atleast 1 for wf ??--><xs:element name="sql" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="retry_on_deadlock" type="retry_on_deadlock" maxOccurs="1" minOccurs="0" /><xs:element name="retry_on_timeout" type="retry_on_timeout" maxOccurs="1" minOccurs="0" /></xs:sequence><xs:attribute name="name" type="xs:string" use="required" /><xs:attribute name="timeout_sec" type="IntegerMinOne" use="optional" /><xs:attribute name="noweb" type="StringBoolean" use="optional" /><xs:attribute name="tfs" type="xs:integer" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="prompt_before_message" type="xs:string" use="optional" /><xs:attribute name="parameter" type="StringBoolean" use="optional" /><xs:attribute name="on_success_message" type="xs:string" use="optional" /><xs:attribute name="allow_during_fifo" type="StringBoolean" use="optional" /><xs:attribute name="use_transaction" type="StringBoolean" use="optional" /><xs:attribute name="finish_links_first" type="StringBoolean" use="optional" /></xs:complexType><xs:complexType name="retry_on_deadlock"><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="required" /><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="number_of_retries" type="xs:integer" use="required" /></xs:extension></xs:simpleContent></xs:complexType><xs:complexType name="retry_on_timeout"><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="required" /><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="number_of_retries" type="xs:integer" use="required" /></xs:extension></xs:simpleContent></xs:complexType><xs:complexType name="wf"><xs:attribute name="name" type="xs:string" use="required" /><xs:attribute name="step" type="xs:string" use="optional" /><xs:attribute name="execute_integration_sp" type="StringBoolean" use="optional" /><xs:attribute name="noweb" type="StringBoolean" use="optional" /><xs:attribute name="timeout_sec" type="IntegerMinOne" use="optional" /><xs:attribute name="sequenceno" type="IntegerMinOne" use="optional" /></xs:complexType></xs:schema>', N'N', N'N')
, (4000, CAST(N'2018-10-16T15:07:31.220' AS DateTime), N'Product Integration', N'GenericFileTransform', N'/configuration/common/integration/xslt_transforms', N'ProductIntegrationValidations.dll', N'GenericFileTransform', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified"><xs:element name="configuration"><xs:complexType mixed="true"><xs:sequence maxOccurs="unbounded"><xs:element name="xslt_transforms" type="xslt_transforms" minOccurs="0" maxOccurs="1" /></xs:sequence></xs:complexType></xs:element><xs:complexType name="xslt_transforms"><xs:sequence><xs:element name="workflow_command" type="workflow_command" minOccurs="1" maxOccurs="unbounded" /></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="gtn_logging_enabled" type="StringBoolean" use="optional" /></xs:complexType><xs:complexType name="workflow_command"><xs:sequence maxOccurs="1" minOccurs="1"><xs:element name="xsl_path" type="xsl_path" minOccurs="1" maxOccurs="1" /><xs:element name="input_path" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="input_filename_regex" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="output_path" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="archive_output" type="StringBoolean" minOccurs="1" maxOccurs="1" /><xs:element name="output_filename_mask" type="output_filename_mask" minOccurs="1" maxOccurs="1" /><xs:element name="verbose" type="StringBoolean" minOccurs="1" maxOccurs="1" /><xs:element name="file_transfer" minOccurs="2" maxOccurs="2"><xs:complexType><xs:sequence><xs:element name="protocol" type="fileTransferTypes" minOccurs="1" maxOccurs="1" /><xs:element name="address" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="username" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="password" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="port" type="FTPPortsAndEmptyString" minOccurs="1" maxOccurs="1" /><xs:element name="remote_directory" type="xs:string" minOccurs="1" maxOccurs="1" /></xs:sequence><xs:attribute name="direction" type="direction" use="required" /></xs:complexType></xs:element><xs:element name="no_bom" type="no_bom" minOccurs="0" maxOccurs="1" /></xs:sequence><xs:attribute name="name" type="xs:string" use="required" /></xs:complexType><xs:simpleType name="output_filename_mask"><xs:restriction base="xs:string"><xs:pattern value=".*.(txt|TXT)" /></xs:restriction></xs:simpleType><xs:simpleType name="xsl_path"><xs:restriction base="xs:string"><xs:pattern value=".*.(xsl|XSL|XSLT|xslt)" /></xs:restriction></xs:simpleType><xs:simpleType name="direction"><xs:restriction base="xs:string"><xs:pattern value="[Ii][Nn]" /><xs:pattern value="[Oo][Uu][Tt]" /></xs:restriction></xs:simpleType><xs:simpleType name="fileTransferTypes"><xs:restriction base="xs:string"><xs:pattern value="[Re][Ee][Mm][Oo][Tt][Ee]" /><xs:pattern value="[Ff][Tt][Pp]" /><xs:pattern value="" /><xs:pattern value="[Nn][Oo][Nn][Ee]" /></xs:restriction></xs:simpleType><xs:complexType name="no_bom"><xs:simpleContent><xs:extension base="StringBooleanWithEmptyString"><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="owner" type="xs:string" use="required" /><xs:attribute name="TFS" type="xs:nonNegativeInteger" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:schema>', N'N', N'N')
, (4000, CAST(N'2018-10-16T15:07:31.220' AS DateTime), N'Product Integration', N'GenericFileExport', N'/configuration/common/integration/outbound/file_definitions/workflow_command', N'ProductIntegrationValidations.dll', N'GenericFileExport', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified"><xs:element name="configuration"><xs:complexType mixed="true"><xs:sequence maxOccurs="unbounded"><xs:element name="workflow_command" type="workflow_command" minOccurs="1" maxOccurs="unbounded" /></xs:sequence></xs:complexType></xs:element><xs:complexType name="workflow_command"><xs:sequence maxOccurs="1" minOccurs="1"><xs:element name="config" type="config" minOccurs="1" maxOccurs="1" /><xs:choice minOccurs="1" maxOccurs="1"><xs:element name="name" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="type" type="xs:string" minOccurs="1" maxOccurs="1" /></xs:choice><xs:choice minOccurs="1" maxOccurs="1"><xs:element name="name" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="type" type="xs:string" minOccurs="1" maxOccurs="1" /></xs:choice><xs:element name="format" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="file_transfer" minOccurs="1" maxOccurs="1"><xs:complexType><xs:sequence maxOccurs="1" minOccurs="1"><xs:element name="protocol" type="fileTransferTypeFTPandNull" minOccurs="1" maxOccurs="1" /><xs:element name="address" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="username" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="password" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="port" type="FTPPortsAndEmptyString" minOccurs="1" maxOccurs="1" /><xs:element name="remote_directory" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="save_directory" type="xs:string" minOccurs="0" maxOccurs="1" /></xs:sequence></xs:complexType></xs:element><xs:element name="verbose" type="StringBoolean" minOccurs="0" maxOccurs="1" /><xs:element name="pre_workflow_sql" minOccurs="1" maxOccurs="1"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="type" type="pre_workflow_sql_type" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="post_workflow_sql" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="use_integration_db" type="use_integration_db" minOccurs="0" maxOccurs="1" /></xs:sequence><xs:attribute name="name" type="xs:string" use="required" /></xs:complexType><xs:simpleType name="fileTransferTypeFTPandNull"><xs:restriction base="xs:string"><xs:pattern value="[Ff][Tt][Pp]" /><xs:pattern value="" /></xs:restriction></xs:simpleType><xs:simpleType name="pre_workflow_sql_type"><xs:restriction base="xs:string"><xs:pattern value="[p][a][r][a][m][s]" /></xs:restriction></xs:simpleType><xs:simpleType name="config"><xs:restriction base="xs:string"><xs:pattern value=".*.(xml|XML)" /></xs:restriction></xs:simpleType><xs:complexType name="use_integration_db"><xs:simpleContent><xs:extension base="StringBoolean"><xs:attribute name="owner" type="xs:string" use="required" /><xs:attribute name="release" type="xs:decimal" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:schema>', N'N', N'N')
, (4000, CAST(N'2018-10-16T15:07:31.220' AS DateTime), N'Product Integration', N'GenericFileTransfer', N'/configuration/common/integration/generic_file_transfer', N'ProductIntegrationValidations.dll', N'GenericFileTransfer', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified"><xs:element name="configuration"><xs:complexType mixed="true"><xs:sequence maxOccurs="1"><xs:element name="generic_file_transfer" type="generic_file_transfer" minOccurs="0" maxOccurs="1" /></xs:sequence></xs:complexType></xs:element><xs:complexType name="generic_file_transfer"><xs:sequence><xs:element name="workflow_command" type="workflow_command" minOccurs="1" maxOccurs="unbounded" /></xs:sequence><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="owner" type="xs:string" use="required" /></xs:complexType><xs:complexType name="workflow_command"><xs:sequence maxOccurs="1" minOccurs="1"><xs:element name="protocol" type="protocol" minOccurs="1" maxOccurs="1" /><xs:element name="direction" type="direction" minOccurs="1" maxOccurs="1" /><xs:element name="local_path" type="ElementWithReleaseAndOwnerAttribute" minOccurs="1" maxOccurs="1" /><xs:element name="remote_path" type="ElementWithReleaseAndOwnerAttribute" minOccurs="1" maxOccurs="1" /><xs:element name="file_name_regex" type="ElementWithReleaseAndOwnerAttribute" minOccurs="1" maxOccurs="1" /><xs:element name="retries" type="IntegerValue" minOccurs="1" maxOccurs="1" /><xs:element name="overwrite_existing" type="StringBooleanValueWithEmptyString" minOccurs="1" maxOccurs="1" /><xs:element name="archive_files" type="StringBooleanValueWithEmptyString" minOccurs="1" maxOccurs="1" /><xs:element name="transfer_type" type="transfer_type" minOccurs="1" maxOccurs="1" /><xs:element name="connection_mode" type="connection_mode" minOccurs="1" maxOccurs="1" /><xs:element name="address" type="ElementWithReleaseAndOwnerAttribute" minOccurs="1" maxOccurs="1" /><xs:element name="username" type="ElementWithReleaseAndOwnerAttribute" minOccurs="1" maxOccurs="1" /><xs:element name="password" type="ElementWithReleaseAndOwnerAttribute" minOccurs="1" maxOccurs="1" /><xs:element name="port" type="ElementWithReleaseAndOwnerAttribute" minOccurs="1" maxOccurs="1" /><xs:element name="webservice_location" type="ElementWithReleaseAndOwnerAttribute" minOccurs="0" maxOccurs="1" /><xs:element name="fromaddress" type="ElementWithReleaseAndOwnerAttribute" minOccurs="0" maxOccurs="1" /><xs:element name="toaddress" type="ElementWithReleaseAndOwnerAttribute" minOccurs="0" maxOccurs="1" /><xs:element name="subject" type="ElementWithReleaseAndOwnerAttribute" minOccurs="0" maxOccurs="1" /><xs:element name="keep_source_file" type="StringBooleanValueWithEmptyString" minOccurs="1" maxOccurs="1" /><xs:element name="batch_size" type="IntegerValue" minOccurs="1" maxOccurs="1" /></xs:sequence><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="owner" type="xs:string" use="required" /><xs:attribute name="name" type="xs:string" use="required" /></xs:complexType><xs:complexType name="protocol"><xs:simpleContent><xs:extension base="fileTransferTypes"><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="owner" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType><xs:complexType name="StringBooleanValueWithEmptyString"><xs:simpleContent><xs:extension base="StringBooleanWithEmptyString"><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="owner" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType><xs:complexType name="direction"><xs:simpleContent><xs:extension base="DirectionType"><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="owner" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType><xs:complexType name="transfer_type"><xs:simpleContent><xs:extension base="TransferTypeName"><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="owner" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType><xs:complexType name="IntegerValue"><xs:simpleContent><xs:extension base="xs:nonNegativeInteger"><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="owner" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType><xs:complexType name="connection_mode"><xs:simpleContent><xs:extension base="ConnectionTypeName"><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="owner" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType><xs:simpleType name="DirectionType"><xs:restriction base="xs:string"><xs:pattern value="[iI][nN][Bb][Oo][Uu][Nn][Dd]" /><xs:pattern value="[Ou][Uu][Tt][Bb][Oo][Uu][Nn][Dd]" /></xs:restriction></xs:simpleType><xs:simpleType name="fileTransferTypes"><xs:restriction base="xs:string"><xs:pattern value="[Re][eE][Mo][Tt][Ee]" /><xs:pattern value="[Ff][Tt][Pp]" /><xs:pattern value="[Gg][Tt][Mm][Aa][Ii][Ll]" /></xs:restriction></xs:simpleType><xs:simpleType name="TransferTypeName"><xs:restriction base="xs:string"><xs:pattern value="[Bb][Ii][Nn][Aa][Rr][Yy]" /><xs:pattern value="[Aa][Ss][Cc][Ii][Ii]" /></xs:restriction></xs:simpleType><xs:simpleType name="ConnectionTypeName"><xs:restriction base="xs:string"><xs:pattern value="[Aa][Cc][Tt][Ii][Vv][Ee]" /><xs:pattern value="[Pp][Aa][Ss][Ss][Ii][Vv][Ee]" /></xs:restriction></xs:simpleType><xs:complexType name="PortElementWithReleaseAndOwnerAttributes"><xs:simpleContent><xs:extension base="FTPPortsAndEmptyString"><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="owner" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType><xs:complexType name="ElementWithReleaseAndOwnerAttribute"><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="owner" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:schema>', N'N', N'N')
, (4000, CAST(N'2018-10-16T15:07:31.220' AS DateTime), N'Product Integration', N'GenericFileImport', N'/configuration/common/integration/inbound/file_definitions/workflow_command', N'ProductIntegrationValidations.dll', N'GenericFileImport', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified"><xs:element name="configuration"><xs:complexType mixed="true"><xs:sequence maxOccurs="unbounded"><xs:element name="workflow_command" type="workflow_command" minOccurs="1" maxOccurs="unbounded" /></xs:sequence></xs:complexType></xs:element><xs:complexType name="workflow_command"><xs:sequence maxOccurs="1" minOccurs="1"><xs:element name="emails" minOccurs="1" maxOccurs="unbounded"><xs:complexType><xs:sequence maxOccurs="1" minOccurs="1"><xs:element name="send_email" minOccurs="1" maxOccurs="1"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="success" type="StringBoolean" use="optional" /><xs:attribute name="failure" type="StringBoolean" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="message_from" type="EmailID" minOccurs="1" maxOccurs="1" /><xs:element name="message_to" type="EmailID" minOccurs="1" maxOccurs="unbounded" /><xs:element name="message_cc" type="EmailIDAndEmptyString" minOccurs="0" maxOccurs="unbounded" /><xs:element name="message_subject" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="message_body" type="xs:string" minOccurs="1" maxOccurs="1" /></xs:sequence></xs:complexType></xs:element><xs:element name="verbose" type="StringBoolean" minOccurs="0" maxOccurs="1" /><xs:element name="config" type="config" minOccurs="1" maxOccurs="1" /><xs:element name="name" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="file_transfer" minOccurs="1" maxOccurs="1"><xs:complexType><xs:sequence maxOccurs="1" minOccurs="1"><xs:element name="protocol" type="fileTransferTypes" minOccurs="1" maxOccurs="1" /><xs:element name="address" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="username" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="password" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="port" type="NonNegativeIntegerAndEmptyString" minOccurs="1" maxOccurs="1" /><xs:element name="remote_directory" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="save_directory" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="file_name_regex" type="xs:string" minOccurs="1" maxOccurs="1" /></xs:sequence></xs:complexType></xs:element><xs:element name="pre_workflow_sql" minOccurs="1" maxOccurs="1"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="type" type="pre_workflow_sql_type" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="post_workflow_sql" type="xs:string" minOccurs="1" maxOccurs="1" /><xs:element name="archive_invalid_files" type="StringBooleanWithAttribute" minOccurs="0" maxOccurs="1" /><xs:element name="fail_workflow_on_import_failure" type="StringBooleanWithAttribute" minOccurs="0" maxOccurs="1" /><xs:element name="use_integration_db" type="StringBooleanWithAttribute" minOccurs="0" maxOccurs="1" /></xs:sequence><xs:attribute name="name" type="xs:string" use="required" /></xs:complexType><xs:simpleType name="EmailIDAndEmptyString"><xs:restriction base="xs:string"><xs:pattern value="[^@]+@[^\.]+\..+" /><xs:pattern value="" /></xs:restriction></xs:simpleType><xs:simpleType name="config"><xs:restriction base="xs:string"><xs:pattern value=".*.(xml|XML)" /></xs:restriction></xs:simpleType><xs:simpleType name="fileTransferTypes"><xs:restriction base="xs:string"><xs:pattern value="[Ff][Tt][Pp]" /><xs:pattern value="" /><xs:pattern value="[Nn][Oo][Nn][Ee]" /></xs:restriction></xs:simpleType><xs:simpleType name="pre_workflow_sql_type"><xs:restriction base="xs:string"><xs:pattern value="[p][a][r][a][m][s]" /></xs:restriction></xs:simpleType><xs:complexType name="StringBooleanWithAttribute"><xs:simpleContent><xs:extension base="StringBoolean"><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:schema>', N'N', N'N')
, (4000, CAST(N'2019-01-15T16:24:26.070' AS DateTime), N'PGA', N'PGA', N'configuration/pga', N'', N'', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified"><xs:element name="configuration"><xs:complexType><xs:all><xs:element name="pga"><xs:annotation><xs:documentation>
              PGA section. Contains configuration for fxdPGA.aspx, fxdPGAMapping.aspx, and back-end PGA processes.
            </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="catair" minOccurs="0"><xs:annotation><xs:documentation>
                    PGA catair configuration used by fxdPGA and fxdEntry back-end processes.
                  </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="disable_multiple_roles" type="xs:string" minOccurs="0" default=""><xs:annotation><xs:documentation>
                          CSV list of any agency that does not support the use of PG55 where multiple roles can be added when adding entity map records.

                          When inserting an Entity map record to link Entities to Entry for Cargo Release/PGA Product/PGA Importer Docs, or Inspection. If the agency doesn''t support the use of PGA55, each Entity will be added to map by role and each Individual will be added to map by role.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="unflagged_agencies" minOccurs="0"><xs:annotation><xs:documentation>
                          This is deprecated. Column in tmdUSPGASettings named OverridePGAFlags replaced this.
                        </xs:documentation></xs:annotation><xs:complexType><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element><xs:element name="agency_share_detail" minOccurs="0" default="N"><xs:annotation><xs:documentation>
                          Used to allow support for multiple PGA Headers to share the same PGAProducts and details from fxdPGA.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="mapping"><xs:annotation><xs:documentation>
                    Full configuration for ~/PGA/fxdPGAMapping.aspx.
                  </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="tabs" minOccurs="0" maxOccurs="unbounded"><xs:annotation><xs:documentation>
                          Represents a tabstrip that gets populated on fxdPGAMapping.aspx. Each tabstrip can contain an infinite amount of tabs, as well as child tabstrips, as well.
                        </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="tab" type="tabType" minOccurs="1" maxOccurs="unbounded" /></xs:sequence><xs:attribute name="application" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                              Source application the tab is associated to.
                            </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:string" use="optional" /></xs:complexType></xs:element><xs:element name="pga_validations_override" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>
                    This section is used to override validations found in PGAValidations.xml.
                  </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="validation_override" minOccurs="0"><xs:annotation><xs:documentation>
                          Type of validation to be overridden. Essentially, the validations will be cleared out from USPGAValidationWarnings table (tmd/txd depending on source app) if ''disable="Y"''.
                        </xs:documentation></xs:annotation><xs:complexType><xs:attribute name="source_app" type="xs:string" use="required"><xs:annotation><xs:documentation>
                              Source application of the validation(s) to be overridden.
                            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disable" type="xs:string" use="optional" default="N"><xs:annotation><xs:documentation>
                              Disables validation SQL within innertext of pga validation. Must be defined and set to Y to disable.
                            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="validation_type" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                              WARNING/ERROR overrides the validation type. Type of validation that gets overridden.
                            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="custom_error_message" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                              Will replace standard error message with the custom error message defined.
                            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="custom_error_description" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                              Will replace standard error description with the custom error message defined.
                            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="agency" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                              Filters down the validations to get overridden based on agency. If not defined, the logic doesn''t do the filtering.
                            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="program" type="xs:string" use="required"><xs:annotation><xs:documentation>
                              Filters down the validations to get overridden based on program. If not defined, the logic doesn''t do the filtering.
                            </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element><xs:element name="enable_pga_spreadsheet_upload" minOccurs="0"><xs:annotation><xs:documentation>
                    Enables spreadsheet extract/upload functionality for Import PGA form on fxdPGA.aspx.
                  </xs:documentation></xs:annotation><xs:complexType><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:string" use="optional" /><xs:attribute name="pgaproductidentifier" type="YesNo" use="optional" default="N"><xs:annotation><xs:documentation>
                        Enables spreadsheet extract/upload functionality for the PGA Product Identifier formview.
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="itemidentity" type="YesNo" use="optional" default="N"><xs:annotation><xs:documentation>
                        Enables spreadsheet extract/upload functionality for the Item Identity formview.
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="affirmation" type="YesNo" use="optional" default="N"><xs:annotation><xs:documentation>
                        Enables spreadsheet extract/upload functionality for the Affirmation formview.
                      </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="agencies_no_add_qty" minOccurs="0"><xs:annotation><xs:documentation>
                    Comma separated list of agency codes for which quantities should not be added when consolidating.
                  </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="tfs" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="pga_grid_queries"><xs:annotation><xs:documentation>
                    Queries used to populate PGA Radgrid on the PGA screen and the PGA control by SourceApplication (fxdPGA.aspx). Columns from PGAMap table that should always be included(PGAMapGUID, PGAGUID, PGAHeaderGUID, GCProductGUID, AgencyCode, HTSNum, Status).
Without these columns, the screen will not function as expected.
                  </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="pga_query"><xs:annotation><xs:documentation>
                          Single grid query for a source application.
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="source_app" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                  Source application for the grid (SourceApplication url parameter on fxdPGA.aspx).
                                </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="template_source_app" type="xs:string" use="optional" default=""><xs:annotation><xs:documentation>
                                  When provided, user can see/click "Save Template As" to create a template based on selected PGAHeader.
                                </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="page_name" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                                  Changes page name.
                                </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="display_template_dropdown" type="YesNo" use="optional"><xs:annotation><xs:documentation>
                                  Allows user to see PGA template dropdown on PGA screen. It allow user to populate PGA screen with template selected. This is ignored when source_app is a template type. 
                                </xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:string" use="optional" /></xs:complexType></xs:element><xs:element name="validation_ignore_status" minOccurs="0"><xs:annotation><xs:documentation>
                    Populate with statuses that should be ignored when validating. Default: VALIDATED,FINALIZED,RESPONSE RECEIVED
                  </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="no_correction_after_accepted" minOccurs="0" default="FDA"><xs:annotation><xs:documentation>
                    Config to determine if an agency allows PGA Correction after release of Entry.
                  </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="pga_after_save" minOccurs="0"><xs:annotation><xs:documentation>
                    After save section for fxdPGA.aspx.
                  </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="after_save_query" minOccurs="0"><xs:annotation><xs:documentation>
                          Inner text is after save SQL query that is run after save on fxdPGA.aspx. Allows queries to be ran after saving PGAHeader. Queries can be writing around PGAHeaderGUID. @PartnerID and @PGAHeaderGUID are the only allowed attributes. There 
	can be multiple queries with the same source, but each query should have a unique id. 
                        </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="id" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                  Needs to be unique so you can identify issues with the query in the logs.
                                </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="source_app" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                  Source app the PGA Header after save runs for.
                                </xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:string" use="optional" /></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:all></xs:complexType></xs:element><xs:complexType name="tabsType"><xs:sequence><xs:element name="tab" type="tabType" minOccurs="0" maxOccurs="unbounded" /></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:string" use="optional" /></xs:complexType><xs:complexType name="field" abstract="true" /><xs:complexType name="tabType"><xs:complexContent><xs:extension base="field"><xs:choice maxOccurs="unbounded"><xs:element name="filters" minOccurs="0"><xs:annotation><xs:documentation>
                List of throttling filters that will prevent the current tab''s grid from loading until the defined columns are filtered on. There can be more than one defined.
              </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="filter" maxOccurs="unbounded"><xs:annotation><xs:documentation>
                      Throttling filter that prevents the current tab''s grid from loading until the columnname (defined by ''name'' attribute) is filtered.
                    </xs:documentation></xs:annotation><xs:complexType><xs:attribute name="name" type="xs:string" use="required"><xs:annotation><xs:documentation>
                          Name of column on grid that is filtered upon.
                        </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="tabs" type="tabsType" minOccurs="0" maxOccurs="unbounded" /></xs:choice><xs:attribute name="id" type="xs:string" use="optional"><xs:annotation><xs:documentation>
              Unique identifier for a tab. Must be defined and must be unique, if the tab is a data typed tab.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="name" type="xs:string" use="optional"><xs:annotation><xs:documentation>
              The literal text that will be rendered on the tab on-screen. Must be defined if the tab is a data typed tab.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="application" type="xs:string" use="optional"><xs:annotation><xs:documentation>
              The application the tab is under. Generally, this is the product/process that is used. Example: GC.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="type" use="optional" default="data"><xs:annotation><xs:documentation>
              This attribute must be defined as ''default="data"'' if the tab has a grid associated with it. This is the only value for this attribute besides blank that is used. For tabs that just have a child ''tabs'' section, leave this attribute off of it.
            </xs:documentation></xs:annotation><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="" /><xs:pattern value="data" /></xs:restriction></xs:simpleType></xs:attribute><xs:attribute name="allow_grid_filter" type="xs:string" use="optional" default="N"><xs:annotation><xs:documentation>
              Shows the radgrid filtering for the tab''s associated radgrid. If this attribute isn''t set to Y or isn''t there, then filtering won''t show. This also allows to validation/extract functionality to use the radgrid filters to insert into #tmpPGAExport to get filtered transactions in the backend. Grid SQL would then need to check to see if #tmpPGAExport exists and then join to this if you are creating your own custom tab.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="frozen_column_count" use="optional"><xs:annotation><xs:documentation>
              Determines the number of columns on the grid will not move when scrolling horizontally. The value must be a positive number.
            </xs:documentation></xs:annotation><xs:simpleType><xs:restriction base="xs:integer"><xs:minInclusive value="1" /></xs:restriction></xs:simpleType></xs:attribute><xs:attribute name="table" type="xs:string" use="optional"><xs:annotation><xs:documentation>
              Deprecated.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="agency" type="xs:string" use="optional"><xs:annotation><xs:documentation>
              The agency code that the tab is associated to. This must be filled in if this a data typed tab, as a lot of core screen functionality pulling from PGAGridQueries.xml, among other things, is dependant on this. This a sql parameter of the same name that gets populated with the value of this for any of its associated SQL queries (grid_query, export_query, process_query, pga_query).
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="program" type="xs:string" use="optional"><xs:annotation><xs:documentation>
              The program code that the tab is associated to. This must be filled in if this a data typed tab, as a lot of core screen functionality pulling from PGAGridQueries.xml, among other things, is dependant on this. This a sql parameter of the same name that gets populated with the value of this for any of its associated SQL queries (grid_query, export_query, process_query, pga_query).
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="pga" type="xs:string" use="optional" default=""><xs:annotation><xs:documentation>
              The PGA Indicator that the tab is associated to. This a sql parameter of the same name that gets populated with the value of this for any of its associated SQL queries (grid_query, export_query, process_query, pga_query).
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="reporting" type="xs:string" use="optional"><xs:annotation><xs:documentation>
              The reporting code that the tab is associated to. This a sql parameter of the same name that gets populated with the value of this for any of its associated SQL queries (grid_query, export_query, process_query, pga_query).
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="hidden_columns" type="xs:string" use="optional"><xs:annotation><xs:documentation>
              This needs to be defined if this a data typed tab. For any GUIDs that need to be in the grid for back-end purposes, those need to be defined via CSV list in this attribute.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_spreadsheet_import" type="YesNo" use="optional" default="N"><xs:annotation><xs:documentation>
              When set to Y, both the Extract and Upload buttons appear above the grid.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_date_filter" type="YesNo" use="optional" default="N"><xs:annotation><xs:documentation>
              When set to Y, the date filter functionality appears above the grid.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="date_filter_day_range" use="optional"><xs:annotation><xs:documentation>
              Defines how many days ago the date filter box should filter by (trims down the number of dates that shows in the box).
            </xs:documentation></xs:annotation><xs:simpleType><xs:restriction base="xs:integer"><xs:minInclusive value="1" /></xs:restriction></xs:simpleType></xs:attribute><xs:attribute name="do_not_map" type="xs:string" use="optional" default="N"><xs:annotation><xs:documentation>
              CSV list of column names where the default value for the column is used instead of the actual value of the column on-screen during deletion.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="checkbox_column_on_grid" type="YesNo" use="optional" default="N"><xs:annotation><xs:documentation>
              If set to Y, the current grid will have a checkbox column. This shouldn''t be touched.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="open_export_window" type="YesNo" use="optional" default="N"><xs:annotation><xs:documentation>
              If set to Y, an extract radwindow will pop up when clicking ''Extract'', allowing the spreadsheet extract to filter down on Agency/Program numbers. This shouldn''t be touched.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="export_hidden_columns" type="xs:string" use="optional"><xs:annotation><xs:documentation>
              This needs to be defined if you''ve enabled ''allow_spreadsheet_import''. For any GUIDs that need to be in the grid extract SQL for back-end purposes, those need to be defined via CSV list in this attribute, so they will be hidden in the spreadsheet extract.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="import_to_table" type="xs:string" use="optional"><xs:annotation><xs:documentation>
              This needs to be defined if you''ve enabled ''allow_spreadsheet_import''.This determines which table the spreadsheet upload for the grid will insert data into (temp table).
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="pga_link_types" type="xs:string" use="optional"><xs:annotation><xs:documentation>
              When defined, use ''Import'', ''Export'', or ''Import,Export''. This determines which tabs appear on fxdPGA.aspx when opening it from a record in the grid.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="allow_validation" type="xs:string" use="optional" default="N"><xs:annotation><xs:documentation>
              Determines whether the Validation button shows above the radgrid. This will run validations against records in the grid, as long as they have the proper identifier columns to do so, similarly to how validations are run on fxdPGA.aspx.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="readonly" type="YesNo" use="optional" default="N"><xs:annotation><xs:documentation>
              If set to Y, the tab''s contents will be in readonly mode, essentially meaning the grid can only be looked at and actions can''t be taken against the grid data.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="gc_populate_mapping_table" type="YesNo" use="optional" default="N"><xs:annotation><xs:documentation>
              If set to Y, clicking the tab will automatically re-populate tmdHTSPGAMapping, regardless of other circumstances. Use with caution, as this will truncate and re-load tmdHTSPGAMapping on each tab click.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="export_file_name" type="xs:string" use="optional" default="N"><xs:annotation><xs:documentation>
              Name of the excel spreadsheet for the extract on this tab. The following parameters are replaced in-code:
              [PGAIND]
              [AGENCY]
              [AGENCYREPORTING]
              [PROGRAM]
              [DATETIME]
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="gc_template_dropdown" type="xs:string" use="optional" default="N"><xs:annotation><xs:documentation>
              Do not touch. Populates above grid GC template dropdown. GC-specific functionality.
            </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="gc_delete_enabled" type="xs:string" use="optional" default="N"><xs:annotation><xs:documentation>
              Do not touch. Shows delete button above grid. Requires checkbox column to be enabled. GC-specific functionality.
            </xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:complexContent></xs:complexType></xs:schema>', N'N', N'N')
INSERT [dbo].[tbgXSDSchemas] ([PartnerID], [EffDate], [ProductName], [SchemaName], [SchemaXPath], [Assembly], [ClassName], [XSDSchema], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-01-15T16:24:26.077' AS DateTime), N'Entry Verification', N'Import', N'configuration/import', N'', N'', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified"><xs:element name="configuration"><xs:annotation><xs:documentation>
				This is the root configuration element of the Partner configuration file.
			</xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="import"><xs:annotation><xs:documentation>
							This is the main configuration element for all of Entry Verification.
						</xs:documentation></xs:annotation><xs:complexType><xs:choice maxOccurs="unbounded"><xs:element name="entry_packet" minOccurs="0"><xs:annotation><xs:documentation>
										@TODO
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="doc_types"><xs:annotation><xs:documentation>
													@TODO
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="document"><xs:annotation><xs:documentation>
																@TODO
															</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="display" type="xs:string" use="required"><xs:annotation><xs:documentation>
																				This is the display text for the entry packet.
																			</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="abbvr" type="xs:string" use="required"><xs:annotation><xs:documentation>
																				This is the abbreviation shown for the display text.
																			</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="email_subject" type="xs:string"><xs:annotation><xs:documentation>
													The inner text of this is the email subject text for the entry packet.
												</xs:documentation></xs:annotation></xs:element><xs:element name="email_bcc"><xs:annotation><xs:documentation>
													@TODO
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="address"><xs:annotation><xs:documentation>
																@TODO
															</xs:documentation></xs:annotation></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="email_body" type="xs:string"><xs:annotation><xs:documentation>
													This is the email body. It is typically a CDATA block and can contain the following variables:
													Department: @EP_EMAIL_DEPARTMENT@
													Employee Contact: @EP_EMAIL_EMPLOYEECONTACT@
													Customs Entry Number: @EP_EMAIL_CUSTOMSENTRYNUM@
													Invoice Number: @EP_EMAIL_INVOICENUM@
													Courier Service: @EP_EMAIL_COURIER@
													Master Airway Bill: @EP_EMAIL_MAB@
													House Airway Bill: @EP_EMAIL_HAB@
												</xs:documentation></xs:annotation></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="notes_required_on_status_change"><xs:annotation><xs:documentation>
										Yes/No value on whether an entry status change requires a note.
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="notes_required_on_assignto_change" minOccurs="0"><xs:annotation><xs:documentation>
										Yes/No value on whether an entry assignee user change requires a note.
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="location_of_global_classification_db"><xs:annotation><xs:documentation>
										Prefix of the location of the GC database.
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="broker_validation_table" type="xs:string"><xs:annotation><xs:documentation>
										The main United States EV validation table, this is typically something like ''txdUSEntryVisibility''.
									</xs:documentation></xs:annotation></xs:element><xs:element name="CA_validation_table" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
										The main Canada EV validation table, this is typically something like ''txdUSEntryVisibility''.
									</xs:documentation></xs:annotation></xs:element><xs:element maxOccurs="unbounded" name="get_fields_from_supplemental"><xs:annotation><xs:documentation>
										This configuration element is the parent of the elements that define the fields from the supplemental tables.
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="supplemental_table"><xs:annotation><xs:documentation>
													The name of the table whether the supplemental fields are.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="optional"><xs:annotation><xs:documentation>
																	Country that the supplemental field applies to.
																</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="fieldname"><xs:annotation><xs:documentation>
													Supplemental field name to join to the broker table.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="optional"><xs:annotation><xs:documentation>
																	Country that the supplemental field applies to.
																</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="joinclause"><xs:annotation><xs:documentation>
													SQL JOIN clause, typically starts with ''LEFT JOIN @SUPPLEMENTALTABLE@ ON ...''
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="optional"><xs:annotation><xs:documentation>
																	Country that the supplemental field applies to.
																</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence><xs:attribute name="country" type="ISOCountryCode" use="optional"><xs:annotation><xs:documentation>
												Country that the supplemental field applies to.
											</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="owner" type="xs:string" use="optional" /></xs:complexType></xs:element><xs:element name="entry_visibility_country_list" type="xs:string"><xs:annotation><xs:documentation>
										Comma-delimited list of country codes of the countries in use by this partner. Example: ''US,CA''.
									</xs:documentation></xs:annotation></xs:element><xs:element name="liquidation_query" type="xs:string"><xs:annotation><xs:documentation>
										This is the query to build the grid under the Liquidation tab on the Entry Summmary page.
									</xs:documentation></xs:annotation></xs:element><xs:element name="brokers"><xs:annotation><xs:documentation>
										Your broker table will be the consolidated broker table or view.
										This section can be used to allow fields to be highlighted on the Broker Data tab of the
										Entry Validation page when the broker field name doesn''t match the harmonized field name.
										A &lt;broker&gt; section can be added for each broker that the client uses, with a &lt;broker_view&gt; section inside for each broker table used by the broker. A list of &lt;field&gt; items is used to define the pairs of harmonized field names and corresponding broker field names.
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="broker"><xs:annotation><xs:documentation>
													A &lt;broker&gt; section can be added for each broker that the client uses, with a &lt;broker_view&gt; section inside for each broker table used by the broker. A list of &lt;field&gt; items is used to define the pairs of harmonized field names and corresponding broker field names.
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="broker_view"><xs:annotation><xs:documentation>
																@TODO
															</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="broker_table"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:element><xs:element name="validation_table" type="xs:string"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:element><xs:element name="fields"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="field"><xs:annotation><xs:documentation>
																						@TODO
																					</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="validation_field" type="xs:string"><xs:annotation><xs:documentation>
																									@TODO
																								</xs:documentation></xs:annotation></xs:element><xs:element name="broker_field" type="xs:string"><xs:annotation><xs:documentation>
																									@TODO
																								</xs:documentation></xs:annotation></xs:element></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:sequence><xs:attribute name="name" type="xs:string" use="required"><xs:annotation><xs:documentation>
															This is the name of the broker that this configuration section applies to.
														</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="broker_communication"><xs:annotation><xs:documentation>
										@TODO
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="broker" maxOccurs="unbounded"><xs:annotation><xs:documentation>
													@TODO
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="entry_query" type="xs:string"><xs:annotation><xs:documentation>
																@TODO
															</xs:documentation></xs:annotation></xs:element></xs:sequence><xs:attribute name="name" type="xs:string" use="required"><xs:annotation><xs:documentation>
															This is the name of the broker that this configuration section applies to.
														</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="entry_override"><xs:annotation><xs:documentation>
										@TODO
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="override" maxOccurs="unbounded"><xs:annotation><xs:documentation>
													@TODO
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="tablename" type="xs:string"><xs:annotation><xs:documentation>
																@TODO
															</xs:documentation></xs:annotation></xs:element><xs:element name="fieldname"><xs:annotation><xs:documentation>
																@TODO
															</xs:documentation></xs:annotation></xs:element><xs:element name="alias"><xs:annotation><xs:documentation>
																@TODO
															</xs:documentation></xs:annotation></xs:element></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="hidden_columns"><xs:annotation><xs:documentation>
										Comma-delimited list of columns that should not appear in the grids.
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="show_summary_link"><xs:annotation><xs:documentation>
										If this tag is set to Y, the link directs to the Entry Summary screen.  If the tag is set to N, then the link becomes a circular link back to a parameter-free fxdEntryValidation.aspx
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="show_errorreport_link"><xs:annotation><xs:documentation>
										This will show or hide the Error Report link on the Entry Summary page.
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="show_lineoverview_link"><xs:annotation><xs:documentation>
										This will show or hide the Line Overview link on the Entry Summary page.
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="show_closediscrepancies_link"><xs:annotation><xs:documentation>
										This will show or hide the Close Discrepancies link on the Entry Summary page.
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="show_override_link"><xs:annotation><xs:documentation>
										This will show or hide the Override link on the Entry Summary page.
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="set_numofday_for_complete_summary_status" minOccurs="0"><xs:annotation><xs:documentation>
										This value is used on EV Summary page and determine for how many days the ''COMPLETE'' status should showup in a dropdown
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:unsignedInt"><xs:attribute name="owner" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element maxOccurs="unbounded" name="group_view_sql"><xs:annotation><xs:documentation>
										The following variables can be used in the group_view_sql and export_view_sql validation screen SQL blocks:

										@validationgroupwhere@ - meant to be used in subselect clauses
										- if a validation group is selected, this will be replaced with
										WHERE PartnerID = (partnerid) AND ValidationGroup = ''(validation group)''
										- if no validation group
										WHERE PartnerID = (partnerid)
										- if a businessunit is selected from the dropdown, either one of those will be appended with
										AND IORNum = ''(business unit)''

										@validationgroup@
										- if a validation group is selected, this will be replaced with
										AND error.ValidationGroup = ''(validation group)''
										- if none selected, will be replaced as blank

										@businessunit@
										- if a business unit is selected from the dropdown
										AND IORNum = ''(business unit)''
										- if none selected, will be replaced as blank

										@validationtype@ - only works in export_view_sql, NOT group_view_sql (since if a type is selected, it switches to type_view_sql)
										- if a validation type is selected, this will be replaced with
										AND error.ValidationType = ''(validation type)''
										- if none selected, will be replaced as blank

										type_view_sql will automatically handle all validation group and validation type changes

										GROUP BY statement can be used in group_view_sql to group error records

										@validationtable@, @gcdb@, and @partnerid@ will be replaced in all queries

										The "product_num_alias" attribute can be added to the group_view_sql and type_view_sql elements, and should denote the alias you are using for the ProductNum column. This is ONLY needed if you are selecting ProductNum in the query and aliasing it as anything other than "ProductNum". The code behind sets the default if the config is not required to "ProductNum". This is needed for sorting on the ProductNum column to work correct.
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
														The country code for this section.
													</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="product_num_alias" type="xs:string" use="optional"><xs:annotation><xs:documentation>
														This attribute can be optionally added to the group_view_sql and type_view_sql elements, and should denote the alias you are using for the ProductNum column. This is ONLY needed if you are selecting ProductNum in the query and aliasing it as anything other than "ProductNum". The code behind sets the default if the config is not required to "ProductNum". This is needed for sorting on the ProductNum column to work correct.
													</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element maxOccurs="unbounded" name="type_view_sql"><xs:annotation><xs:documentation>
										The following variables can be used in the group_view_sql and export_view_sql validation screen SQL blocks:

										@validationgroupwhere@ - meant to be used in subselect clauses
										- if a validation group is selected, this will be replaced with
										WHERE PartnerID = (partnerid) AND ValidationGroup = ''(validation group)''
										- if no validation group
										WHERE PartnerID = (partnerid)
										- if a businessunit is selected from the dropdown, either one of those will be appended with
										AND IORNum = ''(business unit)''

										@validationgroup@
										- if a validation group is selected, this will be replaced with
										AND error.ValidationGroup = ''(validation group)''
										- if none selected, will be replaced as blank

										@businessunit@
										- if a business unit is selected from the dropdown
										AND IORNum = ''(business unit)''
										- if none selected, will be replaced as blank

										@validationtype@ - only works in export_view_sql, NOT group_view_sql (since if a type is selected, it switches to type_view_sql)
										- if a validation type is selected, this will be replaced with
										AND error.ValidationType = ''(validation type)''
										- if none selected, will be replaced as blank

										type_view_sql will automatically handle all validation group and validation type changes

										GROUP BY statement can be used in group_view_sql to group error records

										@validationtable@, @gcdb@, and @partnerid@ will be replaced in all queries

										The "product_num_alias" attribute can be added to the group_view_sql and type_view_sql elements, and should denote the alias you are using for the ProductNum column. This is ONLY needed if you are selecting ProductNum in the query and aliasing it as anything other than "ProductNum". The code behind sets the default if the config is not required to "ProductNum". This is needed for sorting on the ProductNum column to work correct.
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
														The country code for this section.
													</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="product_num_alias" type="xs:string" use="optional"><xs:annotation><xs:documentation>
														This attribute can be optionally added to the group_view_sql and type_view_sql elements, and should denote the alias you are using for the ProductNum column. This is ONLY needed if you are selecting ProductNum in the query and aliasing it as anything other than "ProductNum". The code behind sets the default if the config is not required to "ProductNum". This is needed for sorting on the ProductNum column to work correct.
													</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element maxOccurs="unbounded" name="compare_view_sql" minOccurs="0"><xs:annotation><xs:documentation>
										THIS IS DEPRECATED
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
														The country code for this section.
													</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="product_num_alias" type="xs:string" use="optional"><xs:annotation><xs:documentation>
														This attribute can be optionally added to the group_view_sql and type_view_sql elements, and should denote the alias you are using for the ProductNum column. This is ONLY needed if you are selecting ProductNum in the query and aliasing it as anything other than "ProductNum". The code behind sets the default if the config is not required to "ProductNum". This is needed for sorting on the ProductNum column to work correct.
													</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element maxOccurs="unbounded" name="export_view_sql"><xs:annotation><xs:documentation>
										The following variables can be used in the group_view_sql and export_view_sql validation screen SQL blocks:

										@validationgroupwhere@ - meant to be used in subselect clauses
										- if a validation group is selected, this will be replaced with
										WHERE PartnerID = (partnerid) AND ValidationGroup = ''(validation group)''
										- if no validation group
										WHERE PartnerID = (partnerid)
										- if a businessunit is selected from the dropdown, either one of those will be appended with
										AND IORNum = ''(business unit)''

										@validationgroup@
										- if a validation group is selected, this will be replaced with
										AND error.ValidationGroup = ''(validation group)''
										- if none selected, will be replaced as blank

										@businessunit@
										- if a business unit is selected from the dropdown
										AND IORNum = ''(business unit)''
										- if none selected, will be replaced as blank

										@validationtype@ - only works in export_view_sql, NOT group_view_sql (since if a type is selected, it switches to type_view_sql)
										- if a validation type is selected, this will be replaced with
										AND error.ValidationType = ''(validation type)''
										- if none selected, will be replaced as blank

										type_view_sql will automatically handle all validation group and validation type changes

										GROUP BY statement can be used in group_view_sql to group error records

										@validationtable@, @gcdb@, and @partnerid@ will be replaced in all queries

										The "product_num_alias" attribute can be added to the group_view_sql and type_view_sql elements, and should denote the alias you are using for the ProductNum column. This is ONLY needed if you are selecting ProductNum in the query and aliasing it as anything other than "ProductNum". The code behind sets the default if the config is not required to "ProductNum". This is needed for sorting on the ProductNum column to work correct.
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
														The country code for this section.
													</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="product_num_alias" type="xs:string" use="optional"><xs:annotation><xs:documentation>
														This attribute can be optionally added to the group_view_sql and type_view_sql elements, and should denote the alias you are using for the ProductNum column. This is ONLY needed if you are selecting ProductNum in the query and aliasing it as anything other than "ProductNum". The code behind sets the default if the config is not required to "ProductNum". This is needed for sorting on the ProductNum column to work correct.
													</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="disabled_harmonized_view_fields" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
										These contain PIPE|DELIMITED lists of fields to exclude from the view tables.
										These tags are 100% optional and NOT required

										In type, group, and export view SQL:
										@validationgroupwhere@
										@validationgroup@
										@validationtype@
										@businessunit@

										these variables are being added/updated for the queries.
									</xs:documentation></xs:annotation></xs:element><xs:element name="disabled_broker_view_fields" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
										These contain PIPE|DELIMITED lists of fields to exclude from the view tables.
										These tags are 100% optional and NOT required

										In type, group, and export view SQL:
										@validationgroupwhere@
										@validationgroup@
										@validationtype@
										@businessunit@

										these variables are being added/updated for the queries.
									</xs:documentation></xs:annotation></xs:element><xs:element name="entry_summary"><xs:annotation><xs:documentation>
										This section specifically applies only to the Entry Summary page.
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="display_fta_analysis"><xs:annotation><xs:documentation>
													@TODO
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="overview_query" type="xs:string"><xs:annotation><xs:documentation>
													The query to configure the grid in the Overview tab.
												</xs:documentation></xs:annotation></xs:element><xs:element name="group_tabs_query" type="xs:string"><xs:annotation><xs:documentation>
													The query to configure the grid in the Groups tab.
												</xs:documentation></xs:annotation></xs:element><xs:element name="group_tabs_query_classification" type="xs:string"><xs:annotation><xs:documentation>
													The query to configure the grid in the Groups tab.
												</xs:documentation></xs:annotation></xs:element><xs:element name="line_overview_query" type="xs:string"><xs:annotation><xs:documentation>
													The query to configure the grid in the Line Overview tab.
												</xs:documentation></xs:annotation></xs:element><xs:element name="notes_display"><xs:annotation><xs:documentation>
													This is the parent element for configuration notes display text and security on Entry Summary.
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="note"><xs:annotation><xs:documentation>
																This is a note tab that can be controlled for the Entry Summary page. Each note has an ID that has a enumerated ''type''. Each type is a different tab on the notes popup.
															</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="securitygroup" type="xs:string"><xs:annotation><xs:documentation>
																			This is a comma-delimited list of the security groups that can see this note''s tab. It is restricted by the enumerated values below.
																		</xs:documentation></xs:annotation></xs:element></xs:sequence><xs:attribute name="id" use="required"><xs:annotation><xs:documentation>
																		This is the special ID of the notes tab. If you''re unsure of what to put here, contact kt_ev.

																		For ''EVCDN'', this is required for the closed discrepancy notes tab to show up on the Entry Summary screen. This should be added if the &lt;notes_required_on_close_discrepancy&gt; element is set to ''Y''. It won''t show up if that element doesn''t exist or is set to ''N'', so it''s safe to have either way.
																	</xs:documentation></xs:annotation><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="EVENO" /><xs:enumeration value="EVLNO" /><xs:enumeration value="EVLXN" /><xs:enumeration value="EVCDN" /><xs:enumeration value="EVVNO" /><xs:enumeration value="EVENO" /><xs:enumeration value="EVGVN" /></xs:restriction></xs:simpleType></xs:attribute><xs:attribute name="title" type="xs:string" use="required"><xs:annotation><xs:documentation>
																		Title of the Notes tab in the notes popup
																	</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:complexType></xs:element></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="entry_summary_improved"><xs:annotation><xs:documentation>
										This tag has to do with Entry Summary but only after the improved version was released.

										However, some page elements are built from old config elements outside this tag.
										@VALIDATIONTABLE@ in these queries will always point to the table in &lt;broker_validation_table&gt; for the US.
										For other countries, &lt;@COUNTRYCODE@_validation_table&gt; should be added
										ex: &lt;CA_validation_table&gt;txdCAEntryVisibility&lt;/CA_validation_table&gt; for Canada
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="enable_tab_set_switching" type="xs:string"><xs:annotation><xs:documentation>
													A default set of tabs exist that are switched between when a ‘Current Entry’ exists. However, the sets can be configured. In configuration/import/entry_summary_improved:
													&lt;enable_tab_set_switching&gt;: set to N, uses default tabs. Please use this if possible.

													Set to Y, the page uses custom sets. These tags are used to define the custom behavior:

													&lt;entry_level_tab_set&gt;: every tab in this list will display when no ‘Current Entry’ exists
													&lt;single_entry_tab_set&gt;: every tab in this list will display when ‘Current Entry’ exists

													The same tabs can exist in both sets. Tab lists are pipe|delimited
												</xs:documentation></xs:annotation></xs:element><xs:element name="entry_level_tab_set" type="xs:string"><xs:annotation><xs:documentation>
													&lt;entry_level_tab_set&gt;: every tab in this list will display when no ‘Current Entry’ exists

													Possible tabs: tabEntryManagement, tabEntryData, tabLineOverview, tabBrokerView, tabPEA, tabCommunication, tabRecon, tabEntryOverview, tabLiquidation, tabCustomsHold, tabGroups, tabWorkQueue

													Tabs CAN APPEAR in both sets. Not case-sensitive.
													Some tabs should only show once you''ve selected an Entry (line overview, broker payment, etc) so keep that in mind when you turn on Entry Level tabs
													Just because you can turn them on doesn''t mean you should

													Tab lists are pipe|delimited
												</xs:documentation></xs:annotation></xs:element><xs:element name="single_entry_tab_set" type="xs:string"><xs:annotation><xs:documentation>
													&lt;single_entry_tab_set&gt;: every tab in this list will display when ‘Current Entry’ exists

													Possible tabs: tabEntryManagement, tabEntryData, tabLineOverview, tabBrokerView, tabPEA, tabCommunication, tabRecon, tabEntryOverview, tabLiquidation, tabCustomsHold, tabGroups, tabWorkQueue

													Tabs CAN APPEAR in both sets. Not case-sensitive.
													Some tabs should only show once you''ve selected an Entry (line overview, broker payment, etc) so keep that in mind when you turn on Entry Level tabs
													Just because you can turn them on doesn''t mean you should

													Tab lists are pipe|delimited
												</xs:documentation></xs:annotation></xs:element><xs:element name="disable_view"><xs:annotation><xs:documentation>
													To hide a tab from view, find the tab’s tag (for example, &lt;entry_management&gt;) in the configuration/import/entry_summary_improved/disable_view section. In that tag, add a user group to the pipe|delimited list, and that group will not be able to see the tab on the screen.

													To make a TAB invisible to a security group
													Add the group name name to the inside of the tab tag

													Names are PIPE DELIMITED and must match the group name in fsgGroupList.
													Group names are not case sensitive
												</xs:documentation></xs:annotation><xs:complexType><xs:choice maxOccurs="unbounded"><xs:element name="entry_management" type="xs:string"><xs:annotation><xs:documentation>
																List pipe-delimited security groups to hide this element''s tab from.
															</xs:documentation></xs:annotation></xs:element><xs:element name="entry_data" type="xs:string"><xs:annotation><xs:documentation>
																List pipe-delimited security groups to hide this element''s tab from.
															</xs:documentation></xs:annotation></xs:element><xs:element name="line_overview" type="xs:string"><xs:annotation><xs:documentation>
																List pipe-delimited security groups to hide this element''s tab from.
															</xs:documentation></xs:annotation></xs:element><xs:element name="entry_analysis" type="xs:string"><xs:annotation><xs:documentation>
																List pipe-delimited security groups to hide this element''s tab from.
															</xs:documentation></xs:annotation></xs:element><xs:element name="entry_overview" type="xs:string"><xs:annotation><xs:documentation>
																List pipe-delimited security groups to hide this element''s tab from.
															</xs:documentation></xs:annotation></xs:element><xs:element name="liquidation" type="xs:string"><xs:annotation><xs:documentation>
																List pipe-delimited security groups to hide this element''s tab from.
															</xs:documentation></xs:annotation></xs:element><xs:element name="customs_hold" type="xs:string"><xs:annotation><xs:documentation>
																List pipe-delimited security groups to hide this element''s tab from.
															</xs:documentation></xs:annotation></xs:element><xs:element name="groups" type="xs:string"><xs:annotation><xs:documentation>
																List pipe-delimited security groups to hide this element''s tab from.
															</xs:documentation></xs:annotation></xs:element><xs:element name="recon" type="xs:string"><xs:annotation><xs:documentation>
																List pipe-delimited security groups to hide this element''s tab from.
															</xs:documentation></xs:annotation></xs:element><xs:element name="broker_view" type="xs:string"><xs:annotation><xs:documentation>
																List pipe-delimited security groups to hide this element''s tab from.
															</xs:documentation></xs:annotation></xs:element><xs:element name="communication" type="xs:string"><xs:annotation><xs:documentation>
																List pipe-delimited security groups to hide this element''s tab from.
															</xs:documentation></xs:annotation></xs:element><xs:element name="work_queue" type="xs:string"><xs:annotation><xs:documentation>
																List pipe-delimited security groups to hide this element''s tab from.
															</xs:documentation></xs:annotation></xs:element></xs:choice></xs:complexType></xs:element><xs:element maxOccurs="unbounded" name="entry_management_query"><xs:annotation><xs:documentation>
													This query will return any SQL from the CDATA below
													Special Considerations:
													EntryGuid must be selected in the query (usually select it first)
													EntryNum will automatically create a hyperlink
													Notes will automatically create a hyperlink
													Documents will automatically create a hyperlink
													You have to leave the select count in order for the hyperlink to build correctly
													Also this allows users to see how many docs there are without having to click the link
													Validation Groups will NOT build automatically
													You must show each group in the system using the query below in order to see each one
													Copy one of the existing lines that pulls the group and just change the name to match the group you want to see
													To find out what Validation Groups exist (their names); select distinct ValidationGroup from txdEntryValidationConfiguration
													Validation Group Pass/Fail indicators
													The code build the Green Checks based on any validation group that returns the word "PASS"
													The code build the Red X''s based on any validation group that returns the word "FAIL"
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	The country code that this query applies to for Entry Management tab.
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element maxOccurs="unbounded" name="post_status_update_execute_sql"><xs:annotation><xs:documentation>
													This tag provides the ability for custom execution of updates to ClosedFlag, etc following the change of a status.  If this SQL field is left blank, no post update will be run.

													Works on the the Entry Management tab dropdowns and the Entry Data tab dropdowns
													Allowable variables:
													@VALIDATIONTABLE@
													@PARTNERID@
													@ENTRYGUID@
													@BUSINESSUNIT@
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country code to apply this query to.
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="entry_data"><xs:annotation><xs:documentation>
													This will configure the Entry Data tab on the Entry Summary Improved screen
													The top of the grid is hard-coded and cannot be configured.
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:choice maxOccurs="unbounded"><xs:element name="supplemental_table"><xs:annotation><xs:documentation>
																	The table to get fields from.
																</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																					The country to apply this change to.
																				</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="fields_per_row"><xs:annotation><xs:documentation>
																	Number of fields on a single row to list in the view.
																</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:unsignedByte"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																					The country to apply this change to.
																				</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="field_configurations" minOccurs="0"><xs:annotation><xs:documentation>
																	This will configure the Entry Field Data section on the Entry Data tab on the Entry Summary Improved screen
																	The top of the grid is hard-coded and cannot be configured
																	No field will be enabled
																	Every field in the EV table you''re using must have a field_configuration element for every field in the table
																	- Default behavior is to show any field missing a field_configuration element

																	If using a URL on the field, as described below, a query can be associated with the field to pull required values for the URL
																	- Add a &lt;url_query&gt; element within the &lt;field_configuration&gt; element
																	- Parameters that will be replaced in the query as well as in the URL:
																	- @PARTNERID@, @VALIDATIONTABLE@, @COUNTRYCODE@, @ENTRYNUM@, @ENTRYGUID@
																	- The special parameter @CONTROL_VALUE@ will take the value of the actual field on the screen
																	- Values pulled from the query will replace values in the URL with the form @COLUMNNAME@
																</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="field_configuration" minOccurs="0"><xs:annotation><xs:documentation>
																				@TODO
																			</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="field" type="xs:string" use="required"><xs:annotation><xs:documentation>
																						@TODO
																					</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="visible" type="YesNo" use="optional"><xs:annotation><xs:documentation>
																						@TODO
																					</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="alias" type="xs:string" use="optional"><xs:annotation><xs:documentation>
																						@TODO
																					</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="numeric_cast" type="xs:string" use="optional"><xs:annotation><xs:documentation>
																						This defines a SQL cast to be used for numeric fields that could be too long to show on the screen.

																						- This should be a comma-delimited list for the precision and scale of the cast
																						- For example, if a number should be cast as a numeric(25,10) field, then the value of the numeric_cast attribute should be "25,10"
																					</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="url" type="xs:string" use="optional"><xs:annotation><xs:documentation>
																						This defines a URL to use as the link for the field''s label on the screen.

																						- Parameters can be included in the URL that will be pulled from the corresponding query, as well as the standard parameters listed below:
																						- Parameters that will be replaced in the query as well as in the URL:
																						- @PARTNERID@, @VALIDATIONTABLE@, @COUNTRYCODE@, @ENTRYNUM@, @ENTRYGUID@

																						- These must use the form @COLUMNNAME@ in order to be replaced
																						- The special parameter @CONTROL_VALUE@ will take the value of the actual field on the screen
																					</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																			Country this field configuration applies to.
																		</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="show_broker_milestones"><xs:annotation><xs:documentation>
																	This table displays data found in the txdBrokerMilestones table.  It is not configurable, but can be hidden or displayed according to whether the broker is sending milestone information for that partner.
																</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																					The country to turn off Broker Milestones for.
																				</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="manual_validations"><xs:annotation><xs:documentation>
																	This is the parent element for the list of manual validations for a country.
																</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="manual_validation"><xs:annotation><xs:documentation>
																				This will configure the Manual Validation Fields section on the Entry Data tab on the Entry Summary Improved screen
																				Manual Validations stored in txdEntryValidationManualChecks
																				Each of the 30 available manual validations must have a field_configuration element for every field in the table
																				Default behavior is to show any field missing a field_configuration element
																				It is vital to keep track of which manual validation corresponds to what shows on the screen
																				Because each client will want different validations, the field names in the db are generic
																				Validations can be set automatically (validate a doc exists) or manually by the client (textbox or dropdown)
																				Entry statuses can be set based on whether or not certain validations have been complete
																			</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="field" use="required"><xs:annotation><xs:documentation>
																						Field to validate against.
																					</xs:documentation></xs:annotation><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="ManualValidationOne" /><xs:enumeration value="ManualValidationTwo" /><xs:enumeration value="ManualValidationThree" /><xs:enumeration value="ManualValidationFour" /><xs:enumeration value="ManualValidationFive" /><xs:enumeration value="ManualValidationSix" /><xs:enumeration value="ManualValidationSeven" /><xs:enumeration value="ManualValidationEight" /><xs:enumeration value="ManualValidationNine" /><xs:enumeration value="ManualValidationTen" /><xs:enumeration value="ManualValidationEleven" /><xs:enumeration value="ManualValidationTwelve" /><xs:enumeration value="ManualValidationThirteen" /><xs:enumeration value="ManualValidationFourteen" /><xs:enumeration value="ManualValidationFifteen" /><xs:enumeration value="ManualValidationSixteen" /><xs:enumeration value="ManualValidationSeventeen" /><xs:enumeration value="ManualValidationEighteen" /><xs:enumeration value="ManualValidationNineteen" /><xs:enumeration value="ManualValidationTwenty" /><xs:enumeration value="ManualValidationTwentyOne" /><xs:enumeration value="ManualValidationTwentyTwo" /><xs:enumeration value="ManualValidationTwentyThree" /><xs:enumeration value="ManualValidationTwentyFour" /><xs:enumeration value="ManualValidationTwentyFive" /><xs:enumeration value="ManualValidationTwentySix" /><xs:enumeration value="ManualValidationTwentySeven" /><xs:enumeration value="ManualValidationTwentyEight" /><xs:enumeration value="ManualValidationTwentyNine" /><xs:enumeration value="ManualValidationThirty" /></xs:restriction></xs:simpleType></xs:attribute><xs:attribute name="alias" type="xs:string" use="required"><xs:annotation><xs:documentation>
																						Can be blank or can specify the alias for this field to validate. Some special characters will break the alias (&amp; for one) so check that.
																					</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="visible" type="YesNo" use="optional"><xs:annotation><xs:documentation>
																						Whether or not to show the field.
																					</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="enabled" type="YesNo" use="optional"><xs:annotation><xs:documentation>
																						Whether or not the field is enabled.
																					</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="type" use="optional"><xs:annotation><xs:documentation>
																						Whether or not the field is a dropdown or textbox. Dropdowns must use the "source" attribute
																					</xs:documentation></xs:annotation><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="D" /><xs:enumeration value="" /><xs:enumeration value="T" /></xs:restriction></xs:simpleType></xs:attribute><xs:attribute name="source" type="xs:string" use="optional"><xs:annotation><xs:documentation>
																						SQL query to populate the dropdown if this element''s type is set to "D"(dropdown).
																					</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																			Country code to apply for this manual validation set.
																		</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="visible" type="YesNo" use="optional"><xs:annotation><xs:documentation>
																			Whether or not all of these validations should be visible.
																		</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="fieldsperrow" type="xs:unsignedByte" use="required"><xs:annotation><xs:documentation>
																			Number of fields to have in a row for this view.
																		</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="manual_after_save_sql"><xs:annotation><xs:documentation>
																	This will run after every click of the manual check ''Save'' button
																	You can kick off the workflow that sets Entry Statuses here or you can run the SQL that sets the entry status
																	If you set the entry status here then any changes you make here will also have to be made to the main section that sets entry statuses below
																	Best practice will be to keep the entry statuses set in one SQL block rather than in multiple places in the config
																</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																					Country code to apply this AfterSaveSQL to.
																				</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="validation_query" type="xs:string"><xs:annotation><xs:documentation>
																	This SQL section is for the Validation Grid that populates at the bottom of the Entry Data tab.
																</xs:documentation></xs:annotation></xs:element><xs:element name="show_7501_generation"><xs:annotation><xs:documentation>
																	Some clients prefer to view their data in a 7501 form, IP does allow clients to generate a draft form for visibility sake. In order to generate a 7501 in PDF form from the Entry Data tab, flip the show_7501_generation flag to ‘Y’ in the partner configuration file.

																	Once this flag has been flipped to yes, you’ll be able to view the ‘Generate 7501 For Entry’ link. Once generated, two links will be available.
																</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /><xs:attribute name="default" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="top_date_query" type="xs:string"><xs:annotation><xs:documentation>
																	This tag is optional. It can be used to configure what date is pulled back
																	for the top section of the Entry Data tab. Typically, this has defaulted to
																	pull the liquidation date for the U.S., as seen in the example below. The
																	query must pull a varchar value as "DisplayDate", which will be shown on screen.

																	There can be multiple of these tags, one for each country needing a specific date
																	to be pulled, using the "country" attribute and the country code. If a country-specific
																	tag is not included, the page will look for the tag without a "country" attribute. If
																	none of these are found, the page will default to use the current query to pull the
																	liquidation date.
																	In addition, to change the name displayed for the date on the screen, a translation
																	for the "lbxedLiqDate" control can be used.

																	Variables that will be replaced:
																	@PARTNERID@
																	@VALIDATIONTABLE@ - txd(COUNTRYCODE)EntryVisibility
																	@ENTRYNUM@   - Entry selected on page
																</xs:documentation></xs:annotation></xs:element><xs:element name="reopen_entry"><xs:annotation><xs:documentation>
																	This will configure the "Reopen Entry" button on the Entry Data tab. This button can be used to reopen entries, and allows for the configuration of the entry''s status to be changed upon reopening.

																	After_save_sql can also be utilized, and the button can be configurably hidden completely or enabled only for certain security groups. The validation workflow will run after an entry is reopened if it is not already running.

																	Otherwise, the user will be prompted to rerun validation once the current run has completed.
																</xs:documentation></xs:annotation><xs:complexType><xs:choice maxOccurs="unbounded"><xs:element name="reopen_date_field"><xs:annotation><xs:documentation>
																				@TODO
																			</xs:documentation></xs:annotation></xs:element><xs:element name="reopen_date_value"><xs:annotation><xs:documentation>
																				@TODO
																			</xs:documentation></xs:annotation></xs:element><xs:element name="reopen_status"><xs:annotation><xs:documentation>
																				This is the tmgGlobalCodes code for the status to use for the reopened entry. If using a new status, make sure to add it to tmgGlobalCodes with a FieldName of "EVSummaryStatus".
																			</xs:documentation></xs:annotation></xs:element><xs:element name="after_save_sql" type="xs:string"><xs:annotation><xs:documentation>
																				This sql will be run after the status and date fields have been updated, but before validation is run.

																				Variables that will be replaced are @PARTNERID@, @ENTRYNUM@, and @ENTRYGUID@.
																			</xs:documentation></xs:annotation></xs:element><xs:element name="enabled_groups" type="xs:string"><xs:annotation><xs:documentation>
																				Pipe delimited list of groups allowed to use the reopen button. Can use "ALL" if all groups can use the button.
																			</xs:documentation></xs:annotation></xs:element></xs:choice><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																			Country code this section applies to.
																		</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="button_visible" type="xs:string" use="required"><xs:annotation><xs:documentation>
																			Whether or not to show the button for Re-opening an entry.
																		</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="show_business_status" minOccurs="0"><xs:annotation><xs:documentation>
																	If included and set to "Y", this will show the selected entry''s business status on the entry data tab. If not included or set to "N" it will be hidden.
																</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																					Country code this applies to.
																				</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:choice></xs:sequence></xs:complexType></xs:element><xs:element name="line_overview"><xs:annotation><xs:documentation>
													The Line Overview tab has 3 nested tabs below it
													All Lines
													Error Lines
													Clear Lines

													Generic Notes for all 3 tabs:
													To find out what Validation Groups exist (their names); select distinct ValidationGroup from txdEntryValidationConfiguration
													ProductNum links are created from the SQL below with the three standard cases:
													1. No product with that number in GC = no hyperlink
													2. One product in GC = hyperlink to /Maintenance/Edit
													3. Multiple products in GC = hyperlink to /Maintenance/Search
													Green Checks and Red X''s
													The code will display a red X on any validation group that returns an "X" in the SQL below
													Any other value will result in a Green Check showing
													EntryGuid and LineGuid need to be pulled for the line number links to correctly generate
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="query_all_lines"><xs:annotation><xs:documentation>
																SQL query that applies to "All Lines".
															</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																				Country this applies to.
																			</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element maxOccurs="unbounded" name="query_error_lines"><xs:annotation><xs:documentation>
																SQL query that applies to "Error Lines".
															</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																				Country this applies to.
																			</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element maxOccurs="unbounded" name="query_clear_lines"><xs:annotation><xs:documentation>
																SQL query that applies to "Clear Lines".
															</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																				Country this applies to.
																			</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="broker_payment"><xs:annotation><xs:documentation>
													This tab will build from txdEntryBrokerPayment and txdEntryBrokerCheckDetail
													Each have a hist table

													The Broker Payment tab will only display once you''ve selected an entry
													Unless for some reason you''ve turned that tab on in the Entry Overview tab_set section above

													The dropdowns on the screen are configurable

													The Account and Payment fields can be aliased
													If nothing is provided then they will show "Account" and "Payment"

													All other fields display as TextBoxes that pull their data from the aforementioned tables
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="allow_manual_addition" type="YesNo"><xs:annotation><xs:documentation>
																If set to Y, then clients will be able to manually add additional invoices to the entry. If set to N that option will not appear.
															</xs:documentation></xs:annotation></xs:element><xs:element name="require_check_detail_on_save" type="YesNo"><xs:annotation><xs:documentation>
																@TODO
															</xs:documentation></xs:annotation></xs:element><xs:element name="allow_duplicate_invoices" type="YesNo"><xs:annotation><xs:documentation>
																@TODO
															</xs:documentation></xs:annotation></xs:element><xs:element name="pending_invoices_query" type="xs:string"><xs:annotation><xs:documentation>
																Query to fill the Pending Invoices popup - Can replace with @PARTNERID@
															</xs:documentation></xs:annotation></xs:element><xs:element name="after_save_sql" type="xs:string"><xs:annotation><xs:documentation>
																Query to run after saving the Broker Payment.

																Parameters -
																@PARTNERID@
																@ENTRYNUM@
																@INVOICENUM@ (number in system, not broker invoice number)
															</xs:documentation></xs:annotation></xs:element><xs:element name="fields"><xs:annotation><xs:documentation>
																This is a configurable section to define information about the Broker Payment fields.
															</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="field"><xs:annotation><xs:documentation>
																			A single field to configure.
																		</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="id" type="xs:string" use="required"><xs:annotation><xs:documentation>
																					@TODO
																				</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="type" use="required"><xs:annotation><xs:documentation>
																					Type of control that is displayed on screen. Dropdowns must use the "sqlsource" attribute with a query inside it.
																				</xs:documentation></xs:annotation><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="txtbx" /><xs:enumeration value="rdp" /><xs:enumeration value="chx" /><xs:enumeration value="drp" /></xs:restriction></xs:simpleType></xs:attribute><xs:attribute name="alias" type="xs:string" use="required"><xs:annotation><xs:documentation>
																					The alias to display on screen of this field.
																				</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="visible" type="YesNo" use="optional"><xs:annotation><xs:documentation>
																					Yes/No to show this field
																				</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="required" type="YesNo" use="optional"><xs:annotation><xs:documentation>
																					Yes/No to require this field
																				</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="enabled" type="YesNo" use="optional"><xs:annotation><xs:documentation>
																					Yes/No to enable this field
																				</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="copyonnew" type="YesNo" use="optional"><xs:annotation><xs:documentation>
																					Copy value in this field to new invoice when ''new'' is clicked.
																				</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="sqlsource" type="xs:string" use="optional"><xs:annotation><xs:documentation>
																					SQL query to populate the dropdown.
																				</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element maxOccurs="unbounded" name="entry_analysis_query"><xs:annotation><xs:documentation>
													SQL query to populate the grid on the Entry Analysis tab.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to.
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="group_queries"><xs:annotation><xs:documentation>
													If desired, individual group queries can be tied to a specific country, to make it easier to differentiate between multiple countries. A "country" tag can be added to a query element with the country code, if desired. If a country-specific query is not found, the page will default to finding the query without the country tag. For example, you can now have separate &lt;classification country="US"&gt; and &lt;classification country="CA"&gt; query elements.

													This section will configure the validation group specific queries that show in the "Groups" tab on the Entry Summary screen
													You must call out each Validation Group to make them appear on the Groups tab or else they will not be visible
													To find out what Validation Groups exist (their names); select distinct ValidationGroup from txdEntryValidationConfiguration
													Each validation group query tag should be the lowercase name of the validation group as seen in txdEntryValidationConfiguration
													Any spaces in the group name must replaced by an _ underscore
													ProductNum links are created from the SQL below with the three standard cases:
													1. No product with that number in GC = no hyperlink
													2. one product in GC = hyperlink to /Maintenance/Edit
													3. multiple products in GC = hyperlink to /Maintenance/Search
													EntryNum automatically creates a hyperlink
													LineNum automatically creates a hyperlink
												</xs:documentation></xs:annotation><xs:complexType><xs:choice maxOccurs="unbounded"><xs:element name="classification" type="xs:string"><xs:annotation><xs:documentation>
																SQL query for the Classification tab''s grid under the Groups tab.
															</xs:documentation></xs:annotation></xs:element><xs:element name="standard" type="xs:string"><xs:annotation><xs:documentation>
																SQL query for the Standard tab''s grid under the Groups tab.
															</xs:documentation></xs:annotation></xs:element><xs:element name="commercial_invoice" type="xs:string"><xs:annotation><xs:documentation>
																SQL query for the Commercial Invoice tab''s grid under the Groups tab.
															</xs:documentation></xs:annotation></xs:element><xs:element name="purchase_order" type="xs:string"><xs:annotation><xs:documentation>
																SQL query for the Purchase Order tab''s grid under the Groups tab.
															</xs:documentation></xs:annotation></xs:element><xs:element name="manual" type="xs:string"><xs:annotation><xs:documentation>
																SQL query for the Manual tab''s grid under the Groups tab.
															</xs:documentation></xs:annotation></xs:element></xs:choice></xs:complexType></xs:element><xs:element name="entry_liquidation"><xs:annotation><xs:documentation>
													Section that applies to the Liquidation tab on Entry Summary.
												</xs:documentation></xs:annotation><xs:complexType><xs:choice maxOccurs="unbounded"><xs:element name="entry_liquidation_date_types"><xs:annotation><xs:documentation>
																The pipe-delimited list below builds the "Select Date Values" dropdown on the Liquidation tab. You MUST include "EntryDate" in the list.
															</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																				Country this applies to
																			</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="entry_liquidation_date_type_queries"><xs:annotation><xs:documentation>
																For each date type listed above you must have a corresponding tag that tells how each date field will be searched. The system doesn''t "know" what LiquidationDate means so you need to build out the where clause to tell it the exact date ranges to use.
															</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="CREATEDATE" type="xs:string"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:element><xs:element name="ENTRYDATE" type="xs:string"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:element><xs:element name="IMPORTDATE" type="xs:string"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:element><xs:element name="SUMMARYFILINGCLOCK" type="xs:string"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:element><xs:element name="LIQUIDATIONDATE" type="xs:string"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:element><xs:element name="PEADATE" type="xs:string"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:element><xs:element name="ACTLIQUIDATIONDATE" type="xs:string"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:element></xs:sequence><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																		Country this applies to.
																	</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="entry_liquidation_query"><xs:annotation><xs:documentation>
																SQL query that populates the grid under the Liquidation tab.
															</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																				Country this applies to.
																			</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:choice></xs:complexType></xs:element><xs:element name="work_queue_query"><xs:annotation><xs:documentation>
													SQL query to populate the grid in the Work Queue tab.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to.
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /></xs:complexType></xs:element><xs:element name="entry_error_reporting"><xs:annotation><xs:documentation>
										This section applies to the Error Reporting screen.
									</xs:documentation></xs:annotation><xs:complexType><xs:choice maxOccurs="unbounded"><xs:element name="broker_field"><xs:annotation><xs:documentation>
													Field in the database that contains the name of the broker, ie. ''BrokerName''.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to.
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="entry_error_reporting_broker" type="xs:string"><xs:annotation><xs:documentation>
													SQL query to populate the Broker grid in the Error Reporting screen. This can also be accessed from the Line Overviews tab. In order to create the line link to Entry Validation, the join to ValidationTable and the inclusion of InvoiceNum must exist in the queries.
												</xs:documentation></xs:annotation></xs:element><xs:element name="entry_error_reporting_internal" type="xs:string"><xs:annotation><xs:documentation>
													SQL query to populate the Internal grid in the Error Reporting screen. This can also be accessed from the Line Overviews tab. In order to create the line link to Entry Validation, the join to ValidationTable and the inclusion of InvoiceNum must exist in the queries.
												</xs:documentation></xs:annotation></xs:element><xs:element name="entry_error_reporting_external" type="xs:string"><xs:annotation><xs:documentation>
													SQL query to populate the External grid in the Error Reporting screen. This can also be accessed from the Line Overviews tab. In order to create the line link to Entry Validation, the join to ValidationTable and the inclusion of InvoiceNum must exist in the queries.
												</xs:documentation></xs:annotation></xs:element><xs:element name="show_corrective_action"><xs:annotation><xs:documentation>
													Whether or not to show the Corrective Action section.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /><xs:attribute name="default" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="show_external_tab"><xs:annotation><xs:documentation>
													Whether or not to show the External Tab on the screen.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /><xs:attribute name="default" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="show_government_tab"><xs:annotation><xs:documentation>
													Whether or not to show the Government Tab on the screen.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="entry_error_reporting_government"><xs:annotation><xs:documentation>
													This SQL query will validate entries against ITRAC data, allowing clients to check their brokers’ data against what the government received. For this tab to show, &lt;show_government_tab&gt; must be set to "Y" under /import/entry_error_reporting. Additionally, the &lt;entry_error_reporting_government&gt; element should include the query for the tab.

													The accompanying workflow, ENTRYGOVTVALIDATION, contains an &lt;execute_sql name = “SET GOVT ENTRY STATUS”&gt; so ensure this is present.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:choice><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /></xs:complexType></xs:element><xs:element name="pea"><xs:annotation><xs:documentation>
										PEA stands for Post-Entry Amendment. This screen is dedicated to the generation of post-entry correction reports. It contains two tabs, one for the PEA ‘queue’ or the addition of entries to PEAs, and the second for the editing and generation of PEA reports.
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="queue_main_view" type="xs:string"><xs:annotation><xs:documentation>
													The SQL query that populates the main grid for the PEA queue.

													Parameters:
													- @PORTOFENTRY@
													- @ENTRYNUM@
													- @VALIDATIONTABLE@
												</xs:documentation></xs:annotation></xs:element><xs:element name="queue_line_detail_view" type="xs:string"><xs:annotation><xs:documentation>
													The SQL query that populates the detail grid that can be expanded from a row in the main view query for the PEA queue.

													Parameters:
													- @PARTNERID@
													- @VALIDATIONTABLE@
													- @ENTRYGUID@
												</xs:documentation></xs:annotation></xs:element><xs:element name="filer_field"><xs:annotation><xs:documentation>
													@TODO
												</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
															Country this applies to.
														</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="country_list" default="US"><xs:annotation><xs:documentation>
													Comma-delimited list of country codes to show in dropdown on Post-Entry Amendment page.

													If blank, the page will use the default behavior to grab all countries from txdEntryValidationConfiguration with active validations.

													Default value is ''US'', as the PEA screen is primarily a US page.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element maxOccurs="unbounded" name="assignto_list"><xs:annotation><xs:documentation>
										This SQL statement should returns a Code/Decode select to list users that can be assigned to for the Assign To dropdown.
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /><xs:attribute name="country" type="ISOCountryCode" use="optional"><xs:annotation><xs:documentation>
														Country this applies to.
													</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="status_list"><xs:annotation><xs:documentation>
										This SQL query is used for pulling country-specific status lists. If this section isn’t included, the page will default to the current behavior of pulling all entries with ‘EVSummaryStatus’ as the fieldname from tmgGlobalCodes for the current partner.
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
														Country this applies to.
													</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="show_validation_download_link"><xs:annotation><xs:documentation>
										@TODO
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="notes_required_on_close_discrepancy"><xs:annotation><xs:documentation>
										When closing a Validation Discrepancy, you can require a Note be attached to that "Close".
									</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="entry_validation"><xs:annotation><xs:documentation>
										This will configure the Harmonized and Broker tabs on the Entry Validation screen. If not included, the tabs will use the default behavior. This includes 3 fields per row, and they will show the fields based on the order they are pulled from the database.
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:choice maxOccurs="unbounded"><xs:element name="harmonized_fields_per_row"><xs:annotation><xs:documentation>
														Number of fields to show per row on the Harmonized tab.
													</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:unsignedByte"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																		Country this applies to.
																	</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="broker_fields_per_row"><xs:annotation><xs:documentation>
														Number of fields to show per row on the Broker tab.
													</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:unsignedByte"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																		Country this applies to.
																	</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="harmonized_field_configurations" minOccurs="0"><xs:annotation><xs:documentation>
														This will configure the Harmonized/Broker Data tabs on the Entry Validation page
														No field will be enabled
														Every field in the EV table and supplemental table you''re using must have a field_configuration
														element for every field in the table
														- Default behavior is to show any field missing a field_configuration element
														Fields will be shown left to right, top to bottom in the order that they are included in the
														&lt;harmonized_field_configurations&gt; and &lt;broker_field_configurations&gt; elements.

														If using a URL on the field, as described below, a query can be associated with the field to pull required values for the URL

														- Add a &lt;url_query&gt; element within the &lt;field_configuration&gt; element
														- Parameters that will be replaced in the query as well as in the URL:
														- @PARTNERID@, @VALIDATIONTABLE@, @COUNTRYCODE@, @ENTRYNUM@, @ENTRYGUID@
														- The special parameter @CONTROL_VALUE@ will take the value of the actual field on the screen
														- Values pulled from the query will replace values in the URL with the form @COLUMNNAME@
													</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="field_configuration" minOccurs="0"><xs:annotation><xs:documentation>
																	@TODO
																</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="field" type="xs:string" use="required"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="visible" type="YesNo" use="optional"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="alias" type="xs:string" use="optional"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="numeric_cast" type="xs:string" use="optional"><xs:annotation><xs:documentation>
																			This defines a SQL cast to be used for numeric fields that could be too long to show on the screen.

																			- This should be a comma-delimited list for the precision and scale of the cast
																			- For example, if a number should be cast as a numeric(25,10) field, then the value of the numeric_cast attribute should be "25,10"
																		</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="url" type="xs:string" use="optional"><xs:annotation><xs:documentation>
																			This defines a URL to use as the link for the field''s label on the screen.

																			- Parameters can be included in the URL that will be pulled from the corresponding query, as well as the standard parameters listed below:
																			- Parameters that will be replaced in the query as well as in the URL:
																			- @PARTNERID@, @VALIDATIONTABLE@, @COUNTRYCODE@, @ENTRYNUM@, @ENTRYGUID@

																			- These must use the form @COLUMNNAME@ in order to be replaced
																			- The special parameter @CONTROL_VALUE@ will take the value of the actual field on the screen
																		</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																Country this applies to.
															</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="broker_field_configurations" minOccurs="0"><xs:annotation><xs:documentation>
														This will configure the Harmonized/Broker Data tabs on the Entry Validation page
														No field will be enabled
														Every field in the EV table and supplemental table you''re using must have a field_configuration
														element for every field in the table
														- Default behavior is to show any field missing a field_configuration element
														Fields will be shown left to right, top to bottom in the order that they are included in the
														&lt;harmonized_field_configurations&gt; and &lt;broker_field_configurations&gt; elements.

														If using a URL on the field, as described below, a query can be associated with the field to pull required values for the URL

														- Add a &lt;url_query&gt; element within the &lt;field_configuration&gt; element
														- Parameters that will be replaced in the query as well as in the URL:
														- @PARTNERID@, @VALIDATIONTABLE@, @COUNTRYCODE@, @ENTRYNUM@, @ENTRYGUID@
														- The special parameter @CONTROL_VALUE@ will take the value of the actual field on the screen
														- Values pulled from the query will replace values in the URL with the form @COLUMNNAME@
													</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="field_configuration" minOccurs="0"><xs:annotation><xs:documentation>
																	@TODO
																</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="field" type="xs:string" use="required"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="visible" type="YesNo" use="optional"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="alias" type="xs:string" use="optional"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="numeric_cast" type="xs:string" use="optional"><xs:annotation><xs:documentation>
																			This defines a SQL cast to be used for numeric fields that could be too long to show on the screen.

																			- This should be a comma-delimited list for the precision and scale of the cast
																			- For example, if a number should be cast as a numeric(25,10) field, then the value of the numeric_cast attribute should be "25,10"
																		</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="url" type="xs:string" use="optional"><xs:annotation><xs:documentation>
																			This defines a URL to use as the link for the field''s label on the screen.

																			- Parameters can be included in the URL that will be pulled from the corresponding query, as well as the standard parameters listed below:
																			- Parameters that will be replaced in the query as well as in the URL:
																			- @PARTNERID@, @VALIDATIONTABLE@, @COUNTRYCODE@, @ENTRYNUM@, @ENTRYGUID@

																			- These must use the form @COLUMNNAME@ in order to be replaced
																			- The special parameter @CONTROL_VALUE@ will take the value of the actual field on the screen
																		</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																Country this applies to.
															</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:choice></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:complexType></xs:element><xs:element name="government_validation"><xs:annotation><xs:documentation>
										This will configure the Government Data Validation screen, as well as some small functionality on other pages related to the Government Validation process.
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="country_list"><xs:annotation><xs:documentation>
													Comma-delimited list (no spaces) of the country codes that are using the government validation process.
												</xs:documentation></xs:annotation></xs:element><xs:element name="link_to_summary" type="YesNo"><xs:annotation><xs:documentation>
													This will configure the destination used when clicking the "Return To Summary View" button on the Government Data Validation page. Similar to the Entry Validation button.

													Y - Links to the Entry Summary page
													N - Links to the main view of the Government Data Validation page
												</xs:documentation></xs:annotation></xs:element><xs:element name="show_closediscrepancies_link"><xs:annotation><xs:documentation>
													This will configure whether the "Close Discrepancies" button is shown at the top of the Government Data Validation page.

													This works the same way as on the Entry Validation page, except here this can be configured per country.

													The button is shown by default, and will only be hidden if configured to do so.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to.
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="show_govt_validation_link"><xs:annotation><xs:documentation>
													This will configure whether the "Go To Govt Validation" button is shown on the Entry Summary page for the given country.

													This button works the same way as the "Go To Validation" button, but it will link to the Government Data Validation page.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to.
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="govt_validation_table" type="xs:string"><xs:annotation><xs:documentation>
													This is the default government data table to be used, of the form txd(CountryCode)EVGovernmentData. It is often used to default dropdowns on the screens when choosing which country to view for the government validation process.
												</xs:documentation></xs:annotation></xs:element><xs:element name="default_view_sql"><xs:annotation><xs:documentation>
													The &lt;default_view_sql&gt;, &lt;type_view_sql&gt;, and &lt;export_view_sql&gt; all function the same way as the &lt;group_view_sql&gt;, &lt;type_view_sql&gt;, and &lt;export_view_sql&gt; for the Entry Validation page. These all can be configured per country using the "country" attribute. The following variables will be replaced if used in the queries.

													Parameters:
													@businessunit@ - ImporterID, if chosen on the dropdown on the screen
													@validationtype@ - Type of validation, if chosen on the dropdown on the screen
													@partnerid@ - PartnerId of the current partner
													@gcdb@ - GC location, as defined at /import/location_of_global_classification_db
													@filertable@ - The main EV data table, e.g. txdUSEntryVisibility (this will update for the current country)
													@governmenttable@ - The main EV Govt table, e.g. txdUSEVGovernmentData (this will update for the current country)
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="type_view_sql"><xs:annotation><xs:documentation>
													The &lt;default_view_sql&gt;, &lt;type_view_sql&gt;, and &lt;export_view_sql&gt; all function the same way as the &lt;group_view_sql&gt;, &lt;type_view_sql&gt;, and &lt;export_view_sql&gt; for the Entry Validation page. These all can be configured per country using the "country" attribute. The following variables will be replaced if used in the queries.

													Parameters:
													@businessunit@ - ImporterID, if chosen on the dropdown on the screen
													@validationtype@ - Type of validation, if chosen on the dropdown on the screen
													@partnerid@ - PartnerId of the current partner
													@gcdb@ - GC location, as defined at /import/location_of_global_classification_db
													@filertable@ - The main EV data table, e.g. txdUSEntryVisibility (this will update for the current country)
													@governmenttable@ - The main EV Govt table, e.g. txdUSEVGovernmentData (this will update for the current country)
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="export_view_sql"><xs:annotation><xs:documentation>
													The &lt;default_view_sql&gt;, &lt;type_view_sql&gt;, and &lt;export_view_sql&gt; all function the same way as the &lt;group_view_sql&gt;, &lt;type_view_sql&gt;, and &lt;export_view_sql&gt; for the Entry Validation page. These all can be configured per country using the "country" attribute. The following variables will be replaced if used in the queries.

													Parameters:
													@businessunit@ - ImporterID, if chosen on the dropdown on the screen
													@validationtype@ - Type of validation, if chosen on the dropdown on the screen
													@partnerid@ - PartnerId of the current partner
													@gcdb@ - GC location, as defined at /import/location_of_global_classification_db
													@filertable@ - The main EV data table, e.g. txdUSEntryVisibility (this will update for the current country)
													@governmenttable@ - The main EV Govt table, e.g. txdUSEVGovernmentData (this will update for the current country)
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:complexType></xs:element><xs:element name="entry_data_audit"><xs:annotation><xs:documentation>
										This section applies to the Entry Data Audit.
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="require_status_note"><xs:annotation><xs:documentation>
													Y - A note is required when changing the status of an entry within an audit
													N - A note is not required when changing the status
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="YesNo"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to.
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="audit_total_required"><xs:annotation><xs:documentation>
													This element configures the number of entries to be audited. By changing the @type attribute on it, it can be a flat number or a percentage of the total entries for each broker.

													Default (Value): 15
													Default (@type): N

													Values:	Any number(but can flip between percentage and a flat amount)

													@type Values: 	N - the given number of entries will be audited
													P - the given percentage of entries will be audited (e.g. 10 = 10% of entries)
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:unsignedByte"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to.
																</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="type" use="required"><xs:annotation><xs:documentation>
																	This can be P or N. N means "flat number of audits required", P means "N% of total number of audits required.
																</xs:documentation></xs:annotation><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="P" /><xs:enumeration value="N" /></xs:restriction></xs:simpleType></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="header"><xs:annotation><xs:documentation>
													This will configure the header grid and its pop-up window on the Entry Data Audit Detail page for the given country.
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="query" type="xs:string"><xs:annotation><xs:documentation>
																This query will be used to populate the header grid when viewing entries for the given country. The query must use "SELECT TOP 1", and it must select EntryGuid and EntryNum as the first two fields.

																Parameters:
																- @PARTNERID@
																- @ENTRYGUID@
															</xs:documentation></xs:annotation></xs:element><xs:element name="fields_per_row" type="xs:unsignedByte"><xs:annotation><xs:documentation>
																Number of fields to display per row in the view.
															</xs:documentation></xs:annotation></xs:element><xs:element name="field_configurations" minOccurs="0"><xs:annotation><xs:documentation>
																This will configure the Harmonized/Broker Data tabs on the Entry Validation page
																No field will be enabled
																Every field in the EV table and supplemental table you''re using must have a field_configuration
																element for every field in the table
																- Default behavior is to show any field missing a field_configuration element
																Fields will be shown left to right, top to bottom in the order that they are included in the
																&lt;harmonized_field_configurations&gt; and &lt;broker_field_configurations&gt; elements.

																If using a URL on the field, as described below, a query can be associated with the field to pull required values for the URL

																- Add a &lt;url_query&gt; element within the &lt;field_configuration&gt; element
																- Parameters that will be replaced in the query as well as in the URL:
																- @PARTNERID@, @VALIDATIONTABLE@, @COUNTRYCODE@, @ENTRYNUM@, @ENTRYGUID@
																- The special parameter @CONTROL_VALUE@ will take the value of the actual field on the screen
																- Values pulled from the query will replace values in the URL with the form @COLUMNNAME@
															</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="field_configuration" minOccurs="0"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="field" type="xs:string" use="required"><xs:annotation><xs:documentation>
																					@TODO
																				</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="visible" type="YesNo" use="optional"><xs:annotation><xs:documentation>
																					@TODO
																				</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="numeric_cast" type="xs:string" use="optional"><xs:annotation><xs:documentation>
																					This defines a SQL cast to be used for numeric fields that could be too long to show on the screen.

																					- This should be a comma-delimited list for the precision and scale of the cast
																					- For example, if a number should be cast as a numeric(25,10) field, then the value of the numeric_cast attribute should be "25,10"
																				</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="detail"><xs:annotation><xs:documentation>
													This will configure the detail grid and its pop-up window on the Entry Data Audit Detail page for the given country.
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="query" type="xs:string"><xs:annotation><xs:documentation>
																The SQL query to populate the grid.
															</xs:documentation></xs:annotation></xs:element><xs:element name="fields_per_row" type="xs:unsignedByte"><xs:annotation><xs:documentation>
																Number of fields per row to display in the view.
															</xs:documentation></xs:annotation></xs:element><xs:element name="field_configurations" minOccurs="0"><xs:annotation><xs:documentation>
																This will configure the Harmonized/Broker Data tabs on the Entry Validation page
																No field will be enabled
																Every field in the EV table and supplemental table you''re using must have a field_configuration
																element for every field in the table
																- Default behavior is to show any field missing a field_configuration element
																Fields will be shown left to right, top to bottom in the order that they are included in the
																&lt;harmonized_field_configurations&gt; and &lt;broker_field_configurations&gt; elements.

																If using a URL on the field, as described below, a query can be associated with the field to pull required values for the URL

																- Add a &lt;url_query&gt; element within the &lt;field_configuration&gt; element
																- Parameters that will be replaced in the query as well as in the URL:
																- @PARTNERID@, @VALIDATIONTABLE@, @COUNTRYCODE@, @ENTRYNUM@, @ENTRYGUID@
																- The special parameter @CONTROL_VALUE@ will take the value of the actual field on the screen
																- Values pulled from the query will replace values in the URL with the form @COLUMNNAME@
															</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="field_configuration" minOccurs="0"><xs:annotation><xs:documentation>
																			@TODO
																		</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="field" type="xs:string" use="required"><xs:annotation><xs:documentation>
																					@TODO
																				</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="visible" type="YesNo" use="optional"><xs:annotation><xs:documentation>
																					@TODO
																				</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="numeric_cast" type="xs:string" use="optional"><xs:annotation><xs:documentation>
																					This defines a SQL cast to be used for numeric fields that could be too long to show on the screen.

																					- This should be a comma-delimited list for the precision and scale of the cast
																					- For example, if a number should be cast as a numeric(25,10) field, then the value of the numeric_cast attribute should be "25,10"
																				</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:complexType></xs:element><xs:element name="declaration_correction"><xs:annotation><xs:documentation>
										This will configure the Declaration Correction screen. Each element can have a "country" attribute added to define different items per country.
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="correction_status"><xs:annotation><xs:documentation>
													GlobalCode for the status which indicates that an entry can have corrections made.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to.
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="invalid_fields"><xs:annotation><xs:documentation>
													Comma-delimited list of fields that can''t be corrected. These will not be shown or included on the screen.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to.
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="all_entries_query_guid"><xs:annotation><xs:documentation>
													This query must select EntryGUID and EntryNum, and any field added must be included in the GROUP BY clause.

													Parameters:
													- @PARTNERID@ = PartnerID
													- @VALIDATIONTABLE@ = Main EV table (e.g. txdUSEntryVisibility)
													- @INVALIDFIELDS@ = List of fields that can''t be corrected (defined above in &lt;invalid_fields&gt;)
													- @STATUS@ = Status configured above in &lt;correction_status&gt; that entries must be in to be corrected
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to.
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="selected_entry_query_guid"><xs:annotation><xs:documentation>
													This query must select EntryGUID, LineGUID, LineNum, and an "O" or "X" to denote errors. Any field added beyond those must be included in the GROUP BY clause.

													Parameters:
													- @PARTNERID@ = PartnerID
													- @VALIDATIONTABLE@ = Main EV table (e.g. txdUSEntryVisibility)
													- @INVALIDFIELDS@ = List of fields that can''t be corrected (defined above in &lt;invalid_fields&gt;)
													- @ENTRYGUID@ = EntryGUID of the current entry
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to.
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="mark_complete_after_save_guid"><xs:annotation><xs:documentation>
													This is optional. If included, the query will be run after marking an entry''s corrections as complete.

													Parameters:
													- @PARTNERID@ = PartnerID
													- @VALIDATIONTABLE@ = Main EV table (e.g. txdUSEntryVisibility)
													- @ENTRYGUID@ = EntryGUID of the entry that was closed
												</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
															Country this applies to.
														</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="validation"><xs:annotation><xs:documentation>
													This section configures the ABI validation process for the EV corrections. For now this should only be enabled for US partners.
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="enabled" type="YesNo"><xs:annotation><xs:documentation>
																Controls whether the validation process is enabled
															</xs:documentation></xs:annotation></xs:element><xs:element name="self_filing" type="xs:string"><xs:annotation><xs:documentation>
																Sets whether this partner can self-file. Must already have ABI for this to be enabled, as self-filers will be directed to the ABI screens to finish any corrections and transmit.
															</xs:documentation></xs:annotation></xs:element></xs:sequence><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
															Country this applies to.
														</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /><xs:attribute name="tfs" type="xs:unsignedShort" use="optional" /></xs:complexType></xs:element><xs:element name="recon"><xs:annotation><xs:documentation>
										This section configures the Recon process for the EV entries. For now this should only be enabled for US partners.
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="enabled"><xs:annotation><xs:documentation>
													Needs to be enabled in order to use the EV Recon screen.
												</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
																	Country this applies to.
																</xs:documentation></xs:annotation></xs:attribute></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="recon_query_guid"><xs:annotation><xs:documentation>
													The recon_query_guid and non_recon_query_guid will override the default queries on the EV Recon page if included. Only the tmgSQL SQLGUID is required, not the full queries.

													The following parameters will be replaced in the queries:
													- @PARTNERID@ = PartnerID
													- @VALIDATIONTABLE@ = Main txd(CountryCode)EntryVisibility table

													Special Considerations:
													Recon Query:
													- EntryGUID, EntryNum, and ReconciliationIssueCode aliased as ReconCode must be selected
													- ConventionalReconNum (join to txdUSReconHeader to get Recon EntryNumber) must be selected
													- ConventionalReconValidation (join to txdUSReconValidationWarnings, ''Y'' if validations exist, ''N'' otherwise)
													- Only select entries where the ReconciliationFlag is ''Y''
													Non-Recon Query:
													- EntryGUID must be selected
													- Only select entries where the ReconciliationFlag is NOT ''Y''
												</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
															Country this applies to.
														</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="non_recon_query_guid"><xs:annotation><xs:documentation>
													The recon_query_guid and non_recon_query_guid will override the default queries on the EV Recon page if included. Only the tmgSQL SQLGUID is required, not the full queries.

													The following parameters will be replaced in the queries:
													- @PARTNERID@ = PartnerID
													- @VALIDATIONTABLE@ = Main txd(CountryCode)EntryVisibility table

													Special Considerations:
													Recon Query:
													- EntryGUID, EntryNum, and ReconciliationIssueCode aliased as ReconCode must be selected
													- ConventionalReconNum (join to txdUSReconHeader to get Recon EntryNumber) must be selected
													- ConventionalReconValidation (join to txdUSReconValidationWarnings, ''Y'' if validations exist, ''N'' otherwise)
													- Only select entries where the ReconciliationFlag is ''Y''
													Non-Recon Query:
													- EntryGUID must be selected
													- Only select entries where the ReconciliationFlag is NOT ''Y''
												</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
															Country this applies to.
														</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="recon_code_update"><xs:annotation><xs:documentation>
													Defines whether the users can update the ReconciliationIssueCode for the entries that appear in the main Recon grid. A button labeled "Update Selected Recon Codes" will show at the top of the grid if enabled.
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="enabled" type="YesNo"><xs:annotation><xs:documentation>
																Whether or not users can update the Reconciliation Issue code.
															</xs:documentation></xs:annotation></xs:element></xs:sequence><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
															Country this applies to.
														</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element><xs:element name="recon_flag_update"><xs:annotation><xs:documentation>
													Defines whether the users can update the ReconciliationFlag for entries that aren''t currently flagged for Recon and don''t show up in the main Recon grid. If enabled, a second tab will appear on the page with a grid showing all non-flagged entries where the flag can be updated. If disabled, the tab will not appear.
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="enabled" type="YesNo"><xs:annotation><xs:documentation>
																Whether or not users can update the ReconciliationFlag.
															</xs:documentation></xs:annotation></xs:element></xs:sequence><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
															Country this applies to.
														</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="abi"><xs:annotation><xs:documentation>
										This section configures specifics needed for pushing data from EV to ABI, currently used for the PSC and Recon processes. For now this should only be used for US partners.
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="mode_of_transport"><xs:annotation><xs:documentation>
													This will configure how the system treats the ModeOfTransport, MasterBillOfLading, and HouseBillOfLading fields when pushing data to ABI for the PSC and Recon processes. An &lt;mot&gt; element should be included below in the &lt;mode_of_transport&gt; section for each ModeOfTransport type that the partner uses. Explanations of the attributes for these elements are below.
												</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="mot"><xs:complexType><xs:attribute name="type" type="xs:string" use="required"><xs:annotation><xs:documentation>
																		Value used in EV ModeOfTransport field. This could be the actual MOT codes, or some client use string representations for the codes.
																	</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="numeric" type="xs:string" use="required"><xs:annotation><xs:documentation>
																		Actual MOT Code corresponding to the type used. If the client stores the MOT codes in the EV fields already, this will be the same as the "type" attribute.
																	</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="master" type="YesNo" use="required"><xs:annotation><xs:documentation>
																		Defines whether the EV MasterBillOfLading field includes the master bill issuer.
																	</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="house" type="YesNo" use="required"><xs:annotation><xs:documentation>
																		Defines whether the EV HouseBillOfLading field includes the house bill issuer.
																	</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
															Country this applies to.
														</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="importer_dropdown_override"><xs:annotation><xs:documentation>
										This section can be used to override the default behavior of the Importer dropdown on the Entry Validation and Entry Summary pages. By default they will pull distinct BusinessUnit values from the txdEntryValidationConfiguration table.

										If other values are desired, such as pulling actual importer information from the EV table, this section can be used to configure the behavior by country.
									</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="query" type="xs:string"><xs:annotation><xs:documentation>
													This query should pull back distinct records and must pull back two values, one aliased as "Text" and the other as "Value". The "Text" column will be used as the visible text in the importer dropdown and the "Value" column will be used for the selected values. The "Value" column should be whichever Importer field the client uses (IORNum or ImporterID) so it can be used correctly to filter the results.

													Parameters:
													@ValidationTable - current EV country table (e.g. txdUSEntryVisibility)
													@PartnerID - current PartnerID
													@CountryCode - currently selected Country Code
												</xs:documentation></xs:annotation></xs:element><xs:element name="default_value"><xs:annotation><xs:documentation>
													If included, this value will be used to automatically select an importer in the dropdown on page load. This value must correspond to values of the field being pulled as the "Value" of the dropdown and not the "Text" in order for the automatic selection to work.
												</xs:documentation></xs:annotation></xs:element></xs:sequence><xs:attribute name="country" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
												Country this applies to.
											</xs:documentation></xs:annotation></xs:attribute><xs:attribute name="enabled" type="YesNo" use="required"><xs:annotation><xs:documentation>
												Whether or not this override should be enabled for this country.
											</xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:choice><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="build" type="xs:decimal" use="optional" /></xs:complexType></xs:element></xs:all></xs:complexType></xs:element></xs:schema>', N'N', N'N')
INSERT [dbo].[tbgXSDSchemas] ([PartnerID], [EffDate], [ProductName], [SchemaName], [SchemaXPath], [Assembly], [ClassName], [XSDSchema], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-01-15T16:24:26.080' AS DateTime), N'BPM', N'Decision Tree', N'configuration/decision_tree', N'', N'', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified"><xs:element name="configuration"><xs:complexType mixed="true"><xs:sequence><xs:element name="decision_tree"><xs:annotation><xs:documentation>Root Tag which contains all configurations for Decision Tree</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="category"><xs:annotation><xs:documentation>Category in which all Decision Tree resides </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="viewer"><xs:annotation><xs:documentation>This tag contains all configurations for Questionnaire/Viewer Screen</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:sequence maxOccurs="unbounded"><xs:element name="log_sql" type="xs:string"><xs:annotation><xs:documentation>This tag refers for Logging purpose</xs:documentation></xs:annotation></xs:element><xs:element name="session_timeout" type="xs:unsignedByte"><xs:annotation><xs:documentation>This tag defines length of time for which user session will be locked on Questionnaire/Viewer Page </xs:documentation></xs:annotation></xs:element><xs:element name="tree_panel"><xs:annotation><xs:documentation> This tag refers to panel which contains ''Title, Description and Notes'' field on Questionnaire/Viewer Screen</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="title" type="xs:string" use="required" /><xs:attribute name="visible" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="questionnaire_panel"><xs:annotation><xs:documentation>This tag refers to Questionnaire panel on which user answers Decision Tree Questions</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="title" type="xs:string" use="required" /><xs:attribute name="visible" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="input_panel"><xs:annotation><xs:documentation>This tag refers to panel on which User Inputs for Questionnaire/Viewer are populated</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="title" type="xs:string" use="required" /><xs:attribute name="visible" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="results_panel"><xs:annotation><xs:documentation>This tag refers to panel on which Result Logic is populated</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="title" type="xs:string" use="required" /><xs:attribute name="visible" type="xs:string" use="required" /><xs:attribute name="orderby" type="xs:string" use="optional" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="submit_button"><xs:annotation><xs:documentation>This tag refers to Submit Button on Questionnaire/Viewer Screen</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="redirect" type="xs:string" use="required" /><xs:attribute name="sql_redirect" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="clear_button"><xs:annotation><xs:documentation>This tag refers to Clear Button on Questionnaire/Viewer Screen</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="visible" type="xs:string" use="required" /></xs:complexType></xs:element><xs:element name="generate_button"><xs:annotation><xs:documentation>This tag refers to Generate Button on Questionnaire/Viewer Screen</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="visible" type="xs:string" use="required" /></xs:complexType></xs:element><xs:element name="exit_button"><xs:annotation><xs:documentation>This tag refers to Exit Button on Questionnaire/Viewer Screen</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="redirect" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="valid_file_extensions" type="xs:string"><xs:annotation><xs:documentation>This tag refers to File Extensions valid for uploading attachments</xs:documentation></xs:annotation></xs:element><xs:element name="reports"><xs:annotation><xs:documentation>Root tag which refers to generation of reports on Questionnaire/Viewer Screen</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="audit_report"><xs:annotation><xs:documentation>This tag refers to Report Name Decision Tree named Decision Tree Questionnaire.pdf</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="title" type="xs:string" use="required" /><xs:attribute name="generate" type="xs:string" use="required" /></xs:complexType></xs:element><xs:element name="input_report"><xs:annotation><xs:documentation>This tag refers to Report Name Decision Tree named Decision Tree Questionnaire Inputs.pdf</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="title" type="xs:string" use="required" /><xs:attribute name="generate" type="xs:string" use="required" /><xs:attribute name="showHidden" type="xs:string" use="required" /></xs:complexType></xs:element><xs:element name="results_report"><xs:annotation><xs:documentation>This tag refers to Report Name Decision Tree named Decision Tree Questionnaire Results.pdf</xs:documentation></xs:annotation><xs:complexType><xs:attribute name="title" type="xs:string" use="required" /><xs:attribute name="generate" type="xs:string" use="required" /><xs:attribute name="showHidden" type="xs:string" use="required" /></xs:complexType></xs:element></xs:sequence><xs:attribute name="generateOnSubmit" type="xs:string" use="required" /><xs:attribute name="visible" type="xs:string" use="required" /></xs:complexType></xs:element><xs:element maxOccurs="unbounded" name="execute_sql"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="name" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="sql_panels"><xs:annotation><xs:documentation>This tag refers to CData Block used to perform operations during/after completing questionnaire</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="sql_panel"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="title" type="xs:string" use="required" /><xs:attribute name="visible" type="xs:string" use="required" /><xs:attribute name="Update" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element><xs:element name="dropdown_autopostback"><xs:annotation><xs:documentation>This tag refers Submit button show/hide functionality for dropdowns</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="tfs" type="xs:unsignedShort" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="allow_edit"><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="required" /><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="tfs" type="xs:unsignedShort" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="single_submit"><xs:annotation><xs:documentation>This tag refers config to enable/disable Single Submit button for Questionnaire/Viewer Screen</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="required" /><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="tfs" type="xs:unsignedShort" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence></xs:sequence><xs:attribute name="title" type="xs:string" use="required" /></xs:complexType></xs:element><xs:element name="editor"><xs:annotation><xs:documentation>Root Tag containing Configuration for Decision Tree Editor Screen</xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="log_sql" type="xs:string"><xs:annotation><xs:documentation>This tag refers to Logging</xs:documentation></xs:annotation></xs:element><xs:element name="advanced" type="xs:string"><xs:annotation><xs:documentation>This tag refers for Advanced pane to configure question type(Dropdown) for Decision Tree Editor Screen</xs:documentation></xs:annotation></xs:element><xs:element name="server_side_callback" type="xs:string"><xs:annotation><xs:documentation>This tag refers with expanding Decision Tree on Decision Tree Editor Screen</xs:documentation></xs:annotation></xs:element><xs:element name="show_active_ajax_panel" type="xs:string"><xs:annotation><xs:documentation>This tag refers to behaviour of canvas loader</xs:documentation></xs:annotation></xs:element><xs:element name="expand_child_trees" type="xs:string"><xs:annotation><xs:documentation>This tag refers with Expanding child trees within Parent tree on Decision Tree Editor Screen </xs:documentation></xs:annotation></xs:element><xs:element name="tree_pane"><xs:annotation><xs:documentation>This tag refers with Tree Pane present on extreme right of Decision Tree Editor Screen </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="visible" type="xs:string" use="required" /><xs:attribute name="populate" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="question_pane"><xs:annotation><xs:documentation>This tag refers with Question Pane present on extreme right of Decision Tree Editor Screen </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="visible" type="xs:string" use="required" /><xs:attribute name="populate" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="result_pane"><xs:annotation><xs:documentation>This tag refers with Result Pane present on extreme right of Decision Tree Editor Screen </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="visible" type="xs:string" use="required" /><xs:attribute name="populate" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="logic_pane"><xs:annotation><xs:documentation>This tag refers with Logic Pane present on extreme right of Decision Tree Editor Screen </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="visible" type="xs:string" use="required" /><xs:attribute name="enabled_group" type="xs:unsignedShort" use="required" /><xs:attribute name="populate" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="exit_button"><xs:annotation><xs:documentation>This tag refers to Exit (link/button) present on extreme right of Decision Tree Editor Screen </xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="redirect" type="xs:string" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element><xs:element name="load_on_demand" type="xs:string"><xs:annotation><xs:documentation>This tag refers to config for loading respective content within panes present on extreme right of Decision Tree Editor Screen </xs:documentation></xs:annotation></xs:element><xs:element name="gtn_event_pane"><xs:annotation><xs:documentation>This tag refers with GTN Event Pane present on extreme right of Decision Tree Editor Screen </xs:documentation></xs:annotation><xs:complexType><xs:attribute name="visible" type="xs:string" use="required" /><xs:attribute name="populate" type="xs:string" use="required" /><xs:attribute name="enabled_group" type="xs:unsignedShort" use="required" /><xs:attribute name="filter" type="xs:string" use="required" /></xs:complexType></xs:element><xs:element name="allow_snapshots"><xs:annotation><xs:documentation>This tag refers to config to enable/disable snapshots of Decision Tree</xs:documentation></xs:annotation><xs:complexType><xs:simpleContent><xs:extension base="xs:string"><xs:attribute name="owner" type="xs:string" use="required" /><xs:attribute name="release" type="xs:decimal" use="required" /><xs:attribute name="tfs" type="xs:unsignedShort" use="required" /></xs:extension></xs:simpleContent></xs:complexType></xs:element></xs:sequence><xs:attribute name="title" type="xs:string" use="required" /></xs:complexType></xs:element><xs:element name="in_use_check" type="xs:string"><xs:annotation><xs:documentation>This tag refers to config to check availability while loading Decision Tree on Decision Tree Editor Screen</xs:documentation></xs:annotation></xs:element></xs:sequence><xs:attribute name="name" type="xs:string" use="required" /><xs:attribute name="access_group" type="xs:string" use="required" /></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:schema>', N'N', N'N')
, (4000, CAST(N'2019-01-15T16:24:26.147' AS DateTime), N'Global Classification', N'Classification Request - Detail Fields', N'/configuration/product_classification/detail_fields', N'', N'', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified"><xs:element name="configuration"><xs:complexType><xs:sequence><xs:element minOccurs="1" name="detail_fields"><xs:annotation><xs:documentation>
              Configuration that controls the behavior of the detail grid on Classification Request (radgrid below the main form).
            </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="field"><xs:annotation><xs:documentation>
                    Represents a single column in the detail grid on Classification Update.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all minOccurs="0"><xs:element name="source_query" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                          Query that must be defined when you have a dropdown list control defined as your field. This query is the datasource for the dropdown. The query must be in Code,Decode format.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="source_text" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                          Determines which field in the source_query is the text field for the dropdown. An example would be if you select Name, Code from tmfCountry in the source_query then you would put Name as the innertext.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="source_value" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                          Determines which field in the source_query is the value for the dropdown. An example would be if you select Name, Code from tmfCountry in the source_query then you would put Code as the innertext.
                        </xs:documentation></xs:annotation></xs:element></xs:all><xs:attribute name="dbfield" type="xs:string" use="required"><xs:annotation><xs:documentation>
                        The database field for the detail column. Main table is tmdClassificationRequestDetail, along with the ''supplemental_table'' defined by the parent ''detail_fields'' element (default tmd_{PartnerID}_ClassificationRequestDetailSupplemental). This attribute must be filled out and must contain a field in one of those two tables, or the screen will error out.
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="name" type="xs:string" use="required"><xs:annotation><xs:documentation>
                        Essentialy the field alias that the column header text is set to in the detail grid. It must be filled in our the screen will error out.
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="required" type="YesNo" use="optional"><xs:annotation><xs:documentation>
                        The column is required to be filled in before a request can be created/updated. By default, this value is N (including if the attribute isn''t present).
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="input" use="optional" default="TEXTBOX"><xs:annotation><xs:documentation>Control type that will be in each cell for that column in the grid.</xs:documentation></xs:annotation><xs:simpleType><xs:union><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="DATEPICKER" /><xs:enumeration value="DROPDOWNLIST" /><xs:enumeration value="TEXTBOX" /><xs:enumeration value="NUMERICTEXTBOX" /><xs:enumeration value="DP" /><xs:enumeration value="D" /><xs:enumeration value="T" /><xs:enumeration value="NT" /></xs:restriction></xs:simpleType><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[Dd][Aa][Tt][Ee][Pp][Ii][Cc][Kk][Ee][Rr]" /><xs:pattern value="[Dd][Rr][Oo][Pp][Dd][Oo][Ww][Nn][Ll][Ii][Ss][Tt]" /><xs:pattern value="[Tt][Ee][Xx][Tt][Bb][Oo][Xx]" /><xs:pattern value="[Nn][Uu][Mm][Ee][Rr][Ii][Cc][Tt][Ee][Xx][Tt][Bb][Oo][Xx]" /><xs:pattern value="[Dd][Pp]" /><xs:pattern value="[Dd]" /><xs:pattern value="[Tt]" /><xs:pattern value="[Nn][Tt]" /></xs:restriction></xs:simpleType></xs:union></xs:simpleType></xs:attribute><xs:attribute name="sup" type="YesNo" use="optional"><xs:annotation><xs:documentation>
                        Not required, by default it is N. When set to Y, it indicates that the field belongs to a supplemental table.
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disabled_group_name" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                        Comma delimited list of IP security group names that this field is disabled for.
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disabled_statuses" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                        Comma delimited list of request statuses that this field is disabled for.
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="identifier" type="YesNo" use="optional"><xs:annotation><xs:documentation>
                        Signifies whether or not the field is unique. If it is Y, then the field is unique, else it isn''t.
                      </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence><xs:attribute name="supplemental_table" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                  Name of the supplemental table that will be left-joined to in detail grid/excel extract. If this attribute doesn''t exist for a partner, the default table name is tmd_{PartnerID}_ClassificationRequestDetailSupplemental.
                </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:schema>', N'N', N'N')
INSERT [dbo].[tbgXSDSchemas] ([PartnerID], [EffDate], [ProductName], [SchemaName], [SchemaXPath], [Assembly], [ClassName], [XSDSchema], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-01-15T16:24:26.147' AS DateTime), N'Global Classification', N'Classification Request - Request Fields', N'/configuration/product_classification/request_fields', N'', N'', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified"><xs:element name="configuration"><xs:complexType><xs:sequence><xs:element minOccurs="1" name="detail_fields"><xs:annotation><xs:documentation>
              Configuration that controls the behavior of the detail grid on Classification Request (radgrid below the main form).
            </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element maxOccurs="unbounded" name="field"><xs:annotation><xs:documentation>
                    Represents a single column in the detail grid on Classification Update.
                  </xs:documentation></xs:annotation><xs:complexType><xs:all minOccurs="0"><xs:element name="source_query" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                          Query that must be defined when you have a dropdown list control defined as your field. This query is the datasource for the dropdown. The query must be in Code,Decode format.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="source_text" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                          Determines which field in the source_query is the text field for the dropdown. An example would be if you select Name, Code from tmfCountry in the source_query then you would put Name as the innertext.
                        </xs:documentation></xs:annotation></xs:element><xs:element name="source_value" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                          Determines which field in the source_query is the value for the dropdown. An example would be if you select Name, Code from tmfCountry in the source_query then you would put Code as the innertext.
                        </xs:documentation></xs:annotation></xs:element></xs:all><xs:attribute name="dbfield" type="xs:string" use="required"><xs:annotation><xs:documentation>
                        The database field for the detail column. Main table is tmdClassificationRequestDetail, along with the ''''supplemental_table'''' defined by the parent ''''detail_fields'''' element (default tmd_{PartnerID}_ClassificationRequestDetailSupplemental). This attribute must be filled out and must contain a field in one of those two tables, or the screen will error out.
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="name" type="xs:string" use="required"><xs:annotation><xs:documentation>
                        Essentialy the field alias that the column header text is set to in the detail grid. It must be filled in our the screen will error out.
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="required" type="YesNo" use="optional"><xs:annotation><xs:documentation>
                        The column is required to be filled in before a request can be created/updated. By default, this value is N (including if the attribute isn''''t present).
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="input" use="optional" default="TEXTBOX"><xs:annotation><xs:documentation>Control type that will be in each cell for that column in the grid.</xs:documentation></xs:annotation><xs:simpleType><xs:union><xs:simpleType><xs:restriction base="xs:string"><xs:enumeration value="DATEPICKER" /><xs:enumeration value="DROPDOWNLIST" /><xs:enumeration value="TEXTBOX" /><xs:enumeration value="NUMERICTEXTBOX" /><xs:enumeration value="DP" /><xs:enumeration value="D" /><xs:enumeration value="T" /><xs:enumeration value="NT" /></xs:restriction></xs:simpleType><xs:simpleType><xs:restriction base="xs:string"><xs:pattern value="[Dd][Aa][Tt][Ee][Pp][Ii][Cc][Kk][Ee][Rr]" /><xs:pattern value="[Dd][Rr][Oo][Pp][Dd][Oo][Ww][Nn][Ll][Ii][Ss][Tt]" /><xs:pattern value="[Tt][Ee][Xx][Tt][Bb][Oo][Xx]" /><xs:pattern value="[Nn][Uu][Mm][Ee][Rr][Ii][Cc][Tt][Ee][Xx][Tt][Bb][Oo][Xx]" /><xs:pattern value="[Dd][Pp]" /><xs:pattern value="[Dd]" /><xs:pattern value="[Tt]" /><xs:pattern value="[Nn][Tt]" /></xs:restriction></xs:simpleType></xs:union></xs:simpleType></xs:attribute><xs:attribute name="sup" type="YesNo" use="optional"><xs:annotation><xs:documentation>
                        Not required, by default it is N. When set to Y, it indicates that the field belongs to a supplemental table.
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disabled_group_name" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                        Comma delimited list of IP security group names that this field is disabled for.
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="disabled_statuses" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                        Comma delimited list of request statuses that this field is disabled for.
                      </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="identifier" type="YesNo" use="optional"><xs:annotation><xs:documentation>
                        Signifies whether or not the field is unique. If it is Y, then the field is unique, else it isn''''t.
                      </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:sequence><xs:attribute name="supplemental_table" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                  Name of the supplemental table that will be left-joined to in detail grid/excel extract. If this attribute doesn''''t exist for a partner, the default table name is tmd_{PartnerID}_ClassificationRequestDetailSupplemental.
                </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="owner" type="xs:string" use="optional" /><xs:attribute name="release" type="xs:decimal" use="optional" /></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:schema>', N'N', N'N')
INSERT [dbo].[tbgXSDSchemas] ([PartnerID], [EffDate], [ProductName], [SchemaName], [SchemaXPath], [Assembly], [ClassName], [XSDSchema], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-01-15T16:24:26.150' AS DateTime), N'Global Classification', N'Classification Request - Request Email', N'/configuration/product_classification/request_email', N'', N'', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified"><xs:element name="configuration"><xs:complexType><xs:sequence><xs:element name="request_email" minOccurs="0"><xs:annotation><xs:documentation>
              Configuration for email window on Classification Request. For each of these fields will pull data from the request for the variable @dbfield@, where dbfield is one of the dbfields of the request_fields above.
              Example - if you have:
              field name="Email" dbfield="RequestorEmail" input_type="T" required="Y" rows="1" colspan="1" disabled_group_name="IP Read Only Group" disabled_statuses="Active,Closed"
              Then you could put @RequestorEmail@ anywhere in the nodes below, and it will be replaced with the database value for that field for that request.
            </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="to" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                    What is populated in the to-line in the email modal window by default goes in the innertext here.
                  </xs:documentation></xs:annotation></xs:element><xs:element name="cc" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                    What is populated in the cc-line in the email modal window by default goes in the innertext here.
                  </xs:documentation></xs:annotation></xs:element><xs:element name="subject" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                    What is populated in the subject line in the email modal window by default goes in the innertext here.
                  </xs:documentation></xs:annotation></xs:element><xs:element name="body" type="xs:string" minOccurs="0"><xs:annotation><xs:documentation>
                    What is populated in the body field in the email modal window by default goes in the innertext here.
                  </xs:documentation></xs:annotation></xs:element></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:schema>', N'N', N'N')
INSERT [dbo].[tbgXSDSchemas] ([PartnerID], [EffDate], [ProductName], [SchemaName], [SchemaXPath], [Assembly], [ClassName], [XSDSchema], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-01-15T16:24:26.150' AS DateTime), N'Global Classification', N'Statistical Classifier', N'/configuration/product_classification/statistical_classifier', N'', N'', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified"><xs:element name="configuration"><xs:complexType><xs:sequence><xs:element name="statistical_classifier" minOccurs="0"><xs:annotation><xs:documentation>
              Section that configures the Statistical Classifier window on Edit Classifications. 
            </xs:documentation></xs:annotation><xs:complexType><xs:sequence><xs:element name="allow_user_customizable_weights" type="xs:string" minOccurs="0" maxOccurs="1" default="N"><xs:annotation><xs:documentation>
                    By default, customizable weights aren''t shown. When the inner text of this element is set to Y, the customizable weight sliders show in the statistical classifier control.
                  </xs:documentation></xs:annotation></xs:element><xs:element minOccurs="1" maxOccurs="1" name="profiles"><xs:annotation><xs:documentation>
                    Represents a list of country profiles that the statistical classifier will show for (if data exists in the proper sc tables).
                  </xs:documentation></xs:annotation><xs:complexType><xs:all><xs:element name="profile"><xs:annotation><xs:documentation>
                          Represents a country profile that the statistical classifier will show for (if data exists in the proper sc tables).
                        </xs:documentation></xs:annotation><xs:complexType><xs:choice><xs:element minOccurs="1" maxOccurs="unbounded" name="column"><xs:annotation><xs:documentation>
                                Column that the statistical classifier will run its calculations against for the profile.
                              </xs:documentation></xs:annotation><xs:complexType><xs:attribute name="name" type="xs:string" use="required"><xs:annotation><xs:documentation>
                                    Database column name for the column.
                                  </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="algorithm" type="xs:string" use="optional" default="WordCountFrequency"><xs:annotation><xs:documentation>
                                    Algorithm used to run statistics. Currently is optional and WordCountFrequency is the only one that runs anyways.
                                  </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="weight" type="xs:decimal" use="optional" default="1.0"><xs:annotation><xs:documentation>
                                    Weight in which statistics factor in this field. Higher weight put, the more the results for this column will factor against the other columns in this profile.
                                  </xs:documentation></xs:annotation></xs:attribute><xs:attribute name="table" type="xs:string" use="optional"><xs:annotation><xs:documentation>
                                    Table of the column. This only needs to be filled out if the column is in an addl/supplemental table.
                                  </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:choice><xs:attribute name="name" type="ISOCountryCode" use="required"><xs:annotation><xs:documentation>
                              Country code for the profile.
                            </xs:documentation></xs:annotation></xs:attribute></xs:complexType></xs:element></xs:all></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:sequence></xs:complexType></xs:element></xs:schema>', N'N', N'N')
INSERT [dbo].[tbgXSDSchemas] ([PartnerID], [EffDate], [ProductName], [SchemaName], [SchemaXPath], [Assembly], [ClassName], [XSDSchema], [DeletedFlag], [KeepDuringRollback]) VALUES (4000, CAST(N'2019-01-15T16:24:26.153' AS DateTime), N'', N'GlobalTypes', N'', N'', N'', N'<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" id="GlobalTypes" attributeFormDefault="unqualified" elementFormDefault="qualified"><xs:simpleType name="ISOCountryCode"><xs:annotation><xs:documentation>Two-letter (alpha-2) ISO 3166-1 code for one of the 243 countries (plus the ''Global'' country code)</xs:documentation></xs:annotation><xs:restriction base="xs:string"><xs:enumeration value="" /><!-- GLOBAL --><xs:enumeration value="AF" /><!--  AFGHANISTAN  --><xs:enumeration value="AX" /><!--  ALAND ISLANDS  --><xs:enumeration value="AL" /><!--  ALBANIA  --><xs:enumeration value="DZ" /><!--  ALGERIA  --><xs:enumeration value="AS" /><!--  AMERICAN SAMOA  --><xs:enumeration value="AD" /><!--  ANDORRA  --><xs:enumeration value="AO" /><!--  ANGOLA  --><xs:enumeration value="AI" /><!--  ANGUILLA  --><xs:enumeration value="AQ" /><!--  ANTARCTICA  --><xs:enumeration value="AG" /><!--  ANTIGUA AND BARBUDA  --><xs:enumeration value="AR" /><!--  ARGENTINA  --><xs:enumeration value="AM" /><!--  ARMENIA  --><xs:enumeration value="AW" /><!--  ARUBA  --><xs:enumeration value="AU" /><!--  AUSTRALIA  --><xs:enumeration value="AT" /><!--  AUSTRIA  --><xs:enumeration value="AZ" /><!--  AZERBAIJAN  --><xs:enumeration value="BS" /><!--  BAHAMAS  --><xs:enumeration value="BH" /><!--  BAHRAIN  --><xs:enumeration value="BD" /><!--  BANGLADESH  --><xs:enumeration value="BB" /><!--  BARBADOS  --><xs:enumeration value="BY" /><!--  BELARUS  --><xs:enumeration value="BE" /><!--  BELGIUM  --><xs:enumeration value="BZ" /><!--  BELIZE  --><xs:enumeration value="BJ" /><!--  BENIN  --><xs:enumeration value="BM" /><!--  BERMUDA  --><xs:enumeration value="BT" /><!--  BHUTAN  --><xs:enumeration value="BO" /><!--  BOLIVIA  --><xs:enumeration value="BA" /><!--  BOSNIA AND HERZEGOVINA  --><xs:enumeration value="BW" /><!--  BOTSWANA  --><xs:enumeration value="BV" /><!--  BOUVET ISLAND  --><xs:enumeration value="BR" /><!--  BRAZIL  --><xs:enumeration value="IO" /><!--  BRITISH INDIAN OCEAN TERRITORY  --><xs:enumeration value="BN" /><!--  BRUNEI DARUSSALAM  --><xs:enumeration value="BG" /><!--  BULGARIA  --><xs:enumeration value="BF" /><!--  BURKINA FASO  --><xs:enumeration value="BI" /><!--  BURUNDI  --><xs:enumeration value="KH" /><!--  CAMBODIA  --><xs:enumeration value="CM" /><!--  CAMEROON  --><xs:enumeration value="CA" /><!--  CANADA  --><xs:enumeration value="CV" /><!--  CAPE VERDE  --><xs:enumeration value="KY" /><!--  CAYMAN ISLANDS  --><xs:enumeration value="CF" /><!--  CENTRAL AFRICAN REPUBLIC  --><xs:enumeration value="TD" /><!--  CHAD  --><xs:enumeration value="CL" /><!--  CHILE  --><xs:enumeration value="CN" /><!--  CHINA  --><xs:enumeration value="CX" /><!--  CHRISTMAS ISLAND  --><xs:enumeration value="CC" /><!--  COCOS (KEELING) ISLANDS  --><xs:enumeration value="CO" /><!--  COLOMBIA  --><xs:enumeration value="KM" /><!--  COMOROS  --><xs:enumeration value="CG" /><!--  CONGO  --><xs:enumeration value="CD" /><!--  CONGO, THE DEMOCRATIC REPUBLIC OF THE  --><xs:enumeration value="CK" /><!--  COOK ISLANDS  --><xs:enumeration value="CR" /><!--  COSTA RICA  --><xs:enumeration value="CI" /><!--  COTE D''IVOIRE  --><xs:enumeration value="HR" /><!--  CROATIA  --><xs:enumeration value="CU" /><!--  CUBA  --><xs:enumeration value="CY" /><!--  CYPRUS  --><xs:enumeration value="CZ" /><!--  CZECH REPUBLIC  --><xs:enumeration value="DK" /><!--  DENMARK  --><xs:enumeration value="DJ" /><!--  DJIBOUTI  --><xs:enumeration value="DM" /><!--  DOMINICA  --><xs:enumeration value="DO" /><!--  DOMINICAN REPUBLIC  --><xs:enumeration value="EC" /><!--  ECUADOR  --><xs:enumeration value="EG" /><!--  EGYPT  --><xs:enumeration value="SV" /><!--  EL SALVADOR  --><xs:enumeration value="GQ" /><!--  EQUATORIAL GUINEA  --><xs:enumeration value="ER" /><!--  ERITREA  --><xs:enumeration value="EE" /><!--  ESTONIA  --><xs:enumeration value="ET" /><!--  ETHIOPIA  --><xs:enumeration value="FK" /><!--  FALKLAND ISLANDS (MALVINAS)  --><xs:enumeration value="FO" /><!--  FAROE ISLANDS  --><xs:enumeration value="FJ" /><!--  FIJI  --><xs:enumeration value="FI" /><!--  FINLAND  --><xs:enumeration value="FR" /><!--  FRANCE  --><xs:enumeration value="GF" /><!--  FRENCH GUIANA  --><xs:enumeration value="PF" /><!--  FRENCH POLYNESIA  --><xs:enumeration value="TF" /><!--  FRENCH SOUTHERN TERRITORIES  --><xs:enumeration value="GA" /><!--  GABON  --><xs:enumeration value="GM" /><!--  GAMBIA  --><xs:enumeration value="GE" /><!--  GEORGIA  --><xs:enumeration value="DE" /><!--  GERMANY  --><xs:enumeration value="GH" /><!--  GHANA  --><xs:enumeration value="GI" /><!--  GIBRALTAR  --><xs:enumeration value="GR" /><!--  GREECE  --><xs:enumeration value="GL" /><!--  GREENLAND  --><xs:enumeration value="GD" /><!--  GRENADA  --><xs:enumeration value="GP" /><!--  GUADELOUPE  --><xs:enumeration value="GU" /><!--  GUAM  --><xs:enumeration value="GT" /><!--  GUATEMALA  --><xs:enumeration value="GG" /><!--  GUERNSEY  --><xs:enumeration value="GN" /><!--  GUINEA  --><xs:enumeration value="GW" /><!--  GUINEA-BISSAU  --><xs:enumeration value="GY" /><!--  GUYANA  --><xs:enumeration value="HT" /><!--  HAITI  --><xs:enumeration value="HM" /><!--  HEARD ISLAND AND MCDONALD ISLANDS  --><xs:enumeration value="VA" /><!--  HOLY SEE (VATICAN CITY STATE)  --><xs:enumeration value="HN" /><!--  HONDURAS  --><xs:enumeration value="HK" /><!--  HONG KONG  --><xs:enumeration value="HU" /><!--  HUNGARY  --><xs:enumeration value="IS" /><!--  ICELAND  --><xs:enumeration value="IN" /><!--  INDIA  --><xs:enumeration value="ID" /><!--  INDONESIA  --><xs:enumeration value="IR" /><!--  IRAN, ISLAMIC REPUBLIC OF  --><xs:enumeration value="IQ" /><!--  IRAQ  --><xs:enumeration value="IE" /><!--  IRELAND  --><xs:enumeration value="IM" /><!--  ISLE OF MAN  --><xs:enumeration value="IL" /><!--  ISRAEL  --><xs:enumeration value="IT" /><!--  ITALY  --><xs:enumeration value="JM" /><!--  JAMAICA  --><xs:enumeration value="JP" /><!--  JAPAN  --><xs:enumeration value="JE" /><!--  JERSEY  --><xs:enumeration value="JO" /><!--  JORDAN  --><xs:enumeration value="KZ" /><!--  KAZAKHSTAN  --><xs:enumeration value="KE" /><!--  KENYA  --><xs:enumeration value="KI" /><!--  KIRIBATI  --><xs:enumeration value="KP" /><!--  KOREA, DEMOCRATIC PEOPLE''S REPUBLIC OF  --><xs:enumeration value="KR" /><!--  KOREA, REPUBLIC OF  --><xs:enumeration value="KW" /><!--  KUWAIT  --><xs:enumeration value="KG" /><!--  KYRGYZSTAN  --><xs:enumeration value="LA" /><!--  LAO PEOPLE''S DEMOCRATIC REPUBLIC  --><xs:enumeration value="LV" /><!--  LATVIA  --><xs:enumeration value="LB" /><!--  LEBANON  --><xs:enumeration value="LS" /><!--  LESOTHO  --><xs:enumeration value="LR" /><!--  LIBERIA  --><xs:enumeration value="LY" /><!--  LIBYAN ARAB JAMAHIRIYA  --><xs:enumeration value="LI" /><!--  LIECHTENSTEIN  --><xs:enumeration value="LT" /><!--  LITHUANIA  --><xs:enumeration value="LU" /><!--  LUXEMBOURG  --><xs:enumeration value="MO" /><!--  MACAO  --><xs:enumeration value="MK" /><!--  MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF  --><xs:enumeration value="MG" /><!--  MADAGASCAR  --><xs:enumeration value="MW" /><!--  MALAWI  --><xs:enumeration value="MY" /><!--  MALAYSIA  --><xs:enumeration value="MV" /><!--  MALDIVES  --><xs:enumeration value="ML" /><!--  MALI  --><xs:enumeration value="MT" /><!--  MALTA  --><xs:enumeration value="MH" /><!--  MARSHALL ISLANDS  --><xs:enumeration value="MQ" /><!--  MARTINIQUE  --><xs:enumeration value="MR" /><!--  MAURITANIA  --><xs:enumeration value="MU" /><!--  MAURITIUS  --><xs:enumeration value="YT" /><!--  MAYOTTE  --><xs:enumeration value="MX" /><!--  MEXICO  --><xs:enumeration value="FM" /><!--  MICRONESIA, FEDERATED STATES OF  --><xs:enumeration value="MD" /><!--  MOLDOVA, REPUBLIC OF  --><xs:enumeration value="MC" /><!--  MONACO  --><xs:enumeration value="MN" /><!--  MONGOLIA  --><xs:enumeration value="MS" /><!--  MONTSERRAT  --><xs:enumeration value="MA" /><!--  MOROCCO  --><xs:enumeration value="MZ" /><!--  MOZAMBIQUE  --><xs:enumeration value="MM" /><!--  MYANMAR  --><xs:enumeration value="NA" /><!--  NAMIBIA  --><xs:enumeration value="NR" /><!--  NAURU  --><xs:enumeration value="NP" /><!--  NEPAL  --><xs:enumeration value="NL" /><!--  NETHERLANDS  --><xs:enumeration value="AN" /><!--  NETHERLANDS ANTILLES  --><xs:enumeration value="NC" /><!--  NEW CALEDONIA  --><xs:enumeration value="NZ" /><!--  NEW ZEALAND  --><xs:enumeration value="NI" /><!--  NICARAGUA  --><xs:enumeration value="NE" /><!--  NIGER  --><xs:enumeration value="NG" /><!--  NIGERIA  --><xs:enumeration value="NU" /><!--  NIUE  --><xs:enumeration value="NF" /><!--  NORFOLK ISLAND  --><xs:enumeration value="MP" /><!--  NORTHERN MARIANA ISLANDS  --><xs:enumeration value="NO" /><!--  NORWAY  --><xs:enumeration value="OM" /><!--  OMAN  --><xs:enumeration value="PK" /><!--  PAKISTAN  --><xs:enumeration value="PW" /><!--  PALAU  --><xs:enumeration value="PS" /><!--  PALESTINIAN TERRITORY, OCCUPIED  --><xs:enumeration value="PA" /><!--  PANAMA  --><xs:enumeration value="PG" /><!--  PAPUA NEW GUINEA  --><xs:enumeration value="PY" /><!--  PARAGUAY  --><xs:enumeration value="PE" /><!--  PERU  --><xs:enumeration value="PH" /><!--  PHILIPPINES  --><xs:enumeration value="PN" /><!--  PITCAIRN  --><xs:enumeration value="PL" /><!--  POLAND  --><xs:enumeration value="PT" /><!--  PORTUGAL  --><xs:enumeration value="PR" /><!--  PUERTO RICO  --><xs:enumeration value="QA" /><!--  QATAR  --><xs:enumeration value="RE" /><!--  REUNION  --><xs:enumeration value="RO" /><!--  ROMANIA  --><xs:enumeration value="RU" /><!--  RUSSIAN FEDERATION  --><xs:enumeration value="RW" /><!--  RWANDA  --><xs:enumeration value="SH" /><!--  SAINT HELENA  --><xs:enumeration value="KN" /><!--  SAINT KITTS AND NEVIS  --><xs:enumeration value="LC" /><!--  SAINT LUCIA  --><xs:enumeration value="PM" /><!--  SAINT PIERRE AND MIQUELON  --><xs:enumeration value="VC" /><!--  SAINT VINCENT AND THE GRENADINES  --><xs:enumeration value="WS" /><!--  SAMOA  --><xs:enumeration value="SM" /><!--  SAN MARINO  --><xs:enumeration value="ST" /><!--  SAO TOME AND PRINCIPE  --><xs:enumeration value="SA" /><!--  SAUDI ARABIA  --><xs:enumeration value="SN" /><!--  SENEGAL  --><xs:enumeration value="CS" /><!--  SERBIA AND MONTENEGRO  --><xs:enumeration value="SC" /><!--  SEYCHELLES  --><xs:enumeration value="SL" /><!--  SIERRA LEONE  --><xs:enumeration value="SG" /><!--  SINGAPORE  --><xs:enumeration value="SK" /><!--  SLOVAKIA  --><xs:enumeration value="SI" /><!--  SLOVENIA  --><xs:enumeration value="SB" /><!--  SOLOMON ISLANDS  --><xs:enumeration value="SO" /><!--  SOMALIA  --><xs:enumeration value="ZA" /><!--  SOUTH AFRICA  --><xs:enumeration value="GS" /><!--  SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS  --><xs:enumeration value="ES" /><!--  SPAIN  --><xs:enumeration value="LK" /><!--  SRI LANKA  --><xs:enumeration value="SD" /><!--  SUDAN  --><xs:enumeration value="SR" /><!--  SURINAME  --><xs:enumeration value="SJ" /><!--  SVALBARD AND JAN MAYEN  --><xs:enumeration value="SZ" /><!--  SWAZILAND  --><xs:enumeration value="SE" /><!--  SWEDEN  --><xs:enumeration value="CH" /><!--  SWITZERLAND  --><xs:enumeration value="SY" /><!--  SYRIAN ARAB REPUBLIC  --><xs:enumeration value="TW" /><!--  TAIWAN, PROVINCE OF CHINA  --><xs:enumeration value="TJ" /><!--  TAJIKISTAN  --><xs:enumeration value="TZ" /><!--  TANZANIA, UNITED REPUBLIC OF  --><xs:enumeration value="TH" /><!--  THAILAND  --><xs:enumeration value="TL" /><!--  TIMOR-LESTE  --><xs:enumeration value="TG" /><!--  TOGO  --><xs:enumeration value="TK" /><!--  TOKELAU  --><xs:enumeration value="TO" /><!--  TONGA  --><xs:enumeration value="TT" /><!--  TRINIDAD AND TOBAGO  --><xs:enumeration value="TN" /><!--  TUNISIA  --><xs:enumeration value="TR" /><!--  TURKEY  --><xs:enumeration value="TM" /><!--  TURKMENISTAN  --><xs:enumeration value="TC" /><!--  TURKS AND CAICOS ISLANDS  --><xs:enumeration value="TV" /><!--  TUVALU  --><xs:enumeration value="UG" /><!--  UGANDA  --><xs:enumeration value="UA" /><!--  UKRAINE  --><xs:enumeration value="AE" /><!--  UNITED ARAB EMIRATES  --><xs:enumeration value="GB" /><!--  UNITED KINGDOM  --><xs:enumeration value="US" /><!--  UNITED STATES  --><xs:enumeration value="UM" /><!--  UNITED STATES MINOR OUTLYING ISLANDS  --><xs:enumeration value="UY" /><!--  URUGUAY  --><xs:enumeration value="UZ" /><!--  UZBEKISTAN  --><xs:enumeration value="VU" /><!--  VANUATU  --><xs:enumeration value="VE" /><!--  VENEZUELA  --><xs:enumeration value="VN" /><!--  VIET NAM  --><xs:enumeration value="VG" /><!--  VIRGIN ISLANDS, BRITISH  --><xs:enumeration value="VI" /><!--  VIRGIN ISLANDS, U.S.  --><xs:enumeration value="WF" /><!--  WALLIS AND FUTUNA  --><xs:enumeration value="EH" /><!--  WESTERN SAHARA  --><xs:enumeration value="YE" /><!--  YEMEN  --><xs:enumeration value="ZM" /><!--  ZAMBIA  --><xs:enumeration value="ZW" /><!--  ZIMBABWE  --></xs:restriction></xs:simpleType><xs:simpleType name="YesNo"><xs:annotation><xs:documentation>Yes/No type, representing the values Y and N</xs:documentation></xs:annotation><xs:restriction base="xs:string"><xs:enumeration value="Y" /><xs:enumeration value="y" /><xs:enumeration value="N" /><xs:enumeration value="n" /><xs:enumeration value="" /></xs:restriction></xs:simpleType><xs:simpleType name="StringBoolean"><xs:annotation><xs:documentation>Yes/No type, representing the values Y and N and it can not be empty string</xs:documentation></xs:annotation><xs:restriction base="xs:string"><xs:pattern value="[Yy]" /><xs:pattern value="[Nn]" /></xs:restriction></xs:simpleType><xs:simpleType name="StringBooleanWithEmptyString"><xs:annotation><xs:documentation>Value should be either true, flase or empty string</xs:documentation></xs:annotation><xs:restriction base="xs:string"><xs:pattern value="[tT][rR][uU][eE]" /><xs:pattern value="[Ff][aA][Ll][Ss][eE]" /><xs:pattern value="" /></xs:restriction></xs:simpleType><xs:simpleType name="FTPPortsAndEmptyString"><xs:restriction base="xs:string"><xs:pattern value="[2][1]" /><xs:pattern value="[2][2]" /><xs:pattern value="" /></xs:restriction></xs:simpleType><xs:simpleType name="EmailID"><xs:annotation><xs:documentation>Validate email address with regular expression</xs:documentation></xs:annotation><xs:restriction base="xs:string"><xs:pattern value="[^@]+@[^\.]+\..+" /></xs:restriction></xs:simpleType><xs:simpleType name="FileTransferType"><xs:annotation><xs:documentation>File transfer methods</xs:documentation></xs:annotation><xs:restriction base="xs:string"><xs:pattern value="[Ff][Ii][Ll][Ee][Ss][Yy][Ss][Tt][Ee][Mm]" /><xs:pattern value="[Ff][Tt][Pp]" /><xs:pattern value="[Nn][Uu][Ll][Ll]" /><xs:pattern value="" /></xs:restriction></xs:simpleType><xs:simpleType name="IntegerMinOne"><xs:annotation><xs:documentation>Integer type with minimum value of 1</xs:documentation></xs:annotation><xs:restriction base="xs:integer"><xs:minInclusive value="1" /></xs:restriction></xs:simpleType><xs:simpleType name="NonNegativeIntegerAndEmptyString"><xs:restriction base="xs:string"><xs:pattern value="[0-9][0-9]" /><xs:pattern value="" /></xs:restriction></xs:simpleType><xs:simpleType name="HostURL"><xs:annotation><xs:documentation>Validate URL with regular expression</xs:documentation></xs:annotation><xs:restriction base="xs:string"><xs:pattern value="[A-Za-z0-9_.]+" /><xs:pattern value="" /></xs:restriction></xs:simpleType><xs:simpleType name="DateFormat"><xs:annotation><xs:documentation>Validate datetime formats</xs:documentation></xs:annotation><xs:restriction base="xs:string"><xs:enumeration value="variable" /><xs:enumeration value="yyyyMMddThhmmss" /><xs:enumeration value="yyyyMMddhhmmss" /><xs:enumeration value="yyyyMMddTHHmmss" /><xs:enumeration value="yyyyMMddHHmmss" /><xs:enumeration value="yyyyMMdd" /><xs:enumeration value="MM/dd/yyyy" /><xs:enumeration value="MM/dd/yyyy hh:mm" /><xs:enumeration value="MM/dd/yyyy HH:mm" /><xs:enumeration value="MM/dd/yyyy hh:mm:ss" /><xs:enumeration value="MM/dd/yyyy HH:mm:ss" /><xs:enumeration value="MM/dd/yy" /><xs:enumeration value="yyyy-MM-dd" /><xs:enumeration value="M/d/yyyy\Th:m:s" /><xs:enumeration value="M/d/yyyy\TH:m:s" /><xs:enumeration value="M/d/yyyy" /><xs:enumeration value="dd/MM/yyyy HH:mm:ss" /><xs:enumeration value="MM/dd/yyyy H:mm" /><xs:enumeration value="dd/MM/yyyy H:mm" /><xs:enumeration value="dd/MM/yyyy" /><xs:enumeration value="yyyy/MM/dd" /><xs:enumeration value="yyyymmddThhnnss" /><xs:enumeration value="yyyyMMdd-HH:mm:ss" /><xs:enumeration value="M/d/yyyy h:mm:ss tt" /><xs:enumeration value="yyyy-MM-ddTHH:mm:ss.fffzzzzzz" /><xs:enumeration value="yyyy-MM-ddTHH:mm:sszzzzzz" /><!--testing--><xs:enumeration value="yyyymmddThhmmss" /><xs:enumeration value="yyyymmddhhmmss" /><xs:enumeration value="yyyymmddTHHmmss" /><xs:enumeration value="yyyymmddHHmmss" /><xs:enumeration value="yyyymmdd" /><xs:enumeration value="mm/dd/yyyy" /><xs:enumeration value="mm/dd/yyyy hh:mm" /><xs:enumeration value="mm/dd/yyyy HH:mm" /><xs:enumeration value="mm/dd/yyyy hh:mm:ss" /><xs:enumeration value="mm/dd/yyyy HH:mm:ss" /><xs:enumeration value="mm/dd/yy" /><xs:enumeration value="yyyy-mm-dd" /><xs:enumeration value="m/d/yyyy\Th:m:s" /><xs:enumeration value="m/d/yyyy\TH:m:s" /><xs:enumeration value="m/d/yyyy" /><xs:enumeration value="dd/mm/yyyy HH:mm:ss" /><xs:enumeration value="mm/dd/yyyy H:mm" /><xs:enumeration value="dd/mm/yyyy H:mm" /><xs:enumeration value="dd/mm/yyyy" /><xs:enumeration value="yyyy/mm/dd" /><xs:enumeration value="yyyymmddThhnnss" /><xs:enumeration value="yyyymmddhhnnss" /><!-- testing ends--></xs:restriction></xs:simpleType><xs:simpleType name="Encoding"><xs:annotation><xs:documentation>List of Encodings</xs:documentation></xs:annotation><xs:restriction base="xs:string"><!--ascii--><xs:pattern value="[Aa][Ss][Cc][Ii][Ii]" /><!--bigendianunicode--><xs:pattern value="[Bb][Ii][Gg][Ee][Nn][Dd][Ii][Aa][Nn][Uu][Nn][Ii][Cc][Oo][Dd][Ee]" /><!--default--><xs:pattern value="[Dd][Ee][Ff][Aa][Uu][Ll][Tt]" /><!--unicode--><xs:pattern value="[Uu][Nn][Ii][Cc][Oo][Dd][Ee]" /><!--utf7--><xs:pattern value="[Uu][Tt][Ff][7]" /><!--utf8--><xs:pattern value="[Uu][Tt][Ff][8]" /><!--cp1252--><xs:pattern value="[Cc][Pp][1252]" /><!--empty--><xs:pattern value="" /></xs:restriction></xs:simpleType><xs:simpleType name="CIParser"><xs:annotation><xs:documentation>List of file parsers</xs:documentation></xs:annotation><xs:restriction base="xs:string"><!--standard pipe delimited--><xs:pattern value="[Ss][Tt][Aa][Nn][Dd][Aa][Rr][Dd][_][Pp][Ii][Pp][Ee][_][Dd][Ee][Ll][Ii][Mm][Ii][Tt][Ee][Dd]" /><!--standard tab delimited--><xs:pattern value="[Ss][Tt][Aa][Nn][Dd][Aa][Rr][Dd][_][Tt][Aa][Bb][_][Dd][Ee][Ll][Ii][Mm][Ii][Tt][Ee][Dd]" /><!--standard comma delimited--><xs:pattern value="[Ss][Tt][Aa][Nn][Dd][Aa][Rr][Dd][_][Cc][Oo][Mm][Mm][Aa][_][Dd][Ee][Ll][Ii][Mm][Ii][Tt][Ee][Dd]" /><!--quoted tab delimited--><xs:pattern value="[Qq][Uu][Oo][Tt][Ee][Dd][_][Tt][Aa][Bb][_][Dd][Ee][Ll][Ii][Mm][Ii][Tt][Ee][Dd]" /><!--quoted pipe delimited--><xs:pattern value="[Qq][Uu][Oo][Tt][Ee][Dd][_][Pp][Ii][Pp][Ee][_][Dd][Ee][Ll][Ii][Mm][Ii][Tt][Ee][Dd]" /><!--quoted comma delimited--><xs:pattern value="[Qq][Uu][Oo][Tt][Ee][Dd][_][Cc][Oo][Mm][Mm][Aa][_][Dd][Ee][Ll][Ii][Mm][Ii][Tt][Ee][Dd]" /><!--standard fixed width--><xs:pattern value="[Ss][Tt][Aa][Nn][Dd][Aa][Rr][Dd][_][Ff][Ii][Xx][Ee][Dd][_][Ww][Ii][Dd][Tt][Hh]" /><!--quoted custom delimited--><xs:pattern value="[Qq][Uu][Oo][Tt][Ee][Dd][_][Cc][Uu][Ss][Tt][Oo][Mm][_][Dd][Ee][Ll][Ii][Mm][Ii][Tt][Ee][Dd]" /><!--standard custom width--><xs:pattern value="[Ss][Tt][Aa][Nn][Dd][Aa][Rr][Dd][_][Cc][Uu][Ss][Tt][Oo][Mm][_][Ww][Ii][Dd][Tt][Hh]" /><!--standard custom delimited--><xs:pattern value="[Ss][Tt][Aa][Nn][Dd][Aa][Rr][Dd][_][Cc][Uu][Ss][Tt][Oo][Mm][_][Dd][Ee][Ll][Ii][Mm][Ii][Tt][Ee][Dd]" /><!--Excel--><xs:pattern value="[Ee][Xx][Cc][Ee][Ll]" /></xs:restriction></xs:simpleType><xs:simpleType name="MonitoringEmailID"><xs:annotation><xs:documentation>Monitoring Email Addresses</xs:documentation></xs:annotation><xs:restriction base="xs:string"><xs:enumeration value="monitoring_test@IntegrationPoint.net" /><xs:enumeration value="monitoring@IntegrationPoint.net" /></xs:restriction></xs:simpleType></xs:schema>', N'N', N'N')
