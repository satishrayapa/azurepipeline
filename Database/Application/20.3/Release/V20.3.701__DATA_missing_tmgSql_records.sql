declare @PartnerID as int
declare @PartnerIDTemp as varchar(30) = '${PartnerID}'

if @PartnerIDTemp like '$%'
begin
	set @PartnerID = 3000
end
else
begin
	if 1 = isnumeric(@PartnerIDTemp)
		set @PartnerID = @PartnerIDTemp
	else
		set @PartnerID = 3000
end

select top 0 * into #tmgSql from tmgsql
select top 0 * into #tmgSqlUserList from tmgSqlUserList

INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-11T11:24:40.037' AS DateTime), N'564a7a4f-852e-4350-bc88-a0a5560dffd9', N'EVValidation', N'INSERT INTO txdEntryValidationErrors SELECT entry.PartnerID AS [PartnerID]  ,GetDate() AS [EffDate]  ,entry.EntryGuid AS [EntryGUID]  ,entry.LineGuid AS [LineGUID]  ,''@validationguid@'' AS [ValidationGuid]  ,''@group@'' AS [ValidationGroup]  ,''@type@'' AS [ValidationType]  ,''tmdUSProductClassification'' AS [ComparisonTable]  ,''ProductNum'' AS [ComparisonFieldName]  ,'''' AS [ComparisonFieldValue]  ,''txdUSEntryVisibility'' AS [SourceTable]  ,''ProductNum'' AS [SourceFieldName]  ,entry.ProductNum AS [SourceFieldValue]  ,''@message@'' AS [Message]  ,''N'' AS [KeepDuringRollback]  ,''N'' AS [DeletedFlag] FROM txdUSEntryVisibility entry WITH (NOLOCK) JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)  ON evss.entryguid = entry.entryguid   AND evss.partnerid = entry.partnerid LEFT JOIN tmdUSProductClassification uspc WITH (NOLOCK)  ON entry.ProductNum = uspc.ProductNum   AND entry.PartnerID = uspc.PartnerID WHERE uspc.ProductNum IS NULL  AND entry.ProductNum <> ''''  AND evss.StatusCode IN (   ''N''   ,''H''   ,''U''   )  AND entry.ClosedFlag <> ''Y''  AND entry.PartnerID = (   SELECT PartnerID   FROM tmfdefaults WITH (NOLOCK)   ) GROUP BY entry.PartnerID  ,entry.entryguid  ,entry.LineGuid  ,entry.ProductNum', CAST(N'2013-08-11T11:24:40.037' AS DateTime), N'', N'N', N'N')
, (@PartnerID, CAST(N'2013-08-11T11:36:02.757' AS DateTime), N'67398ee0-5f74-4f64-b3d8-8f9d76bc1328', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''tmdCAProductClassification'' AS [ComparisonTable]
 ,''ProductNum'' AS [ComparisonFieldName]
 ,'''' AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''ProductNum'' AS [SourceFieldName]
 ,entry.ProductNum AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
LEFT JOIN tmdCAProductClassification capc WITH (NOLOCK)
 ON entry.ProductNum = capc.ProductNum
  AND entry.PartnerID = capc.PartnerID
WHERE capc.ProductNum IS NULL
 AND entry.ProductNum <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,entry.ProductNum', CAST(N'2013-08-11T11:36:02.757' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-13T14:47:32.163' AS DateTime), N'a8cbded4-1ae7-4cb4-8188-328b581c2b6d', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''tmdUSProductClassification'' AS [ComparisonTable]
 ,''HsNum'' AS [ComparisonFieldName]
 ,uspc.HsNum AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''HsNum'' AS [SourceFieldName]
 ,entry.HsNum AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN tmdUSProductClassification uspc WITH (NOLOCK)
 ON entry.ProductNum = uspc.ProductNum
  AND entry.PartnerID = uspc.PartnerID
WHERE uspc.HsNum <> replace(entry.HsNum, ''.'', '''')
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,uspc.HsNum
 ,entry.HsNum', CAST(N'2013-08-13T14:47:32.163' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-13T14:48:22.023' AS DateTime), N'35b5b6af-bae6-468c-a734-19f7843211aa', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''tmdCAProductClassification'' AS [ComparisonTable]
 ,''HsNum'' AS [ComparisonFieldName]
 ,capc.HsNum AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''HsNum'' AS [SourceFieldName]
 ,entry.HsNum AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN tmdCAProductClassification capc WITH (NOLOCK)
 ON entry.ProductNum = capc.ProductNum
  AND entry.PartnerID = capc.PartnerID
WHERE capc.HsNum <> entry.HsNum
 AND evss.StatusCode IN (
  ''N''
  ,''U''
  ,''H''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,capc.HsNum
 ,entry.HsNum', CAST(N'2013-08-13T14:48:22.023' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-13T14:59:02.027' AS DateTime), N'a9287885-b3fd-4c1f-af02-e15b3cd045b6', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''tmdUSProductClassification'' AS [ComparisonTable]
 ,''CountryOfOrigin'' AS [ComparisonFieldName]
 ,Max(uspc.CountryOfOrigin) AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''CountryOfOrigin'' AS [SourceFieldName]
 ,entry.CountryOfOrigin AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN tmdUSProductClassification uspc WITH (NOLOCK)
 ON entry.ProductNum = uspc.ProductNum
  AND entry.PartnerID = uspc.PartnerID
WHERE entry.CountryOfOrigin <> uspc.CountryofOrigin
 AND evss.StatusCode IN (
  ''N''
  ,''U''
  ,''H''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.Entryguid
 ,entry.LineGuid
 ,entry.CountryOfOrigin', CAST(N'2013-08-13T14:59:02.027' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-13T15:00:30.247' AS DateTime), N'780fd3f7-3340-43a0-a9ea-ef0629e57ad1', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''tmdCAProductClassification'' AS [ComparisonTable]
 ,''CountryOfOrigin'' AS [ComparisonFieldName]
 ,Max(capc.CountryOfOrigin) AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''CountryOfOrigin'' AS [SourceFieldName]
 ,entry.CountryOfOrigin AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN tmdCAProductClassification capc WITH (NOLOCK)
 ON entry.ProductNum = capc.ProductNum
  AND entry.PartnerID = capc.PartnerID
WHERE entry.CountryOfOrigin NOT IN (
  SELECT capc.countryoforigin
  FROM tmdCAproductclassification capc WITH (NOLOCK)
  JOIN txdCAEntryVisibility caev WITH (NOLOCK)
   ON caev.productnum = capc.productnum
    AND caev.partnerid = capc.partnerid
  )
 AND evss.StatusCode IN (
  ''N''
  ,''U''
  ,''H''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.Entryguid
 ,entry.LineGuid
 ,entry.CountryOfOrigin', CAST(N'2013-08-13T15:00:30.247' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-22T15:35:58.120' AS DateTime), N'956553db-bb46-4e38-a586-56a2173b9ae8', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''tmdUSProductClassification'' AS [ComparisonTable]
 ,''PreferenceCode1'' AS [ComparisonFieldName]
 ,uspc.PreferenceCode1 AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''SPICode1'' AS [SourceFieldName]
 ,entry.SPICode1 AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN tmdUSProductClassification uspc WITH (NOLOCK)
 ON entry.ProductNum = uspc.ProductNum
  AND entry.PartnerID = uspc.PartnerID
WHERE uspc.PreferenceCode1 <> entry.SPICode1
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,uspc.PreferenceCode1
 ,entry.SPICode1', CAST(N'2013-08-22T15:35:58.120' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-22T15:38:47.570' AS DateTime), N'18941281-61a6-408b-be29-cd4422ac0a80', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''tmdUSProductClassification'' AS [ComparisonTable]
 ,''PreferenceCode2'' AS [ComparisonFieldName]
 ,uspc.PreferenceCode2 AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''SPICode2'' AS [SourceFieldName]
 ,entry.SPICode2 AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN tmdUSProductClassification uspc WITH (NOLOCK)
 ON entry.ProductNum = uspc.ProductNum
  AND entry.PartnerID = uspc.PartnerID
WHERE uspc.PreferenceCode2 <> entry.SPICode2
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,uspc.PreferenceCode2
 ,entry.SPICode2', CAST(N'2013-08-22T15:38:47.570' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-22T17:03:01.077' AS DateTime), N'94d0a9d5-7534-435c-9309-65c55cefaffc', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''Standard'' AS [ComparisonTable]
 ,''IORNum'' AS [ComparisonFieldName]
 ,''Not Blank'' AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''IORNum'' AS [SourceFieldName]
 ,entry.IORNum AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
WHERE entry.IORNum = ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,entry.IORNum', CAST(N'2013-08-22T17:03:01.077' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-22T17:03:59.417' AS DateTime), N'c2058b1c-5440-493d-8bee-ebe523ec0d38', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''Standard'' AS [ComparisonTable]
 ,''InvoiceNum'' AS [ComparisonFieldName]
 ,''Not Blank'' AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''InvoiceNum'' AS [SourceFieldName]
 ,entry.InvoiceNum AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
WHERE entry.InvoiceNum = ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,entry.InvoiceNum', CAST(N'2013-08-22T17:03:59.417' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-22T17:13:14.213' AS DateTime), N'0d7d5ac5-144f-43f1-9cda-4fd2439114cb', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''Standard'' AS [ComparisonTable]
 ,''ProductNum'' AS [ComparisonFieldName]
 ,''Not Blank'' AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''ProductNum'' AS [SourceFieldName]
 ,entry.ProductNum AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
WHERE entry.ProductNum = ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,entry.ProductNum', CAST(N'2013-08-22T17:13:14.213' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-22T17:27:56.783' AS DateTime), N'2c2bdd78-fa61-4dd7-9bb2-4372ff567c50', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation One'' AS [ComparisonFieldName]
 ,man.ManualValidationOne AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationOne <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationOne', CAST(N'2013-08-22T17:27:56.783' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-27T17:17:42.033' AS DateTime), N'6abfb349-bf04-49bb-9de9-d8a8ebb2481e', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''Standard'' AS [ComparisonTable]
 ,''LineValue * 0.00125'' AS [ComparisonFieldName]
 ,(
  SELECT round((entry.LineValue * 0.00125), 2)
  ) AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''HMFAmount'' AS [SourceFieldName]
 ,entry.HMFAmt AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
WHERE (
  entry.HMFAmt > round(((entry.LineValue * 0.00125) + 0.01), 2)
  OR entry.HMFAmt < round(((entry.LineValue * 0.00125) - 0.01), 2)
  )
 AND entry.ModeOfTransport = ''11''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,entry.HMFAmt
 ,entry.LineValue', CAST(N'2013-08-27T17:17:42.033' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-27T17:20:27.497' AS DateTime), N'f27665dc-d424-488b-9f77-dff6a314c42d', N'EVValidation', N'INSERT INTO txdEntryValidationErrors 
SELECT
	entry.PartnerID AS [PartnerID],
	GetDate() AS [EffDate],
	entry.EntryGuid AS [EntryGUID],
	entry.LineGuid AS [LineGUID],
	''@validationguid@'' AS [ValidationGuid],
	''@group@'' AS [ValidationGroup],
	''@type@'' AS [ValidationType],
	''Standard'' AS [ComparisonTable],
	''MPFAmount'' AS [ComparisonFieldName],
	CAST(CAST(fr.MinAmount AS NUMERIC(38, 2)) AS VARCHAR(40)) + '' or '' + 
	CAST(CAST(fr.MaxAmount AS NUMERIC(38, 2)) AS VARCHAR(40)) AS [ComparisonFieldValue],
	''txdUSEntryVisibility'' AS [SourceTable],
	''TotalMpfAmt'' AS [SourceFieldName],
	entry.TotalMpfAmt AS [SourceFieldValue],
	''The TotalMPFAmt on the entry is either over $'' + CAST(CAST(fr.MaxAmount AS NUMERIC(38, 2)) AS VARCHAR(40)) + 
	'' or below $'' + CAST(CAST(fr.MinAmount AS NUMERIC(38, 2)) AS VARCHAR(40)) AS [Message],
	''N'' AS [KeepDuringRollback],
	''N'' AS [DeletedFlag] 
FROM
	txdUSEntryVisibility entry WITH (NOLOCK) 
	JOIN
		txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
		ON evss.entryguid = entry.entryguid 
		AND evss.partnerid = entry.partnerid 
	JOIN
		(
			SELECT
				PartnerID,
				StartEffDate,
				EndEffDate,
				MinAmount,
				MaxAmount 
			FROM
				tmdFeeRate WITH (NOLOCK) 
			WHERE
				ClassCode = ''499'' 
		) fr 
		ON fr.PartnerID = entry.PartnerID 
		AND entry.EntryDate BETWEEN fr.StartEffDate AND fr.EndEffDate 
WHERE
	(
		entry.TotalMpfAmt > CAST(fr.MaxAmount AS NUMERIC(38, 20)) 
		OR entry.TotalMpfAmt < CAST(fr.MinAmount AS NUMERIC(38, 20)) 
	)
	AND evss.StatusCode IN (''N'', ''H'', ''U'')
	AND entry.EntryType = ''01'' 
	AND entry.ClosedFlag <> ''Y'' 
	AND entry.PartnerID = (SELECT PartnerID FROM tmfDefaults WITH (NOLOCK))
GROUP BY
	entry.PartnerID, entry.EntryGuid, entry.LineGuid,
	entry.TotalMpfAmt, CAST(CAST(fr.MinAmount AS NUMERIC(38, 2)) AS VARCHAR(40)),
	CAST(CAST(fr.MaxAmount AS NUMERIC(38, 2)) AS VARCHAR(40))', CAST(N'2013-08-27T17:20:27.497' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:31:51.453' AS DateTime), N'2ea9a234-8da7-4955-a4aa-91b52756a41d', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Two'' AS [ComparisonFieldName]
 ,man.ManualValidationTwo AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwo <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwo', CAST(N'2015-07-06T11:31:51.453' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:33:08.110' AS DateTime), N'55508f37-6d44-41d4-8153-a95c38e19480', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Three'' AS [ComparisonFieldName]
 ,man.ManualValidationThree AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationThree <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationThree', CAST(N'2015-07-06T11:33:08.110' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:34:10.413' AS DateTime), N'7ef28c6b-8b17-4edb-bd0b-4aabed0edd0a', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Four'' AS [ComparisonFieldName]
 ,man.ManualValidationFour AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationFour <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationFour', CAST(N'2015-07-06T11:34:10.413' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:35:17.017' AS DateTime), N'd7f6038b-edd7-47ff-bbff-91354967d8b5', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Five'' AS [ComparisonFieldName]
 ,man.ManualValidationFive AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationFive <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationFive', CAST(N'2015-07-06T11:35:17.017' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:36:22.250' AS DateTime), N'5d23c02d-0bfa-4889-aaea-dbd255db92e1', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Six'' AS [ComparisonFieldName]
 ,man.ManualValidationSix AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationSix <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationSix', CAST(N'2015-07-06T11:36:22.250' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:37:14.647' AS DateTime), N'3b918a46-85d9-4bfb-a2f7-2c3975c4de91', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Seven'' AS [ComparisonFieldName]
 ,man.ManualValidationSeven AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationSeven <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationSeven', CAST(N'2015-07-06T11:37:14.647' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:38:19.407' AS DateTime), N'a131240d-b853-422e-b1e0-58638af3c65b', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Eight'' AS [ComparisonFieldName]
 ,man.ManualValidationEight AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationEight <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationEight', CAST(N'2015-07-06T11:38:19.407' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:39:14.450' AS DateTime), N'b9476941-fd5b-4a76-997d-8a85bfb4a087', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Nine'' AS [ComparisonFieldName]
 ,man.ManualValidationNine AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationNine <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationNine', CAST(N'2015-07-06T11:39:14.450' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:40:08.410' AS DateTime), N'9c4fbec5-1440-47ac-ba4a-487d3508b7ca', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Ten'' AS [ComparisonFieldName]
 ,man.ManualValidationTen AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTen', CAST(N'2015-07-06T11:40:08.410' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:40:57.850' AS DateTime), N'107f6d59-3ec1-4db6-b1dd-69ecd7582518', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Eleven'' AS [ComparisonFieldName]
 ,man.ManualValidationEleven AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationEleven <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationEleven', CAST(N'2015-07-06T11:40:57.850' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:41:39.830' AS DateTime), N'8000ca0d-af23-41f4-a0bf-1d9ca589b158', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Twelve'' AS [ComparisonFieldName]
 ,man.ManualValidationTwelve AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwelve <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwelve', CAST(N'2015-07-06T11:41:39.830' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:42:33.197' AS DateTime), N'4edc280e-32d7-4def-a3c2-48af530e3156', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Thirteen'' AS [ComparisonFieldName]
 ,man.ManualValidationThirteen AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationThirteen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationThirteen', CAST(N'2015-07-06T11:42:33.197' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:43:35.147' AS DateTime), N'aa2cc1b7-862b-4627-b6bd-94f8c0e259fe', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Fourteen'' AS [ComparisonFieldName]
 ,man.ManualValidationFourteen AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationFourteen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationFourteen', CAST(N'2015-07-06T11:43:35.147' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:44:30.687' AS DateTime), N'3360e96b-2583-41d7-b242-3c855ed9cf90', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Fifteen'' AS [ComparisonFieldName]
 ,man.ManualValidationFifteen AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationFifteen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationFifteen', CAST(N'2015-07-06T11:44:30.687' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:45:37.430' AS DateTime), N'7d4aa81f-6503-4986-830b-e4ae69bb382d', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Sixteen'' AS [ComparisonFieldName]
 ,man.ManualValidationSixteen AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationSixteen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationSixteen', CAST(N'2015-07-06T11:45:37.430' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:46:32.847' AS DateTime), N'b080a3c0-6b50-4b40-a396-15399a49cf46', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Seventeen'' AS [ComparisonFieldName]
 ,man.ManualValidationSeventeen AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationSeventeen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationSeventeen', CAST(N'2015-07-06T11:46:32.847' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:47:34.503' AS DateTime), N'099117c8-b03b-4e04-8dbd-2451a5124a31', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Eighteen'' AS [ComparisonFieldName]
 ,man.ManualValidationEighteen AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationEighteen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationEighteen', CAST(N'2015-07-06T11:47:34.503' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:48:59.750' AS DateTime), N'e8aede66-8681-4e5b-9a27-030e9223643f', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Nineteen'' AS [ComparisonFieldName]
 ,man.ManualValidationNineteen AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationNineteen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationNineteen', CAST(N'2015-07-06T11:48:59.750' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:49:31.493' AS DateTime), N'df21fb0f-4862-4737-8c01-72d6aca84217', N'EVValidation', N' INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation One'' AS [ComparisonFieldName]
 ,man.ManualValidationOne AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationOne <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationOne', CAST(N'2015-07-06T11:49:31.493' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:50:41.230' AS DateTime), N'b5cd18c0-53e4-402d-b7be-eb920068a6aa', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Twenty'' AS [ComparisonFieldName]
 ,man.ManualValidationTwenty AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwenty <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwenty', CAST(N'2015-07-06T11:50:41.230' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:51:00.417' AS DateTime), N'053a9dbe-f97b-4feb-8067-8eaa43f5f579', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Two'' AS [ComparisonFieldName]
 ,man.ManualValidationTwo AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwo <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwo', CAST(N'2015-07-06T11:51:00.417' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:52:02.330' AS DateTime), N'8fdddf86-97ae-44fb-99cf-242776fa22eb', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Three'' AS [ComparisonFieldName]
 ,man.ManualValidationThree AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationThree <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationThree', CAST(N'2015-07-06T11:52:02.330' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:52:21.760' AS DateTime), N'469c3ee7-263b-4215-aa83-6bbe3d89e4c3', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentyOne'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentyOne AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentyOne <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentyOne', CAST(N'2015-07-06T11:52:21.760' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:52:45.510' AS DateTime), N'bdc330ad-f967-442a-a163-5759ea592977', N'EVValidation', N'  INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Four'' AS [ComparisonFieldName]
 ,man.ManualValidationFour AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationFour <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationFour', CAST(N'2015-07-06T11:52:45.510' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:53:35.703' AS DateTime), N'5938d130-2f68-4111-b5cd-6504f4ea3dbb', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentyTwo'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentyTwo AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentyTwo <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentyTwo', CAST(N'2015-07-06T11:53:35.703' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:53:35.850' AS DateTime), N'bb08ecc1-8e67-492e-86e0-bb55db82fd5b', N'EVValidation', N'  INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Five'' AS [ComparisonFieldName]
 ,man.ManualValidationFive AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationFive <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationFive', CAST(N'2015-07-06T11:53:35.850' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:54:23.370' AS DateTime), N'4cd0ebb4-9c02-4506-9d83-9d45f48638e5', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Six'' AS [ComparisonFieldName]
 ,man.ManualValidationSix AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationSix <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationSix', CAST(N'2015-07-06T11:54:23.370' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:55:11.647' AS DateTime), N'b445af9f-a08c-4105-8dd7-31e6bbfd536f', N'EVValidation', N'  INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Seven'' AS [ComparisonFieldName]
 ,man.ManualValidationSeven AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationSeven <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationSeven', CAST(N'2015-07-06T11:55:11.647' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:55:58.290' AS DateTime), N'75110b9d-3a34-4ae4-bb81-3cecb74ac33d', N'EVValidation', N'  INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Eight'' AS [ComparisonFieldName]
 ,man.ManualValidationEight AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationEight <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationEight', CAST(N'2015-07-06T11:55:58.290' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:56:25.297' AS DateTime), N'813a37ef-b89f-4bb9-9ba8-443d215da766', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentyThree'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentyThree AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentyThree <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentyThree', CAST(N'2015-07-06T11:56:25.297' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:56:32.367' AS DateTime), N'fe217eea-1422-4939-a16e-0b0249880c4e', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Nine'' AS [ComparisonFieldName]
 ,man.ManualValidationNine AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationNine <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationNine', CAST(N'2015-07-06T11:56:32.367' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:57:17.823' AS DateTime), N'2154cc5a-cb7e-4ba1-80b5-44d716269768', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentyFour'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentyFour AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentyFour <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentyFour', CAST(N'2015-07-06T11:57:17.823' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:57:23.187' AS DateTime), N'40da4ef2-2eea-488c-bda7-435d8cc01b2e', N'EVValidation', N' INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Ten'' AS [ComparisonFieldName]
 ,man.ManualValidationTen AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTen', CAST(N'2015-07-06T11:57:23.187' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:58:00.720' AS DateTime), N'17f166b0-58bf-458a-8599-902b1013977d', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Eleven'' AS [ComparisonFieldName]
 ,man.ManualValidationEleven AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationEleven <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationEleven', CAST(N'2015-07-06T11:58:00.720' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:58:37.943' AS DateTime), N'78b00f8d-7199-429b-a15e-fe5e9772a44a', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Twelve'' AS [ComparisonFieldName]
 ,man.ManualValidationTwelve AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwelve <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwelve', CAST(N'2015-07-06T11:58:37.943' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:58:59.063' AS DateTime), N'4f34346e-214a-4d5b-aa7c-af2da3660beb', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentyFive'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentyFive AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentyFive <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentyFive', CAST(N'2015-07-06T11:58:59.063' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T11:59:27.577' AS DateTime), N'79b33fc8-1787-4647-a644-077b631639ff', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Thirteen'' AS [ComparisonFieldName]
 ,man.ManualValidationThirteen AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationThirteen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationThirteen', CAST(N'2015-07-06T11:59:27.577' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:00:07.987' AS DateTime), N'a49e11ea-7f39-4f99-a423-42a4f38deac8', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentySix'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentySix AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentySix <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentySix', CAST(N'2015-07-06T12:00:07.987' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:00:21.080' AS DateTime), N'39081fa6-af5b-4697-9592-e34c8be21265', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Fourteen'' AS [ComparisonFieldName]
 ,man.ManualValidationFourteen AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationFourteen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationFourteen', CAST(N'2015-07-06T12:00:21.080' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-08T14:14:32.680' AS DateTime), N'584203cb-681b-40b2-be29-03dd790fc3f1', N'Classification Lookup: Unclassified Products', N'SELECT	*
	   ,ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum) AS [RowNum]
FROM	(
		 SELECT	''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit
			   ,xxpc.ProductNum
			   ,xxpc.ProductDesc
			   ,xxpc.HsNum
			   ,1 AS NoOrder
		 FROM	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK)
		 JOIN	tmdProductClassification pc ON xxpc.PartnerID = pc.PartnerID AND
											   xxpc.ProductGuid = pc.ProductGuid
		 WHERE	xxpc.HsNum = '''' AND
				xxpc.PartnerID = @PartnerID@
		) AS LookupViewInner
WHERE	@whereclause@', CAST(N'2013-08-08T14:14:32.680' AS DateTime), N'Displays product information within a specified country for products where the Hs number is blank
', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-08T14:33:55.303' AS DateTime), N'954bc5dd-63ea-44f4-a908-d2f23cd3983f', N'Classification Lookup: Products With Invalid HsNum', N'SELECT	''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit
	   ,xxpc.ProductNum
	   ,xxpc.ProductDesc
	   ,xxpc.HsNum
FROM	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK)
JOIN	tmdProductClassification pc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID AND
												xxpc.ProductGuid = pc.ProductGuid
JOIN	txdValidationWarnings warn WITH (NOLOCK) ON warn.txnnumguid = xxpc.productguid AND
											   warn.ValidationCode LIKE ''WG520%''
WHERE	xxpc.HsNum <> '''' AND
		xxpc.PartnerID = @PartnerID@', CAST(N'2013-08-08T14:33:55.303' AS DateTime), N'Displays the ProductNum, ProductDesc, and HsNum for products from a specified country with an invalid HS number', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-09T10:08:31.117' AS DateTime), N'03808ed6-f20c-4550-ad59-380bf472e320', N'DPS Lookup: Percent of DPS Statuses', N' SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@ ) AS [RowNum]
FROM 
(  
 SELECT
  c.DTSStatus,
  COUNT(c.DTSStatus) AS ''Number of Entities'',
  STR(100.0 * (count(c.DTSStatus)) / ((SELECT COUNT(*) FROM tmgCompany with (nolock))),4,1) + ''%'' AS ''Percentage of Total'',
  1 as NoOrder
FROM tmgCompany c with (nolock)
WHERE PartnerID = @PartnerID
GROUP BY c.DTSStatus
) AS LookupViewInner
WHERE                               
 @whereclause@', CAST(N'2018-04-03T10:55:31.653' AS DateTime), N'Displays the number and percentage of parties in DPS for each status (blocked, clear, not screened) ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-28T17:22:48.373' AS DateTime), N'0f04b894-0dfc-47a1-9d7d-d463b0c19a46', N'Entry Visibility Lookup: Most Recent Discrepancies', N'select  
''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' +xxev.EntryGuid + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
										xxev.EntryNum, 
										MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',  
										xxev.IORNum, 
										g.Decode as Status,  
										MAX(CONVERT(VARCHAR(10), eh.EffDate, 101)) AS ''LastErrorDate'', 
										eh.ValidationGroup,
										eh.ValidationType,   
										g2.Decode as AssignedTo
									from dbo.txd@country_code@EntryVisibility xxev  
									join dbo.txdEntryValidationErrorsHist eh  
									on xxev.EntryGUID = eh.EntryGUID and    
										xxev.LineGUID = eh.LineGUID  
									join dbo.txdEntryValidationSummaryStatus evss  
									on evss.entryguid = eh.EntryGUID  
									left join dbo.tmgGlobalCodes g  
									on g.Code = evss.StatusCode  
										and g.fieldname = ''EVSummaryStatus''  
									left join dbo.tmgGlobalCodes g2  
										on g2.Code = evss.AssignedTo  
										and g2.Decode = ''EVAssignToList'' 
									where xxev.PartnerID = (select PartnerID from tmfdefaults)
									group by xxev.EntryGuid, xxev.EntryNum, eh.ValidationGroup, eh.ValidationType, g.Decode, g2.Decode, xxev.IORNum', CAST(N'2013-08-28T17:22:47.000' AS DateTime), N'Shows the latest validation errors that took place in Entry Visibility', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-11-15T17:06:37.497' AS DateTime), N'8b9b6b33-203d-4204-86f5-838b4eea38a1', N'Request Lookup: Closed Classification Requests', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, Status, RequestDate asc ) AS [RowNum]
FROM    
( 
Select 
  ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + cd.ProductNum + ''&ID='' + CAST (cd.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit,
	isnull(gc.Decode, ch.Status) as Status,
	ch.RequestorName, 
	convert(varchar(10), ch.requestdate, 101) as RequestDate, 
	ch.Priority, 
	ch.DueDate,
	ch.AssignedTo,
	isnull(cd.ProductNum, '''') as ProductNum,
	isnull(cd.ProductDesc, '''') as ProductDesc, 
	isnull(cd.HsNum, '''') as HsNum,
	isnull(cd.CountryOfOrigin, '''') as CountryOfOrigin,
	1 AS NoOrder
from tmdClassificationRequestHeader ch (nolock) 
left join tmdClassificationRequestDetail cd (nolock) on 
	ch.RequestGuid = cd.RequestGuid and 
	ch.PartnerID = cd.PartnerID    
left join tmgGlobalCodes gc (nolock) on 
	ch.Status = gc.Code and
	ch.PartnerID = gc.PartnerID and
	gc.FieldName = ''ClassRequest''
where 
	ch.Status = ''Closed'' and
	ch.Country = ''@COUNTRY_CODE@'' and 
	ch.PartnerID = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2018-04-06T16:28:09.567' AS DateTime), N'Displays classification requests that have been closed.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-11-15T17:06:56.920' AS DateTime), N'81bd01d0-49de-493e-96f3-a721bb07ec43', N'Request Lookup: High Priority Requests', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, Status, RequestDate asc ) AS [RowNum]
FROM    
( 
Select 
  ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + cd.ProductNum + ''&ID='' + CAST (cd.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit,
	Isnull(gc.Decode, ch.Status) as Status,
	ch.RequestorName, 
	convert(varchar(10), ch.requestdate, 101) as RequestDate, 
	ch.Priority, 
	ch.DueDate,
	ch.AssignedTo,
	isnull(cd.ProductNum, '''') as ProductNum,
	isnull(cd.ProductDesc, '''') as ProductDesc, 
	isnull(cd.HsNum, '''') as HsNum,
	isnull(cd.CountryOfOrigin, '''') as CountryOfOrigin,
	1 AS NoOrder
from tmdClassificationRequestHeader ch (nolock) 
left join tmdClassificationRequestDetail cd (nolock) on 
	ch.RequestGuid = cd.RequestGuid and 
	ch.PartnerID = cd.PartnerID    
left join tmgGlobalCodes gc (nolock) on 
	ch.Status = gc.Code and
	ch.PartnerID = gc.PartnerID and
	gc.FieldName = ''ClassRequest''
where 
	ch.Priority = ''High'' and
	ch.Country = ''@COUNTRY_CODE@'' and 
	ch.PartnerID = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2018-04-06T15:25:43.473' AS DateTime), N'Displays classification requests that have been marked "High Priority."', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:18:02.093' AS DateTime), N'1d71df0a-34ed-4a8c-b1a3-1c9f10df2885', N'Entry Visibility Lookup: Entries with Broker Error Report Lines', N'SELECT 
	''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum, 
	isnull(g.Decode, evss.StatusCode) as EntryStatus,
	xxev.BrokerID,
	xxev.IORNum,
	COUNT(EER.ValidationGUID) as [Error Line Count],
	xxev.EntryDate,
	CAST(DateDiff(DAY, GETDATE(), DATEADD(DAY, 294, MAX(xxev.EntryDate))) AS varchar(10)) as [Days Since EntryDate]
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryErrorReportLines EER WITH (NOLOCK) 
	ON xxev.PartnerID = EER.PartnerID AND xxev.lineguid = EER.LineGuid
	AND EER.TypeFlag = ''BRO''
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
	ON evss.EntryGuid = xxev.EntryGuid AND evss.PartnerID = xxev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
	ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
	AND g.FieldName = ''EVSummaryStatus''
WHERE
	xxev.PartnerID = @PartnerID@
GROUP BY xxev.EntryNum, xxev.BrokerID, xxev.IORNum, g.Decode, evss.StatusCode,  xxev.EntryDate', CAST(N'2014-03-12T18:18:02.093' AS DateTime), N'Displays the broker report lines for entry errors ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:19:03.517' AS DateTime), N'0953e69a-3ba0-4a7a-ac9e-01fb2e2dc8fb', N'Entry Visibility Lookup: Entries With Internal Report lines', N'SELECT 
''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum, 
	isnull(g.Decode, evss.StatusCode) as EntryStatus,
	xxev.BrokerID,
	xxev.IORNum,
	COUNT(EER.ValidationGUID) as [Error Line Count],
	xxev.EntryDate,
	CAST(DateDiff(DAY, GETDATE(), DATEADD(DAY, 294, MAX(xxev.EntryDate))) AS varchar(10)) as [Days Since EntryDate]
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryErrorReportLines EER WITH (NOLOCK) 
	ON xxev.PartnerID = EER.PartnerID AND xxev.lineguid = EER.LineGuid
	AND EER.TypeFlag = ''INT''
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
	ON evss.EntryGuid = xxev.EntryGuid AND evss.PartnerID = xxev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
	ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
	AND g.FieldName = ''EVSummaryStatus''
WHERE
	xxev.PartnerID = @PartnerID@
GROUP BY xxev.EntryNum, xxev.BrokerID, xxev.IORNum, g.Decode, evss.StatusCode,  xxev.EntryDate', CAST(N'2014-03-12T18:19:03.517' AS DateTime), N'Displays the internal report lines for entry errors ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:19:04.610' AS DateTime), N'd8d7af7f-43c0-4f6a-b8c9-26912fe55fbb', N'Entry Visibility Lookup: Broker Error Report', N'select 
''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
		xxev.EntryNum, 
		isnull(g2.Decode, evss.StatusCode) as EntryStatus,
		xxev.BrokerID,
		note.Effdate, 
		xxev.EntryDate, 
		xxev.IORNum, 
		g.decode as ReasonCode, 
		note.UserGuid as ''User'', 
		cast(note.Note as varchar(6000)) as [Notes]
	from txd@COUNTRY_CODE@EntryVisibility xxev with (nolock)
	Inner Join tmgnote note with (nolock) on
		 note.PartnerID = xxev.PartnerID 
		 and note.notetype = ''EVVNO''
	 Left Join tmgglobalcodes g
		on note.reasoncode = g.code and 
		g.fieldname = ''EVVReasonCode'' and
		note.partnerid = g.partnerid	
	Inner join txdEntryValidationSummaryStatus evss with (nolock) on 
		evss.EntryGuid = xxev.EntryGuid and
		evss.PartnerID = xxev.PartnerID  
	left join tmgGlobalCodes g2 with (nolock) on 
		evss.StatusCode = g2.Code and
		evss.PartnerID = g2.PartnerID and
		g2.FieldName = ''EVSummaryStatus''
		Join txdEntryErrorReportLines r with (nolock) on 
			r.LineGUId = xxev.LineGuid
			and r.PartnerID = xxev.PartnerID
	where
		xxev.PartnerID = @PartnerID@ and
		note.note is not null 
		and r.TypeFlag = ''BRO''', CAST(N'2014-03-12T18:19:04.610' AS DateTime), N'Displays the broker report lines for entry errors ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:19:31.740' AS DateTime), N'04070da7-a714-49f7-bd7d-78ea6f91c633', N'Entry Visibility Lookup: Entries With External Report lines', N'SELECT 
''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum, 
	isnull(g.Decode, evss.StatusCode) as EntryStatus,
	xxev.BrokerID,
	xxev.IORNum,
	COUNT(EER.ValidationGUID) as [Error Line Count],
	xxev.EntryDate,
	CAST(DateDiff(DAY, GETDATE(), DATEADD(DAY, 294, MAX(xxev.EntryDate))) AS varchar(10)) as [Days Since EntryDate]
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryErrorReportLines EER WITH (NOLOCK) 
	ON xxev.PartnerID = EER.PartnerID AND xxev.lineguid = EER.LineGuid
	AND EER.TypeFlag = ''EXT''
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
	ON evss.EntryGuid = xxev.EntryGuid AND evss.PartnerID = xxev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
	ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
	AND g.FieldName = ''EVSummaryStatus''
WHERE
	xxev.PartnerID = @PartnerID@
GROUP BY xxev.EntryNum, xxev.BrokerID, xxev.IORNum, g.Decode, evss.StatusCode,  xxev.EntryDate', CAST(N'2014-03-12T18:19:31.740' AS DateTime), N'Displays the external report lines for entry errors ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:20:17.217' AS DateTime), N'57299f57-a673-4ec1-b344-82c299e3c069', N'Classification Lookup: Products With Binding Rulings', N'SELECT	''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit
	   ,xxpc.ProductNum
	   ,xxpc.ProductDesc
	   ,xxpc.BusinessDivision
	   ,xxpc.SupplierID
	   ,xxpc.CountryOfOrigin
	   ,xxpc.HsNum
	   ,xxpc.AssuranceLevel
	   ,xxpc.BindingRuling
	   ,xxpc.RulingNotes
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID AND
																xxpc.ProductGuid = pc.ProductGuid
WHERE	(
		xxpc.BindingRuling <> '''' OR
		CAST(xxpc.RulingNotes AS VARCHAR(500)) <> ''''
		) AND
		xxpc.PartnerID = @PartnerID@', CAST(N'2014-03-12T18:20:17.217' AS DateTime), N'Displays product information, supplier information, BindingRuling information, and RulingNotes for products with Binding Rulings within a specified country', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:23:16.103' AS DateTime), N'266afd01-1aaa-4e59-8698-ed3ca5bdaa6e', N'Entry Visibility Lookup: Entries With Errors US', N'SELECT 
	''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	SELECT 
									xxev.EntryGuid,
									xxev.EntryNum, 
									isnull(g.Decode, evss.StatusCode) as EntryStatus,
									xxev.BrokerID,
									COUNT(Distinct EVE.LineGUID) as ErrorLineCount,
									COUNT(Distinct EVE.LineGUID+EVE.ValidationGuid) as ErrorCount,
									MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',  
									CAST(DateDiff(DAY, GETDATE(), DATEADD(DAY, 294, MAX(xxev.EntryDate))) AS varchar(10)) as [Days Since EntryDate],
									1 AS NoOrder
								FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
								JOIN txdEntryValidationErrors EVE WITH (NOLOCK) 
									ON xxev.PartnerID = EVE.PartnerID 
									AND xxev.entryGUID = EVE.EntryGUID AND xxev.lineguid = EVE.LineGuid
								JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
									ON evss.EntryGuid = xxev.EntryGuid AND evss.PartnerID = xxev.PartnerID  
								LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
									ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
									AND g.FieldName = ''EVSummaryStatus''
								WHERE
									xxev.PartnerID = @PartnerID@
								GROUP BY xxev.EntryGuid, xxev.EntryNum, xxev.BrokerID, g.Decode, evss.StatusCode, xxev.EntryDate', CAST(N'2014-03-12T18:23:16.103' AS DateTime), N'Displays entries into the United States with validation errors', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:27:50.277' AS DateTime), N'df53c1b6-e930-464a-8f20-d76ed3ebc314', N'Classification Lookup: Products With ECN non-EAR99', N'SELECT	''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit
	   ,xxpc.ProductNum
	   ,xxpc.ProductDesc
	   ,xxpc.BusinessDivision
	   ,xxpc.SupplierID
	   ,xxpc.CountryOfOrigin
	   ,xxpc.HsNum
	   ,xxpc.AssuranceLevel
	   ,xxpc.ECCNNum
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID AND
																	 xxpc.ProductGuid = pc.ProductGuid
WHERE	xxpc.ECCNNum <> ''EAR99'' AND
		xxpc.PartnerID = @PartnerID@', CAST(N'2014-03-12T18:27:50.277' AS DateTime), N'Displays basic product and supplier information for products that have an ECCN or ECN Number other than EAR99, including the corresponding ECCNNum or ECNNum
', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:28:42.467' AS DateTime), N'31145553-7d39-4959-ae27-e389dc17768b', N'Entry Visibility Lookup: Days to Release', N'select 
		''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
		xxev.EntryNum, 
		isnull(g.Decode, evss.StatusCode) as EntryStatus,
		xxev.BrokerID,
		xxev.IORNum, 
		convert(varchar, xxev.EstimatedDateOfArrival, 101) as EstimatedDateOfArrival , 
		convert(varchar, xxev.ReleaseDate, 101) as ReleaseDate, 
case when (xxev.EstimatedDateOfArrival = ''1900-01-01 00:00:00.000'' or xxev.ReleaseDate = ''1900-01-01 00:00:00.000'') then 0
else DateDiff(day, xxev.EstimatedDateOfArrival, xxev.ReleaseDate) end as DaysToRelease
from txd@COUNTRY_CODE@EntryVisibility xxev with (nolock)
join txdEntryValidationSummaryStatus evss (nolock) on 
		evss.EntryGuid = xxev.EntryGuid and
		evss.PartnerID = xxev.PartnerID  
	left join tmgGlobalCodes g (nolock) on 
		evss.StatusCode = g.Code and
		evss.PartnerID = g.PartnerID and
		g.FieldName = ''EVSummaryStatus''
	where
		xxev.PartnerID = @PartnerID@', CAST(N'2014-03-12T18:28:42.467' AS DateTime), N'Shows entries and the number of days until those entries are released', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:44:02.680' AS DateTime), N'c08740f6-27d9-419b-bb0b-c5ea73e2aa74', N'Entry Visibility Lookup: Filed Quarterly PEAs', N'SELECT ''['' + ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum,
	isnull(g.Decode, evss.StatusCode) AS EntryStatus,
	xxev.BrokerID,
	ph.PEADate,
	ph.Identifier,
	pd.ImporterNum,
	ph.Port,
	pd.ReasonCode,
	pd.ReasonDescription
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
	ON evss.EntryGuid = xxev.EntryGuid
		AND evss.PartnerID = xxev.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK)
	ON evss.StatusCode = g.Code
		AND evss.PartnerID = g.PartnerID
		AND g.FieldName = ''EVSummaryStatus''
INNER JOIN txdPEADetail pd WITH (NOLOCK)
	ON pd.EntryGuid = xxev.EntryGUID
		AND xxev.PartnerID = pd.PartnerID
INNER JOIN txdPEAHeader ph WITH (NOLOCK)
	ON ph.PEAGuid = pd.PEAGuid
		AND ph.PartnerID = xxev.PartnerId
WHERE xxev.PartnerID = @PartnerId@
	AND ph.FiledFlag = ''Y''
	AND ph.PEAType = ''Q''
GROUP BY ph.PEADate,
	ph.Identifier,
	pd.ImporterNum,
	ph.Port,
	pd.ReasonCode,
	pd.ReasonDescription,
	g.Decode,
	evss.StatusCode,
	xxev.EntryNum,
	xxev.BrokerID', CAST(N'2014-03-12T18:44:02.680' AS DateTime), N'Displays all PEAs that have been filed quarterly', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:48:30.843' AS DateTime), N'6f46f544-630e-49e1-9b19-931318a9cac5', N'Entry Visibility Lookup: Filed Single PEAs', N'SELECT ''['' + ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum,
	isnull(g.Decode, evss.StatusCode) AS EntryStatus,
	xxev.BrokerID,
	ph.PEADate,
	ph.Identifier,
	pd.ImporterNum,
	ph.Port,
	pd.ReasonCode,
	pd.ReasonDescription
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
	ON evss.EntryGuid = xxev.EntryGuid
		AND evss.PartnerID = xxev.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK)
	ON evss.StatusCode = g.Code
		AND evss.PartnerID = g.PartnerID
		AND g.FieldName = ''EVSummaryStatus''
INNER JOIN txdPEADetail pd WITH (NOLOCK)
	ON pd.EntryGuid = xxev.EntryGUID
		AND xxev.PartnerID = pd.PartnerID
INNER JOIN txdPEAHeader ph WITH (NOLOCK)
	ON ph.PEAGuid = pd.PEAGuid
		AND ph.PartnerID = xxev.PartnerId
WHERE xxev.PartnerID = @PartnerId@
	AND ph.FiledFlag = ''Y''
	AND ph.PEAType = ''s''
GROUP BY ph.PEADate,
	ph.Identifier,
	pd.ImporterNum,
	ph.Port,
	pd.ReasonCode,
	pd.ReasonDescription,
	g.Decode,
	evss.StatusCode,
	xxev.EntryNum,
	xxev.BrokerID', CAST(N'2014-03-12T18:48:30.843' AS DateTime), N'Displays all PEAs that are filed on a individual basis', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:52:22.713' AS DateTime), N'98880282-80da-4ea8-bb23-1cda6df8a25a', N'Entry Visibility Lookup: Lines Flagged for Recon', N'SELECT ''['' + ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum,
	isnull(g.Decode, evss.StatusCode) AS EntryStatus,
	xxev.BrokerID,
	xxev.EntryDate,
	xxev.IORNum,
	xxev.PortOfEntry,
	xxev.LineNum,
	xxev.ProductNum,
	xxev.InvoiceNum,
	xxev.TxnQty,
	xxev.HsNum,
	xxev.LineValue,
	g.Decode AS STATUS
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
	ON evss.EntryGuid = xxev.EntryGuid
		AND evss.PartnerID = xxev.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK)
	ON evss.StatusCode = g.Code
		AND evss.PartnerID = g.PartnerID
		AND g.FieldName = ''EVSummaryStatus''
WHERE xxev.PartnerID = @PartnerId@
	AND xxev.ReconciliationFlag = ''Y''
GROUP BY xxev.EntryDate,
	xxev.EntryNum,
	xxev.IORNum,
	xxev.PortOfEntry,
	xxev.LineNum,
	xxev.ProductNum,
	xxev.InvoiceNum,
	xxev.TxnQty,
	xxev.HsNum,
	xxev.LineValue,
	g.Decode,
	evss.StatusCode,
	xxev.BrokerID', CAST(N'2014-03-12T18:52:22.713' AS DateTime), N'Displays entry information and the line number flagged for reconciliation', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:54:07.303' AS DateTime), N'7c63919e-33e9-45bc-9c69-67e59b1d183d', N'Entry Visibility Lookup: Entries Within Last 7 Days', N'SELECT 
	''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum, 
	isnull(g.Decode, evss.StatusCode) as EntryStatus,
	xxev.BrokerID,
	xxev.IORNum,
	xxev.EntryDate,
	COUNT(xxev.LineNum) as [Entry Lines]
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
	ON evss.EntryGuid = xxev.EntryGuid AND evss.PartnerID = xxev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
	ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
	AND g.FieldName = ''EVSummaryStatus''
WHERE
	xxev.PartnerID = @PartnerID@
	AND DATEDIFF(DAY, EntryDate, GETDATE()) < 7
GROUP BY xxev.EntryNum, xxev.BrokerID, xxev.IORNum, g.Decode, evss.StatusCode,  xxev.EntryDate', CAST(N'2014-03-12T18:54:07.303' AS DateTime), N'Displays entry numbers that have entry dates within the last 7 days', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:55:34.167' AS DateTime), N'f96a35f1-09dc-46e7-8ed6-f1ab67beccfc', N'Entry Visibility Lookup: Entries Within Last 30 Days', N'SELECT 
	''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum, 
	isnull(g.Decode, evss.StatusCode) as EntryStatus,
	xxev.BrokerID,
	xxev.IORNum,
	xxev.EntryDate,
	COUNT(xxev.LineNum) as [Entry Lines]
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
	ON evss.EntryGuid = xxev.EntryGuid AND evss.PartnerID = xxev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
	ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
	AND g.FieldName = ''EVSummaryStatus''
WHERE
	xxev.PartnerID = @PartnerID@
	AND DATEDIFF(DAY, EntryDate, GETDATE()) < 30
GROUP BY xxev.EntryNum, xxev.BrokerID, xxev.IORNum, g.Decode, evss.StatusCode,  xxev.EntryDate', CAST(N'2014-03-12T18:55:34.167' AS DateTime), N'Displays entry numbers that have entry dates within the last 30 days', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:55:46.927' AS DateTime), N'59cbca2c-2709-47a0-ab07-b6c96720806d', N'Entry Visibility Lookup: Entry Dates Within Last 90 Days', N'SELECT 
	''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum, 
	isnull(g.Decode, evss.StatusCode) as EntryStatus,
	xxev.BrokerID,
	xxev.IORNum,
	xxev.EntryDate,
	COUNT(xxev.LineNum) as [Entry Lines]
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
	ON evss.EntryGuid = xxev.EntryGuid AND evss.PartnerID = xxev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
	ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
	AND g.FieldName = ''EVSummaryStatus''
WHERE
	xxev.PartnerID = @PartnerID@
	AND DATEDIFF(DAY, EntryDate, GETDATE()) < 90
GROUP BY xxev.EntryNum, xxev.BrokerID, xxev.IORNum, g.Decode, evss.StatusCode,  xxev.EntryDate', CAST(N'2014-03-12T18:55:46.927' AS DateTime), N'Displays entry numbers that have entry dates within the last 90 days', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:56:47.573' AS DateTime), N'0ec89512-b5d4-42fb-8efa-a30a30b697ef', N'Entry Visibility Lookup: Entries Within Last Day', N'SELECT 
	''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum, 
	isnull(g.Decode, evss.StatusCode) as EntryStatus,
	xxev.BrokerID,
	xxev.IORNum,
	xxev.EntryDate,
	COUNT(xxev.LineNum) as [Entry Lines]
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
	ON evss.EntryGuid = xxev.EntryGuid AND evss.PartnerID = xxev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
	ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
	AND g.FieldName = ''EVSummaryStatus''
WHERE
	xxev.PartnerID = @PartnerID@
	AND DATEDIFF(DAY, EntryDate, GETDATE()) < 1
GROUP BY xxev.EntryNum, xxev.BrokerID, xxev.IORNum, g.Decode, evss.StatusCode,  xxev.EntryDate', CAST(N'2014-03-12T18:56:47.573' AS DateTime), N'Displays entry numbers that have entry dates within the last day', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-06-18T15:23:07.180' AS DateTime), N'MXDSPED', N'Check if pedimentos are missing', N'/*2. Validación de Pedimentos que No estan en DS*/
						SELECT DISTINCT DS.PedimentoNum AS Pedimento, 
								''txdMXDataStageHeader501'' AS SourceTable, ''PedimentoNum'' AS SourceField,    
								''txdMXPedimentoHeader'' AS ComparisonTable, ''PedimentoNum'' AS ComparisonField,    
								DS.PedimentoNum AS SourceVal, '''' AS ComparisonVal, ''MXDSPEDMSG'' AS Msg,   
								''Pedimento Exists'' AS CompareGroup,
								'''' AS Additional3, '''' AS [Additional2], 
								REF.Folio AS [Additional1], DS.PartnerID as [PartnerID], GETDATE() AS [Effdate], 
								''DATASTAGE'' AS [ProcessID], NEWID() AS [LineGuid],''N'', ''N'' 
						FROM txdMXDataStageFolioReference REF WITH (NOLOCK)
						INNER JOIN txdMXDataStageHeader501 DS WITH (NOLOCK)
							ON (REF.PartnerID = DS.PartnerID AND REF.PedimentoNum = DS.PedimentoNum)
						WHERE	REF.PartnerID = @Partnerid AND 
								REF.Folio = @folio AND 
								NOT EXISTS (SELECT TOP 1 1 FROM txdMXPedimentoHeader PH WITH (NOLOCK) WHERE PartnerID = DS.PartnerID AND PH.PedimentoNum = DS.PedimentoNum)
						ORDER BY 1', CAST(N'2014-06-18T15:23:07.180' AS DateTime), N'MXDSPEDOPTDESC', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-06-18T15:23:07.180' AS DateTime), N'MXDSPYDATE', N'Pedimento if Payment Dates are different', N'/*10. Comparación de Fecha de Pago Por Pedimento*/
						SELECT DISTINCT ds.PedimentoNum AS Pedimento, 
								''txdMXDataStageHeader501'' AS SourceTable, ''FechaPagoReal'' AS SourceField, 
								''txdMXPedimentoHeader'' AS ComparisonTable, ''PedimentoPaymentDate'' AS ComparisonField, 
								ISNULL(CONVERT(CHAR(10),ds.FechaPagoReal, 126),'''') AS SourceVal,
								ISNULL(CONVERT(CHAR(10),imx.PedimentoPaymentDate, 126),'''') AS ComparisonVal,
								''MXDSPYDATEMSG'' AS Msg, ''Dates'' AS CompareGroup,
								'''' AS Additional3, '''' AS [Additional2], 
								REF.Folio AS [Additional1], DS.PartnerID as [PartnerID], GETDATE() AS [Effdate], 
								''DATASTAGE'' AS [ProcessID], NEWID() AS [LineGuid],''N'', ''N''
						FROM txdMXDataStageFolioReference ref WITH (NOLOCK)
						INNER JOIN txdMXDataStageHeader501 ds WITH (NOLOCK)
						  ON ref.PartnerID = ds.PartnerID
						  AND ref.PedimentoNum = ds.PedimentoNum
						INNER JOIN txdMXPedimentoHeader imx WITH (NOLOCK)
						  ON ref.PartnerID = imx.PartnerID
						  AND ds.PedimentoNum = imx.PedimentoNum 
						WHERE ref.PartnerID = @partnerid
						  AND ref.Folio = @folio
						  AND CONVERT(VARCHAR(9),ds.FechaPagoReal,112) <> CONVERT(VARCHAR(9), ISNULL(imx.PedimentoPaymentDate,''''), 112)
						ORDER BY 1', CAST(N'2014-06-18T15:23:07.180' AS DateTime), N'MXDSPYDATEOPTDESC', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-06-18T15:23:07.180' AS DateTime), N'MXDSEXRATE', N'Check Pedimento Exchange Rate differences', N'/*6. Validación de Tipo de Cambio*/
						SELECT DISTINCT ds.PedimentoNum AS Pedimento, 
								''txdMXDataStageHeader501'' AS SourceTable, ''TipoCambio'' AS SourceField,
								''txdMXPedimentoHeader'' AS ComparisonTable, ''MXExchangeRate'' AS ComparisonField, 
								ISNULL(ds.TipoCambio,''0.0'') AS SourceFieldValue, ISNULL(imx.MXExchangeRate,''0.0'') AS ComparisonFieldValue,
								''MXDSEXRATEMSG'' AS Msg, ''ExchgRates'' AS CompareGroup,
								'''' AS Additional3, '''' AS [Additional2], 
								REF.Folio AS [Additional1], REF.PartnerID as [PartnerID], GETDATE() AS [Effdate], 
								''DATASTAGE'' AS [ProcessID], NEWID() AS [LineGuid],''N'', ''N'' 
						FROM txdMXDataStageFolioReference ref WITH (NOLOCK)
						INNER JOIN txdMXDataStageHeader501 ds WITH (NOLOCK)
							ON (ref.PartnerID = ds.PartnerID AND 
								ref.PedimentoNum = ds.PedimentoNum)
						INNER JOIN txdMXPedimentoHeader imx WITH (NOLOCK)
							ON (ref.PartnerID = imx.PartnerID AND 
								ds.PedimentoNum = imx.PedimentoNum)
						WHERE ref.PartnerID = @partnerid
						  AND ref.Folio = @folio
						  AND ds.TipoCambio <> ISNULL(imx.MXExchangeRate,0)
						ORDER BY 1', CAST(N'2014-06-18T15:23:07.180' AS DateTime), N'MXDSEXRATEOPTDESC', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-06-18T15:23:07.180' AS DateTime), N'MXDSHS', N'Check tariff number differences', N'/*7. Validación de Fracciones Arancelarias*/
						SELECT DISTINCT DS.PedimentoNum AS Pedimento, 
									''txdMXDataStageDetail551'' AS SourceTable, ''Fraccion'' AS SourceField,    
									''txdMXPedimentoDetail'' AS ComparisonTable, ''MXHSNum'' AS ComparisonField,    
									ISNULL(ds.Fraccion,'''') AS SourceVal, ISNULL(pd.MXHSNum,'''') AS ComparisonVal, 
									''MXDSHSMSG'' AS Msg, ''Tariff'' AS CompareGroup, 
									DS.SecuenciaFraccion AS Additional3, '''' AS [Additional2], 
									DS.Folio AS [Additional1], DS.PartnerID as [PartnerID], GETDATE() AS [Effdate], 
									''DATASTAGE'' AS [ProcessID], NEWID() AS [LineGuid],''N'', ''N'' 
						FROM 
							(   SELECT REF.PartnerID, REF.PedimentoNum, REF.Folio, DS1.SecuenciaFraccion, DS1.Fraccion
								FROM txdMXDataStageFolioReference REF WITH (NOLOCK)
								JOIN txdMXDataStageDetail551 DS1 WITH (NOLOCK)
									ON (REF.PartnerID = DS1.PartnerID AND 
										REF.PedimentoNum = DS1.PedimentoNum)
								WHERE DS1.PartnerID = @partnerid AND 
										REF.Folio = @folio
							) AS DS
						LEFT JOIN 
							( 
							SELECT PH.PartnerID, PH.PedimentoNum, PD1.SectionNum, PD1.MXHSNum
							FROM txdMXPedimentoHeader PH WITH (NOLOCK)
							JOIN txdMXPedimentoDetail PD1 WITH (NOLOCK)
								ON  PD1.PartnerID = PH.PartnerID
							AND PD1.PedimentoHeaderGUID = PH.PedimentoHeaderGUID
							) AS PD
							ON (DS.PedimentoNum = PD.PedimentoNum AND
								DS.PartnerID = PD.PartnerID AND
								LTRIM(STR(DS.SecuenciaFraccion, 10)) = PD.SectionNum)
						WHERE DS.PartnerID = @partnerid AND 
								DS.Folio = @folio AND 
								DS.Fraccion <> PD.MXHSNum
						ORDER BY 1, 10, 6', CAST(N'2014-06-18T15:23:07.180' AS DateTime), N'MXDSHSOPTDESC', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-06-18T15:23:07.180' AS DateTime), N'MXDSDESC', N'Check merchandise description differences', N'/*3. Validación de Descripciones de Partidas*/
						SELECT DISTINCT DS.PedimentoNum AS Pedimento, 
								''txdMXDataStageDetail551'' AS SourceTable, ''DescripcionMercancia'' AS SourceField,    
								''txdMXPedimentoDetail'' AS ComparisonTable, ''CountryOfOriginOrDestination'' AS ComparisonField,    
								DS.DescripcionMercancia AS SourceFieldValue, 
								PD.MXProductDesc AS ComparisonFieldValue,
								''MXDSDESCMSG'' AS Msg, ''Description'' AS CompareGroup, 
								DS.SecuenciaFraccion AS Additional3, '''' AS [Additional2], 
								DS.Folio AS [Additional1], DS.PartnerID as [PartnerID], GETDATE() AS [Effdate], 
								''DATASTAGE'' AS [ProcessID], NEWID() AS [LineGuid],''N'', ''N''
						FROM 
							(   SELECT REF.PartnerID, REF.PedimentoNum, DS1.DescripcionMercancia, REF.Folio, DS1.SecuenciaFraccion, DS1.Fraccion
								FROM txdMXDataStageFolioReference REF WITH (NOLOCK)
								JOIN txdMXDataStageDetail551 DS1 WITH (NOLOCK)
									ON (REF.PartnerID = DS1.PartnerID AND 
										REF.PedimentoNum = DS1.PedimentoNum)
								WHERE DS1.PartnerID = @partnerid AND 
										REF.Folio = @folio
							) AS DS
						LEFT JOIN 
							( 
							SELECT PH.PartnerID, PH.PedimentoNum, PD1.MXProductDesc, PD1.SectionNum, PD1.MXHSNum
							FROM txdMXPedimentoHeader PH WITH (NOLOCK)
							JOIN txdMXPedimentoDetail PD1 WITH (NOLOCK)
								ON  PD1.PartnerID = PH.PartnerID
							AND PD1.PedimentoHeaderGUID = PH.PedimentoHeaderGUID
							) AS PD
							ON (DS.PedimentoNum = PD.PedimentoNum AND
								DS.PartnerID = PD.PartnerID AND
								LTRIM(STR(DS.SecuenciaFraccion, 10)) = PD.SectionNum)
						WHERE DS.PartnerID = @partnerid AND 
								DS.Folio = @folio AND 
								(DS.DescripcionMercancia <> UPPER(ISNULL(pd.MXProductDesc,'''')))
						ORDER BY 1, 10, 6', CAST(N'2014-06-18T15:23:07.180' AS DateTime), N'MXDSDESCOPTDESC', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-06-18T15:23:07.180' AS DateTime), N'MXDSCTYORG', N'Check country of origin differences', N'/* 1. Validación de Pais de Origen */
				SELECT  DS.PedimentoNum AS Pedimento, 
						''txdMXDataStageDetail551'' AS SourceTable, ''PaisOrigenDestino'' AS SourceField,    
						''txdMXPedimentoDetail'' AS ComparisonTable, ''CountryOfOriginOrDestination'' AS ComparisonField,    
						DS.PaisOrigenDestino AS SourceFieldValue, 
						ISNULL(PD.CountryOfOriginOrDestination,'''') AS ComparisonFieldValue,
						''MXDSCTYORGMSG'' AS Msg, ''Pais Origen'' AS CompareGroup, 
						DS.SecuenciaFraccion AS Additional3, '''' AS [Additional2], 
						DS.Folio AS [Additional1], DS.PartnerID as [PartnerID], GETDATE() AS [Effdate], 
						''DATASTAGE'' AS [ProcessID], NEWID() AS [LineGuid],''N'', ''N'' 
				FROM 
					(   SELECT REF.PartnerID, REF.PedimentoNum, DS1.PaisOrigenDestino, REF.Folio, DS1.SecuenciaFraccion, DS1.Fraccion
						FROM txdMXDataStageFolioReference REF WITH (NOLOCK)
						JOIN txdMXDataStageDetail551 DS1 WITH (NOLOCK)
							ON (REF.PartnerID = DS1.PartnerID AND 
								REF.PedimentoNum = DS1.PedimentoNum)
						WHERE DS1.PartnerID = @partnerid AND 
								REF.Folio = @folio
					) AS DS
				LEFT JOIN 
					( 
					SELECT PH.PartnerID, PH.PedimentoNum, PD1.CountryOfOriginOrDestination, PD1.SectionNum, PD1.MXHSNum
					FROM txdMXPedimentoHeader PH WITH (NOLOCK)
					JOIN txdMXPedimentoDetail PD1 WITH (NOLOCK)
						ON  PD1.PartnerID = PH.PartnerID
					AND PD1.PedimentoHeaderGUID = PH.PedimentoHeaderGUID
					) AS PD
					ON (DS.PedimentoNum = PD.PedimentoNum AND
						DS.PartnerID = PD.PartnerID AND
						LTRIM(STR(DS.SecuenciaFraccion, 10)) = PD.SectionNum)
				WHERE DS.PartnerID = @partnerid AND 
						DS.Folio = @folio AND 
						DS.PaisOrigenDestino <> DS.PaisOrigenDestino
				ORDER BY 1, 10, 6', CAST(N'2014-06-18T15:23:07.180' AS DateTime), N'MXDSCTYORGOPTDESC', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-06-18T15:23:07.183' AS DateTime), N'MXDSUSVALT', N'Check total pedimento US value', N'/*9. Comparación de Valor total USD Por Pedimento*/
						SELECT DS.PedimentoNum AS Pedimento,  
								''txdMXDataStageDetail551'' AS SourceTable, ''ValorDolares'' AS SourceField,    
								''txdMXPedimentoDetail'' AS ComparisonTable, ''TotalValueUSD'' AS ComparisonField,    
								CONVERT(VARCHAR(100),ds.ValorDolares) AS SourceVal, CONVERT(VARCHAR(100),PD.TotalValueUSD) AS ComparisonVal, 
								''MXDSUSVALDMSG'' AS Msg, ''Detail USD Value'' AS CompareGroup,
								'''' AS Additional3, '''' AS [Additional2], 
								DS.Folio AS [Additional1], DS.PartnerID as [PartnerID], GETDATE() AS [Effdate], 
								''DATASTAGE'' AS [ProcessID], NEWID() AS [LineGuid],''N'', ''N''
						FROM 
							(   SELECT REF.PartnerID, DS1.PedimentoNum, SUM(DS1.ValorDolares) AS [ValorDolares], REF.Folio
								FROM txdMXDataStageFolioReference REF WITH (NOLOCK)
								JOIN txdMXDataStageDetail551 DS1 WITH (NOLOCK)
									ON (REF.PartnerID = DS1.PartnerID AND 
										REF.PedimentoNum = DS1.PedimentoNum)
								WHERE DS1.PartnerID = @partnerid AND 
										REF.Folio = @folio
								GROUP BY REF.PartnerID, DS1.PedimentoNum, REF.Folio
							) AS DS
						LEFT JOIN 
							( 
							SELECT PH.PartnerID, PH.PedimentoNum, SUM(PD1.TotalValueUSD) AS [TotalValueUSD]
							FROM txdMXPedimentoHeader PH WITH (NOLOCK)
							JOIN txdMXPedimentoDetail PD1 WITH (NOLOCK)
								ON  PD1.PartnerID = PH.PartnerID
							AND PD1.PedimentoHeaderGUID = PH.PedimentoHeaderGUID
							GROUP BY PH.PartnerID, PH.PedimentoNum
							) AS PD
							ON (DS.PedimentoNum = PD.PedimentoNum AND
								DS.PartnerID = PD.PartnerID)
						WHERE DS.PartnerID = @partnerid AND 
								DS.Folio = @folio AND ds.ValorDolares <> ISNULL(pd.TotalValueUSD,0)
						ORDER BY 1, 10, 6', CAST(N'2014-06-18T15:23:07.183' AS DateTime), N'MXDSUSVALTOPTDESC', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-06-18T15:23:07.183' AS DateTime), N'MXDSUSVALD', N'Check pedimento detail US value', N'/*5. Comparación de Valor total USD*/
						SELECT DS.PedimentoNum AS Pedimento,  
								''txdMXDataStageDetail551'' AS SourceTable, ''ValorDolares'' AS SourceField,    
								''txdMXPedimentoDetail'' AS ComparisonTable, ''TotalValueUSD'' AS ComparisonField,    
								CONVERT(VARCHAR(100),ds.ValorDolares) AS SourceVal, CONVERT(VARCHAR(100),ISNULL(PD.TotalValueUSD,''0'')) AS ComparisonVal, ''MXDSUSVALDMSG'' AS Msg,   
								''Detail USD Value'' AS CompareGroup,
								DS.SecuenciaFraccion AS Additional3, '''' AS [Additional2], 
								DS.Folio AS [Additional1], DS.PartnerID as [PartnerID], GETDATE() AS [Effdate], 
								''DATASTAGE'' AS [ProcessID], NEWID() AS [LineGuid],''N'', ''N''
						FROM 
							(   SELECT REF.PartnerID, DS1.PedimentoNum, SUM(DS1.ValorDolares) AS [ValorDolares], REF.Folio, DS1.SecuenciaFraccion, DS1.Fraccion
								FROM txdMXDataStageFolioReference REF WITH (NOLOCK)
								JOIN txdMXDataStageDetail551 DS1 WITH (NOLOCK)
									ON (REF.PartnerID = DS1.PartnerID AND 
										REF.PedimentoNum = DS1.PedimentoNum)
								WHERE DS1.PartnerID = @partnerid AND 
										REF.Folio = @folio
								GROUP BY REF.PartnerID, DS1.PedimentoNum, REF.Folio, DS1.SecuenciaFraccion, DS1.Fraccion
							) AS DS
						LEFT JOIN 
							( 
							SELECT PH.PartnerID, PH.PedimentoNum, SUM(PD1.TotalValueUSD) AS [TotalValueUSD], PD1.SectionNum, PD1.MXHSNum
							FROM txdMXPedimentoHeader PH WITH (NOLOCK)
							JOIN txdMXPedimentoDetail PD1 WITH (NOLOCK)
								ON  PD1.PartnerID = PH.PartnerID
							AND PD1.PedimentoHeaderGUID = PH.PedimentoHeaderGUID
							GROUP BY PH.PartnerID, PH.PedimentoNum, PD1.SectionNum, PD1.MXHSNum
							) AS PD
							ON (DS.PedimentoNum = PD.PedimentoNum AND
								DS.PartnerID = PD.PartnerID AND
								LTRIM(STR(DS.SecuenciaFraccion, 10)) = PD.SectionNum)
						WHERE DS.PartnerID = @partnerid AND 
								DS.Folio = @folio AND ds.ValorDolares <> ISNULL(pd.TotalValueUSD,0)
						ORDER BY 1, 10, 6', CAST(N'2014-06-18T15:23:07.183' AS DateTime), N'MXDSUSVALDOPTDESC', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-06-18T15:23:07.183' AS DateTime), N'MXDSMXVALT', N'Check total pedimento commercial value', N'/*8. Validación de Valor Comercial Total por Pedimento*/
						SELECT DS.PedimentoNum AS Pedimento, 
								''txdMXDataStageDetail551'' AS SourceTable, ''ValorComercial'' AS SourceField,    
								''txdMXPedimentoDetail'' AS ComparisonTable, ''TotalValue'' AS ComparisonField,    
								CONVERT(VARCHAR(100),ds.ValorComercial) AS SourceVal, CONVERT(VARCHAR(100),ISNULL(PD.TotalValue,''0.0'')) AS ComparisonVal, 
								''MXDSMXVALTMSG'' AS Msg, ''Total Pesos Value'' AS CompareGroup,
								'''' AS Additional3, '''' AS [Additional2], 
								DS.Folio AS [Additional1], DS.PartnerID as [PartnerID], GETDATE() AS [Effdate], 
								''DATASTAGE'' AS [ProcessID], NEWID() AS [LineGuid],''N'', ''N'' 
						FROM 
							(   SELECT REF.PartnerID, REF.PedimentoNum, SUM(DS1.ValorComercial) AS [ValorComercial], REF.Folio
								FROM txdMXDataStageFolioReference REF WITH (NOLOCK)
								JOIN txdMXDataStageDetail551 DS1 WITH (NOLOCK)
									ON (REF.PartnerID = DS1.PartnerID AND 
										REF.PedimentoNum = DS1.PedimentoNum)
								WHERE DS1.PartnerID = @partnerid AND 
										REF.Folio = @folio
								GROUP BY REF.PartnerID, REF.PedimentoNum, REF.Folio
							) AS DS
						LEFT JOIN 
							( 
							SELECT PH.PartnerID, PH.PedimentoNum, SUM(PD1.TotalValue) AS [TotalValue]
							FROM txdMXPedimentoHeader PH WITH (NOLOCK)
							JOIN txdMXPedimentoDetail PD1 WITH (NOLOCK)
								ON  PD1.PartnerID = PH.PartnerID
							AND PD1.PedimentoHeaderGUID = PH.PedimentoHeaderGUID
							GROUP BY PH.PartnerID, PH.PedimentoNum
							) AS PD
							ON (DS.PedimentoNum = PD.PedimentoNum AND
								DS.PartnerID = PD.PartnerID)
						WHERE DS.PartnerID = @partnerid AND 
								DS.Folio = @folio AND 
								(DS.ValorComercial <> ISNULL(PD.TotalValue,''0.0''))
						ORDER BY 1, 10, 6', CAST(N'2014-06-18T15:23:07.183' AS DateTime), N'MXDSMXVALTOPTDESC', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-06-18T15:23:07.187' AS DateTime), N'MXDSMXVALD', N'Check pedimento detail commercial value', N'/*4. Comparación de Valor total Comercial*/
						SELECT DS.PedimentoNum AS Pedimento,  
								''txdMXDataStageDetail551'' AS SourceTable, ''ValorComercial'' AS SourceField,    
								''txdMXPedimentoDetail'' AS ComparisonTable, ''TotalValue'' AS ComparisonField,    
								CONVERT(VARCHAR(100),DS.ValorComercial) AS SourceVal, 
								CONVERT(VARCHAR(100),ISNULL((pd.TotalValue),''0.0'')) AS ComparisonVal, 
								''MXDSMXVALDMSG'' AS Msg,   
								''Detail Pesos Value'' AS CompareGroup,
								DS.SecuenciaFraccion AS Additional3, '''' AS [Additional2], 
								DS.Folio AS [Additional1], DS.PartnerID as [PartnerID], GETDATE() AS [Effdate], 
								''DATASTAGE'' AS [ProcessID], NEWID() AS [LineGuid],''N'', ''N'' 
						FROM 
							(   SELECT REF.PartnerID, REF.PedimentoNum, SUM(DS1.ValorComercial) AS [ValorComercial], REF.Folio, DS1.SecuenciaFraccion, DS1.Fraccion
								FROM txdMXDataStageFolioReference REF WITH (NOLOCK)
								JOIN txdMXDataStageDetail551 DS1 WITH (NOLOCK)
									ON (REF.PartnerID = DS1.PartnerID AND 
										REF.PedimentoNum = DS1.PedimentoNum)
								WHERE DS1.PartnerID = @partnerid AND 
										REF.Folio = @folio
								GROUP BY REF.PartnerID, REF.PedimentoNum, REF.Folio, DS1.SecuenciaFraccion, DS1.Fraccion
							) AS DS
						LEFT JOIN 
							( 
							SELECT PH.PartnerID, PH.PedimentoNum, SUM(PD1.TotalValue) AS [TotalValue], PD1.SectionNum, PD1.MXHSNum
							FROM txdMXPedimentoHeader PH WITH (NOLOCK)
							JOIN txdMXPedimentoDetail PD1 WITH (NOLOCK)
								ON  PD1.PartnerID = PH.PartnerID
							AND PD1.PedimentoHeaderGUID = PH.PedimentoHeaderGUID
							GROUP BY PH.PartnerID, PH.PedimentoNum, PD1.SectionNum, PD1.MXHSNum
							) AS PD
							ON (DS.PedimentoNum = PD.PedimentoNum AND
								DS.PartnerID = PD.PartnerID AND
								LTRIM(STR(DS.SecuenciaFraccion, 10)) = PD.SectionNum)
						WHERE DS.PartnerID = @partnerid AND 
								DS.Folio = @folio AND 
								(DS.ValorComercial <> ISNULL(PD.TotalValue,''0.0''))
						ORDER BY 1, 10, 6', CAST(N'2014-06-18T15:23:07.187' AS DateTime), N'MXDSMXVALDOPTDESC', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-02T08:31:11.763' AS DateTime), N'023e7883-cf01-4efc-a654-4dd166b8c0fb', N'MAINTENANCE SPREADSHEET UPLOAD: Global Codes', N'insert into tlgapplicationlaunchstatus 
SELECT ' + cast(@Partnerid as varchar(30)) + ', getdate(), ''server1'', NEWID(), ''MAINTENANCE_SPREADSHEET_UPLOAD_TMGGLOBALCODES'', 1, ''dxdExecuteSQLBatch.dll'', ''LAUNCH'',0, ''GlobalCode_insert - Clear PRW'',''N'',''N''', CAST(N'2014-06-26T14:35:42.133' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-02T08:31:11.763' AS DateTime), N'4f01c798-b152-4730-b88d-8ddb90c57fda', N'MAINTENANCE SPREADSHEET UPLOAD: ManufacturerID', N'insert into tlgapplicationlaunchstatus 
SELECT ' + cast(@Partnerid as varchar(30)) + ', getdate(), ''server1'', NEWID(), ''MAINTENANCE_SPREADSHEET_UPLOAD_TMFMANUFACTURER'', 1, ''dxdExecuteSQLBatch.dll'', ''LAUNCH'',0, ''Manufacturer Insert - Clear PRW'',''N'',''N''', CAST(N'2014-06-26T08:50:31.967' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-02T08:31:50.140' AS DateTime), N'9f252f28-d364-4af5-985c-c204814347f2', N'MAINTENANCE SPREADSHEET UPLOAD: Vendor Manufacturer', N'insert into tlgapplicationlaunchstatus 
SELECT 
' + cast(@Partnerid as varchar(30)) + ', getdate(), ''server1'', NEWID(), ''MAINTENANCE_SPREADSHEET_UPLOAD_TMFVENDORMANUFACTURERLOOKUP'', 1, ''dxdExecuteSQLBatch.dll'', ''LAUNCH'', 0, ''VendorManufacturerLookup Spreadsheet Import - Clear Process Run Warnings'', ''N'', ''N''', CAST(N'2014-06-26T08:59:14.960' AS DateTime), N'Vendor Manufacturer Lookup Spreadsheet Upload', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-02T08:31:50.140' AS DateTime), N'c5ffdab1-dd78-4016-a417-70bc774b2f4b', N'MAINTENANCE SPREADSHEET UPLOAD: HTSCodes', N'insert into tlgapplicationlaunchstatus
SELECT ' + cast(@Partnerid as varchar(30)) + ', getdate(), ''server1'', NEWID(), ''MAINTENANCE_SPREADSHEET_UPLOAD_TMDHTS'', 1, ''dxdExecuteSQLBatch.dll'', ''LAUNCH'',0, ''HTSCodes Spreadsheet Import - Clear Process Run Warnings'',''N'',''N''', CAST(N'2014-06-26T08:50:01.570' AS DateTime), N'HTSCodes Spreadsheet Upload', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-02T08:32:12.660' AS DateTime), N'03788967-f301-4451-b57f-4920b79b9257', N'MAINTENANCE SPREADSHEET UPLOAD: Port Codes', N'INSERT INTO tlgApplicationLaunchStatus 
SELECT 
	' + cast(@Partnerid as varchar(30)) + ' as PartnerID, GetDate() as EffDate, ''server1'' as ServerName, NewID() as RunGUID, 
	''MAINTENANCE_SPREADSHEET_UPLOAD_TMFPORTOFLADING'' as WorkFlow, ''1'' as SequenceNo, 
	''dxdExecuteSQLBatch.dll'' as ApplicationToLaunch, ''LAUNCH'' as Status, 
	'''' as ReturnCode, ''Clear_PRW_Ports_Spreadsheet'' as Command, 
	''N'' as KeepDuringRollback, ''N'' as DeletedFlag', CAST(N'2014-06-26T08:24:34.203' AS DateTime), N'Spreadsheet_Upload_Ports Workflow Launch SQL', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-02T08:32:12.660' AS DateTime), N'd435e019-503a-46af-90d0-f3a6bbb50d06', N'MAINTENANCE SPREADSHEET UPLOAD:Country_Spreadsheet_Upload', N'INSERT INTO tlgApplicationLaunchStatus 
SELECT 
' + cast(@Partnerid as varchar(30)) + ' as PartnerID, GetDate() as EffDate, ''server1'' as ServerName, NewID() as RunGUID, ''MAINTENANCE_SPREADSHEET_UPLOAD_TMFCOUNTRY'' as WorkFlow, ''1'' as SequenceNo, ''dxdExecuteSQLBatch.dll'' as ApplicationToLaunch, ''LAUNCH'' as Status, '''' as ReturnCode, ''Clear_PRW_Country_Spreadsheet'' as Command, ''N'' as KeepDuringRollback, ''N'' as DeletedFlag', CAST(N'2014-06-27T10:59:17.590' AS DateTime), N'Country_Spreadsheet_Upload', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-04-08T10:44:06.000' AS DateTime), N'c2017c09-c1c8-4aea-878d-4ad5732970bf', N'FTZ Lookup: FTZ Charts', N'select    
	''[''+ ''View '' + '']'' + ''(/VISUALIZATION/fdgChartVisualization.aspx?hide='' + isnull(vsp.Hide, '''') +
	''&type='' + vsp.Type + 
	''&XTilt='' + cast(vsp.XTilt as varchar(50)) +
	''&Stacked='' + vsp.Stacked +
	''&SQL='' + cast(ts.SQLGuid as varchar(50)) + 
	''&SQL2='' + vsp.SQL2 +
	'')'' AS [View], 
        ts.SQLDescription + case vsp.SQL2 when '''' then '''' else '' & '' + (select SQLDescription from tmgSQL where SQLGUID = vsp.SQL2) end as ChartName,
        vsp.Category,
        vsp.Type
from tmgSQL ts
join txdVisualizationSQLParams vsp on 
	ts.SQLGUID = vsp.SQLGUID and
	ts.PartnerID = vsp.PartnerID
where 
	vsp.Category = ''FTZ'' and
	ts.PartnerID = (select PartnerID from tmfDefaults)', CAST(N'2014-04-08T10:44:06.000' AS DateTime), N'Displays charts that can be generated based off various reports from FTZ data.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-30T21:49:05.000' AS DateTime), N'00366ffd-c135-4bee-8dd8-c12f5f195718', N'Entry Value by Zone Week', N'select 	e.EntryBeginDate ,
	SUM(c.totalValue) as TotalValue
from txdcf7501Header c
join txdWeeklyEstHeader e on 
	c.ExitDocID = e.ExitDocID and
	c.PartnerID = e.PartnerID 
where 
	e.EntryBeginDate > GETDATE() - (90 * 100) and
	e.PartnerID = (select PartnerID from tmfDefaults)
group by e.EntryBeginDate
order by e.EntryBeginDate', CAST(N'2014-07-30T21:49:05.000' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-04T10:25:26.000' AS DateTime), N'050c3fe5-e3b1-459c-9861-019b34108a50', N'Average Foreign Inventory Levels Over Time QTY', N'select 
	convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) Year_Month,
	avg(txnQty) TxnQty
from (
	select 
		txnDate,
		SUM(case when statusCode <> ''D'' then f.TxnQty else 0 end) TxnQty
	from txdFTZBal f
	where 
		f.TxnDate > GETDATE() - (365*10) and
		f.PartnerID = (select PartnerID from tmfDefaults)
	group by  
	txnDate 
) a
group by  
convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) 
order by 1', CAST(N'2014-08-04T10:25:26.000' AS DateTime), N'Added to 2120', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-30T21:47:21.000' AS DateTime), N'09e11301-a6b5-4ccb-bf63-aca46c628e96', N'Average Foreign Inventory Levels Over Time', N'select 
	convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) Year_Month,
	avg(txnQty) TxnQty
from (
	select 
		txnDate,
		SUM(case when statusCode <> ''D'' then f.TxnQty else 0 end) TxnQty
	from txdFTZBal f
	where 
		f.TxnDate > GETDATE() - (365*10) and
		f.PartnerID = (select PartnerID from tmfDefaults)
	group by  
	txnDate 
) a
group by  
convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) 
order by 1', CAST(N'2014-07-30T21:47:21.000' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-04T10:32:25.000' AS DateTime), N'1255684c-5511-4fb9-bd81-e256246199bf', N'Average Foreign Value Inventory Over Time Value', N'select 	convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) Year_Month,
	avg(value) Value
from (
	select 
		txnDate,
		SUM(case when statusCode <> ''D'' then f.ExtValue + f.ExtValue2 else 0 end) Value
	from txdFTZBal f
	where 
		f.TxnDate > GETDATE() - (365*10) and
		f.PartnerID = (select PartnerID from tmfDefaults)
	group by  
	txnDate 
) a
group by  
convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2)
order by 1', CAST(N'2014-08-04T10:32:25.000' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-31T15:57:33.000' AS DateTime), N'51f29f05-0326-4c02-a9be-083d38e8cb72', N'Average Domestic Value Inventory Over Time', N'select 	convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) Year_Month,
	avg(Value) Value
from (
	select 
		txnDate,
		SUM(case when statusCode = ''D'' then f.ExtValue + f.ExtValue2 else 0 end) Value
	from txdFTZBal f
	where 
		f.TxnDate > GETDATE() - (365*10) and
		f.PartnerID = (select PartnerID from tmfDefaults)
	group by  
	txnDate 
) a 
group by  
convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2)
order by 1', CAST(N'2014-07-31T15:57:33.000' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-30T21:48:29.000' AS DateTime), N'79d61710-aebd-4247-9dbf-b617de5f049f', N'Average Foreign Value Inventory Over Time', N'select 	convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) Year_Month,
	avg(value) Value
from (
	select 
		txnDate,
		SUM(case when statusCode <> ''D'' then f.ExtValue + f.ExtValue2 else 0 end) Value
	from txdFTZBal f
	where 
		f.TxnDate > GETDATE() - (365*10) and
		f.PartnerID = (select PartnerID from tmfDefaults)
	group by  
	txnDate 
) a
group by  
convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2)
order by 1', CAST(N'2014-07-30T21:48:29.000' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-04T09:36:43.000' AS DateTime), N'cce76e36-d0d9-4a18-aed5-8bef695f4417', N'Duty By Zone Week', N'select e.EntryBeginDate,
	sum(c.TotalDuty) as TotalDuty
	from txdcf7501Header c
join txdWeeklyEstHeader e on 
	c.ExitDocID = e.ExitDocID and
	c.PartnerID = e.PartnerID 
where 
	e.EntryBeginDate > GETDATE() - (90 * 100) and
	e.PartnerID = (select PartnerID from tmfDefaults)
group by e.EntryBeginDate
order by e.EntryBeginDate', CAST(N'2014-08-04T09:36:43.000' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-31T17:11:51.000' AS DateTime), N'e205f501-a765-4d43-bcbe-8236b1bf2320', N'Average Domestic Inventory Levels Over Time', N'select 
	convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) Year_Month,
	avg(txnQty) TxnQty
from (
	select 
		txnDate,
		SUM(case when statusCode = ''D'' then f.TxnQty else 0 end) TxnQty
	from txdFTZBal f
	where 
		f.TxnDate > GETDATE() - (365*10) and
		f.PartnerID = (select PartnerID from tmfDefaults)
	group by  
	txnDate 
) a
group by  
convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) 
order by 1', CAST(N'2014-07-31T17:11:51.000' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-30T21:45:32.000' AS DateTime), N'fe9b9de3-a30b-425d-b592-8017d76f55cc', N'Duty Liability of Inventory on Hand by Zone Status Code', N'SELECT 
x.StatusCode,  
CAST(ROUND(SUM(x.PotentialDutyLiability),2) AS NUMERIC(30,2)) as PotentialDutyLiability
FROM (
		Select
			rhv.PartnerID,
			rhv.StatusCode,
			--rh.TxnQty,
			--(rhv.Value*rh.TxnQty) AS ExtValue,
			--CASE WHEN rhv.StatusCode in (''N'',''P'') THEN (rh.TxnQty * rhv.Value + rhv.Value2) ELSE 0 END as DutiableValue,
			CASE WHEN rhv.StatusCode in (''N'',''P'') 
			THEN	((rh.TxnQty * rhv.Value + rhv.Value2) * hts.AdValoremRate) + 
					((rh.TxnQty * rhv.HTSUomConvFactor) * hts.SpecificRate) + 
					((rh.TxnQty * rhv.AddlHTSUomConvFactor) * hts.AddlSpecificRate) 
			ELSE 0 END as PotentialDutyLiability
			--CASE WHEN StatusCode in (''N'',''P'') 
			--THEN	((rh.TxnQty * rh.Weight) * hts.CottonFee) 
			--ELSE 0 END as CottonFee, 
			--CASE WHEN StatusCode in (''N'',''P'') 
			--THEN	((rh.TxnQty * rhv.Value + rhv.Value2) * d.HMFRate) 
			--ELSE 0 END as HMF 
		FROM
		txdfiforeceipt rh (nolock)
		JOIN txdfiforeceiptHtsValues rhv (nolock)
		ON rh.partnerid = rhv.partnerid and rh.txnnumguid = rhv.txnnumguid
		JOIN tmdhts hts
		ON rhv.HTSIndex=hts.HTSIndex
		--JOIN tmfdefaults d
		--ON rh.PartnerID=d.PartnerID
		) as x
where
	x.PartnerID = (select PartnerID from tmfDefaults)
group by 
x.StatusCode', CAST(N'2014-07-30T21:45:32.000' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-15T07:34:45.870' AS DateTime), N'a9b1db21-1c7c-476f-a330-a4458645f8b8', N'ABI Lookup: Liquidation Date Update', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
SELECT 
	''[''+ ''Edit'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntry.aspx?EntryNumber=''+Cast(usrh.EntryNumber as varchar(50)) +'')'' AS Edit, 
	''[''+ ''Replies'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntryReplies.aspx?EntryNumber=''+usrh.EntryNumber+'')'' AS Replies,
	usrh.EntryNumber, 
	usrh.BrokerReferenceNumber, 
	usrh.Status, 
	usrh.TeamNumber, 
	usrh.Source, 
	''UC9'' AS DispositionCode,
	1 as NoOrder
FROM txdusentryresponseheader usrh WITH (NOLOCK)
LEFT JOIN txdusentryresponsedetail usrd WITH (NOLOCK)
	ON usrh.responseguid = usrd.responseguid
                 AND usrh.PartnerID = usrd.PartnerID
WHERE usrd.responseguid IS NULL
	AND usrh.status = ''THE LIQUIDATION DATE HAS CHANGED''
                 AND usrh.PartnerID = @PartnerID@)
				 AS LookupViewInner WHERE @whereclause@', CAST(N'2014-08-15T07:34:45.870' AS DateTime), N'Displays all ABI entries for which the liquidation date has changed', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-15T07:35:21.380' AS DateTime), N'fd6cf7e4-0b92-4372-920f-32ea39cb1bf7', N'ABI Lookup: Bill of Lading Not on File', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
SELECT
	''[''+ ''Edit'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntry.aspx?EntryNumber=''+Cast(uses.EntryNumber as varchar(50)) +'')'' AS Edit, 
	''[''+ ''Replies'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntryReplies.aspx?EntryNumber=''+uses.EntryNumber+'')'' AS Replies,
	usrh.EntryNumber, 
	useh.EstimatedEntryDate, 
	useh.PreliminaryStatmentDate, 
	uses.ReleaseDate, 
	uses.CBPReleaseStatus, 
	useh.Ref1,  
	usrh.Status, 
	usrh.Source,
	1 as NoOrder
FROM txdusentryresponseheader usrh WITH (NOLOCK)
JOIN txdusentryheader useh WITH (NOLOCK)
	ON useh.entrystatusguid = usrh.entrystatusguid 
                 AND useh.PartnerID = usrh.PartnerID
JOIN txdusentrystatus uses WITH (NOLOCK)
	ON uses.entrystatusguid = useh.entrystatusguid
                  AND uses.PartnerID = useh.PartnerID
WHERE usrh.status LIKE ''%Bill of lading is not on file%'' 
	AND uses.CBPReleaseStatus =''Bill of lading is not on file''
                 AND useh.PartnerID = @PartnerID@)
				  AS LookupViewInner WHERE @whereclause@
', CAST(N'2014-08-15T07:35:21.380' AS DateTime), N'Displays all ABI entries for which CBP does not have a Bill of Lading on file', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T10:51:38.530' AS DateTime), N'16e3db90-53a9-4e63-baa6-eb77b41d6cd0', N'Classification Lookup: FTZ Active Parts Standard/US', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum ) AS [RowNum]
            FROM                     (
SELECT ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit,  xxpc.ProductNum
,xxpc.ProductDesc
,xxpc.HsNum,
1 AS NoOrder
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID AND
xxpc.ProductGuid = pc.ProductGuid
WHERE	xxpc.PartnerID = @PartnerID@ AND
xxpc.FtzActiveFlag = ''Y''
) AS LookupViewInner
            WHERE                               @whereclause@', CAST(N'2018-03-01T10:41:03.887' AS DateTime), N'Displays product information for FTZ active parts in selected country', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T10:55:53.417' AS DateTime), N'fd462eeb-2693-4793-b003-d6a67893521d', N'Classification Lookup: GCP2IM Validations Standard/US', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum ) AS [RowNum]
            FROM                  (SELECT t.ProductNum
                ,''GC000'' AS ErrorCode
                ,''The product number has duplicates that are also FtzActive'' AS Error
                ,q.EffDate AS ''Error occured on''
    ,1 AS NoOrder
FROM (
                SELECT ProductNum
                                ,ProductGuid
                FROM tmd@COUNTRY_CODE@ProductClassification WITH (NOLOCK)
                WHERE PartnerId = @PartnerID@
                                AND ProductNum <> ''''
                                AND ProductNum IN (
                                                SELECT ProductNum
                                                FROM tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
                                                WHERE PartnerId = @PartnerID@
                                                                AND FtzActiveFlag = ''Y''
                                                GROUP BY ProductNum
                                                HAVING COUNT(*) > 1
                                                )
                ) AS t
JOIN tmdProductClassificationModificationQueue q ON q.PartnerId = @PartnerID@
                AND t.ProductGuid = q.ProductGuid
WHERE EffDate = (
                                SELECT TOP 1 EffDate
                                FROM tmdProductClassificationModificationQueue WITH (NOLOCK)
                                WHERE PartnerId = q.PartnerId
                                                AND ProductGuid = q.ProductGuid
                                ORDER BY EffDate DESC
                                )

UNION ALL

SELECT t.ProductNum
                ,''GC001'' AS ErrorCode
                ,''This record has a blank product number'' AS Error
                ,q.EffDate AS ''Error occured on''
    ,1 AS NoOrder
FROM (
                SELECT DISTINCT pc.ProductNum
                                ,pc.ProductGuid
                FROM tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
                JOIN tmdProductClassificationModificationQueue q WITH (NOLOCK) ON pc.PartnerId = @PartnerID@
                                AND q.PartnerId = @PartnerID@
                                AND pc.ProductGuid = q.ProductGuid
                WHERE q.CountryCode = ''@COUNTRY_CODE@''
                                AND q.NotificationSent = ''Y''
                ) AS t
JOIN tmdProductClassificationModificationQueue q WITH (NOLOCK) ON q.PartnerId = @PartnerID@
                AND t.ProductGuid = q.ProductGuid
WHERE t.ProductNum = ''''
                AND EffDate = (
                                SELECT TOP 1 EffDate
                                FROM tmdProductClassificationModificationQueue
                                WHERE PartnerId = q.PartnerId
                                                AND ProductGuid = q.ProductGuid
                                ORDER BY EffDate DESC
                                )

UNION ALL

SELECT t.ProductNum
                ,''GC002'' AS ErrorCode
                ,''There is FTZ historical data that exists for this product number'' AS Error
                ,q.EffDate AS ''Error occured on''
    ,1 AS NoOrder
FROM (
                SELECT DISTINCT pc.ProductNum
                                ,pc.ProductGuid
                FROM tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
                JOIN tmdProductClassificationModificationQueue q WITH (NOLOCK) ON pc.PartnerId = @PartnerID@
                                AND q.PartnerId = @PartnerID@
                                AND pc.ProductGuid = q.ProductGuid
                WHERE q.CountryCode = ''@COUNTRY_CODE@''
                                AND q.NotificationSent = ''Y''
                                AND ProductNum IN (
                                                SELECT ProductNum
                                                FROM ttdStagingFifoProcessing o WITH (NOLOCK)
                                                WHERE o.PartnerId = @PartnerID@
                                                                AND EXISTS (
                                                                                SELECT 1
                                                                                FROM tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
                                                                                JOIN tmdProductClassificationModificationQueue q WITH (NOLOCK) ON pc.PartnerId = @PartnerID@
                                                                                                AND q.PartnerId = @PartnerID@
                                                                                                AND pc.ProductGuid = q.ProductGuid
                                                                                WHERE q.CountryCode = ''@COUNTRY_CODE@''
                                                                                                AND q.NotificationSent = ''Y''
                                                                                                AND ProductNum = o.ProductNum
                                                                                )
                                                
                                                UNION
                                                
                                                SELECT ProductNum
                                                FROM txdFifoProcessing o WITH (NOLOCK)
                                                WHERE o.PartnerId = @PartnerID@
                                                                AND EXISTS (
                                                                                SELECT 1
                                                                                FROM tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
                                                                                JOIN tmdProductClassificationModificationQueue q WITH (NOLOCK) ON pc.PartnerId = @PartnerID@
                                                                                                AND q.PartnerId = @PartnerID@
                                                                                                AND pc.ProductGuid = q.ProductGuid
                                                                                WHERE q.CountryCode = ''@COUNTRY_CODE@''
                                                                                                AND q.NotificationSent = ''Y''
                                                                                                AND ProductNum = o.ProductNum
                                                                                )
                                                
                                                UNION
                                                
                                                SELECT ProductNum
                                                FROM txdShipIM o WITH (NOLOCK)
                                                WHERE o.PartnerId = @PartnerID@
                                                                AND EXISTS (
                                                                                SELECT 1
                                                                                FROM tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
                                                                                JOIN tmdProductClassificationModificationQueue q WITH (NOLOCK) ON pc.PartnerId = @PartnerID@
                                                                                                AND q.PartnerId = @PartnerID@
                                                                                                AND pc.ProductGuid = q.ProductGuid
                                                                                WHERE q.CountryCode = ''@COUNTRY_CODE@''
                                                                                                AND q.NotificationSent = ''Y''
                                                                                                AND ProductNum = o.ProductNum
                                                                                )
                                                
                                                UNION
                                                
                                                SELECT ProductNum
                                                FROM txdShipIMHist o WITH (NOLOCK)
                                                WHERE o.PartnerId = @PartnerID@
                                                                AND EXISTS (
                                                                                SELECT 1
                                                                                FROM tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
                                                                                JOIN tmdProductClassificationModificationQueue q WITH (NOLOCK) ON pc.PartnerId = @PartnerID@
                                                                                                AND q.PartnerId = @PartnerID@
                                                                                                AND pc.ProductGuid = q.ProductGuid
                                                                                WHERE q.CountryCode = ''@COUNTRY_CODE@''
                                                                                                AND q.NotificationSent = ''Y''
                                                                                                AND ProductNum = o.ProductNum
                                                                                )
                                                
                                                UNION
                                                
                                                SELECT ProductNum
                                                FROM txdReceiptHist o WITH (NOLOCK)
                                                WHERE o.PartnerId = @PartnerID@
                                                                AND EXISTS (
                                                                                SELECT 1
                                                                                FROM tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
                                                                                JOIN tmdProductClassificationModificationQueue q WITH (NOLOCK) ON pc.PartnerId = @PartnerID@
                                                                                                AND q.PartnerId = @PartnerID@
                                                                                                AND pc.ProductGuid = q.ProductGuid
                                                                                WHERE q.CountryCode = ''@COUNTRY_CODE@''
                                                                                                AND q.NotificationSent = ''Y''
                                                                                                AND ProductNum = o.ProductNum
                                                                                )
                                                )
                ) AS t
JOIN tmdProductClassificationModificationQueue q WITH (NOLOCK) ON q.PartnerId = @PartnerID@
                AND t.ProductGuid = q.ProductGuid
WHERE q.PreviousFtzActiveFlag = ''Y''
                AND q.CurrentFtzActiveFlag = ''N''
                AND EffDate = (
                                SELECT TOP 1 EffDate
                                FROM tmdProductClassificationModificationQueue WITH (NOLOCK)
                                WHERE PartnerId = q.PartnerId
                                                AND ProductGuid = q.ProductGuid
                                ORDER BY EffDate DESC
                                )) AS LookupViewInner
            WHERE                               @whereclause@

', CAST(N'2018-03-01T10:46:07.373' AS DateTime), N'Displays information about the validation errors that occur when running GCP2IM ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-04T12:45:52.440' AS DateTime), N'4b3cd8af-c37b-4aef-9a85-9cd17a2ebeae', N'Average Foreign Inventory Levels Over Time QTY', N'select 
	convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) Year_Month,
	avg(txnQty) TxnQty
from (
	select 
		txnDate,
		SUM(case when statusCode <> ''D'' then f.TxnQty else 0 end) TxnQty
	from txdFTZBal f
	where 
		f.TxnDate > GETDATE() - (365) and
		f.PartnerID = (select PartnerID from tmfDefaults)
	group by  
	txnDate 
) a
group by  
convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) 
order by 1', CAST(N'2014-08-04T12:45:52.440' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-04T12:46:57.647' AS DateTime), N'49d7abdd-bcd1-49fb-bdf5-72a356f33185', N'Average Foreign Value Inventory Over Time Value', N'select 	convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) Year_Month,
	avg(value) Value
from (
	select 
		txnDate,
		SUM(case when statusCode <> ''D'' then f.ExtValue + f.ExtValue2 else 0 end) Value
	from txdFTZBal f
	where 
		f.TxnDate > GETDATE() - (365) and
		f.PartnerID = (select PartnerID from tmfDefaults)
	group by  
	txnDate 
) a
group by  
convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2)
order by 1', CAST(N'2014-08-04T12:46:57.647' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-04T12:47:29.460' AS DateTime), N'f2dc0622-f98b-4bfb-9098-205f7554d30e', N'Average Domestic Value Inventory Over Time', N'select 	convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) Year_Month,
	avg(Value) Value
from (
	select 
		txnDate,
		SUM(case when statusCode = ''D'' then f.ExtValue + f.ExtValue2 else 0 end) Value
	from txdFTZBal f
	where 
		f.TxnDate > GETDATE() - (365) and
		f.PartnerID = (select PartnerID from tmfDefaults)
	group by  
	txnDate 
) a 
group by  
convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2)
order by 1', CAST(N'2014-08-04T12:47:29.460' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-04T12:49:30.383' AS DateTime), N'14672c19-0850-4739-bdd2-144c69c7a95a', N'Duty By Zone Week', N'select e.EntryBeginDate,
	sum(c.TotalDuty) as TotalDuty
	from txdcf7501Header c
join txdWeeklyEstHeader e on 
	c.ExitDocID = e.ExitDocID and
	c.PartnerID = e.PartnerID 
where 
	e.EntryBeginDate > GETDATE() - (90) and
	e.PartnerID = (select PartnerID from tmfDefaults)
group by e.EntryBeginDate
order by e.EntryBeginDate', CAST(N'2014-08-04T12:49:30.383' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-04T12:50:04.353' AS DateTime), N'58a51e60-8ecf-47c4-93a7-ef8303878464', N'Average Domestic Inventory Levels Over Time', N'select 
	convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) Year_Month,
	avg(txnQty) TxnQty
from (
	select 
		txnDate,
		SUM(case when statusCode = ''D'' then f.TxnQty else 0 end) TxnQty
	from txdFTZBal f
	where 
		f.TxnDate > GETDATE() - (365) and
		f.PartnerID = (select PartnerID from tmfDefaults)
	group by  
	txnDate 
) a
group by  
convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) 
order by 1', CAST(N'2014-08-04T12:50:04.353' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-04T12:50:47.053' AS DateTime), N'0393b91a-3452-47a9-9fbc-95515e0ad900', N'Duty Liability of Inventory on Hand by Zone Status Code', N'SELECT 
x.StatusCode,  
CAST(ROUND(SUM(x.PotentialDutyLiability),2) AS NUMERIC(30,2)) as PotentialDutyLiability
FROM (
		Select
			rhv.PartnerID,
			rhv.StatusCode,
			--rh.TxnQty,
			--(rhv.Value*rh.TxnQty) AS ExtValue,
			--CASE WHEN rhv.StatusCode in (''N'',''P'') THEN (rh.TxnQty * rhv.Value + rhv.Value2) ELSE 0 END as DutiableValue,
			CASE WHEN rhv.StatusCode in (''N'',''P'') 
			THEN	((rh.TxnQty * rhv.Value + rhv.Value2) * hts.AdValoremRate) + 
					((rh.TxnQty * rhv.HTSUomConvFactor) * hts.SpecificRate) + 
					((rh.TxnQty * rhv.AddlHTSUomConvFactor) * hts.AddlSpecificRate) 
			ELSE 0 END as PotentialDutyLiability
			--CASE WHEN StatusCode in (''N'',''P'') 
			--THEN	((rh.TxnQty * rh.Weight) * hts.CottonFee) 
			--ELSE 0 END as CottonFee, 
			--CASE WHEN StatusCode in (''N'',''P'') 
			--THEN	((rh.TxnQty * rhv.Value + rhv.Value2) * d.HMFRate) 
			--ELSE 0 END as HMF 
		FROM
		txdfiforeceipt rh (nolock)
		JOIN txdfiforeceiptHtsValues rhv (nolock)
		ON rh.partnerid = rhv.partnerid and rh.txnnumguid = rhv.txnnumguid
		JOIN tmdhts hts
		ON rhv.HTSIndex=hts.HTSIndex
		--JOIN tmfdefaults d
		--ON rh.PartnerID=d.PartnerID
		) as x
where
	x.PartnerID = (select PartnerID from tmfDefaults)
group by 
x.StatusCode', CAST(N'2014-08-04T12:50:47.053' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-04T12:51:42.873' AS DateTime), N'd179da77-dd10-4d51-a9b1-7a79cc5f2ac7', N'Average Foreign Inventory Levels Over Time', N'select 
	convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) Year_Month,
	avg(txnQty) TxnQty
from (
	select 
		txnDate,
		SUM(case when statusCode <> ''D'' then f.TxnQty else 0 end) TxnQty
	from txdFTZBal f
	where 
		f.TxnDate > GETDATE() - (365) and
		f.PartnerID = (select PartnerID from tmfDefaults)
	group by  
	txnDate 
) a
group by  
convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) 
order by 1', CAST(N'2014-08-04T12:51:42.873' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-04T12:52:38.450' AS DateTime), N'b268afc4-0546-43a8-9cbe-0f1993f7f979', N'Average Foreign Value Inventory Over Time', N'select 	convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2) Year_Month,
	avg(value) Value
from (
	select 
		txnDate,
		SUM(case when statusCode <> ''D'' then f.ExtValue + f.ExtValue2 else 0 end) Value
	from txdFTZBal f
	where 
		f.TxnDate > GETDATE() - (365) and
		f.PartnerID = (select PartnerID from tmfDefaults)
	group by  
	txnDate 
) a
group by  
convert(varchar(4), YEAR(TxnDate)) + right(''0'' + convert(varchar(2),month(txnDate)), 2)
order by 1', CAST(N'2014-08-04T12:52:38.450' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-04T12:53:18.277' AS DateTime), N'0f1644fb-cd97-4763-9377-00e59c0f6159', N'Entry Value by Zone Week', N'select 	e.EntryBeginDate ,
	SUM(c.totalValue) as TotalValue
from txdcf7501Header c
join txdWeeklyEstHeader e on 
	c.ExitDocID = e.ExitDocID and
	c.PartnerID = e.PartnerID 
where 
	e.EntryBeginDate > GETDATE() - (90) and
	e.PartnerID = (select PartnerID from tmfDefaults)
group by e.EntryBeginDate
order by e.EntryBeginDate', CAST(N'2014-08-04T12:53:18.277' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T11:11:46.973' AS DateTime), N'28a23a57-3427-41b9-83ec-ea03b7869859', N'Classification Lookup: Products Missing Weight Standard', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum ) AS [RowNum]
            FROM                     (
SELECT ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit, 
xxpc.ProductNum
,xxpc.ProductDesc
,xxpc.GrossWeight
,xxpc.NetWeight,
1 AS NoOrder
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID AND
xxpc.ProductGuid = pc.ProductGuid
WHERE	xxpc.PartnerID = @PartnerID@ AND
ISNULL(xxpc.GrossWeight,0) = 0 OR
ISNULL(xxpc.NetWeight,0) = 0
) AS LookupViewInner
            WHERE                               @whereclause@', CAST(N'2018-03-01T10:38:31.520' AS DateTime), N'Displays all products missing weight values (net or gross)', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T11:21:18.770' AS DateTime), N'cca6d524-7383-4dff-8e7c-7cb4f70332fa', N'Classification Lookup: Products with ECN non-EAR99 Standard', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@ ) AS [RowNum]
FROM 
(
SELECT ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit, 
xxpc.ProductNum,
xxpc.ProductDesc,
xxpc.BusinessDivision,
xxpc.SupplierID,
xxpc.CountryOfOrigin,
xxpc.HsNum,
xxpc.AssuranceLevel,
xxpc.ECNNum,
1 AS NoOrder
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmd@Country_Code@ProductClassification xxpc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID AND
										 xxpc.ProductGuid = pc.ProductGuid
WHERE	xxpc.ECNNum <> ''EAR99'' AND
xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2018-03-01T10:35:35.110' AS DateTime), N'Displays products in the selected country where the ECN Number is not EAR99', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T11:25:37.927' AS DateTime), N'afef7b6f-936d-4887-8d3e-d4a9ad836c50', N'Classification Lookup: Products with Extract Queue Standard/US', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@ ) AS [RowNum]
FROM 
( SELECT	''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit ,
xxpc.ProductNum ,
xxpc.ProductDesc ,
xxpc.ProductMaterial ,
xxpc.ProductTypeCode ,
xxpc.HsNum ,
xxpc.CountryofOrigin ,
xxpc.ManufacturerID ,
xxpc.ActiveFlag ,
q.Status AS ExtractStatus,
1 AS NoOrder
FROM tmdProductClassification pc WITH ( NOLOCK )
JOIN tmd@COUNTRY_CODE@ProductClassification xxpc WITH ( NOLOCK ) ON xxpc.PartnerID = pc.PartnerID
AND xxpc.ProductGuid = pc.ProductGuid
JOIN txdgcextractqueue q WITH ( NOLOCK ) ON xxpc.productguid = q.productguid
AND xxpc.partnerid = q.partnerid
AND q.countrycode = ''@COUNTRY_CODE@''
WHERE   xxpc.PartnerID = @PartnerID@
AND q.extracttype = ''Broker''
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2018-03-01T10:48:05.567' AS DateTime), N'Displays products that have been recently triggered to be sent in an outbound interface', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T11:31:27.100' AS DateTime), N'4397acae-d3b9-47b5-8da8-d5be67206469', N'Classification Lookup: Unclassified Products Standard/US', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
		) AS [RowNum]
FROM     (
SELECT ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit, 
xxpc.ProductNum
,xxpc.ProductDesc
,xxpc.ProductMaterial
,xxpc.ProductTypeCode
,xxpc.HsNum
,xxpc.CountryofOrigin
,xxpc.ManufacturerID
,xxpc.ActiveFlag
,1 as NoOrder
FROM tmdProductClassification pc WITH (NOLOCK)
JOIN tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID
AND xxpc.ProductGuid = pc.ProductGuid
WHERE xxpc.PartnerID = @PartnerID@
AND xxpc.hsnum = ''''
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-03-01T10:39:03.623' AS DateTime), N'Displays product information for products within selected country without a specified HS Number', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T09:07:52.893' AS DateTime), N'497c7e34-2487-4ac6-9065-c47dcde11104', N'Audit Log Lookup: Audit Log Lookup', N'SELECT * ,
							ROW_NUMBER() OVER ( ORDER BY @orderby@, ModifyDate desc ) AS [RowNum]
							FROM    
    (
SELECT ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit, 
										xxpc.ProductGuid, 
										xxpc.ProductNum, 
										xxpc.ProductDesc, 
										al.UserName, 
										al.LogEntry, 
										al.EffDate as ModifyDate,
										1 AS NoOrder
									from tmd@COUNTRY_CODE@ProductClassification xxpc (nolock)
									join tmdProductClassification pc (nolock) on 
										xxpc.PartnerID = pc.PartnerID and
										xxpc.ProductGuid = pc.ProductGuid
									left join tmdAuditLog al (nolock) on 
										xxpc.PartnerID = al.PartnerID and
										xxpc.ProductGuid = al.ProductGuid and
										al.CountryCode = ''@COUNTRY_CODE@''
									where
										xxpc.PartnerID = @PartnerID
								) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2018-03-01T10:37:17.123' AS DateTime), N'Displays changes done by users relating to product classifications within the selected country profile', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T09:10:10.640' AS DateTime), N'74236680-f99b-4ab6-9e34-4be3991edcc2', N'Classification Request Lookup: Classification Request Lookup', N'SELECT * ,
							ROW_NUMBER() OVER ( ORDER BY @orderby@, Status, RequestDate asc ) AS [RowNum]
							FROM    
								( 
								Select 
                                  ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + cd.ProductNum + ''&ID='' + CAST (cd.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit,
									isnull(gc.Decode, ch.Status) as Status,
									ch.RequestorName, 
									convert(varchar(10), ch.requestdate, 101) as RequestDate, 
									ch.Priority, 
									ch.DueDate,
									ch.AssignedTo,
									isnull(cd.ProductNum, '''') as ProductNum,
									isnull(cd.ProductDesc, '''') as ProductDesc, 
									isnull(cd.HsNum, '''') as HsNum,
									isnull(cd.CountryOfOrigin, '''') as CountryOfOrigin,
									1 AS NoOrder
								from tmdClassificationRequestHeader ch (nolock) 
								left join tmdClassificationRequestDetail cd (nolock) on 
									ch.RequestGuid = cd.RequestGuid and 
									ch.PartnerID = cd.PartnerID    
								left join tmgGlobalCodes gc (nolock) on 
									ch.Status = gc.Code and
									ch.PartnerID = gc.PartnerID and
									gc.FieldName = ''ClassRequest''
								where 
									ch.Country = ''@COUNTRY_CODE@'' and 
									ch.PartnerID = @PartnerID
								) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2018-04-06T14:46:56.857' AS DateTime), N'Displays Request information for all Requests with a status that is not Closed', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-09-29T14:45:47.497' AS DateTime), N'12A5954F-0403-4365-84FD-7049BC5665F1', N'Insertion into StagingPreReceiptInvoice', N'
INSERT INTO [dbo].[ttdStagingPreReceiptInvoice]
SELECT [PartnerID] ,[EffDate] ,[InvoiceLineGuid] ,[ProductNum]
,CAST([TxnQty] AS Numeric(38,20))  ,CAST([Value] AS Numeric(38,20)) ,
[CountryOfOrigin], [CountryOfOriginSource], [CountryOfExport] ,CAST([GrossWeight] AS Numeric(38,20)) ,[GrossWeightSource],
[ManufacturerID] ,[ManufacturerIDSource] ,[StatusCode] ,[StatusCodeSource] ,[TransportID] ,[InvoiceNum]
,CAST([InvoiceLineNum] AS INT) ,[InvoiceDate] ,[ExportDate] ,[MasterBillOfLading]
,[HouseBillOfLading] ,[PO] ,[CurrencyCode] ,[Container] ,[HtsIndex]
,[HtsIndexSource] ,[HtsNum] ,[HtsNumSource] ,[SpiCode1] ,[SpiCode1Source]
,[SpiCode2] ,[SpiCode2Source] , CAST([HtsUomConvFactor] AS Numeric(38,20)) ,[HtsUomConvFactorSource]
,CAST([AddlHtsUomConvFactor] AS Numeric(38,20)) ,[AddlHtsUomConvFactorSource] ,CAST([OtherHtsUomConvFactor] AS Numeric(38,20))
,[OtherHtsUomConvFactorSource] ,CAST([Charges] AS Numeric(38,20)) ,[ETADate] ,[ValidFlag] ,[AssignmentFlag]
,[AuditedFlag] ,[Ref1],[Ref2] ,[Ref3] ,[Ref4] ,[Ref5] ,[Ref6] ,[ReceiptDocID]
,CAST([ClockSequence] AS INT) ,[ModeOfTransport] ,[ItNum] ,[CAProvince] ,[PriorNoticeStatus]
,[PriorNoticeStatusSource] ,CAST([ManifestQty] AS Numeric(38,20)) ,[License1],[License1Type],[License2],[License2Type],[CurrencyCodeSource],[AltCurrencyCode],[AltCurrencyCodeSource],[AltValue],[AltValueSource],[TxnQtyUom],[TxnQtyUomSource],[RptQtyUom],[RptQtyUomSource],[AddlRptQtyUom],[AddlRptQtyUomSource],[OtherRptQtyUom],[OtherRptQtyUomSource],[GrossWeightUom],[GrossWeightUomSource],[DeletedFlag] ,[KeepDuringRollback]
FROM usrStagingPreReceiptInvoice
', CAST(N'2014-09-29T14:45:47.497' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T09:18:16.340' AS DateTime), N'8b178c2d-de65-4a5f-89bd-e1d18a87b476', N'DPS Lookup: Companies Screened in the past 7,30,90 days', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@ ) AS [RowNum]
FROM 
( 	
	SELECT  
		''[''+ ''Edit'' + '']'' + ''(/Maintenance/fmgCompanyMaintenance.aspx?CompanyID='' + comp.CompanyID + '')'' AS Edit,
		comp.CompanyID,
		ISNULL(g.Decode, comp.CompanyType) as CompanyType,
		comp.CompanyName,
		comp.CompanyAddress1,
		comp.CompanyAddress2,
		comp.CompanyAddress3,
		comp.CompanyAddress4,
		comp.CompanyCity,
		comp.CompanyState, 
		comp.CompanyPostalCode,
		comp.CompanyCountryCode,
		comp.DTSStatus,
		comp.DTSOverrideDate,
		comp.DTSLastValidatedDate,
		comp.DTSLastScreenedDate,
		1 as NoOrder
	FROM tmgCompany comp (NOLOCK)
	LEFT JOIN tmgGlobalCodes g (NOLOCK) ON
		g.PartnerID = comp.PartnerID AND
		g.Code = comp.CompanyType AND
		g.FieldName = ''CompanyType''
	WHERE 
		comp.DTSLastScreenedDate > GETDATE() - @VALUE@
		AND	comp.PartnerID = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-10-21T09:18:16.340' AS DateTime), N'Displays companies that have been screened within the past 7,30, or 90 days.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T10:27:27.523' AS DateTime), N'92674bac-61bc-4952-ad3a-807cfcf80949', N'Entry Visibility Lookup: Entry Visibility Lookup US', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]
FROM    
( 	
SELECT DISTINCT  
a.EntryGuid,
a.Partnerid ,  
a.EntryNum ,  
MAX(CONVERT(VARCHAR(10), a.Effdate, 101)) AS ''EffDate'',
MAX(CONVERT(VARCHAR(10), a.EntryDate, 101)) AS ''EntryDate'',  
ISNULL(d.Decode, '''') AS ''Status'', 
a.BrokerName, 
a.MasterBillOfLading, 
a.HouseBillOfLading, 
a.IORNum, 
''@country_code@'' AS COUNTRY,
1 AS NoOrder
FROM txd@country_code@EntryVisibility a  WITH ( NOLOCK )  
LEFT OUTER JOIN txdEntryValidationErrors b WITH ( NOLOCK ) ON a.LineGuid = b.LineGuid  
AND a.PartnerID = b.PartnerID  
LEFT OUTER JOIN txdEntryValidationSummaryStatus evss WITH ( NOLOCK ) ON evss.PartnerID = a.PartnerID  
AND evss.EntryGUID = a.EntryGUID  
LEFT OUTER JOIN tmgGlobalCodes d WITH ( NOLOCK ) ON a.PartnerID = d.PartnerID  
AND d.FieldName = ''EVSummaryStatus''  
AND evss.StatusCode = d.Code  
WHERE a.PartnerID = (select PartnerID from tmfDefaults)  
AND a.EffDate = (SELECT MAX(a2.effdate)  
FROM txd@country_code@EntryVisibility a2 WITH (NOLOCK)  
WHERE a.PartnerID = a2.PartnerID AND a.EntryNum = a2.EntryNum)  
GROUP BY a.EntryGuid, a.PartnerID ,  
a.EntryNum ,  
d.Decode, a.BrokerName,  a.MasterBillOfLading, a.HouseBillOfLading, a.IORNum

) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2018-03-27T13:30:12.900' AS DateTime), N'Displays general information for US Entries', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T10:42:32.883' AS DateTime), N'caaeba94-74fb-4ac7-a4e4-e06b3b8d3858', N'Entry Visibility Lookup: Most Recent Discrepancies', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]
FROM    
( 	
SELECT    xxev.EntryGuid
         ,xxev.EntryNum
         ,MAX(CONVERT(VARCHAR(10),xxev.EntryDate,101)) AS ''EntryDate''
         ,xxev.IORNum
         ,g.Decode AS Status
         ,MAX(CONVERT(VARCHAR(10),eh.EffDate,101)) AS ''LastErrorDate''
         ,eh.ValidationGroup
         ,eh.ValidationType
         ,g2.Decode AS AssignedTo
         ,1 AS NoOrder
FROM  txd@value@EntryVisibility xxev WITH (NOLOCK)
JOIN  txdEntryValidationErrorsHist eh WITH (NOLOCK) ON xxev.EntryGUID = eh.EntryGUID AND
                                                               xxev.LineGUID = eh.LineGUID AND
                                                               xxev.PartnerID = eh.PartnerID
JOIN  txdEntryValidationSummaryStatus evss WITH (NOLOCK) ON evss.entryguid = eh.EntryGUID
                                                                        AND   evss.PartnerID = eh.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) ON g.Code = evss.StatusCode AND
                                            g.fieldname = ''EVSummaryStatus''
LEFT JOIN tmgGlobalCodes g2 WITH (NOLOCK) ON g2.Code = evss.AssignedTo AND
                                             g2.Decode = ''EVAssignToList''
WHERE xxev.PartnerID = (
                                      SELECT    PartnerID
                                      FROM            tmfdefaults WITH (NOLOCK)
                                    )
GROUP BY xxev.EntryGuid
         ,xxev.EntryNum
         ,eh.ValidationGroup
         ,eh.ValidationType
         ,g.Decode
         ,g2.Decode
         ,xxev.IORNum

) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2018-02-27T12:11:02.257' AS DateTime), N'Shows the latest validation errors that took place in Entry Visibility', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T10:45:02.900' AS DateTime), N'96dc4274-a296-40f4-83f4-be256728a9a4', N'Entry Visibility Lookup: Unsassigned Entries', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]
FROM    
( 	
select 
xxev.EntryGuid,
xxev.EntryNum, 
isnull(g.Decode, evss.StatusCode) as EntryStatus,
xxev.BrokerID,
MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',  
MAX(CONVERT(VARCHAR(10), xxev.SummaryDate, 101)) AS ''SummaryDate'', 
evss.AssignedTo	,
1 AS NoOrder
from txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
join txdEntryValidationSummaryStatus evss WITH (NOLOCK) on 
evss.EntryGuid = xxev.EntryGuid and
evss.PartnerID = xxev.PartnerID  
left join tmgGlobalCodes g WITH (NOLOCK) on 
evss.StatusCode = g.Code and
evss.PartnerID = g.PartnerID and
g.FieldName = ''EVSummaryStatus''
where
xxev.PartnerID = @PartnerID@
and
evss.AssignedTo = ''''
and
xxev.EffDate = (SELECT MAX(a2.effdate)  
FROM txd@COUNTRY_CODE@EntryVisibility a2 WITH (NOLOCK)  
WHERE xxev.PartnerID = a2.PartnerID AND xxev.EntryNum = a2.EntryNum)
Group by xxev.EntryGuid, xxev.EntryNum, evss.StatusCode, xxev.BrokerID,xxev.EntryDate,
xxev.SummaryDate , isnull(g.Decode, evss.StatusCode),
evss.AssignedTo
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2018-02-13T17:40:27.823' AS DateTime), N'Displays all entries that have not been assigned to an individual ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T10:46:59.467' AS DateTime), N'10ef1a46-72c4-4c43-9136-95cbc7e1240f', N'Entry Visibility Lookup: Days to Release', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]
FROM    
( 	
select
xxev.EntryGuid,
xxev.EntryNum, 
isnull(g.Decode, evss.StatusCode) as EntryStatus,
xxev.BrokerID,
xxev.IORNum, 
convert(varchar, xxev.EstimatedDateOfArrival, 101) as EstimatedDateOfArrival , 
convert(varchar, xxev.ReleaseDate, 101) as ReleaseDate, 
case when (xxev.EstimatedDateOfArrival = ''1900-01-01 00:00:00.000'' or xxev.ReleaseDate = ''1900-01-01 00:00:00.000'') then 0
else DateDiff(day, xxev.EstimatedDateOfArrival, xxev.ReleaseDate) end as DaysToRelease,
1 AS NoOrder
from txdUSEntryVisibility xxev with (nolock)
join txdEntryValidationSummaryStatus evss with (nolock) on 
evss.EntryGuid = xxev.EntryGuid and
evss.PartnerID = xxev.PartnerID  
left join tmgGlobalCodes g with (nolock) on 
evss.StatusCode = g.Code and
evss.PartnerID = g.PartnerID and
g.FieldName = ''EVSummaryStatus''
where
xxev.PartnerID = @PartnerID@
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2018-03-27T13:38:53.833' AS DateTime), N'Shows entries and the number of days until those entries are released', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-06-08T13:37:30.233' AS DateTime), N'025bf45e-ee76-44a0-9ea3-23b3a8077378', N'Unprinted ExitDocIDs', N'SELECT DISTINCT [Customs Document], s.ExitDocID FROM (SELECT ''cf7501'' AS [Customs Document], ExitDocID FROM txdShipIM WITH (NOLOCK) WHERE CountryShipTo = ''US'' UNION ALL SELECT ''cf7512'' AS [Customs Document], ExitDocID FROM txdShipIM WITH (NOLOCK) WHERE CountryShipTo <> ''US'' UNION ALL SELECT ''cf7501'' AS [Customs Document], ExitDocID FROM txdShipPC WITH (NOLOCK) WHERE CountryShipTo = ''US'' UNION ALL SELECT ''cf7512'' AS [Customs Document], ExitDocID FROM txdShipPC WITH (NOLOCK) WHERE CountryShipTo <> ''US'') s', CAST(N'2015-06-08T13:37:30.233' AS DateTime), N'', N'N', N'N')
, (@PartnerID, CAST(N'2014-10-21T10:48:53.207' AS DateTime), N'41e6d091-a3ff-4891-8f52-ee3f0ccfc777', N'Entry Visibility Lookup: Broker Error Report', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]
FROM    
( 	
select 		
xxev.EntryGuid,
xxev.EntryNum, 
isnull(g2.Decode, evss.StatusCode) as EntryStatus,
xxev.BrokerID,
note.Effdate,
xxev.EntryDate,  
xxev.IORNum, 
g.decode as ReasonCode, 
note.UserGuid as ''User'', 
cast(note.Note as varchar(6000)) as [Notes],
1 AS NoOrder
from txd@COUNTRY_CODE@EntryVisibility xxev with (nolock)
Inner Join tmgnote note with (nolock) on
note.PartnerID = xxev.PartnerID 
and note.notetype = ''EVVNO''
Left Join tmgglobalcodes g
on note.reasoncode = g.code and 
g.fieldname = ''EVVReasonCode'' and
note.partnerid = g.partnerid	
Inner join txdEntryValidationSummaryStatus evss with (nolock) on 
evss.EntryGuid = xxev.EntryGuid and
evss.PartnerID = xxev.PartnerID  
left join tmgGlobalCodes g2 with (nolock) on 
evss.StatusCode = g2.Code and
evss.PartnerID = g2.PartnerID and
g2.FieldName = ''EVSummaryStatus''
Join txdEntryErrorReportLines r with (nolock) on 
r.LineGUId = xxev.LineGuid
and r.PartnerID = xxev.PartnerID
where
xxev.PartnerID = @PartnerID@ and
note.note is not null 
and r.TypeFlag = ''BRO''
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-21T10:48:53.207' AS DateTime), N'Displays the broker report lines for entry errors ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:02:29.290' AS DateTime), N'c8755c5f-04df-4c0e-98fe-7ffe3e3e5b8e', N'Entry Visibility Lookup: Completed Entries', N'SELECT	''['' + ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit
	   ,xxev.EntryNum
	   ,ISNULL(g.Decode,evss.StatusCode) AS EntryStatus
	   ,xxev.BrokerID
	   ,MAX(xxev.Effdate) AS EffDate
	   ,MAX(CONVERT(VARCHAR(10),xxev.EntryDate,101)) AS ''EntryDate''
	   ,ISNULL(g.Decode,'''') AS ''Status''
FROM	txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
INNER JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) ON evss.EntryGuid = xxev.EntryGuid AND
																 evss.PartnerID = xxev.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) ON evss.StatusCode = g.Code AND
											evss.PartnerID = g.PartnerID AND
											g.FieldName = ''EVSummaryStatus''
LEFT OUTER JOIN txdEntryValidationErrors b WITH (NOLOCK) ON xxev.LineGuid = b.LineGuid AND
															xxev.PartnerID = b.PartnerID
WHERE	xxev.PartnerID = @PartnerID@ AND
		(
		(
		evss.StatusCode IN (''Comp'') OR
		evss.StatusCode IS NULL
		) OR
		(evss.StatusCode = ''PR'') OR
		(
		evss.StatusCode LIKE ''COMP%'' AND
		evss.EffDate > GETDATE() - 1
		)
		) AND
		xxev.EffDate = (
						SELECT	MAX(xxev2.effdate)
						FROM	txd@COUNTRY_CODE@EntryVisibility xxev2 WITH (NOLOCK)
						WHERE	xxev.PartnerID = xxev2.PartnerID AND
								xxev.EntryNum = xxev2.EntryNum AND
								xxev.PartnerID = @PartnerId@
					   )
GROUP BY xxev.EntryNum
	   ,g.Decode
	   ,g.Decode
	   ,evss.StatusCode
	   ,xxev.BrokerID', CAST(N'2014-03-12T19:02:29.290' AS DateTime), N'Shows entries that have an entry status of Complete or PEA required ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:09:59.933' AS DateTime), N'a6b8b6f6-b6dd-416e-900f-afac8289a296', N'FTA Lookup: Products With Qualifying NAFTA Record for Current Year', N'SELECT ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit,
	xxpc.ProductNum,
	xxpc.ProductDesc,
	xxpc.HsNum,
	fta.ManufacturerID,
	fta.PreferenceCriterion,
	fta.Producer,
	fta.NetCost,
	fta.CountryOfOrigin
FROM tmdProductClassification pc(NOLOCK)
JOIN tmd@COUNTRY_CODE@ProductClassification xxpc(NOLOCK)
	ON xxpc.PartnerID = pc.PartnerID
		AND xxpc.ProductGuid = pc.ProductGuid
JOIN tmgProductNumFTACert fta(NOLOCK)ON 
	fta.ProductNum = xxpc.Productnum AND 
	fta.partnerid = xxpc.partnerid
WHERE 
	xxpc.PartnerID = @PartnerID@
	AND Year(fta.CertificateStartSate) = Year(getDate())
	AND fta.CertType = ''NAFTA-US''
	AND fta.STATUS = ''Active''', CAST(N'2014-03-12T19:09:59.933' AS DateTime), N'Products with Qualifying NAFTA Record for Current Year', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:10:55.093' AS DateTime), N'6da36d92-dfd6-4743-8a48-4de87ca6ac01', N'Entry Visibility Lookup: Last Discrepancies', N'SELECT ''['' + ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum,
	isnull(g.Decode, evss.StatusCode) AS EntryStatus,
	xxev.BrokerID,
	MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',
	xxev.IORNum,
	g.Decode AS STATUS,
	MAX(CONVERT(VARCHAR(10), eh.EffDate, 101)) AS ''LastErrorDate'',
	eh.ValidationGroup,
	eh.ValidationType,
	g2.Decode AS AssignedTo
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
INNER JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
	ON evss.EntryGuid = xxev.EntryGuid
		AND evss.PartnerID = xxev.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK)
	ON evss.StatusCode = g.Code
		AND evss.PartnerID = g.PartnerID
		AND g.FieldName = ''EVSummaryStatus''
INNER JOIN txdEntryValidationErrorsHist eh WITH (NOLOCK)
	ON xxev.EntryGUID = eh.EntryGUID
		AND xxev.LineGUID = eh.LineGUID
LEFT JOIN dbo.tmgGlobalCodes g2 WITH (NOLOCK)
	ON g2.Code = evss.AssignedTo
		AND g2.Decode = ''EVAssignToList''
WHERE xxev.PartnerID = @PartnerId@
GROUP BY xxev.EntryNum,
	eh.ValidationGroup,
	eh.ValidationType,
	g.Decode,
	g2.Decode,
	xxev.IORNum,
	g.Decode,
	evss.StatusCode,
	xxev.BrokerID', CAST(N'2014-03-12T19:10:55.093' AS DateTime), N'Displays the most recent discrepancies.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T10:53:12.960' AS DateTime), N'57354664-a91b-4852-98e6-5472286b67dc', N'Entry Visibility Lookup: Completed Entries', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]
FROM    
( 	
SELECT	
xxev.EntryGuid,
xxev.EntryNum
,ISNULL(g.Decode,evss.StatusCode) AS EntryStatus
,xxev.BrokerID
,MAX(CONVERT(VARCHAR(10), xxev.Effdate, 101)) AS ''EffDate''
,MAX(CONVERT(VARCHAR(10),xxev.EntryDate,101)) AS ''EntryDate''
,ISNULL(g.Decode,'''') AS ''Status'',
1 as NoOrder
FROM	txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
INNER JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) ON evss.EntryGuid = xxev.EntryGuid AND
			 evss.PartnerID = xxev.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) ON evss.StatusCode = g.Code AND
evss.PartnerID = g.PartnerID AND
g.FieldName = ''EVSummaryStatus''
LEFT OUTER JOIN txdEntryValidationErrors b WITH (NOLOCK) ON xxev.LineGuid = b.LineGuid AND
		xxev.PartnerID = b.PartnerID
WHERE	xxev.PartnerID = @PartnerID@ AND
(
(
evss.StatusCode=''Comp'' OR
evss.StatusCode IS NULL
) OR
(evss.StatusCode = ''PR'') OR
(
evss.StatusCode LIKE ''COMP%'' AND
evss.EffDate > GETDATE() - 1
)
) AND
xxev.EffDate = (
SELECT	MAX(xxev2.effdate)
FROM	txd@COUNTRY_CODE@EntryVisibility xxev2 WITH (NOLOCK)
WHERE	xxev.PartnerID = xxev2.PartnerID AND
xxev.EntryNum = xxev2.EntryNum AND
xxev.PartnerID = @PartnerId@
)
GROUP BY xxev.EntryGuid,
xxev.EntryNum
,g.Decode
,g.Decode
,evss.StatusCode
,xxev.BrokerID
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2018-02-27T11:13:37.820' AS DateTime), N'Shows entries that have an entry status of Complete or PEA required ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:20:43.517' AS DateTime), N'c64894f9-4d83-41f7-8b17-052d69d5326e', N'Entry Visibility Lookup: Entry Packets Missing', N'SELECT ''['' + ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum,
	isnull(g.Decode, evss.StatusCode) AS EntryStatus,
	xxev.BrokerID,
	xxev.EffDate,
	xxev.EntryDate,
	xxev.IORNum
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
INNER JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
	ON evss.EntryGuid = xxev.EntryGuid
		AND evss.PartnerID = xxev.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK)
	ON evss.StatusCode = g.Code
		AND evss.PartnerID = g.PartnerID
		AND g.FieldName = ''EVSummaryStatus''
LEFT JOIN tmgDocRetention doc WITH (NOLOCK)
	ON xxev.partnerid = doc.partnerid
		AND xxev.EntryNum = doc.Identifier
WHERE xxev.PartnerID = @PartnerId@
	AND NOT EXISTS (
		SELECT 1
		FROM tmgDocRetention doc WITH (NOLOCK)
		WHERE doc.PartnerID = xxev.PartnerId
			AND doc.Identifier = xxev.EntryNum
		)
GROUP BY xxev.EntryNum,
	xxev.IORNum,
	xxev.Effdate,
	xxev.EntryDate,
	g.Decode,
	evss.StatusCode,
	xxev.BrokerID', CAST(N'2014-03-12T19:20:43.517' AS DateTime), N'Displays entry information for entries that are missing entry packets.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:21:43.080' AS DateTime), N'02c7778b-bf8c-40f6-bb22-353bb3a652cb', N'DPS Lookup: Companies Screened in the past 30 days', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@ ) AS [RowNum]
FROM 
( 	
	SELECT  
		''[''+ ''Edit'' + '']'' + ''(/Maintenance/fmgCompanyMaintenance.aspx?CompanyID='' + comp.CompanyID + '')'' AS Edit,
		comp.CompanyID,
		ISNULL(g.Decode, comp.CompanyType) as CompanyType,
		comp.CompanyName,
		comp.CompanyAddress1,
		comp.CompanyAddress2,
		comp.CompanyAddress3,
		comp.CompanyAddress4,
		comp.CompanyCity,
		comp.CompanyState, 
		comp.CompanyPostalCode,
		comp.CompanyCountryCode,
		comp.DTSStatus,
		comp.DTSOverrideDate,
		comp.DTSLastValidatedDate,
		comp.DTSLastScreenedDate,
		1 as NoOrder
	FROM tmgCompany comp (NOLOCK)
	LEFT JOIN tmgGlobalCodes g (NOLOCK) ON
		g.partnerid = comp.partnerid AND
		g.code = comp.CompanyType AND
		g.fieldname = ''CompanyType''
	WHERE 
		comp.DTSLastScreenedDate > GETDATE() - 30
		AND	comp.PartnerID = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:21:43.080' AS DateTime), N'Displays all companies that were screened in the past 30 days

', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:23:35.913' AS DateTime), N'90a5c358-3d85-4aff-99c1-ca491dfe8f08', N'Entry Visibility Lookup: Broker Milestones Missing', N'SELECT ''['' + ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum,
	isnull(g.Decode, evss.StatusCode) AS EntryStatus,
	xxev.BrokerID,
	xxev.EffDate,
	xxev.EntryDate,
	xxev.IORNum
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
INNER JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
	ON evss.EntryGuid = xxev.EntryGuid
		AND evss.PartnerID = xxev.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK)
	ON evss.StatusCode = g.Code
		AND evss.PartnerID = g.PartnerID
		AND g.FieldName = ''EVSummaryStatus''
LEFT JOIN txdBrokerMilestones bm WITH (NOLOCK)
	ON xxev.partnerid = bm.partnerid
		AND xxev.EntryNum = bm.EntryNum
WHERE xxev.PartnerID = @PartnerId@
	AND NOT EXISTS (
		SELECT 1
		FROM txdBrokerMilestones bm WITH (NOLOCK)
		WHERE xxev.partnerid = bm.partnerid
			AND xxev.EntryNum = bm.EntryNum
		)
GROUP BY xxev.EntryNum,
	xxev.IORNum,
	xxev.Effdate,
	xxev.EntryDate,
	xxev.BrokerID,
	g.Decode,
	evss.StatusCode', CAST(N'2014-03-12T19:23:35.913' AS DateTime), N'Displays entry and broker information where brokers are missing milestones', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-18T09:13:55.830' AS DateTime), N'111c15af-a99b-4b2b-a579-6e09bbd3a310', N'ABI Lookup: Docs Required - Needs Action', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
select ''[''+ ''Edit'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntry.aspx?EntryNumber=''+Cast(uses.EntryNumber as varchar(50)) +'')'' as Edit, 
		''[''+ ''Replies'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntryReplies.aspx?EntryNumber=''+uses.EntryNumber+'')'' as Replies,
			usrh.EntryNumber, 
			convert(varchar, useh.EstimatedEntryDate, 101) AS EstimatedEntryDate, 
			useh.PreliminaryStatmentDate, 
			useh.Ref1 as NAMC, 
			useh.Ref2 as VesselName, 
			usrh.TeamNumber, 
			usrh.Status,
			1 as NoOrder
from txdusentryresponseheader usrh WITH (NOLOCK)
join txdusentryheader useh WITH (NOLOCK)
on useh.entrystatusguid = usrh.entrystatusguid 
			AND useh.PartnerID = usrh.PartnerID
join txdusentrystatus uses WITH (NOLOCK) 
on uses.entrystatusguid = useh.entrystatusguid
			AND uses.PartnerID = useh.PartnerID
where usrh.status like ''%request%'' 
and not exists (select 1  from  txdusentryresponseheader usrh2 WITH (NOLOCK)  where usrh.EntryNumber = usrh2.EntryNumber AND status like ''%DOCUMENT RECEIPT ACKNOWLEDGEMENT%'')
AND usrh.PartnerID = @PartnerID@)
AS LookupViewInner WHERE @whereclause@', CAST(N'2018-04-10T09:38:06.673' AS DateTime), N'Displays all ABI entries for which documents have been requested by Census, and have not yet been provided and accepted', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-18T09:14:39.520' AS DateTime), N'f2292da3-e4a7-402e-8ed6-573409408f27', N'ABI Lookup: Docs Required - Historic', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
select 
		''[''+ ''Edit'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntry.aspx?EntryNumber=''+Cast(uses.EntryNumber as varchar(50)) +'')'' as Edit, 
		''[''+ ''Replies'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntryReplies.aspx?EntryNumber=''+uses.EntryNumber+'')'' as Replies,
		usrh.EntryNumber, 
		convert(varchar, useh.EstimatedEntryDate, 101) AS EstimatedEntryDate, 
		convert(varchar, useh.PreliminaryStatmentDate, 101) AS PreliminaryStatmentDate, 
		useh.Ref1 as NAMC, 
		useh.Ref2 as VesselName, 
		usrh.TeamNumber, 
		usrh.Status,
		1 as NoOrder
from txdusentryresponseheader usrh WITH (NOLOCK) 
join txdusentryheader useh WITH (NOLOCK) 
on useh.entrystatusguid = usrh.entrystatusguid
join txdusentrystatus uses WITH (NOLOCK) 
on uses.entrystatusguid = useh.entrystatusguid
where usrh.status like ''%request%''
or usrh.status like ''%DOCUMENT RECEIPT ACKNOWLEDGEMENT%''
	AND usrh.PartnerID = @PartnerID@)
AS LookupViewInner WHERE @whereclause@', CAST(N'2014-07-18T09:14:39.520' AS DateTime), N'Displays all ABI entries for which Census has requested documents in the past', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:31:29.763' AS DateTime), N'221ee530-24f1-4eed-a9be-aac10000b4fd', N'Classification Lookup: Products With Sets', N'SELECT  ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' AS Edit ,
        xxpc.ProductNum ,
        xxpc.ProductDesc ,
        xxpc.CountryofOrigin ,
        xxpc.BusinessDivision ,
        xxpc.FTZActiveFlag
FROM    tmdProductClassification pc WITH ( NOLOCK )
JOIN tmd@COUNTRY_CODE@ProductClassification xxpc WITH ( NOLOCK ) ON xxpc.PartnerID = pc.PartnerID
																	AND xxpc.ProductGuid = pc.ProductGuid
JOIN tmdClassificationSetBreakdown csb WITH ( NOLOCK ) ON csb.ParentProductGuid = xxpc.ProductGUID
															AND csb.CountryCode = ''@COUNTRY_CODE@''
WHERE   xxpc.PartnerID = @PartnerID@', CAST(N'2014-03-12T19:31:29.763' AS DateTime), N'Displays ProductNum, ProductDesc, CountryofOrigin, BusinessDivision, and FTZActiveFlag for products in a specified country that are classified as sets', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:34:26.920' AS DateTime), N'6acc15b1-ef1d-4f9f-b5a3-1cccea379bd1', N'Classification Lookup: Products Missing weight', N'SELECT	''[Edit](/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit
	   ,xxpc.ProductNum
	   ,xxpc.ProductDesc
	   ,xxpc.Weight
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID AND
																	 xxpc.ProductGuid = pc.ProductGuid
WHERE	xxpc.PartnerID = @PartnerID@ AND
		ISNULL(xxpc.weight,0) = 0', CAST(N'2014-03-12T19:34:26.920' AS DateTime), N'Displays the ProductNum, ProductDesc, and Weight for products that have a weight listed as null (weight appears as 0)', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:35:00.040' AS DateTime), N'a2a5a908-3e08-4203-a6dd-8efe75c127d8', N'Classification Lookup: Products Missing ECN', N'SELECT	''[Edit](/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit
	   ,xxpc.ProductNum
	   ,xxpc.ProductDesc
	   ,xxpc.ECCNNum
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID AND
																	 xxpc.ProductGuid = pc.ProductGuid
WHERE	xxpc.ECCNNum = '''' AND
		xxpc.PartnerID = @PartnerID@', CAST(N'2014-03-12T19:35:00.040' AS DateTime), N'Displays ProductNum, ProductDesc, and ECCNNum for products that do not have a recorded ECCN or ECN Number', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-18T09:16:19.987' AS DateTime), N'1fc44df3-b741-462f-894c-568cec4a4070', N'ABI Lookup: 01 (Normal Entry) Entry Type', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
SELECT 
				uses.EntryNumber,
				uses.EntryType,
				uses.Status,
				uses.Description,
				1 as NoOrder
			FROM txdUSEntryStatus uses WITH (NOLOCK) 
			WHERE EntryType = ''01''
				AND uses.PartnerID = @PartnerID@)
				AS LookupViewInner WHERE @whereclause@', CAST(N'2014-07-18T09:16:19.987' AS DateTime), N'Displays all ABI entires with Entry Type 01 (Normal Entry)', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:37:40.280' AS DateTime), N'8c564d2c-2881-496d-8b88-710f7c8b542e', N'Classification Lookup: Products With Duplicate Product Records', N'select 
	''[''+ ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum=''+ xxpc.ProductNum +''&ID=''+ cast  (xxpc.ProductGuid AS varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit,
	xxpc.ProductNum, 
	xxpc.ProductDesc,
	xxpc.ProductMaterial,
	xxpc.ProductTypeCode,
	xxpc.HsNum,
	xxpc.CountryofOrigin,
	xxpc.ManufacturerID,
	xxpc.ActiveFlag
from tmdProductClassification pc with (nolock) 
join tmd@COUNTRY_CODE@ProductClassification xxpc with (nolock) on 
	xxpc.PartnerID = pc.PartnerID and
	xxpc.ProductGuid = pc.ProductGuid
where
	xxpc.PartnerID = @PartnerID@
	and xxpc.productnum in (
			select distinct productnum from tmd@COUNTRY_CODE@ProductClassification with (nolock) 
			where productnum = xxpc.productnum and partnerid = @PartnerID@
			group by partnerid, productnum
			having count(*) > 1)', CAST(N'2014-03-12T19:37:40.280' AS DateTime), N'Displays product information for products that have been entered more than once in their specified country tables', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-18T09:16:52.490' AS DateTime), N'64e07344-ec1c-4c83-8a07-b79b115bda1c', N'ABI Lookup: 02 (Quota) Entry Type', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
SELECT 
				uses.EntryNumber,
				uses.EntryType,
				uses.Status,
				uses.Description,
				1 as NoOrder
			FROM txdUSEntryStatus uses WITH (NOLOCK) 
			WHERE EntryType = ''02''
				AND uses.PartnerID = @PartnerID@)
				AS LookupViewInner WHERE @whereclause@', CAST(N'2014-07-18T09:16:52.490' AS DateTime), N'Displays all ABI entries with Entry Type 02 (Quota)', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:38:05.297' AS DateTime), N'4b3aa820-6873-480d-9ef5-af9d40e37b8f', N'Classification Lookup: Open Classification Requests', N'SELECT	RequestorName
	   ,RequestorEmail
	   ,RequestDate
	   ,DueDate
	   ,Status
FROM	tmdClassificationRequestHeader crh WITH (NOLOCK)
WHERE	Country = ''@COUNTRY_CODE@'' AND
		Status IN (''Not Classified'',''Pending'','''',''In Progress'',''Classified'',''Final Approval'')', CAST(N'2014-03-12T19:38:05.297' AS DateTime), N'Displays Request Information for Requests containing a status of Not Classified, Pending, In Progress,  Classified, Final Approval, or are blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-18T09:17:13.343' AS DateTime), N'1452c9ba-01ad-4b15-9c78-422923ac842e', N'ABI Lookup: 03 (ADD) Entry Type', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
SELECT 
				uses.EntryNumber,
				uses.EntryType,
				uses.Status,
				uses.Description,
				1 as NoOrder
			FROM txdUSEntryStatus uses WITH (NOLOCK)
			WHERE EntryType = ''03''
				AND uses.PartnerID = @PartnerID@)
				AS LookupViewInner WHERE @whereclause@', CAST(N'2014-07-18T09:17:13.343' AS DateTime), N'Displays all ABI entries with Entry Type 03 (ADD)', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-18T09:17:45.467' AS DateTime), N'60df2400-3050-403c-bf29-33087a5d372c', N'ABI Lookup: 11 (Informal) Entry Type', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
SELECT 
				uses.EntryNumber,
				uses.EntryType,
				uses.Status,
				uses.Description,
				1 as NoOrder
			FROM txdUSEntryStatus uses WITH (NOLOCK) 
			WHERE EntryType = ''11''
				AND uses.PartnerID = @PartnerID@)
				AS LookupViewInner WHERE @whereclause@', CAST(N'2014-07-18T09:17:45.467' AS DateTime), N'Displays all ABI entries with Entry Type 11 (Informal)', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:38:44.250' AS DateTime), N'13b5d7df-ee37-4703-a41c-622a62c974ff', N'Classification Lookup: Products With Unclassified Products', N'SELECT  ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum=''
        + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50))
        + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit ,
        xxpc.ProductNum ,
        xxpc.ProductDesc ,
        xxpc.ProductMaterial ,
        xxpc.ProductTypeCode ,
        xxpc.HsNum ,
        xxpc.CountryofOrigin ,
        xxpc.ManufacturerID ,
        xxpc.ActiveFlag
FROM    tmdProductClassification pc WITH ( NOLOCK )
JOIN tmd@COUNTRY_CODE@ProductClassification xxpc WITH ( NOLOCK ) ON xxpc.PartnerID = pc.PartnerID
																	AND xxpc.ProductGuid = pc.ProductGuid
WHERE   xxpc.PartnerID = @PartnerID@
	AND xxpc.hsnum = ''''', CAST(N'2014-03-12T19:38:44.250' AS DateTime), N'Displays product information for products without a specified HsNum', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-08T10:36:19.047' AS DateTime), N'3ffd8f31-3c3b-4a7d-a006-1879e91edb32', N'QPWP Lookup: History Report', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY InbondNum asc ) AS [RowNum] FROM
(SELECT
qp.InbondDate,
qp.InbondNum, 
qp.EntryType, 
qp.Description, 
CAST(bl.InbondQty as numeric(38,2)) as InbondQty, 
CAST(qp.InbondValue as numeric(38,2)) as InbondValue, 
CASE p.country WHEN '''' THEN qp.ForeignDestinationPort ELSE p.country END as DestinationCountry, 
co.CompanyName as Consignee,
qp.QPO1,
qp.QPO2,
qp.QPO3,
1 AS NoOrder
FROM txdqpheader qp with (nolock)
JOIN txdqpbols bl with (nolock)
ON qp.InbondNum = bl.InbondNum
AND qp.PartnerID = bl.PartnerID
JOIN tmgcompany co with (nolock)
ON co.companyID = bl.ConsigneeID
AND co.PartnerID = bl.PartnerID
JOIN tmfportoflading p with (nolock)
ON qp.ForeignDestinationPort = p.Code
AND qp.PartnerID = p.PartnerID
WHERE qp.PartnerID = ( SELECT PartnerID FROM tmfdefaults with (NOLOCK))
                   
                   ) AS LookupViewInner WHERE @whereclause@', CAST(N'2018-02-15T11:41:56.437' AS DateTime), N'Contains all bonded movements and templates in the QP module; both transmitted and not transmitted', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:39:05.500' AS DateTime), N'e73f43db-9fc7-467a-b6f6-fcdcff8bc34e', N'Classification Lookup: Products With Subjective Products', N'SELECT  ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit ,
        xxpc.ProductNum ,
        xxpc.ProductDesc ,
        xxpc.ProductMaterial ,
        xxpc.ProductTypeCode ,
        xxpc.HsNum ,
        xxpc.AssuranceLevel ,
        xxpc.CountryofOrigin ,
        xxpc.ManufacturerID ,
        xxpc.ActiveFlag
FROM tmdProductClassification pc WITH ( NOLOCK )
JOIN tmd@COUNTRY_CODE@ProductClassification xxpc WITH ( NOLOCK ) ON xxpc.PartnerID = pc.PartnerID
																	AND xxpc.ProductGuid = pc.ProductGuid
WHERE xxpc.PartnerID = @PartnerID@
	AND xxpc.AssuranceLevel <> ''Complete''', CAST(N'2014-03-12T19:39:05.500' AS DateTime), N'Displays product information for a specified country where the AssuranceLevel is not equal to "Complete"', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:39:23.107' AS DateTime), N'c1e5ba5f-d601-4fb9-ad21-5e09dfc32c53', N'Classification Lookup: Products With Extract Queue', N'SELECT  ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit ,
        xxpc.ProductNum ,
        xxpc.ProductDesc ,
        xxpc.ProductMaterial ,
        xxpc.ProductTypeCode ,
        xxpc.HsNum ,
        xxpc.CountryofOrigin ,
        xxpc.ManufacturerID ,
        xxpc.ActiveFlag ,
        q.Status AS ExtractStatus
FROM tmdProductClassification pc WITH ( NOLOCK )
JOIN tmd@COUNTRY_CODE@ProductClassification xxpc WITH ( NOLOCK ) ON xxpc.PartnerID = pc.PartnerID
                                                              AND xxpc.ProductGuid = pc.ProductGuid
JOIN txdgcextractqueue q WITH ( NOLOCK ) ON xxpc.productguid = q.productguid
                                                    AND xxpc.partnerid = q.partnerid
                                                    AND q.countrycode = ''@COUNTRY_CODE@''
WHERE   xxpc.PartnerID = @PartnerID@
        AND q.extracttype = ''Broker''', CAST(N'2014-03-12T19:39:23.107' AS DateTime), N'Displays product information for a specified country where the ExtractStatus is equal to "Broker"', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:39:39.620' AS DateTime), N'1f98ac89-74c9-4254-aece-a857fd7cf3a0', N'Classification Lookup: Non-Harmonized Products Across All Countries', N'SELECT  ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit ,
        xxpc.ProductNum ,
        xxpc.ProductDesc ,
        xxpc.ProductMaterial ,
        xxpc.ProductTypeCode ,
        xxpc.HsNum ,
        xxpc.CountryofOrigin ,
        xxpc.ManufacturerID ,
        xxpc.ActiveFlag ,
        q.Status AS ExtractStatus
FROM tmdProductClassification pc WITH ( NOLOCK )
JOIN tmd@COUNTRY_CODE@ProductClassification xxpc WITH ( NOLOCK ) ON xxpc.PartnerID = pc.PartnerID
                                                              AND xxpc.ProductGuid = pc.ProductGuid
JOIN txdgcextractqueue q WITH ( NOLOCK ) ON xxpc.productguid = q.productguid
                                                    AND xxpc.partnerid = q.partnerid
                                                    AND q.countrycode = ''@COUNTRY_CODE@''
WHERE   xxpc.PartnerID = @PartnerID@
        AND q.extracttype = ''Broker''', CAST(N'2014-03-12T19:39:39.620' AS DateTime), N'Not Currently Available', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:40:17.933' AS DateTime), N'66c5572a-5aed-49d1-bcca-af604e76dc42', N'Classification Lookup: FTZ Active parts', N'SELECT	''[Edit](/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit
	   ,xxpc.ProductNum
	   ,xxpc.ProductDesc
	   ,xxpc.HsNum
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID AND
																	 xxpc.ProductGuid = pc.ProductGuid
WHERE	xxpc.PartnerID = @PartnerID@ AND
		xxpc.FtzActiveFlag = ''Y''', CAST(N'2014-03-12T19:40:17.933' AS DateTime), N'Displays product information for products from a specified country table that will be pushed from their product classification table to the FTZ Item Master', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:43:40.480' AS DateTime), N'41b4c0da-1da5-4647-ace7-d629e90df8bc', N'Classification Lookup: GCP2IM Validations', N'SELECT	''[edit](/Maintenance/Edit.aspx?TYPE=1&amp;COUNTRY=@COUNTRY_CODE@&amp;ID='' + CAST(t.ProductGuid AS VARCHAR(36)) + '')'' AS Edit
	   ,t.ProductNum
	   ,''GC000'' AS ErrorCode
	   ,''The product number has duplicates that are also FtzActive'' AS Error
	   ,q.EffDate AS ''Error occured on''
FROM	(
		 SELECT	ProductNum
			   ,ProductGuid
		 FROM	tmd@COUNTRY_CODE@ProductClassification WITH (NOLOCK)
		 WHERE	PartnerId = @PartnerID@ AND
				ProductNum <> '''' AND
				ProductNum IN (SELECT	ProductNum
							   FROM		tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
							   WHERE	PartnerId = @PartnerID@ AND
										FtzActiveFlag = ''Y''
							   GROUP BY	ProductNum
							   HAVING	COUNT(*) > 1)
		) AS t
JOIN	tmdProductClassificationModificationQueue q ON q.PartnerId = @PartnerID@ AND
													   t.ProductGuid = q.ProductGuid
WHERE	EffDate = (
				   SELECT TOP 1
							EffDate
				   FROM		tmdProductClassificationModificationQueue WITH (NOLOCK)
				   WHERE	PartnerId = q.PartnerId AND
							ProductGuid = q.ProductGuid
				   ORDER BY	EffDate DESC
				  )
UNION ALL
SELECT	''[edit](/Maintenance/Edit.aspx?TYPE=1&amp;COUNTRY=@COUNTRY_CODE@&amp;ID='' + CAST(t.ProductGuid AS VARCHAR(36)) + '')'' AS Edit
	   ,t.ProductNum
	   ,''GC001'' AS ErrorCode
	   ,''This record has a blank product number'' AS Error
	   ,q.EffDate AS ''Error occured on''
FROM	(
		 SELECT DISTINCT
				pc.ProductNum
			   ,pc.ProductGuid
		 FROM	tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
		 JOIN	tmdProductClassificationModificationQueue q WITH (NOLOCK) ON pc.PartnerId = @PartnerID@ AND
																			 q.PartnerId = @PartnerID@ AND
																			 pc.ProductGuid = q.ProductGuid
		 WHERE	q.CountryCode = ''@COUNTRY_CODE@'' AND
				q.NotificationSent = ''Y''
		) AS t
JOIN	tmdProductClassificationModificationQueue q WITH (NOLOCK) ON q.PartnerId = @PartnerID@ AND
																	 t.ProductGuid = q.ProductGuid
WHERE	t.ProductNum = '''' AND
		EffDate = (
				   SELECT TOP 1
							EffDate
				   FROM		tmdProductClassificationModificationQueue
				   WHERE	PartnerId = q.PartnerId AND
							ProductGuid = q.ProductGuid
				   ORDER BY	EffDate DESC
				  )
UNION ALL
SELECT	''[edit](/Maintenance/Edit.aspx?TYPE=1&amp;COUNTRY=@COUNTRY_CODE@&amp;ID='' + CAST(t.ProductGuid AS VARCHAR(36)) + '')'' AS Edit
	   ,t.ProductNum
	   ,''GC002'' AS ErrorCode
	   ,''There is FTZ historical data that exists for this product number'' AS Error
	   ,q.EffDate AS ''Error occured on''
FROM	(
		 SELECT DISTINCT
				pc.ProductNum
			   ,pc.ProductGuid
		 FROM	tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
		 JOIN	tmdProductClassificationModificationQueue q WITH (NOLOCK) ON pc.PartnerId = @PartnerID@ AND
																			 q.PartnerId = @PartnerID@ AND
																			 pc.ProductGuid = q.ProductGuid
		 WHERE	q.CountryCode = ''@COUNTRY_CODE@'' AND
				q.NotificationSent = ''Y'' AND
				ProductNum IN (SELECT	ProductNum
							   FROM		ttdStagingFifoProcessing o WITH (NOLOCK)
							   WHERE	o.PartnerId = @PartnerID@ AND
										EXISTS ( SELECT	1
												 FROM	tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
												 JOIN	tmdProductClassificationModificationQueue q WITH (NOLOCK) ON pc.PartnerId = @PartnerID@ AND
																													 q.PartnerId = @PartnerID@ AND
																													 pc.ProductGuid = q.ProductGuid
												 WHERE	q.CountryCode = ''@COUNTRY_CODE@'' AND
														q.NotificationSent = ''Y'' AND
														ProductNum = o.ProductNum )
							   UNION
							   SELECT	ProductNum
							   FROM		txdFifoProcessing o WITH (NOLOCK)
							   WHERE	o.PartnerId = @PartnerID@ AND
										EXISTS ( SELECT	1
												 FROM	tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
												 JOIN	tmdProductClassificationModificationQueue q WITH (NOLOCK) ON pc.PartnerId = @PartnerID@ AND
																													 q.PartnerId = @PartnerID@ AND
																													 pc.ProductGuid = q.ProductGuid
												 WHERE	q.CountryCode = ''@COUNTRY_CODE@'' AND
														q.NotificationSent = ''Y'' AND
														ProductNum = o.ProductNum )
							   UNION
							   SELECT	ProductNum
							   FROM		txdShipIM o WITH (NOLOCK)
							   WHERE	o.PartnerId = @PartnerID@ AND
										EXISTS ( SELECT	1
												 FROM	tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
												 JOIN	tmdProductClassificationModificationQueue q WITH (NOLOCK) ON pc.PartnerId = @PartnerID@ AND
																													 q.PartnerId = @PartnerID@ AND
																													 pc.ProductGuid = q.ProductGuid
												 WHERE	q.CountryCode = ''@COUNTRY_CODE@'' AND
														q.NotificationSent = ''Y'' AND
														ProductNum = o.ProductNum )
							   UNION
							   SELECT	ProductNum
							   FROM		txdShipIMHist o WITH (NOLOCK)
							   WHERE	o.PartnerId = @PartnerID@ AND
										EXISTS ( SELECT	1
												 FROM	tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
												 JOIN	tmdProductClassificationModificationQueue q WITH (NOLOCK) ON pc.PartnerId = @PartnerID@ AND
																													 q.PartnerId = @PartnerID@ AND
																													 pc.ProductGuid = q.ProductGuid
												 WHERE	q.CountryCode = ''@COUNTRY_CODE@'' AND
														q.NotificationSent = ''Y'' AND
														ProductNum = o.ProductNum )
							   UNION
							   SELECT	ProductNum
							   FROM		txdReceiptHist o WITH (NOLOCK)
							   WHERE	o.PartnerId = @PartnerID@ AND
										EXISTS ( SELECT	1
												 FROM	tmd@COUNTRY_CODE@ProductClassification pc WITH (NOLOCK)
												 JOIN	tmdProductClassificationModificationQueue q WITH (NOLOCK) ON pc.PartnerId = @PartnerID@ AND
																													 q.PartnerId = @PartnerID@ AND
																													 pc.ProductGuid = q.ProductGuid
												 WHERE	q.CountryCode = ''@COUNTRY_CODE@'' AND
														q.NotificationSent = ''Y'' AND
														ProductNum = o.ProductNum ))
		) AS t
JOIN	tmdProductClassificationModificationQueue q WITH (NOLOCK) ON q.PartnerId = @PartnerID@ AND
																	 t.ProductGuid = q.ProductGuid
WHERE	q.PreviousFtzActiveFlag = ''Y'' AND
		q.CurrentFtzActiveFlag = ''N'' AND
		EffDate = (
				   SELECT TOP 1
							EffDate
				   FROM		tmdProductClassificationModificationQueue WITH (NOLOCK)
				   WHERE	PartnerId = q.PartnerId AND
							ProductGuid = q.ProductGuid
				   ORDER BY	EffDate DESC
				  )', CAST(N'2014-03-12T19:43:40.480' AS DateTime), N'Displays information on the errors that occur when running GCP2IM Validations', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:44:42.427' AS DateTime), N'626edd42-93c5-48a0-80a4-7ad4840b93e5', N'Classification Lookup: Show all sets', N'SELECT	''[Edit](/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit
	   ,xxpc.ProductNum
	   ,xxpc.ProductDesc
	   ,(
		 SELECT	COUNT(*)
		 FROM	tmdClassificationSetBreakdown WITH (NOLOCK)
		 WHERE	PartnerId = @PartnerId@ AND
				ParentProductGuid = xxpc.ProductGuid AND
				CountryCode = ''@COUNTRY_CODE@''
		) AS ''Number of child-parts''
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID AND
																	 xxpc.ProductGuid = pc.ProductGuid
WHERE	xxpc.PartnerID = @PartnerId@ AND
		EXISTS ( SELECT	1
				 FROM	tmdClassificationSetBreakdown WITH (NOLOCK)
				 WHERE	PartnerId = @PartnerId@ AND
						ParentProductGuid = xxpc.ProductGuid AND
						CountryCode = ''@COUNTRY_CODE@'' )', CAST(N'2014-03-12T19:44:42.427' AS DateTime), N'Displays information on all sets within a specified country table, including the number of child parts within that set', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-08T10:36:33.050' AS DateTime), N'a05fe903-1955-4720-b82d-8af5c5023e8a', N'QPWP Lookup: QP Transmission Status', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY InbondNum asc ) AS [RowNum] FROM
(select
InbondNum, 
InbondStatusDate,
EntryType, 
case ActionCode When ''A'' then ''Add'' When ''D'' then ''Delete'' end as ActionCode, 
TransmissionStatus, 
InbondStatus,
QPO1,
QPO2,
QPO3,
1 AS NoOrder
from txdqpheader with (nolock)
where partnerid = (select partnerid from tmfdefaults with (nolock)))
AS LookupViewInner WHERE @whereclause@', CAST(N'2018-02-15T11:46:48.997' AS DateTime), N'Contains the current status of your 7512''s in the QP module; QP authorized, Arrived, or Exported', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T21:30:02.680' AS DateTime), N'ed9bb5ab-14f3-4b13-af9b-88274fe35f04', N'Entry Visibility Lookup: Unassigned Entries', N'select 
	''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum, 
										isnull(g.Decode, evss.StatusCode) as EntryStatus,
										xxev.BrokerID,
										MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',  
										MAX(CONVERT(VARCHAR(10), xxev.SummaryDate, 101)) AS ''SummaryDate'', 
										evss.AssignedTo	
									from txd@COUNTRY_CODE@EntryVisibility xxev (nolock)
									join txdEntryValidationSummaryStatus evss (nolock) on 
										evss.EntryGuid = xxev.EntryGuid and
										evss.PartnerID = xxev.PartnerID  
									left join tmgGlobalCodes g (nolock) on 
										evss.StatusCode = g.Code and
										evss.PartnerID = g.PartnerID and
										g.FieldName = ''EVSummaryStatus''
									where
										xxev.PartnerID = @PartnerID@
									and
										evss.AssignedTo = ''''
									and
										xxev.EffDate = (SELECT MAX(a2.effdate)  
													FROM txd@COUNTRY_CODE@EntryVisibility a2 WITH (NOLOCK)  
													WHERE xxev.PartnerID = a2.PartnerID AND xxev.EntryNum = a2.EntryNum)
									Group by xxev.EntryGuid, xxev.EntryNum, evss.StatusCode, xxev.BrokerID,xxev.EntryDate,
										xxev.SummaryDate , isnull(g.Decode, evss.StatusCode),
										evss.AssignedTo', CAST(N'2014-03-12T21:30:02.680' AS DateTime), N'Displays all entries where the AssignedTo field is blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T21:31:22.230' AS DateTime), N'328530f3-22e1-4286-b144-7fff6ded2343', N'Entry Visibility Lookup: Reason Code Summary Detail', N'select 
	''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum, 
	isnull(g.Decode, evss.StatusCode) as EntryStatus,
	xxev.BrokerID,
	xxev.EntryDate,
	evss.AssignedTo,
	xxev.LineNum,
	eve.ValidationType	
from txd@COUNTRY_CODE@EntryVisibility xxev (nolock)
join txdEntryValidationSummaryStatus evss (nolock) on 
	evss.EntryGuid = xxev.EntryGuid and
	evss.PartnerID = xxev.PartnerID  
left join tmgGlobalCodes g (nolock) on 
	evss.StatusCode = g.Code and
	evss.PartnerID = g.PartnerID and
	g.FieldName = ''EVSummaryStatus''
Join txdEntryValidationErrors eve with (nolock)
	On (eve.PartnerID = xxev.PartnerID and eve.LineGUID = xxev.LineGUID)
Join txdEntryValidationConfiguration evc with (nolock)
	On (eve.PartnerID = evc.PartnerID and eve.ValidationGuid = eve.ValidationGuid)
where
	xxev.PartnerID = @PartnerID@
and
	evss.AssignedTo = ''''
and
	xxev.EffDate = (SELECT MAX(a2.effdate)  
				FROM txd@COUNTRY_CODE@EntryVisibility a2 WITH (NOLOCK)  
				WHERE xxev.PartnerID = a2.PartnerID AND xxev.EntryNum = a2.EntryNum)
and
	not exists (select 1 from txdEntryValidationClosedErrors vce with (nolock) where vce.PartnerID = eve.PartnerID and vce.LineGUID = eve.LineGUID and vce.ValidationGuid = eve.ValidationGuid)

--DTT Dont think Value is a useable variable yet
--and evc.ValidationType = ''@Value@''

Group by xxev.EntryNum, evss.StatusCode, xxev.BrokerID,xxev.EntryDate,
	xxev.SummaryDate , isnull(g.Decode, evss.StatusCode),
	evss.AssignedTo, xxev.LineNum,
	eve.ValidationType', CAST(N'2014-03-12T21:31:22.230' AS DateTime), N'Displays the error and line number for open entries.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T21:31:56.340' AS DateTime), N'4742940a-7253-4d5f-839e-57eba115b564', N'Entry Visibility Lookup: Entries With Broker Payment Details', N'select 
	''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum, 
	isnull(g.Decode, evss.StatusCode) as EntryStatus,
	xxev.BrokerID,
	ebp.BrokerInvoiceNum,
	ebp.BrokerInvoiceDate,
	ebp.BrokerInvoiceAmount  	
from txd@COUNTRY_CODE@EntryVisibility xxev (nolock)
join txdEntryValidationSummaryStatus evss (nolock) on 
	evss.EntryGuid = xxev.EntryGuid and
	evss.PartnerID = xxev.PartnerID  
left join tmgGlobalCodes g (nolock) on 
	evss.StatusCode = g.Code and
	evss.PartnerID = g.PartnerID and
	g.FieldName = ''EVSummaryStatus''
Join txdEntryBrokerPayment ebp With (nolock)
	On (ebp.PartnerID = xxev.PartnerID and ebp.EntryNum = xxev.EntryNum)
where
	xxev.PartnerID = @PartnerID@
and
	evss.AssignedTo = ''''
and
	xxev.EffDate = (SELECT MAX(a2.effdate)  
				FROM txd@COUNTRY_CODE@EntryVisibility a2 WITH (NOLOCK)  
				WHERE xxev.PartnerID = a2.PartnerID AND xxev.EntryNum = a2.EntryNum)
Group by xxev.EntryNum, evss.StatusCode, xxev.BrokerID,xxev.EntryDate,
	xxev.SummaryDate , isnull(g.Decode, evss.StatusCode),
	ebp.BrokerInvoiceNum,
	ebp.BrokerInvoiceDate,
	ebp.Payment, ebp.BrokerInvoiceAmount', CAST(N'2014-03-12T21:31:56.340' AS DateTime), N'Displays entries which contain details for broker payments.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T21:32:36.927' AS DateTime), N'dd40b93b-7fee-4aeb-886b-6e7470c527a4', N'Entry Visibility Lookup: Entries With Updates in the Last Day', N'select 
	''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	xxev.EntryNum, 
	isnull(g.Decode, evss.StatusCode) as EntryStatus,
	xxev.BrokerID,
	xxev.EntryDate,
	evss.AssignedTo,
	xxev.VersionDate,
	xxev.TableName
from txd@COUNTRY_CODE@EntryVisibility xxev (nolock)
join txdEntryValidationSummaryStatus evss (nolock) on 
	evss.EntryGuid = xxev.EntryGuid and
	evss.PartnerID = xxev.PartnerID  
left join tmgGlobalCodes g (nolock) on 
	evss.StatusCode = g.Code and
	evss.PartnerID = g.PartnerID and
	g.FieldName = ''EVSummaryStatus''
where
	xxev.PartnerID = @PartnerID@
and
	evss.AssignedTo = ''''
and
	xxev.EffDate = (SELECT MAX(a2.effdate)  
				FROM txd@COUNTRY_CODE@EntryVisibility a2 WITH (NOLOCK)  
				WHERE xxev.PartnerID = a2.PartnerID AND xxev.EntryNum = a2.EntryNum)
and
	exists (select 1 from txd@COUNTRY_CODE@EntryVisibility a2 with (nolock)
					Where xxev.PartnerID = a2.PartnerID and xxev.EntryNum = a2.EntryNum and xxev.EntryGUID <> a2.EntryGUID)
and xxev.EffDate > DATEADD(day,-1,getdate())
and evss.StatusCode not in(''PD'', ''Comp'', ''PR'')
Group by xxev.EntryNum, evss.StatusCode, xxev.BrokerID,xxev.EntryDate,
	xxev.SummaryDate , isnull(g.Decode, evss.StatusCode), evss.AssignedTo,
	xxev.VersionDate,
	xxev.TableName', CAST(N'2014-03-12T21:32:36.927' AS DateTime), N'Displays all entries that have been updated within the last  day.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-13T20:26:46.123' AS DateTime), N'b741c152-8b4b-45f2-bbab-5038f370d1e6', N'Classification Lookup: Facility Ownership Grid', N'SELECT	''[Edit](/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit
	   ,xxpc.ProductNum
	   ,xxpc.ProductGuid
	   ,xxpc.ProductDesc
	   ,pvt.*
FROM	(
		 SELECT	ProductGuid
			   ,FacilityPartnerId
		 FROM	tmdFacilityOwnershipDetail WITH (NOLOCK)
		 WHERE	CountryCode = ''@COUNTRY_CODE@''
		) AS src PIVOT ( COUNT(FacilityPartnerId) FOR FacilityPartnerId IN (-- Place a HARDCODED list of PartnerIds from tmdFacilityOwnershipHeader here
	[1111],[383],[999],[1004],[1999],[2002],[10001],[101199],[1014059],[1034019],[1084019]) ) AS pvt
JOIN	tmdProductClassification pc WITH (NOLOCK) ON pvt.ProductGuid = pc.ProductGuid AND
													 pc.PartnerID = @PartnerId@
JOIN	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK) ON pvt.ProductGuid = xxpc.ProductGuid AND
																	 xxpc.PartnerID = @PartnerId@', CAST(N'2014-03-13T20:26:46.123' AS DateTime), N'Displays product information for a hardcoded list of facilities within a specified country table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-19T15:08:51.543' AS DateTime), N'340206e2-ff94-4dff-a573-70c7beb63ab1', N'Classification Lookup: Classification Charts', N'SELECT ''['' + ''View '' + '']'' + ''(/VISUALIZATION/fdgChartVisualization.aspx?hide='' + ISNULL(vsp.Hide, '''') + ''&type='' + vsp.Type + ''&XTilt='' + CAST(vsp.XTilt AS VARCHAR(50)) + ''&Stacked='' + vsp.Stacked + ''&SQL='' + CAST(ts.SQLGuid AS VARCHAR(50)) + ''&SQL2='' + vsp.SQL2 + '')'' AS [View]
,ts.SQLDescription + CASE vsp.SQL2
WHEN ''''
THEN ''''
ELSE ''&'' + (
SELECT SQLDescription
FROM tmgSQL WITH (NOLOCK)
WHERE SQLGUID = vsp.SQL2
)
END AS ChartName
,vsp.Category
,vsp.Type
FROM tmgSQL ts WITH (NOLOCK)
JOIN txdVisualizationSQLParams vsp WITH (NOLOCK) ON ts.SQLGUID = vsp.SQLGUID
AND ts.PartnerID = vsp.PartnerID
WHERE vsp.Category = ''Classification''
AND ts.PartnerID = @PartnerID@', CAST(N'2014-03-19T15:08:51.543' AS DateTime), N'Displays the view, ChartName, Category, and Type for selected charts', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-19T15:12:27.513' AS DateTime), N'50dc9407-4acf-47c0-a471-2a97165de79b', N'Entry Visibility Lookup: Entry Visibility Charts', N'SELECT	''['' + ''View '' + '']'' + ''(/VISUALIZATION/fdgChartVisualization.aspx?hide='' + ISNULL(vsp.Hide,'''') + ''&type='' + vsp.Type + ''&XTilt='' + CAST(vsp.XTilt AS VARCHAR(50)) + ''&Stacked='' + vsp.Stacked + ''&SQL='' + CAST(ts.SQLGuid AS VARCHAR(50)) + ''&SQL2='' + vsp.SQL2 + '')'' AS [View]
	   ,ts.SQLDescription + CASE vsp.SQL2
							  WHEN '''' THEN ''''
							  ELSE '' & '' + (
											SELECT	SQLDescription
											FROM	tmgSQL
											WHERE	SQLGUID = vsp.SQL2
										   )
							END AS ChartName
	   ,vsp.Category
	   ,vsp.Type
FROM	tmgSQL ts WITH (NOLOCK)
JOIN	txdVisualizationSQLParams vsp WITH (NOLOCK) ON ts.SQLGUID = vsp.SQLGUID AND
													   ts.PartnerID = vsp.PartnerID
WHERE	vsp.Category = ''Entry Visibility'' AND
		ts.PartnerID = @PartnerID@', CAST(N'2014-03-19T15:12:27.513' AS DateTime), N'Displays charts that can be generated based off various reports from EV data.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-19T15:13:51.033' AS DateTime), N'c63cee42-5814-4d17-a50d-ff09a8e84896', N'ABI Lookup: ABI Charts', N'select    
	''[''+ ''View '' + '']'' + ''(/VISUALIZATION/fdgChartVisualization.aspx?hide='' + isnull(vsp.Hide, '''') +
	''&type='' + vsp.Type + 
	''&XTilt='' + cast(vsp.XTilt as varchar(50)) +
	''&Stacked='' + vsp.Stacked +
	''&SQL='' + cast(ts.SQLGuid as varchar(50)) + 
	''&SQL2='' + vsp.SQL2 +
	'')'' AS [View], 
        ts.SQLDescription + case vsp.SQL2 when '''' then '''' else '' & '' + (select SQLDescription from tmgSQL where SQLGUID = vsp.SQL2) end as ChartName,
        vsp.Category,
        vsp.Type
from tmgSQL ts
join txdVisualizationSQLParams vsp on 
	ts.SQLGUID = vsp.SQLGUID and
	ts.PartnerID = vsp.PartnerID
where 
	vsp.Category = ''ABI'' and
	ts.PartnerID = (select PartnerID from tmfDefaults)', CAST(N'2014-03-19T15:13:51.033' AS DateTime), N'Provides a list of all charts available for ABI', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-19T15:17:07.230' AS DateTime), N'b4e8ad1a-e172-4e0c-9edf-73f05e552403', N'DPS Lookup: DPS Charts', N'select    
	''[''+ ''View '' + '']'' + ''(/VISUALIZATION/fdgChartVisualization.aspx?hide='' + isnull(vsp.Hide, '''') +
	''&type='' + vsp.Type + 
	''&XTilt='' + cast(vsp.XTilt as varchar(50)) +
	''&Stacked='' + vsp.Stacked +
	''&SQL='' + cast(ts.SQLGuid as varchar(50)) + 
	''&SQL2='' + vsp.SQL2 +
	'')'' AS [View], 
        ts.SQLDescription + case vsp.SQL2 when '''' then '''' else '' & '' + (select SQLDescription from tmgSQL where SQLGUID = vsp.SQL2) end as ChartName,
        vsp.Category,
        vsp.Type
from tmgSQL ts
join txdVisualizationSQLParams vsp on 
	ts.SQLGUID = vsp.SQLGUID and
	ts.PartnerID = vsp.PartnerID
where 
	vsp.Category = ''DPS'' and
	ts.PartnerID = (select PartnerID from tmfDefaults)', CAST(N'2014-03-19T15:17:07.230' AS DateTime), N'Allows the user to view pie charts of pertinant information such as Hit Rate and Companies by Status', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-19T15:18:50.987' AS DateTime), N'78597e09-3790-418c-b63d-441d8a167b21', N'IMMEX Lookup: IMMEX Charts', N'select    
	''[''+ ''View '' + '']'' + ''(/VISUALIZATION/fdgChartVisualization.aspx?hide='' + isnull(vsp.Hide, '''') +
	''&type='' + vsp.Type + 
	''&XTilt='' + cast(vsp.XTilt as varchar(50)) +
	''&Stacked='' + vsp.Stacked +
	''&SQL='' + cast(ts.SQLGuid as varchar(50)) + 
	''&SQL2='' + vsp.SQL2 +
	'')'' AS [View], 
        ts.SQLDescription + case vsp.SQL2 when '''' then '''' else '' & '' + (select SQLDescription from tmgSQL where SQLGUID = vsp.SQL2) end as ChartName,
        vsp.Category,
        vsp.Type
from tmgSQL ts
join txdVisualizationSQLParams vsp on 
	ts.SQLGUID = vsp.SQLGUID and
	ts.PartnerID = vsp.PartnerID
where 
	vsp.Category = ''IMMEX'' and
	ts.PartnerID = (select PartnerID from tmfDefaults)', CAST(N'2014-03-19T15:18:50.987' AS DateTime), N'Displays a list of charts that can be generated and various reports from IMMEX data.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-11T20:04:21.570' AS DateTime), N'4f94fdc1-bf3d-4e72-b1ea-f58786b36230', N'ABI Lookup: Default Query', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
		SELECT 
			uses.EntryNumber, 
			uses.Status, 
			uses.StatusDescription, 
			uses.CBPStatus, 
			uses.FilingDestination, 
			uses.Description, 
			uses.CBPReleaseStatus, 
			uses.CBPSummaryStatus, 
			convert(varchar, uses.ReleaseDate, 101) AS ReleaseDate,
			convert(varchar, uses.LastGeneratedDate, 101) AS LastGeneratedDate,
			1 as NoOrder
	FROM TxdUSEntryStatus uses WITH (NOLOCK)
	WHERE uses.PartnerID = (select PartnerID from tmfDefaults))
	AS LookupViewInner WHERE @whereclause@	', CAST(N'2014-08-11T20:04:21.570' AS DateTime), N'Displays all ABI records', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-31T14:43:19.503' AS DateTime), N'd4b0b2b4-33fe-4858-b816-fa6d89875210', N'Certificate Lookup: Unprinted Certificates', N'select 
p.Name, 
p.Status, 
Convert (varchar,p.FromDate,101) as FromDate, 
Convert (varchar,p.ToDate,101) as ToDate, 
p.ImporterName, 
c.Company as CompanyName, 
d.ProductNum, 
d.ProductDesc, 
p.CertAgreement  as FTA
from dbo.txdCertHeader p with (nolock)  
inner join dbo.txdCertDetail d with (nolock) on  
p.HeaderGuid = d.HeaderGuid and  
p.PartnerID = d.PartnerID  
left outer join dbo.txdCertCustomer c with (nolock) on  
c.PartnerID = p.PartnerID and  
c.HeaderGuid = p.HeaderGuid
where Status <> ''Printed''', CAST(N'2014-07-31T14:43:19.503' AS DateTime), N'Certificates displaying a status other than ''Printed''', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-31T14:57:19.567' AS DateTime), N'3aed2389-10d0-4108-84a8-5801f1440324', N'FTA Certificate Lookup: Certificates missing importer name', N'select 
p.Name as CertificateName,
p.ImporterCompanyId,
p.ImporterTaxId, 
c.Company as CompanyName, 
d.ProductNum 
from dbo.txdCertHeader p with (nolock)  
inner join dbo.txdCertDetail d with (nolock) on  
p.HeaderGuid = d.HeaderGuid and  
p.PartnerID = d.PartnerID  
left outer join dbo.txdCertCustomer c with (nolock) on  
c.PartnerID = p.PartnerID and  
c.HeaderGuid = p.HeaderGuid  
where ImporterName = ''''
and p.PartnerID = @PartnerID@', CAST(N'2014-07-31T14:57:19.567' AS DateTime), N'Certificates where the importer name is blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-31T15:40:10.197' AS DateTime), N'515066d8-2db1-42bb-be7e-25dfa744ddd8', N'FTA BOM Lookup: Products with US as FG Country of Origin', N'SELECT
''['' + ''View BOM'' + ''](/Interfaces/fidBOMAnalysisUpload.aspx?BOM='' + IM.BOMGUID + '')'' as [View],
BillOfMaterials as Name,
Convert (varchar,BOMStartDate,101) as BOMStartDate,
Convert (varchar,BOMEndDate,101) as BOMEndDate,
IM.ProductNum as FG_ProductNum, 
CONVERT(DECIMAL(10,4),IM.TxnQty) as FG_TxnQty,
CONVERT(DECIMAL(15,4),IM.Value) as FG_NetCost,
CONVERT(DECIMAL(10,4),IM.CommercialValue) as FG_TransactionValue,
IM.HTSNum as FG_HSNumber,
IM.CountryOfOrigin as FG_CountryOfOrigin, 
IM.CountryofManufacture as FG_CountryOfManufacture, 
IM.PlantID AS FG_PlantID, 
IM.ProductAttribute as FG_ProductAttribute,
IM.BOMType,IM.ProcessFlag,IM.PrintedFlag,
PC.ProductNum as C_ProductNum,
CONVERT(DECIMAL(10,4),PC.TxnQty) as C_TxnQty,
CONVERT(DECIMAL(10,4),PC.QtyPerIm) as C_QtyPerIM,
 PC.CountryOfOrigin as C_CountryOfOrigin,
CONVERT(DECIMAL(15,4),PC.Value) as C_NetCost,
CONVERT(DECIMAL(10,4),PC.CommercialValue) as C_TransactionValue,
 PC.HTSNum as C_HSNumber,
PC.ManufacturerID,
 PC.ProductAttribute as C_ProductAttribute 
 FROM dbo.txdBOMIM IM (NOLOCK) INNER JOIN dbo.txdBOMPC PC (NOLOCK) ON IM.BOMGUID = PC.BOMGUID And IM.PartnerId = PC.PartnerId
WHERE IM.CountryOfOrigin=''US''', CAST(N'2014-07-31T15:40:10.197' AS DateTime), N'Products that were completed in the United States', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-01T11:25:53.123' AS DateTime), N'5cfb334a-8b41-411a-89c1-555321eac7cc', N'Certificate Lookup: FTA Records Qualifying and Non-Qualifying', N'Select Distinct
				fta.productnum as ProductNum, 
				uspc.Productdesc as ProductDesc,
				fta.ManufacturerID,
				fta.CertType, 
				fta.CountryofOrigin, 
				fta.certificatestartdate as CertificateStartDate,
                                fta.certificateenddate as CertificateEndDate,
				COUNT (fta.productnum)as NumberOfCertificates
			from tmgproductnumftacert fta with (NOLOCK)
			left join tmdusproductclassification uspc with (NOLOCK)
				on uspc.ProductNum = fta.ProductNum
				and uspc.PartnerID = fta.PartnerID 
			
			where fta.Status = ''Active''
			and fta.PartnerID = ' + cast(@Partnerid as varchar(30)) + '
			group by
				fta.ProductNum, 
				uspc.Productdesc,
				fta.ManufacturerID,
				
				fta.CertType, 
				fta.CountryofOrigin, 
				fta.Status,
				fta.certificatestartdate,
                                fta.certificateenddate
				--having COUNT (fta.productnum)>1', CAST(N'2014-08-01T11:25:53.123' AS DateTime), N'Displays product and certificate information for qualifying and non-qualifying records with a status of ''Active''', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-01T17:12:40.937' AS DateTime), N'eb59d7c1-0ec6-4d9a-b7a9-8cbe914c7eb7', N'FTA BOM Analysis Lookup: FTA Analysis Detail Report', N'SELECT

	bom.Name AS BillOfMaterials,
	bom.C_ProductNum AS ComponentProductNum,
	convert(varchar,convert(decimal(10,4),bom.QtyPerIm*bom.C_NetCost)) AS ComponentExtendedValue,
	convert(varchar,convert(decimal(10,4),bom.QtyPerIm*bom.C_NetCost/bom.FG_TransactionValue*100))+''%'' AS ComponentPercentage,
	isnull(bpc.CountryOfOrigin,'''') AS COO,
	bom.C_HsNumber AS ComponentHsNum,
	bom.ManufacturerID as SupplierID,
	isnull(com.CompanyName,'''') AS SupplierName,
	isnull(com.CompanyCountryCode,'''') AS SupplierCountry
FROM vid_BOM bom (NOLOCK)
JOIN txdbompc bpc (NOLOCK) ON
	bom.PartnerID = bpc.PartnerID AND
	bom.BOMGUID = bpc.BOMGUID AND
	bom.C_ProductNum = bpc.ProductNum
JOIN tmdusproductclassification pc (nolock) ON
	pc.PartnerID = bpc.PartnerID AND
	pc.BOMGuid = bpc.BOMGUID AND
	bom.C_ProductNum = pc.productnum
LEFT JOIN tmgcompany com (nolock) ON
	bom.PartnerID = com.PartnerID AND
	bpc.PartnerID = com.PartnerID AND
	bom.ManufacturerID = com.CompanyID
WHERE bpc.partnerid = ' + cast(@Partnerid as varchar(30)) + '', CAST(N'2014-08-01T17:12:40.937' AS DateTime), N'Displays the details of the various BOM Analysis reports generated in the system.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-08T13:50:19.523' AS DateTime), N'a693acd1-e992-4bea-b0e7-258299b7e840', N'FTA Certificate Lookup: Products not under NAFTA', N'select p.Name, p.Status, 
Convert (varchar,p.FromDate,101) as FromDate, 
Convert (varchar,p.ToDate,101) as ToDate, 
Convert (varchar,p.SignatureDate,101) as SignatureDate, 
p.ExporterName, p.ExporterAddress1,p.ExporterAddress2, p.ExporterTaxId, p.ProducerName,  
p.ProducerAddress1,p.ProducerAddress2, p.ProducerTaxId, p.ImporterName, p.ImporterAddress1,p.ImporterAddress2, p.ImporterTaxId, p.VoidReasonCode, p.VoidExplanation,  
c.Company as CompanyName, c.Employee, c.Email, d.ProductNum, d.ProductDesc, d.HsNum, d.PreferenceCriterion, d.Producer as Expr1, d.NetCost, d.CountryOfOrigin as CountryOfOrigin,  p.CertAgreement  
from dbo.txdCertHeader p with (nolock)  
inner join dbo.txdCertDetail d with (nolock) on  
p.HeaderGuid = d.HeaderGuid and  
p.PartnerID = d.PartnerID  
left outer join dbo.txdCertCustomer c with (nolock) on  
c.PartnerID = p.PartnerID and  
c.HeaderGuid = p.HeaderGuid
where p.CertAgreement NOT LIKE ''%NAFTA%''', CAST(N'2014-08-08T13:50:19.523' AS DateTime), N'Products that are not affiliated with the NAFTA CertAgreement', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-15T16:59:08.900' AS DateTime), N'8660d9fb-aa99-42ac-9164-ff190d05ddd1', N'QPWP Lookup: IT61 and TE62s -  Not Arrived', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY EffDate asc ) AS [RowNum] FROM 
(SELECT  PartnerID,
        EffDate,
        InbondNum,
        InbondStatus,
        TemplateFlag,
        EntryType,
        Carrier,
        USPortOfArrival,
        DestinationPort,
        ForeignDestinationPort,
        ImportingCarrier,
        ModeOfTransport,
        ArrivalDate,
        QPO1,
        QPO2,
        QPO3,
        CASE TransmissionStatus When '''' Then ''UNTRANSMITTED''
        else TransmissionStatus END as Status,
1 AS NoOrder
FROM   txdQPHeader q (NOLOCK)
WHERE PartnerId = (SELECT PartnerID FROM tmfDefaults WITH (NOLOCK))
AND       TemplateFlag = ''N''
AND       EntryType IN (''61'', ''62'')
AND       EXISTS (SELECT top 1 * FROM txdQPBols b with (nolock)
        WHERE BOLArrived=''N''
        AND b.InbondNum = q.InbondNum)
AND       NOT (MovementOutOfZone = ''0'' AND ModeOfTransport IN (''40'', ''41''))
) AS LookupViewInner WHERE @whereclause@', CAST(N'2018-02-15T11:57:48.230' AS DateTime), N'Contains IT61s and TE62 that have not arrived', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-15T17:01:16.007' AS DateTime), N'8f13e100-8af0-4b72-81b6-a2c842a7bc55', N'QPWP Lookup: TE62 and IE63s - Not Exported', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY EffDate asc ) AS [RowNum] FROM
(SELECT  PartnerID,
        EffDate,
        InbondNum,
        InbondStatus,
        TemplateFlag,
        EntryType,
        Carrier,
        USPortOfArrival,
        DestinationPort,
        ForeignDestinationPort,
        ImportingCarrier,
        ModeOfTransport,
        ArrivalDate,
        QPO1,
        QPO2,
        QPO3,
        CASE TransmissionStatus When '''' Then ''UNTRANSMITTED''
        else TransmissionStatus END as Status,
1 AS NoOrder
FROM   txdQPHeader q (NOLOCK)
WHERE PartnerId = (SELECT PartnerID FROM tmfDefaults WITH (NOLOCK))
AND       TemplateFlag = ''N''
AND       EntryType IN (''62'', ''63'')
AND       EXISTS (SELECT top 1 * FROM txdQPBols b with (nolock)
        WHERE BOLExported = ''N'' 
        AND b.InbondNum = q.InbondNum)
AND       NOT (MovementOutOfZone = ''0'' AND ModeOfTransport IN (''40'', ''41''))

) AS LookupViewInner WHERE @whereclause@', CAST(N'2018-02-15T12:01:47.990' AS DateTime), N'Contains TE62s and IE63s that have not been exported', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T14:58:47.367' AS DateTime), N'931aa396-74f7-466d-8099-b8e7d3fd4b12', N'Export Transition: Are parties set to screen in DPS?', N'SELECT CASE WHEN XMLDocument.value(''(/configuration/export/ci_sli/parties/party_configurations/party_configuration/@dts_required)[1]'',''varchar(500)'') = ''Y'' 
THEN ''DPS screening is enabled.'' 
ELSE ''DPS screening is NOT enabled.'' END
AS Message
FROM tmdXMLDocumentCache WITH (NOLOCK)
WHERE XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:10:12.567' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:01:33.010' AS DateTime), N'5702e1e2-2bcf-49ff-a3dd-3995d9e8360f', N'Export Transition: Is AES Enabled / License Enabled / FTA Hooked In?', N'select 
SLIType = t.XMLData.value(''./@type'',''varchar(50)''),
AESEnabled = s.xmlData.value(''.'',''varchar(5)''),
LicensesEnabled = l.xmlData.value(''.'',''varchar(5)''),
FTAEnabled = f.xmlData.value(''(@enabled)'',''varchar(1)'')
From tmdXMLDocumentCache c WITH (NOLOCK)
Outer APPLY XMLDocument.nodes(''/configuration/export/ci_sli'') as T(xmlData)
Outer Apply t.xmlData.nodes(''aes_enabled'') as s(xmlData) -->Cacade the entire CI_SLI Block and use it to transverse the inner nodes
Outer Apply t.xmlData.nodes(''allocate_licenses'') as l(xmlData) -->Cacade the entire CI_SLI Block and use it to transverse the inner nodes
Outer Apply t.xmlData.nodes(''fta'') as f(xmlData)
WHERE c.XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:10:32.693' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-07T15:35:24.047' AS DateTime), N'edba36bc-0f18-427f-aa6d-ab0d3f77736a', N'Entry Visibility Lookup: Entries With Errors CA', N'SELECT 
	''[''+ ''Edit'' + '']'' + ''(/Import/fxdEntrySummaryImproved.aspx?Entry='' + xxev.EntryNum + ''&COUNTRY='' + '''''' + @COUNTRY_CODE@ + '''''' + ''&Tab=EntryData'' + '')'' AS Edit,
	SELECT 
									xxev.EntryGuid, 
									xxev.EntryNum, 
									isnull(g.Decode, evss.StatusCode) as EntryStatus,
									xxev.BrokerID,
									xxev.CAPortOfUnlading,
									COUNT(Distinct EVE.LineGUID) as ErrorLineCount,
									COUNT(Distinct EVE.LineGUID+EVE.ValidationGuid) as ErrorCount,
									MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',  
									CAST(DateDiff(DAY, GETDATE(), DATEADD(DAY, 294, MAX(xxev.EntryDate))) AS varchar(10)) as [Days Since EntryDate],
									1 AS NoOrder
								FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
								JOIN txdEntryValidationErrors EVE WITH (NOLOCK) 
									ON xxev.PartnerID = EVE.PartnerID 
									AND xxev.entryGUID = EVE.EntryGUID AND xxev.lineguid = EVE.LineGuid
								JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
									ON evss.EntryGuid = xxev.EntryGuid AND evss.PartnerID = xxev.PartnerID  
								LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
									ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
									AND g.FieldName = ''EVSummaryStatus''
								WHERE
									xxev.PartnerID = @PartnerID@
								GROUP BY xxev.EntryGuid, xxev.EntryNum, xxev.BrokerID, xxev.CAPortOfUnlading, g.Decode, evss.StatusCode, xxev.EntryDate', CAST(N'2014-10-07T15:35:24.047' AS DateTime), N'Displays entry information and error information for entries with validation errors.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-12-28T12:58:52.733' AS DateTime), N'9c2bb608-43e6-4d58-b56e-eb18b1d9b1c5', N'z. Kickoff Entity Spreadsheet Upload', N'INSERT INTO dbo.tlgWorkflowSchedule SELECT PartnerID ,  GETDATE() ,  NEWID() ,  ''ENTITY_SS_UPLOAD'',  ''N'' ,  ''00:00'' ,  cast(getdate() as date) ,  ''ENTITY_SS_UPLOAD'', '''' ,  0 ,  ''N'' ,  ''N''  FROM tmfDefaults', CAST(N'2015-12-28T12:58:52.733' AS DateTime), N'', N'N', N'N')
, (@PartnerID, CAST(N'2016-02-26T16:14:44.110' AS DateTime), N'B87C6AA7-D3F3-40AD-8369-BC0FB22BA534', N'Classification Lookup: CI - JP HS Rates', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum ASC
		) AS [RowNum]
FROM (
	SELECT ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' AS Edit
		,xxpc.ProductNum
		,xxpc.ProductDesc
		,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum
		,CIRates.Rate
		,CIRates.CountryOfOrigin
		,1 AS NoOrder
	FROM tmdJPProductClassification xxpc WITH (NOLOCK)
	JOIN vid_CI_JP_Rates CIRates WITH (NOLOCK) ON xxpc.ProductGuid = CIRates.ProductGuid
		AND xxpc.PartnerID = CIRates.PartnerID
	WHERE xxpc.PartnerID = @PartnerID@
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2016-02-26T16:14:44.110' AS DateTime), N'Displays the tariff rates associated with the products in the Japanese Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T10:38:28.570' AS DateTime), N'668c5303-086e-4501-bea1-9c8078731cf9', N'Classification Lookup: Classification Lookup US', N'SELECT uspc.PartnerID
,uspc.ProductGuid
,uspc.ProductNum
,uspc.ProductDesc
,uspc.HsNum
,uspc.ExportTariffNum
,uspc.CountryOfOrigin
,uspc.ProductTypeCode
,uspc.NAFTACertified
,pc.Datasource
,uspc.ProductGroup
,uspc.BusinessDivision
,uspc.ActiveFlag
,uspc.EffDate
,max(isnull(al.AuditDate, '''')) AS DateUpdated
,max(isnull(al.Username, '''')) AS LastUpdatedBy
FROM tmdUSProductClassification uspc(NOLOCK)
JOIN tmdProductClassification pc ON uspc.PartnerID = pc.PartnerID
AND uspc.ProductGuid = pc.ProductGuid
LEFT JOIN tmdAuditLog al(NOLOCK) ON uspc.PartnerID = al.PartnerID
AND uspc.ProductGuid = al.ProductGuid
AND al.CountryCode = ''US''
WHERE uspc.PartnerID = @PartnerID
GROUP BY uspc.PartnerID
,uspc.ProductGuid
,uspc.ProductNum
,uspc.ProductDesc
,uspc.HsNum
,uspc.ExportTariffNum
,uspc.CountryOfOrigin
,uspc.ProductTypeCode
,uspc.NAFTACertified
,pc.Datasource
,uspc.ProductGroup
,uspc.BusinessDivision
,uspc.ActiveFlag
,uspc.EffDate', CAST(N'2014-10-14T10:38:28.570' AS DateTime), N'Displays all the product information Pertaining to the US', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:01:47.343' AS DateTime), N'3d34c23e-5745-4b46-abc5-a2bd01e5294b', N'Export Transition: How often are interface files loaded?', N'SELECT alt.Workflow AS Workflow, wfs.interval AS Interval
FROM tlgApplicationLaunchTree alt  WITH (NOLOCK)
JOIN tlgWorkflowSchedule wfs WITH (NOLOCK)
ON alt.workflow = wfs.workflow AND alt.PartnerID = wfs.PartnerID
WHERE alt.ApplicationToLaunch IN (''dxgGenericFileImportWorkflow.dll'',''dxdIntegrationDataImport.dll'')
AND alt.PartnerID = ' + cast(@Partnerid as varchar(30)) + '', CAST(N'2017-08-16T15:10:27.883' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T10:53:43.853' AS DateTime), N'5c5af6d4-8fe8-4ab2-aa83-f34cc00b68c8', N'Classification Lookup: Global Message', N'Select ''This query cannot be run against the global view'' as Message', CAST(N'2014-10-14T10:53:43.853' AS DateTime), N'Displays an error message for queries that cannot be run against the global view', N'N', N'N')
, (@PartnerID, CAST(N'2017-08-16T15:02:06.287' AS DateTime), N'66e2bd32-3736-4062-b30a-9135cee27f81', N'Export Transition: Which interfaces are run using the interval functionality in WorkflowSchedule?', N'SELECT alt.Workflow AS Workflow, wfs.interval AS Interval
FROM tlgApplicationLaunchTree alt  WITH (NOLOCK)
JOIN tlgWorkflowSchedule wfs WITH (NOLOCK)
ON alt.workflow = wfs.workflow AND alt.PartnerID = wfs.PartnerID
WHERE wfs.interval <> 0 AND alt.ApplicationToLaunch IN (''dxgGenericFileImportWorkflow.dll'',''dxdIntegrationDataImport.dll'')
AND alt.PartnerID = ' + cast(@Partnerid as varchar(30)) + '', CAST(N'2017-08-16T15:10:46.847' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T11:08:01.990' AS DateTime), N'd4d49edb-fa8b-4ecd-b6dd-261fc3593dc9', N'Classification Lookup: Products Missing ECN Standard', N'SELECT	
xxpc.ProductNum
,xxpc.ProductDesc
,xxpc.ECNNum
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID AND
xxpc.ProductGuid = pc.ProductGuid
WHERE	xxpc.ECNNum = '''' AND
xxpc.PartnerID = @PartnerID@', CAST(N'2014-10-14T11:08:01.990' AS DateTime), N'Displays all products missing ECN in the standard classification lookup', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T11:09:03.630' AS DateTime), N'40138c57-d4f4-465b-9480-5210bc3901da', N'Classification Lookup: Products Missing ECN US', N'SELECT	
uspc.ProductNum
,uspc.ProductDesc
,uspc.ECCNNum
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmdUSProductClassification uspc WITH (NOLOCK) ON uspc.PartnerID = pc.PartnerID AND
uspc.ProductGuid = pc.ProductGuid
WHERE	uspc.ECCNNum = '''' AND
uspc.PartnerID = @PartnerID@', CAST(N'2014-10-14T11:09:03.630' AS DateTime), N'Displays all products missing ECN in the US view', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:02:23.920' AS DateTime), N'a7a4a21b-72f2-4fdd-9a38-04bd76cb5649', N'Export Transition: Are system messages enabled?', N'SELECT  
CASE WHEN XMLDocument.value(''(/configuration/export/ci_sli/system_messages/@release)[1]'',''varchar(500)'') >= ''15.1'' THEN
CASE WHEN XMLDocument.value(''(/configuration/export/ci_sli/system_messages/@enabled)[1]'',''varchar(500)'') = ''N'' THEN ''Failed Inspection. Client is on  release 15.1 or newer. Please enable system messages.'' 
ELSE ''PASS'' 
END 
ELSE ''PASS'' END
AS Message
FROM tmdXMLDocumentCache WITH (NOLOCK)
WHERE XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:10:16.560' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T11:13:02.070' AS DateTime), N'c64b7d0c-01a7-4391-a7c5-99a34edcf910', N'Classification Lookup: Products Missing Weight US', N'SELECT uspc.ProductNum
,uspc.ProductDesc
,uspc.NetWeight
FROM tmdProductClassification pc WITH (NOLOCK)
JOIN tmdUSProductClassification uspc WITH (NOLOCK) ON uspc.PartnerID = pc.PartnerID
AND uspc.ProductGuid = pc.ProductGuid
WHERE uspc.PartnerID = @PartnerID@
AND ISNULL(uspc.NetWeight, 0) = 0', CAST(N'2014-10-14T11:13:02.070' AS DateTime), N'Displays all products missing weight in the US view.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T11:15:02.977' AS DateTime), N'c4e08e01-48d2-45ec-ba71-f1b2b5bbbbb0', N'Classification Lookup: Products with Binding Rulings Standard/US', N'SELECT	
xxpc.ProductNum
,xxpc.ProductDesc
,xxpc.BusinessDivision
,xxpc.SupplierID
,xxpc.CountryOfOrigin
,xxpc.HsNum
,xxpc.AssuranceLevel
,xxpc.BindingRuling
,xxpc.RulingNotes
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID AND
xxpc.ProductGuid = pc.ProductGuid
WHERE	(
xxpc.BindingRuling <> '''' OR
CAST(xxpc.RulingNotes AS VARCHAR(500)) <> ''''
) AND
xxpc.PartnerID = @PartnerID@', CAST(N'2014-10-14T11:15:02.977' AS DateTime), N'Displays all products with binding rulings  in the standard classification lookup as well as the US', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T11:17:43.507' AS DateTime), N'7a60a56b-5988-4637-905e-c7c911c06ecd', N'Classification Lookup: Products with Duplicate Product Records Standard/US', N'SELECT
xxpc.ProductNum, 
xxpc.ProductDesc,
xxpc.ProductMaterial,
xxpc.ProductTypeCode,
xxpc.HsNum,
xxpc.CountryofOrigin,
xxpc.ManufacturerID,
xxpc.ActiveFlag
from tmdProductClassification pc with (nolock) 
join tmd@COUNTRY_CODE@ProductClassification xxpc with (nolock) on 
xxpc.PartnerID = pc.PartnerID and
xxpc.ProductGuid = pc.ProductGuid
where
xxpc.PartnerID = @PartnerID@
and xxpc.productnum in (
select distinct productnum from tmd@COUNTRY_CODE@ProductClassification with (nolock) 
where productnum = xxpc.productnum and partnerid = @PartnerID@
group by partnerid, productnum
having count(*) > 1)', CAST(N'2014-10-14T11:17:43.507' AS DateTime), N'Displays products with duplicate product records in the standard and US classification Lookup', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T11:18:53.817' AS DateTime), N'b58c529c-ff43-4bb4-b10a-094be27e997c', N'Classification Lookup: Products with Duplicate Product Records Global', N'SELECT
pc.ProductNum, 
pc.ProductDesc,
pc.HsNum,
pc.ActiveFlag
from tmdProductClassification pc with (nolock) 
where
pc.PartnerID = @PartnerID@
and pc.productnum in (
select distinct productnum from tmdProductClassification with (nolock) 
where productnum = pc.productnum and partnerid = @PartnerID@
group by partnerid, productnum
having count(*) > 1)', CAST(N'2014-10-14T11:18:53.817' AS DateTime), N'Displays products with duplicate product records in the Global view of the classification lookup', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:02:40.127' AS DateTime), N'46fa4e5d-c356-412c-8360-022c36d25ad3', N'Export Transition: Is TTM setup?', N'SELECT CASE WHEN XMLDocument.value(''(/configuration/export/ci_sli/processing_queue/enabled)[1]'',''varchar(500)'') like ''%Y%'' 
THEN ''TTM is enabled'' 
ELSE ''TTM is not enabled'' 
END
AS Message
FROM tmdXMLDocumentCache WITH (NOLOCK)
WHERE XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:10:38.807' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T11:21:54.887' AS DateTime), N'98828b99-d5c4-495b-acab-0b411c5ac510', N'Classification Lookup: Products with ECN non-EAR99 US', N'SELECT
uspc.ProductNum
,uspc.ProductDesc
,uspc.BusinessDivision
,uspc.SupplierID
,uspc.CountryOfOrigin
,uspc.HsNum
,uspc.AssuranceLevel
,uspc.ECCNNum
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmdUSProductClassification uspc WITH (NOLOCK) ON uspc.PartnerID = pc.PartnerID AND
uspc.ProductGuid = pc.ProductGuid
WHERE	uspc.ECCNNum <> ''EAR99'' AND
uspc.PartnerID = @PartnerID@', CAST(N'2014-10-14T11:21:54.887' AS DateTime), N'Displays products where the ECN number does not equal EAR99 in the US view', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:02:53.597' AS DateTime), N'610519de-035f-42dc-b204-c956896399e1', N'Export Transition: How many TTM processes are setup?', N'SELECT Count(Distinct Workflow)
AS ''Number of TTM Processes''
from tlgApplicationLaunchTree WITH (NOLOCK)
WHERE ApplicationToLaunch = ''dxdTTMWorkflowEngine'' OR WorkFlow like ''%TTM%''
AND PartnerID = ' + cast(@Partnerid as varchar(30)) + '', CAST(N'2017-08-16T15:10:24.113' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T11:27:23.920' AS DateTime), N'e4bae48c-7279-4f95-b324-6dd7e9714b11', N'Classification Lookup: Products with Sets Standard/US', N'SELECT
xxpc.ProductNum,
xxpc.ProductDesc,
xxpc.CountryofOrigin,
xxpc.BusinessDivision,
xxpc.FTZActiveFlag
FROM    tmdProductClassification pc WITH ( NOLOCK )
JOIN tmd@COUNTRY_CODE@ProductClassification xxpc WITH ( NOLOCK ) ON xxpc.PartnerID = pc.PartnerID
AND xxpc.ProductGuid = pc.ProductGuid
JOIN tmdClassificationSetBreakdown csb WITH ( NOLOCK ) ON csb.ParentProductGuid = xxpc.ProductGUID
AND csb.CountryCode = ''@COUNTRY_CODE@''
WHERE   xxpc.PartnerID = @PartnerID@', CAST(N'2014-10-14T11:27:23.920' AS DateTime), N'Displays ProductNum, ProductDesc, CountryofOrigin, BusinessDivision, and FTZActiveFlag for products in the standard or US that are classified as sets', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:03:07.907' AS DateTime), N'0bb0f681-bd85-4783-b623-8fe7072a95f8', N'Export Transition: What workflows kick off the TTM processes?', N'SELECT Distinct Workflow
FROM tlgApplicationLaunchTree WITH (NOLOCK)
WHERE ApplicationToLaunch = ''dxdTTMWorkflowEngine'' OR WorkFlow like ''%TTM%''
AND PartnerID = ' + cast(@Partnerid as varchar(30)) + '', CAST(N'2017-08-16T15:10:42.963' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:03:28.800' AS DateTime), N'c9dc3a1b-f1fe-4954-b442-fbf904431189', N'FTZ Transition: FTZ Lite or Full Blown', N'SELECT
CASE WHEN (select count (*) from txdShippc WITH (NOLOCK)) = 0 
AND (select count (*) from txdShippchist WITH (NOLOCK)) = 0 
THEN ''FTZ Lite'' 
ELSE ''Full Blown FTZ'' END AS Message', CAST(N'2017-08-16T15:03:28.800' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:03:42.880' AS DateTime), N'54f400dd-470c-4ecb-81be-0efac5e55ce9', N'FTZ Transition: Manufacturing or Distribution', N'SELECT
CASE WHEN (select count (*) from  txdIssuedIM  WITH (NOLOCK)) = 0 
AND (select count (*) from txdIssuedPC WITH (NOLOCK)) = 0 THEN ''Distribution'' 
ELSE ''Manufacturing'' 
END AS Message', CAST(N'2017-08-16T15:03:42.880' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:04:00.093' AS DateTime), N'2def6bfd-a05a-42a2-b794-c58d651c4121', N'FTZ Transition: Assists', N'SELECT
CASE WHEN XMLDocument.value(''(/configuration/ftzlink_discrete/fifo/assist)[1]'',''varchar(500)'') = ''N'' THEN
CASE WHEN (select count (*) from txdAssistShipPC WITH (NOLOCK)) = 0 THEN ''No assists'' 
ELSE ''Failed Inspection. Assist tag is set to N, but txdAssistShipPC has data.'' 
END 
ELSE ''Assits Enabled'' END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:04:00.093' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:04:18.730' AS DateTime), N'7fc57198-d0d6-4e5a-85b9-465d889e7692', N'FTZ Transition: Set Breakdown, XVV, Clocks', N'SELECT
CASE WHEN XMLDocument.value(''(/configuration/ftzlink_discrete/report_headings/cf7501_info/process_clock_flag)[1]'',''varchar(500)'') = ''N'' THEN
CASE WHEN (select Count (*) from tmdHTS  WITH (NOLOCK) where htsindex like ''%V%'' or htsindex like ''%X%'') = 0 THEN ''No XVV.'' 
ELSE ''Failed Inspection. Process Clock Flag is set to N, but tmdHTS has data for X and V.'' 
END 
ELSE ''Process Clock Flag enabled'' END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''

UNION

SELECT
CASE WHEN XMLDocument.value(''(/configuration/ftzlink_discrete/report_headings/cf7501_info/process_clock_flag)[1]'',''varchar(500)'') = ''N'' THEN
CASE WHEN (select Count (*) from txdFIFOProcessingHtsValuesClock  WITH (NOLOCK)) = 0 THEN ''No clocks.'' 
ELSE ''Failed Inspection. Process Clock Flag is set to N, but txdFIFOProcessingHtsValuesClock has data.'' 
END 
ELSE ''Process Clock Flag enabled'' END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''

UNION

SELECT
CASE WHEN XMLDocument.value(''(/configuration/ftzlink_discrete/report_headings/cf7501_info/process_clock_flag)[1]'',''varchar(500)'') = ''N'' THEN
CASE WHEN (select Count (*) from tmdSetBreakDown  WITH (NOLOCK)) = 0 THEN ''No sets.'' 
ELSE ''Failed Inspection. Process Clock Flag is set to N, but tmdSetBreakDown has data.'' 
END 
ELSE ''Process Clock Flag enabled'' END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:04:42.333' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:05:03.240' AS DateTime), N'0c5f2462-3a09-4951-af7d-9d74c99df6c8', N'FTZ Transition: FIFO or Lot Processing', N'SELECT
CASE WHEN XMLDocument.value(''(/configuration/ftzlink_discrete/fifo/fifo_allocation_filter)[1]'',''varchar(500)'') = '''' 
THEN ''Lot Processing is not being used.'' 
ELSE ''Lot processing is being used.'' 
END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:05:03.240' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T09:19:47.613' AS DateTime), N'841ff353-42db-4dbd-bbf4-78f88f220e9b', N'DPS Lookup: Companies Not Screened in the past 7,30,90 days', N'SELECT	
comp.CompanyID
,ISNULL(g.Decode,comp.CompanyType) AS CompanyType
,comp.CompanyName
,comp.CompanyAddress1
,comp.CompanyAddress2
,comp.CompanyAddress3
,comp.CompanyAddress4
,comp.CompanyCity
,comp.CompanyState
,comp.CompanyPostalCode
,comp.CompanyCountryCode
,comp.DTSStatus
,comp.DTSOverrideDate
,comp.DTSLastValidatedDate
,comp.DTSLastScreenedDate
FROM	tmgcompany comp WITH (NOLOCK)
LEFT JOIN tmgglobalcodes g WITH (NOLOCK) ON g.partnerid = comp.partnerid AND
g.code = comp.CompanyType AND
g.fieldname = ''CompanyType''
WHERE	comp.DTSLastScreenedDate < GETDATE() - @VALUE@ AND
comp.PartnerID = @PartnerID@', CAST(N'2014-10-21T09:19:47.613' AS DateTime), N'Displays companies that have not been screened within the past 7,30, or 90 days.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:05:19.203' AS DateTime), N'4f8ca833-0761-4bad-ae72-53437b81cd36', N'FTZ Transition: Direct Delivery', N'SELECT
CASE WHEN XMLDocument.value(''(/configuration/abi/direct_delivery_ind)[1]'',''varchar(500)'') = ''Y'' 
THEN ''Authorized for Direct Delivery'' 
ELSE ''NOT Authorized for Direct Delivery'' 
END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:05:19.203' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T10:34:21.580' AS DateTime), N'ba9598bb-9dd4-4ef5-bc31-a5d764cab164', N'Entry Visibility Lookup: Entry Visibility Lookup CA', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]
FROM    
( 
SELECT DISTINCT  
a.EntryGuid,
a.Partnerid ,  
a.EntryNum ,  
MAX(CONVERT(VARCHAR(10), a.Effdate, 101)) AS ''EffDate'',
MAX(CONVERT(VARCHAR(10), a.EntryDate, 101)) AS ''EntryDate'' ,  
ISNULL(d.Decode, '''') AS ''Status'', 
a.BrokerName, 
a.MasterBillOfLading, 
a.HouseBillOfLading, 
a.IORNum, 
a.ReleaseDate,
''@country_code@'' AS COUNTRY,
1 AS NoOrder
FROM txd@country_code@EntryVisibility a ( NOLOCK )  
LEFT OUTER JOIN txdEntryValidationErrors b ( NOLOCK ) ON a.LineGuid = b.LineGuid  
AND a.PartnerID = b.PartnerID  
LEFT OUTER JOIN txdEntryValidationSummaryStatus evss ( NOLOCK ) ON evss.PartnerID = a.PartnerID  
AND evss.EntryGUID = a.EntryGUID  
LEFT OUTER JOIN tmgGlobalCodes d ( NOLOCK ) ON a.PartnerID = d.PartnerID  
AND d.FieldName = ''EVSummaryStatus''  
AND evss.StatusCode = d.Code  
WHERE a.PartnerID = (select PartnerID from tmfDefaults)  
AND a.EffDate = (SELECT MAX(a2.effdate)  
FROM txdCAEntryVisibility a2 WITH (NOLOCK)  
WHERE a.PartnerID = a2.PartnerID AND a.EntryNum = a2.EntryNum)  
GROUP BY a.EntryGuid, a.PartnerID ,  
a.EntryNum ,  
d.Decode, a.BrokerName,  a.MasterBillOfLading, a.HouseBillOfLading, a.IORNum, a.ReleaseDate


) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-21T10:34:21.580' AS DateTime), N'Displays general information on Entries for Canada', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:05:40.637' AS DateTime), N'27e4f601-248d-4851-a259-cebb005cc4ae', N'FTZ Transition: Load Integration Files Automation', N'SELECT
CASE WHEN (select count (*) from tlgworkflowschedule ws WITH (NOLOCK) 
JOIN tlgapplicationlaunchtree tree  WITH (NOLOCK) 
ON ws.PartnerID = tree.PartnerID 
and ws.workflow = tree.workflow 
where applicationtolaunch =''dxdIntegrationDataImport.dll'' ) = 0 
THEN ''Load Integration Files has NOT been automated''
ELSE ''Load Integration Files has been automated''
END AS Message', CAST(N'2017-08-16T15:05:40.637' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-15T15:54:30.353' AS DateTime), N'8c1458b9-40cc-4d82-9900-23f46b74336e', N'ABI Lookup: New Entries', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
		SELECT
			''[''+ ''Edit'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntry.aspx?EntryNumber=uses.EntryNumber)'' as Edit, 
			uses.EntryNumber,
			convert(varchar, useh.EstimatedEntryDate , 101) AS EntryDate,
			useh.DistrictPortOfEntry,
			uses.Status,
			uses.StatusDescription,
			uses.FilingDestination, 
			uses.Description, 
			1 as NoOrder 
		FROM txdUSEntryHeader useh WITH (NOLOCK)
		JOIN txdUSEntryStatus uses WITH (NOLOCK) ON
			useh.EntryStatusGUID = uses.EntryStatusGUID and
			useh.PartnerID = uses.PartnerID
		WHERE uses.Status = ''NEW''
		AND useh.PartnerID = @PartnerID@)
			AS LookupViewInner WHERE @whereclause@', CAST(N'2014-07-15T15:54:30.353' AS DateTime), N'Displays all ABI records with NEW status', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-15T16:04:26.503' AS DateTime), N'b3f21cee-33d3-4847-b601-356cff6cab40', N'ABI Lookup: Entries With Hold Status', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
		SELECT
			''[''+ ''Edit'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntry.aspx?EntryNumber=''+Cast(uses.EntryNumber as varchar(50)) +'')'' as Edit, 
			uses.EntryNumber,
			convert(varchar, useh.EstimatedEntryDate, 101) AS EstimatedEntryDate,
			useh.DistrictPortOfEntry,
			uses.Status,
			uses.StatusDescription,
			uses.FilingDestination, 
			uses.Description, 
			1 as NoOrder 
		FROM txdUSEntryHeader useh WITH (NOLOCK)
		JOIN txdUSEntryStatus uses WITH (NOLOCK) ON
			useh.EntryStatusGUID = uses.EntryStatusGUID and
			useh.PartnerID = uses.PartnerID
		WHERE uses.Status = ''HOLD''
			AND useh.PartnerID = @PartnerID@)
			AS LookupViewInner WHERE @whereclause@', CAST(N'2014-07-15T16:04:26.503' AS DateTime), N'Displays all ABI records with HOLD status', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-18T09:09:31.437' AS DateTime), N'0cdf6f5b-7fb1-4d99-86c3-63138097aba6', N'ABI Lookup: Validated Entries', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
		SELECT
			''[''+ ''Edit'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntry.aspx?EntryNumber=''+Cast(uses.EntryNumber as varchar(50)) +'')'' as Edit, 
			uses.EntryNumber,
			convert(varchar, useh.EstimatedEntryDate, 101) AS EstimatedEntryDate,
			useh.DistrictPortOfEntry,
			uses.Status,
			uses.StatusDescription,
			uses.FilingDestination, 
			uses.Description,
			1 as NoOrder 
		FROM txdUSEntryHeader useh WITH (NOLOCK)
		JOIN txdUSEntryStatus uses WITH (NOLOCK) ON
			useh.EntryStatusGUID = uses.EntryStatusGUID and
			useh.PartnerID = uses.PartnerID
		WHERE Status = ''VALIDATED''
			AND useh.PartnerID = @PartnerID@)
			AS LookupViewInner WHERE @whereclause@', CAST(N'2014-07-18T09:09:31.437' AS DateTime), N'Displays all ABI records with VALIDATED status', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-18T09:10:36.560' AS DateTime), N'1d927a2d-5674-477e-a747-51362e9e8700', N'ABI Lookup: Finalized Entries', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
		SELECT DISTINCT
				''[''+ ''Edit'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntry.aspx?EntryNumber=''+Cast(uses.EntryNumber as varchar(50)) +'')'' as Edit, 
				uses.EntryNumber,
				convert(varchar, useh.EstimatedEntryDate, 101) AS EstimatedEntryDate,
				useh.DistrictPortOfEntry,
				uses.Status,
				uses.StatusDescription,
				uses.FilingDestination, 
				uses.Description, 
				cast(sum(ustl.EnteredValue) as numeric(10, 4)) as EnteredValue, 
				1 as NoOrder 
         FROM txdUSEntryHeader useh WITH (NOLOCK)
         JOIN txdUSEntryStatus uses WITH (NOLOCK) ON 
                         useh.EntryStatusGUID = uses.EntryStatusGUID and
                         useh.PartnerID = uses.PartnerID
         JOIN txdUSEntryTariffLine ustl WITH (NOLOCK) ON
                         useh.EntryGUID = ustl.EntryGUID and
                         useh.PartnerID = ustl.PartnerID
         WHERE Status = ''FINALIZED''
         AND useh.PartnerID = @PartnerID@
		 Group by uses.EntryNumber, useh.EstimatedEntryDate,useh.DistrictPortOfEntry,uses.Status,uses.StatusDescription,uses.FilingDestination,uses.Description)
		 AS LookupViewInner WHERE @whereclause@', CAST(N'2014-07-18T09:10:36.560' AS DateTime), N'Displays all ABI entries with FINALIZED status', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-18T09:11:13.957' AS DateTime), N'9fe688b2-f82b-4d1c-930e-2a91809359dc', N'ABI Lookup: Transmitted Entries', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
		SELECT DISTINCT
			''[''+ ''Edit'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntry.aspx?EntryNumber=''+Cast(uses.EntryNumber as varchar(50)) +'')'' as Edit, 
			''[''+ ''Replies'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntryReplies.aspx?EntryNumber=''+uses.EntryNumber+'')'' as Replies,
			uses.EntryNumber,
			convert(varchar, useh.EstimatedEntryDate, 101) AS EstimatedEntryDate,
			useh.DistrictPortOfEntry,
			uses.Status,
			uses.StatusDescription,
			uses.CBPStatus, 
			uses.CBPReleaseStatus,	
			uses.CBPSummaryStatus,	
			convert(varchar, uses.ReleaseDate, 101) AS ReleaseDate,	
			convert(varchar, uses.LastGeneratedDate, 101) AS LastGeneratedDate,
			uses.FilingDestination, 
			uses.Description,
			1 as NoOrder
		FROM txdUSEntryHeader useh WITH (NOLOCK) 
		JOIN txdUSEntryStatus uses WITH (NOLOCK) ON
			useh.EntryStatusGUID = uses.EntryStatusGUID AND
			useh.PartnerID = uses.PartnerID
		WHERE uses.STATUS IN (
			''TRANSMITTED''
			,''RESPONSE RECEIVED''
			)
      AND useh.PartnerID = @PartnerID@
		) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-04-10T09:42:33.187' AS DateTime), N'Displays all ABI entries with TRANSMITTED or RESPONSE RECEIVED status', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-18T09:11:47.787' AS DateTime), N'82aeb7a8-8fb2-4e41-aa18-eb116967ae30', N'ABI Lookup: Current CBP Rejections', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
		SELECT Distinct
			''[''+ ''Edit'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntry.aspx?EntryNumber=''+Cast(uses.EntryNumber as varchar(50)) +'')'' as Edit, 
			''[''+ ''Replies'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntryReplies.aspx?EntryNumber=''+uses.EntryNumber+'')'' as Replies,
			uses.EntryNumber,
            convert(varchar, useh.EstimatedEntryDate, 101) AS EstimatedEntryDate,
			useh.DistrictPortOfEntry,
			uses.Status,
			uses.StatusDescription,
			uses.CBPStatus, 
			userd.NarrativeMsg, 
            convert(varchar, uses.LastGeneratedDate, 101) AS LastGeneratedDate,
			uses.FilingDestination, 
			uses.Description,
			1 as NoOrder
		FROM txdUSEntryStatus uses WITH (NOLOCK)
		JOIN TxdUSEntryHeader useh WITH (NOLOCK) ON
			useh.EntryStatusGUID = uses.EntryStatusGUID
        AND useh.PartnerID = uses.PartnerID
		Join txdUSEntryResponseHeader userh WITH (NOLOCK)
			ON uses.EntryStatusGUID = userh.EntryStatusGUID 
			AND uses.PartnerID = userh.PartnerID 
		Join txdUSEntryResponseDetail userd WITH (NOLOCK) 
			ON userh.ResponseGUID = userd.ResponseGUID 
			And uses.PartnerID = userd.PartnerID 
		WHERE CBPStatus = ''REJECTED''
			and uses.PartnerID = @PartnerID@)
			AS LookupViewInner WHERE @whereclause@', CAST(N'2014-07-18T09:11:47.787' AS DateTime), N'Displays all ABI entries with REJECTED status', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-18T09:12:21.563' AS DateTime), N'f1ebe2ec-03c9-4f1f-8a95-b899648347a2', N'ABI Lookup: Census Warnings Need Reply', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
		SELECT      
			''['' + ''Edit'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntry.aspx?EntryNumber='' + CAST(uses.EntryNumber AS VARCHAR(50)) + '')'' AS Edit
			,''['' + ''Replies'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntryReplies.aspx?EntryNumber='' + uses.EntryNumber + '')'' AS Replies
			,usrh.EntryNumber
			,convert(varchar, useh.EstimatedEntryDate, 101) AS EstimatedEntryDate
			,convert(varchar, useh.PreliminaryStatmentDate, 101) AS PreliminaryStatementDate
			,useh.Ref1 AS NAMC
			,useh.Ref2 AS VesselName
			,usrd.NarrativeMsg
			,ustl.HTSNum
			,CASE WHEN usrd.ReferenceType = ''LINEITEM'' THEN RIGHT(LEFT(usrd.ReferenceDataText,8),3) ELSE usrd.ReferenceDataText END AS LineNum
			,1 as NoOrder
	FROM  txdUSEntryResponseHeader usrh WITH (NOLOCK) 
	JOIN  txdUSEntryResponseDetail usrd WITH (NOLOCK) ON usrh.ResponseGUID = usrd.ResponseGUID
	JOIN  txdUSEntryHeader useh WITH (NOLOCK) ON useh.entrystatusguid = usrh.entrystatusguid
	JOIN  txdUSEntryStatus uses WITH (NOLOCK) ON uses.entrystatusguid = useh.entrystatusguid
	JOIN  (
            SELECT MAX(effdate) AS effdate
                ,entrynumber
            FROM txdUSEntryResponseHeader WITH (NOLOCK)
            WHERE status = ''SUMMARY HAS BEEN ADDED''
            GROUP BY entrynumber
            ) q ON q.entrynumber = usrh.entrynumber AND
                     q.effdate = usrh.effdate
	LEFT JOIN txdUSEntryTariffLine ustl WITH (NOLOCK) ON ustl.EntryGUID = useh.entryguid AND ustl.TariffLineNum = RIGHT(LEFT(usrd.ReferenceDataText,8),3)
	WHERE usrd.NarrativeMsg LIKE ''%*census*%'' 
	AND  NOT EXISTS 
			(SELECT 1
                 FROM txdUSEntryResponseHeader WITH (NOLOCK)
                 WHERE  
                 usrh.entrynumber = entrynumber
                 AND Status = ''CENSUS WARN OVERRIDE ACCPTD'') 
                 AND
				usrh.PartnerID = @PartnerID@)
			
	AS LookupViewInner WHERE @whereclause@', CAST(N'2018-04-10T09:47:35.500' AS DateTime), N'Displays all ABI entries for which a reply is required by Census before the entry can be accepted', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-18T09:13:15.477' AS DateTime), N'5d00f680-5cac-486d-890f-d207fe351a91', N'ABI Lookup: Historic Census Warnings', N'SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNumber DESC ) AS [RowNum]
	FROM (
		SELECT      
			''['' + ''Edit'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntry.aspx?EntryNumber='' + CAST(uses.EntryNumber AS VARCHAR(50)) + '')'' AS Edit
			,''['' + ''Replies'' + '']'' + ''(/CBPABI/INTERFACES/fxdEntryReplies.aspx?EntryNumber='' + uses.EntryNumber + '')'' AS Replies
			,usrh.EntryNumber
			,convert(varchar, useh.EstimatedEntryDate, 101) AS EstimatedEntryDate
			,convert(varchar, useh.PreliminaryStatmentDate, 101) AS PreliminaryStatmentDate
			,useh.Ref1 AS NAMC
			,useh.Ref2 AS VesselName
			,usrd.NarrativeMsg
			,ustl.HTSNum
			,CASE WHEN usrd.ReferenceType = ''LINEITEM'' THEN RIGHT(LEFT(usrd.ReferenceDataText,8),3) ELSE usrd.ReferenceDataText END AS LineNum
			,1 as NoOrder
FROM  txdusentryresponseheader usrh WITH (NOLOCK) 
JOIN  txdusentryresponsedetail usrd WITH (NOLOCK) ON usrh.ResponseGUID = usrd.ResponseGUID
JOIN  txdusentryheader useh WITH (NOLOCK) ON useh.entrystatusguid = usrh.entrystatusguid
JOIN  txdusentrystatus uses WITH (NOLOCK) ON uses.entrystatusguid = useh.entrystatusguid
LEFT JOIN txdusentrytariffline ustl WITH (NOLOCK) ON ustl.EntryGUID = useh.entryguid AND
                                                         ustl.TariffLineNum = RIGHT(LEFT(usrd.ReferenceDataText,8),3)
WHERE usrd.NarrativeMsg LIKE ''%*census*%'' AND
            usrh.PartnerID = @PartnerID@)
			AS LookupViewInner WHERE @whereclause@', CAST(N'2014-07-18T09:13:15.477' AS DateTime), N'Displays past Census warnings for an ABI entry', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T10:58:53.607' AS DateTime), N'5ed7240f-b128-4cf0-a4b4-4c54ee92ebde', N'Entry Visibility Lookup: Entries with Errors CA', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]
FROM    
( 	

SELECT 
xxev.EntryGuid, 
xxev.EntryNum, 
isnull(g.Decode, evss.StatusCode) as EntryStatus,
xxev.BrokerID,
xxev.CAPortOfUnlading,
COUNT(Distinct EVE.LineGUID) as ErrorLineCount,
COUNT(Distinct EVE.LineGUID+EVE.ValidationGuid) as ErrorCount,
MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',  
CAST(DateDiff(DAY, GETDATE(), DATEADD(DAY, 294, MAX(xxev.EntryDate))) AS varchar(10)) as [Days Since EntryDate],
1 AS NoOrder
FROM txdCAEntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryValidationErrors EVE WITH (NOLOCK) 
ON xxev.PartnerID = EVE.PartnerID 
AND xxev.entryGUID = EVE.EntryGUID AND xxev.lineguid = EVE.LineGuid
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
ON evss.EntryGuid = xxev.EntryGuid AND evss.PartnerID = xxev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
AND g.FieldName = ''EVSummaryStatus''
WHERE
xxev.PartnerID = @PartnerID@
GROUP BY xxev.EntryGuid, xxev.EntryNum, xxev.BrokerID, xxev.CAPortOfUnlading, g.Decode, evss.StatusCode, xxev.EntryDate
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-21T10:58:53.607' AS DateTime), N'Displays entries into Canada with validation errors', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-15T17:02:53.270' AS DateTime), N'996a629d-c542-4b88-93d9-f534a0c3c514', N'QPWP Lookup: TE62s - Arrived But Not Exported', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY EffDate asc ) AS [RowNum] FROM 
(SELECT  PartnerID,
            EffDate,
            InbondNum,
            InbondStatus,
            TemplateFlag,
            EntryType,
            Carrier,
            USPortOfArrival,
            DestinationPort,
            ForeignDestinationPort,
            ImportingCarrier,
            ModeOfTransport,
            ArrivalDate,
            QPO1,
            QPO2,
            QPO3,
            CASE TransmissionStatus When '''' Then ''UNTRANSMITTED''
            else TransmissionStatus END as Status,
1 AS NoOrder
FROM   txdQPHeader q (NOLOCK)
WHERE PartnerId =  (SELECT PartnerID FROM tmfDefaults WITH (NOLOCK))
AND       TemplateFlag = ''N''
AND       EntryType = ''62''
AND       EXISTS (SELECT top 1 * FROM txdQPBols b with (nolock)
								WHERE BOLExported = ''N'' 
								AND BOLArrived=''Y''
								AND b.InbondNum = q.InbondNum)
AND NOT (MovementOutOfZone = ''0'' AND ModeOfTransport IN (''40'', ''41''))
) AS LookupViewInner WHERE @whereclause@', CAST(N'2018-02-15T11:54:03.827' AS DateTime), N'Contains TE62s that have arrived but have not been exported', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'52798534-2a54-4585-9b0a-f7b8725bafaf', N'FTZ Lookup: FTZ Processing ProductNumChange and Scrap Transactions', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY TxnDate
			,ERPDate ASC
		) AS [RowNum]
FROM (
	SELECT ''['' + ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.aspx?TXN='' + CAST(fp.TxnNumGuid AS VARCHAR(50)) + ''&SOURCE=F)'' AS Edit
		,CONVERT(DATE, fp.TxnDate, 1) AS TxnDate
		,CONVERT(DATE, fp.ERPDate, 1) AS ERPDate
		,fp.TxnCode
		,fp.TransportID
		,CASE 
			WHEN fp.TxnCode IN (
					''CPPC''
					,''XPPC''
					,''XPIM''
					)
				THEN fp.OrderNumReceipt
			ELSE fp.OrderNumShip
			END AS OrderNum
		,fp.ProductNum
		,fp.AdjProductNum
		,CAST(fp.TxnQty AS NUMERIC(38, 4)) AS TxnQty
		,CAST(fp.Weight AS NUMERIC(38, 4)) AS Weight
		,CAST(fph.Value AS NUMERIC(38, 4)) AS Value
		,CAST(fph.Value2 AS NUMERIC(38, 4)) AS Value2
		,fph.CountryOfOrigin
		,fph.ManufacturerID
		,fph.HTSIndex
		,fph.HtsNum
		,fph.HtsNum2
		,fph.StatusCode
		,fp.TxnNumGuid AS ERPId
		,fp.RPO11
		,fp.RPO12
		,fp.RPO13
		,fph.RCO21
		,fph.RCO22
		,fph.RCO23
		,1 AS NoOrder
	FROM txdFifoProcessing fp WITH (NOLOCK)
	JOIN txdFifoProcessingHtsValues fph ON fp.partnerID = fph.partnerID
		AND fp.txnnumguid = fph.txnnumguid
	WHERE fp.txncode IN (
			''CNPC''
			,''CPPC''
			,''XPPC''
			,''XPIM''
			,''XNPC''
			,''XNIM''
			)
		AND fp.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-06T13:09:06.130' AS DateTime), N'Product Number Change and Scrap Transactions in Fifo Processing', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'789d4315-a4b9-401d-9968-1a41d6714fe4', N'FTZ Lookup: FTZ Staging Adjustment Transactions', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY TxnDate
			,ERPDate ASC
		) AS [RowNum]
FROM (
	SELECT ''['' + ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.aspx?TXN='' + CAST(fp.TxnNumGuid AS VARCHAR(50)) + ''&SOURCE=F&TARGET=STAGING)'' AS Edit
		,CONVERT(DATE, fp.TxnDate, 101) AS TxnDate
		,CONVERT(DATE, fp.ERPDate, 101) AS ERPDate
		,fp.TxnCode
		,fp.TransportID
		,CASE 
			WHEN fp.TxnCode IN (
					''APPC''
					,''APIM''
					)
				THEN fp.OrderNumReceipt
			ELSE fp.OrderNumShip
			END AS OrderNum
		,fp.ProductNum
		,CAST(fp.TxnQty AS NUMERIC(38, 4)) AS TxnQty
		,CAST(fp.Weight AS NUMERIC(38, 4)) AS Weight
		,CAST(fph.Value AS NUMERIC(38, 4)) AS Value
		,CAST(fph.Value2 AS NUMERIC(38, 4)) AS Value2
		,fph.CountryOfOrigin
		,fph.ManufacturerID
		,fph.HTSIndex
		,fph.HtsNum
		,fph.HtsNum2
		,fph.StatusCode
		,fp.TxnNumGuid AS ERPId
		,fp.RPO11
		,fp.RPO12
		,fp.RPO13
		,fph.RCO21
		,fph.RCO22
		,fph.RCO23
		,1 AS NoOrder
	FROM ttdstagingFifoProcessing fp WITH (NOLOCK)
	JOIN ttdstagingFifoProcessingHtsValues fph ON fp.partnerID = fph.partnerID
		AND fp.txnnumguid = fph.txnnumguid
	WHERE fp.txncode IN (
			''APPC''
			,''APIM''
			,''ANPC''
			,''ANIM''
			)
		AND fp.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-06T13:30:16.237' AS DateTime), N'Adjustment Transactions in Staging Fifo Processing', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'cc9bce2e-c163-43aa-80ff-c68679b8f302', N'FTZ Lookup: FTZ Processing Adjustment Transactions', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY TxnDate
			,ERPDate ASC
		) AS [RowNum]
FROM (
	SELECT ''['' + ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.aspx?TXN='' + CAST(fp.TxnNumGuid AS VARCHAR(50)) + ''&SOURCE=F)'' AS Edit
		,CONVERT(DATE, fp.TxnDate, 101) AS TxnDate
		,CONVERT(DATE, fp.ERPDate, 101) AS ERPDate
		,fp.TxnCode
		,fp.TransportID
		,CASE 
			WHEN fp.TxnCode IN (
					''APPC''
					,''APIM''
					)
				THEN fp.OrderNumReceipt
			ELSE fp.OrderNumShip
			END AS OrderNum
		,fp.ProductNum
		,CAST(fp.TxnQty AS NUMERIC(38, 4)) AS TxnQty
		,CAST(fp.Weight AS NUMERIC(38, 4)) AS Weight
		,CAST(fph.Value AS NUMERIC(38, 4)) AS Value
		,CAST(fph.Value2 AS NUMERIC(38, 4)) AS Value2
		,fph.CountryOfOrigin
		,fph.ManufacturerID
		,fph.HTSIndex
		,fph.HtsNum
		,fph.HtsNum2
		,fph.StatusCode
		,fp.TxnNumGuid AS ERPId
		,fp.RPO11
		,fp.RPO12
		,fp.RPO13
		,fph.RCO21
		,fph.RCO22
		,fph.RCO23
		,1 AS NoOrder
	FROM txdFifoProcessing fp WITH (NOLOCK)
	JOIN txdFifoProcessingHtsValues fph ON fp.partnerID = fph.partnerID
		AND fp.txnnumguid = fph.txnnumguid
	WHERE fp.txncode IN (
			''APPC''
			,''APIM''
			,''ANPC''
			,''ANIM''
			)
		AND fp.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-06T13:12:50.667' AS DateTime), N'Adjustment Transactions in Fifo Processing', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'4b65754e-e21d-4b2b-80b1-61d0634954c1', N'FTZ Lookup: FTZ Staging Shipment Transactions', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY TxnDate, ERPDate asc ) AS [RowNum] FROM (  
			SELECT ''[''+ ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.aspx?TXN=''+ CAST (fp.TxnNumGuid AS varchar(50)) + ''&SOURCE=F&TARGET=STAGING)'' AS Edit ,   
			CONVERT(Date,fp.TxnDate, 101) AS TxnDate , CONVERT(Date,fp.ERPDate,101) AS ERPDate , fp.TxnCode ,   fp.TransportID , 
			CASE WHEN fp.TxnCode IN (''SPIM'', ''SPPC'', ''SPNM'') THEN fp.OrderNumReceipt ELSE fp.OrderNumShip END AS OrderNum ,   
			fp.CountryShipTo, fp.ProductNum , CAST (fp.TxnQty AS Numeric (38,4)) AS TxnQty , CAST (fp.Weight AS Numeric (38,4)) AS Weight ,   
			CAST (fph.Value AS Numeric (38,4)) AS Value , CAST (fph.Value2 AS Numeric (38, 4)) AS Value2 , fph.CountryOfOrigin ,   
			fph.ManufacturerID , fph.HTSIndex , fph.HtsNum , fph.HtsNum2 , fph.StatusCode , fp.TxnNumGuid AS ERPId , fp.RPO11 ,   
			fp.RPO12 , fp.RPO13 , fph.RCO21 , fph.RCO22 , fph.RCO23 , 1 AS NoOrder   
		FROM ttdstagingFifoProcessing fp WITH (NOLOCK)   
		JOIN ttdstagingFifoProcessingHtsValues fph 
			ON fp.partnerID = fph.partnerID 
			AND fp.txnnumguid = fph.txnnumguid   
		WHERE fp.txncode in (''SPIM'', ''SPPC'', ''SPNM'')   
			AND fp.PartnerID = (select PartnerID from tmfDefaults)  
		) AS LookupViewInner WHERE @whereclause@', CAST(N'1900-01-01T00:00:00.000' AS DateTime), N'Shipment Transactions in Staging Fifo Processing', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'980c72a4-f821-4c98-bee0-0cbc38faee82', N'FTZ Lookup: FTZ Processing Shipment Transactions', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY TxnDate
			,ERPDate ASC
		) AS [RowNum]
FROM (
	SELECT ''['' + ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.aspx?TXN='' + CAST(fp.TxnNumGuid AS VARCHAR(50)) + ''&SOURCE=F)'' AS Edit
		,CONVERT(DATE, fp.TxnDate, 101) AS TxnDate
		,CONVERT(DATE, fp.ERPDate, 101) AS ERPDate
		,fp.TxnCode
		,fp.TransportID
		,CASE 
			WHEN fp.TxnCode IN (
					''SPIM''
					,''SPPC''
					,''SPNM''
					)
				THEN fp.OrderNumReceipt
			ELSE fp.OrderNumShip
			END AS OrderNum
		,fp.CountryShipTo
		,fp.ProductNum
		,CAST(fp.TxnQty AS NUMERIC(38, 4)) AS TxnQty
		,CAST(fp.Weight AS NUMERIC(38, 4)) AS Weight
		,CAST(fph.Value AS NUMERIC(38, 4)) AS Value
		,CAST(fph.Value2 AS NUMERIC(38, 4)) AS Value2
		,fph.CountryOfOrigin
		,fph.ManufacturerID
		,fph.HTSIndex
		,fph.HtsNum
		,fph.HtsNum2
		,fph.StatusCode
		,fp.TxnNumGuid AS ERPId
		,fp.RPO11
		,fp.RPO12
		,fp.RPO13
		,fph.RCO21
		,fph.RCO22
		,fph.RCO23
		,1 AS NoOrder
	FROM txdFifoProcessing fp WITH (NOLOCK)
	JOIN txdFifoProcessingHtsValues fph ON fp.partnerID = fph.partnerID
		AND fp.txnnumguid = fph.txnnumguid
	WHERE fp.txncode IN (
			''SPIM''
			,''SPPC''
			,''SPNM''
			)
		AND fp.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-06T13:14:00.720' AS DateTime), N'Shipment Transactions in Fifo Processing', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'0adaf39b-2235-49ae-be97-ba0e4e7d17b9', N'FTZ Lookup: FTZ Staging Receipt Transactions', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY TxnDate
			,ERPDate ASC
		) AS [RowNum]
FROM (
	SELECT ''['' + ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.aspx?TXN='' + CAST(fp.TxnNumGuid AS VARCHAR(50)) + ''&SOURCE=F&TARGET=STAGING)'' AS Edit
		,CONVERT(DATE, fp.TxnDate, 101) AS TxnDate
		,CONVERT(DATE, fp.ERPDate, 101) AS ERPDate
		,fp.TxnCode
		,fp.TransportID
		,CASE 
			WHEN fp.TxnCode IN (
					''RPPC''
					,''RPIM''
					)
				THEN fp.OrderNumReceipt
			ELSE fp.OrderNumShip
			END AS OrderNum
		,fp.ProductNum
		,CAST(fp.TxnQty AS NUMERIC(38, 4)) AS TxnQty
		,CAST(fp.Weight AS NUMERIC(38, 4)) AS Weight
		,CAST(fph.Value AS NUMERIC(38, 4)) AS Value
		,CAST(fph.Value2 AS NUMERIC(38, 4)) AS Value2
		,fph.CountryOfOrigin
		,fph.ManufacturerID
		,fph.HTSIndex
		,fph.HtsNum
		,fph.HtsNum2
		,fph.StatusCode
		,fp.TxnNumGuid AS ERPId
		,fp.RPO11
		,fp.RPO12
		,fp.RPO13
		,fph.RCO21
		,fph.RCO22
		,fph.RCO23
		,1 AS NoOrder
	FROM ttdstagingFifoProcessing fp WITH (NOLOCK)
	JOIN ttdstagingFifoProcessingHtsValues fph ON fp.partnerID = fph.partnerID
		AND fp.txnnumguid = fph.txnnumguid
	WHERE fp.txncode IN (
			''RPPC''
			,''RPIM''
			,''RNPC''
			,''RNIM''
			)
		AND fp.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-02-06T13:27:27.020' AS DateTime), N'Receipt Transactions in Staging Fifo Processing', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'758d2d23-1546-48a6-ac81-9ecce6868f38', N'FTZ Lookup: FTZ Processing Receipt Transactions', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY TxnDate
			,ERPDate ASC
		) AS [RowNum]
FROM (
	SELECT ''['' + ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.aspx?TXN='' + CAST(fp.TxnNumGuid AS VARCHAR(50)) + ''&SOURCE=F)'' AS Edit
		,CONVERT(DATE, fp.TxnDate, 101) AS TxnDate
		,CONVERT(DATE, fp.ERPDate, 101) AS ERPDate
		,fp.TxnCode
		,fp.TransportID
		,CASE 
			WHEN fp.TxnCode IN (
					''RPPC''
					,''RPIM''
					)
				THEN fp.OrderNumReceipt
			ELSE fp.OrderNumShip
			END AS OrderNum
		,fp.ProductNum
		,CAST(fp.TxnQty AS NUMERIC(38, 4)) AS TxnQty
		,CAST(fp.Weight AS NUMERIC(38, 4)) AS Weight
		,CAST(fph.Value AS NUMERIC(38, 4)) AS Value
		,CAST(fph.Value2 AS NUMERIC(38, 4)) AS Value2
		,fph.CountryOfOrigin
		,fph.ManufacturerID
		,fph.HTSIndex
		,fph.HtsNum
		,fph.HtsNum2
		,fph.StatusCode
		,fp.RPO11
		,fp.RPO12
		,fp.RPO13
		,fph.RCO21
		,fph.RCO22
		,fph.RCO23
		,fp.TxnNumGuid AS ERPId
	FROM txdFifoProcessing fp WITH (NOLOCK)
	JOIN txdFifoProcessingHtsValues fph ON fp.partnerID = fph.partnerID
		AND fp.txnnumguid = fph.txnnumguid
	WHERE fp.txncode IN (
			''RPPC''
			,''RPIM''
			,''RNPC''
			,''RNIM''
			)
		AND fp.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-06T13:10:53.643' AS DateTime), N'Receipt Transactions in Fifo Processing', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'6088f095-5b1c-44c8-8e1f-f58be15ab997', N'FTZ Lookup: FTZ Staging Transactions', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY TxnDate
			,ERPDate ASC
		) AS [RowNum]
FROM (
	SELECT ''['' + ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.aspx?TXN='' + CAST(fp.TxnNumGuid AS VARCHAR(50)) + ''&SOURCE=F&TARGET=STAGING)'' AS Edit
		,CONVERT(DATE, fp.TxnDate, 101) AS TxnDate
		,CONVERT(DATE, fp.ERPDate, 101) AS ERPDate
		,fp.TxnCode
		,fp.TransportID
		,CASE 
			WHEN fp.TxnCode IN (
					''IPPC''
					,''IPIM''
					,''PPIM''
					)
				THEN fp.OrderNumReceipt
			ELSE fp.OrderNumShip
			END AS OrderNum
		,fp.ProductNum
		,CAST(fp.TxnQty AS NUMERIC(38, 4)) AS TxnQty
		,CAST(fp.Weight AS NUMERIC(38, 4)) AS Weight
		,CAST(fph.Value AS NUMERIC(38, 4)) AS Value
		,CAST(fph.Value2 AS NUMERIC(38, 4)) AS Value2
		,fph.CountryOfOrigin
		,fph.ManufacturerID
		,fph.HTSIndex
		,fph.HtsNum
		,fph.HtsNum2
		,fph.StatusCode
		,fp.TxnNumGuid AS ERPId
		,fp.OrderNumWork
		,fp.RPO11
		,fp.RPO12
		,fp.RPO13
		,fph.RCO21
		,fph.RCO22
		,fph.RCO23
		,1 AS NoOrder
	FROM ttdstagingFifoProcessing fp WITH (NOLOCK)
	JOIN ttdstagingFifoProcessingHtsValues fph ON fp.partnerID = fph.partnerID
		AND fp.txnnumguid = fph.txnnumguid
	WHERE fp.txncode IN (
			''IPPC''
			,''IPIM''
			,''INPC''
			,''INIM''
			,''PPIM''
			,''PNIM''
			)
		AND fp.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-06T13:29:20.843' AS DateTime), N'Production Issues and Production Receipt Transactions in Staging Fifo Processing', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'85ad9506-9c29-4dff-94fb-7a5897eb046d', N'FTZ Lookup: FTZ Production Transactions', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY TxnDate, ERPDate asc ) AS [RowNum] FROM (  SELECT ''[''+ ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.aspx?TXN=''+ CAST (fp.TxnNumGuid AS varchar(50)) + ''&SOURCE=F&TARGET=PRODUCTION)'' AS Edit ,   CONVERT(Date,fp.TxnDate, 101) AS TxnDate , CONVERT(Date,fp.ERPDate,101) AS ERPDate , fp.TxnCode ,   fp.TransportID , CASE WHEN fp.TxnCode IN (''IPPC'', ''IPIM'', ''PPIM'') THEN fp.OrderNumReceipt ELSE fp.OrderNumShip END AS OrderNum ,   fp.ProductNum , CAST (fp.TxnQty AS Numeric (38,4)) AS TxnQty , CAST (fp.Weight AS Numeric (38,4)) AS Weight ,   CAST (fph.Value AS Numeric (38,4)) AS Value , CAST (fph.Value2 AS Numeric (38, 4)) AS Value2 ,   fph.CountryOfOrigin , fph.ManufacturerID , fph.HTSIndex , fph.HtsNum , fph.HtsNum2 , fph.StatusCode ,    fp.TxnNumGuid AS ERPId , fp.RPO11 , fp.RPO12 , fp.RPO13 , fph.RCO21 , fph.RCO22 , fph.RCO23 , 1 AS NoOrder    FROM txdFifoProcessing fp WITH (NOLOCK)    JOIN txdFifoProcessingHtsValues fph ON fp.partnerID = fph.partnerID AND fp.txnnumguid = fph.txnnumguid    WHERE fp.txncode in (''IPPC'', ''IPIM'', ''INPC'', ''INIM'', ''PPIM'', ''PNIM'')    AND fp.PartnerID =(select PartnerID from tmfDefaults)  ) AS LookupViewInner WHERE @whereclause@', CAST(N'1900-01-01T00:00:00.000' AS DateTime), N'Production issues and production receipt transactions in Fifo Processing', N'N', N'N')
, (@PartnerID, CAST(N'2014-10-21T11:21:08.203' AS DateTime), N'23f017e0-c581-4778-b105-970317724ad5', N'Entry Visibility Lookup: Lines Flagged for Recon CA', N'SELECT 
xxev.EntryGuid,
xxev.EntryNum,
isnull(g.Decode, evss.StatusCode) AS EntryStatus,
xxev.BrokerID,
MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',  
xxev.IORNum,
xxev.CAPortOfUnlading,
xxev.LineNum,
xxev.ProductNum,
xxev.InvoiceNum,
xxev.TxnQty,
xxev.HsNum,
g.Decode AS STATUS,
1 as NoOrder

FROM txdCAEntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
ON evss.EntryGuid = xxev.EntryGuid
AND evss.PartnerID = xxev.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK)
ON evss.StatusCode = g.Code
AND evss.PartnerID = g.PartnerID
AND g.FieldName = ''EVSummaryStatus''
WHERE xxev.PartnerID = @PartnerId@
AND xxev.ReconciliationFlag = ''Y''
GROUP BY 
xxev.EntryGuid,
xxev.EntryDate,
xxev.EntryNum,
xxev.IORNum,
xxev.CAPortOfUnlading,
xxev.LineNum,
xxev.ProductNum,
xxev.InvoiceNum,
xxev.TxnQty,
xxev.HsNum,
g.Decode,
evss.StatusCode,
xxev.BrokerID', CAST(N'2014-10-21T11:21:08.203' AS DateTime), N'Displays  entry information and the line number flagged for reconciliation on entries in Canada', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T11:23:44.953' AS DateTime), N'114f1f47-d9a0-4389-8956-423b12c9a50e', N'Entry Visibility Lookup: Filed Quarterly/Single PEAs', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
( 	
SELECT 
xxev.EntryGuid,
xxev.EntryNum,
isnull(g.Decode, evss.StatusCode) AS EntryStatus,
xxev.BrokerID,
MAX(CONVERT(VARCHAR(10), ph.PEADate, 101)) AS ''PEADate'',  
ph.Identifier,
pd.ImporterNum,
ph.Port,
pd.ReasonCode,
pd.ReasonDescription,
1 as NoOrder
FROM txdUSEntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
ON evss.EntryGuid = xxev.EntryGuid
AND evss.PartnerID = xxev.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK)
ON evss.StatusCode = g.Code
AND evss.PartnerID = g.PartnerID
AND g.FieldName = ''EVSummaryStatus''
INNER JOIN txdPEADetail pd WITH (NOLOCK)
ON pd.EntryGuid = xxev.EntryGUID
AND xxev.PartnerID = pd.PartnerID
INNER JOIN txdPEAHeader ph WITH (NOLOCK)
ON ph.PEAGuid = pd.PEAGuid
AND ph.PartnerID = xxev.PartnerId
WHERE xxev.PartnerID = @PartnerId@
AND ph.FiledFlag = ''Y''
AND ph.PEAType = ''S''
GROUP BY 
xxev.EntryGuid,
ph.PEADate,
ph.Identifier,
pd.ImporterNum,
ph.Port,
pd.ReasonCode,
pd.ReasonDescription,
g.Decode,
evss.StatusCode,
xxev.EntryNum,
xxev.BrokerID
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-21T11:23:44.953' AS DateTime), N'Displays all PEAs that have been filed single/quarterly', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T11:44:43.247' AS DateTime), N'04693845-508e-4a7e-911c-2d4dec1d4278', N'Entry Visibility Lookup: Filed Single/Quarterly PEAs Q', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
( 	
SELECT 
xxev.EntryGuid,
xxev.EntryNum,
isnull(g.Decode, evss.StatusCode) AS EntryStatus,
xxev.BrokerID,
MAX(CONVERT(VARCHAR(10), ph.PEADate, 101)) AS ''PEADate'',  
ph.Identifier,
pd.ImporterNum,
ph.Port,
pd.ReasonCode,
pd.ReasonDescription,
1 as NoOrder
FROM txdUSEntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
ON evss.EntryGuid = xxev.EntryGuid
AND evss.PartnerID = xxev.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK)
ON evss.StatusCode = g.Code
AND evss.PartnerID = g.PartnerID
AND g.FieldName = ''EVSummaryStatus''
INNER JOIN txdPEADetail pd WITH (NOLOCK)
ON pd.EntryGuid = xxev.EntryGUID
AND xxev.PartnerID = pd.PartnerID
INNER JOIN txdPEAHeader ph WITH (NOLOCK)
ON ph.PEAGuid = pd.PEAGuid
AND ph.PartnerID = xxev.PartnerId
WHERE xxev.PartnerID = @PartnerId@
AND ph.FiledFlag = ''Y''
AND ph.PEAType = ''Q''
GROUP BY 
xxev.EntryGuid,
ph.PEADate,
ph.Identifier,
pd.ImporterNum,
ph.Port,
pd.ReasonCode,
pd.ReasonDescription,
g.Decode,
evss.StatusCode,
xxev.EntryNum,
xxev.BrokerID
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-21T11:44:43.247' AS DateTime), N'Displays all PEAs that have been filed quarterly/single', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'8ee11453-14b3-42bd-bfa8-6beff074b90d', N'FTZ Lookup: FTZ Scrap Hold', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY Effdate ASC
		) AS [RowNum]
FROM (
	SELECT CONVERT(DATE, EffDate, 101) AS EffDate
		,ProductNum
		,CAST(TxnQty AS NUMERIC(38, 4)) AS TxnQty
		,IMLot
		,PCLot
		,1 AS NoOrder
	FROM txdscraphold WITH (NOLOCK)
	WHERE PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-02-06T13:18:06.263' AS DateTime), N'All products being held in Scrap Hold and have not been released on a 216', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'91ad70af-2a67-479a-aaee-c6bae106ab2c', N'FTZ Lookup: FTZ Audit for 214 Data', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY TxnDate
			,BillOfLading
			,ProductNum
			,OrderNumReceipt ASC
		) AS [RowNum]
FROM (
	SELECT ''['' + ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.ASpx?TXN='' + cASt(fp.TxnNumGuid AS VARCHAR(50)) + ''&SOURCE=F)'' AS Edit
		,fp.ReceiptDocID AS ''214Number''
		,fph.StatusCode
		,CONVERT(DATE, fp.TxnDate, 101) AS TxnDate
		,fp.TxnCode
		,fp.OrderNumReceipt
		,fp.ProductNum
		,fp.BillOfLading
		,fp.ItNum
		,fp.ManifestQty
		,fph.HTSNum
		,fph.CountryOfOrigin
		,fph.ManufacturerID
		,fp.TransportID
		,CAST(fp.Weight AS NUMERIC(38, 4)) AS Weight
		,fp.WeightUom
		,CAST(fp.TxnQty AS NUMERIC(38, 4)) AS TxnQty
		,fp.TxnQtyUom
		,CAST(fph.Value AS NUMERIC(38, 4)) AS Value
		,fph.CurrencyCode
		,fp.RPO11
		,fp.RPO12
		,fp.RPO13
		,fph.RCO21
		,fph.RCO22
		,fph.RCO23
	FROM txdfifoprocessing fp(NOLOCK)
	LEFT JOIN txdfifoprocessinghtsvalues fph(NOLOCK) ON fp.txnnumguid = fph.txnnumguid
		AND fp.PartnerID = fph.PartnerID
	WHERE fp.txncode IN (
			''RPPC''
			,''APPC''
			,''RPIM''
			,''APIM''
			)
		AND fp.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-02-06T13:18:50.800' AS DateTime), N'214 data on Positive Receipts and Adjustments in Fifo Processing', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'e333d05e-3417-49f4-ba9d-7b8169770d86', N'FTZ Lookup: FTZ Staging Lookup', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY  TxnDate
			,ERPDate ASC
		) AS [RowNum]
FROM (
	SELECT ''['' + ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.ASpx?TXN='' + cASt(fp.TxnNumGuid AS VARCHAR(50)) + ''&SOURCE=F&TARGET=STAGING)'' AS Edit
		,CONVERT(DATE, fp.TxnDate, 101) AS TxnDate
		,CONVERT(DATE, fp.ERPDate, 101) AS ERPDate
		,fp.TxnCode
		,fp.ProductNum
		,fp.TransportID
		,fp.OrderNumReceipt
		,fp.OrderNumShip
		,fp.OrderNumWork
		,CAST(fp.TxnQty AS DECIMAL(38, 4)) AS TxnQty
		,CAST(fp.Weight AS DECIMAL(38, 4)) AS Weight
		,CAST(fph.Value AS DECIMAL(38, 4)) AS Value
		,CAST(fph.Value2 AS DECIMAL(38, 4)) AS Value2
		,fph.CountryOfOrigin
		,fph.ManufacturerID
		,fph.HTSIndex
		,fph.StatusCode
		,fp.TxnNumGuid AS ''ERP Id''
		,fp.RPO11
		,fp.RPO12
		,fp.RPO13
		,fph.RCO21
		,fph.RCO22
		,fph.RCO23
	FROM TtdstagingFIFOProcessing fp WITH (NOLOCK)
	LEFT JOIN TtdstagingFifoProcessingHtsValues fph WITH (NOLOCK) ON fp.partnerID = fph.partnerID
		AND fp.txnnumguid = fph.txnnumguid
	WHERE fp.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-06T13:31:43.947' AS DateTime), N'All Transactions in Staging Fifo Processing', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'367fbced-32de-439d-bb7f-60c255aad841', N'FTZ Lookup: FTZ Pending Shipments', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY EffDate asc ) AS [RowNum] FROM (  

SELECT 
CONVERT(date, EffDate, 101) AS EffDate , 
ExitDocID , 
OrderNumShip , 
OrderNumWork , 
ProductNum ,   
CountryShipTo , 
TxnCode , 
CAST(TxnQty AS NUMERIC (38,20)) AS TxnQty    
FROM txdpendingim WITH (NOLOCK)    
WHERE PartnerID=(select PartnerID from tmfDefaults  with (NOLOCK))    

UNION All    

SELECT 
CONVERT(date, EffDate, 101) AS EffDate ,  
ExitDocID , 
OrderNumShip , 
OrderNumWork , 
ProductNum , 
CountryShipTo , 
TxnCode , 
TxnQty    
FROM txdpendingPC  with (NOLOCK)

WHERE PartnerID=(select PartnerID from tmfDefaults  with (NOLOCK)) 

) AS LookupViewInner WHERE @whereclause', CAST(N'2018-04-03T15:07:47.170' AS DateTime), N'Shipments that are pending due to lack of inventory', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'691c83f4-2026-4a59-af7f-27fcfed6f43b', N'FTZ Lookup: FTZ Validation Summary', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY ValidationDesc ASC
		) AS [RowNum]
FROM (
	SELECT ValidationDesc
		,COUNT(*) AS TxnsAffected
	FROM txdvalidationwarnings
	WHERE validationdesc <> ''''
		AND PartnerID = (
			SELECT PartnerID
			FROM tmfdefaults
			)
	GROUP BY ValidationDesc
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-06T13:36:09.547' AS DateTime), N'Summary of the Count of All Validation Warnings and Errors', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-14T15:51:01.637' AS DateTime), N'8dcd158e-1fab-49c6-a620-aa66fe5388a5', N'Classification Lookup: CI - AU HS Rates', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(		
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
											xxpc.ProductNum,  
											xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
											CIRates.Rate,
											CIRates.CountryOfOrigin,
											1 AS NoOrder
										from tmdAUProductClassification xxpc WITH (NOLOCK) 
										join vid_CI_AU_Rates CIRates  WITH (NOLOCK) on  
											xxpc.ProductGuid = CIRates.ProductGuid and
											xxpc.PartnerID = CIRates.PartnerID
										WHERE
											xxpc.PartnerID = @PartnerID@
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-14T15:51:01.637' AS DateTime), N'Displays the tariff rates associated with the products in the Australian  Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-17T17:35:02.300' AS DateTime), N'81e0cc1a-db86-49e5-8f22-04f7cd80d36e', N'Classification Lookup: CI - CA HS Rates', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum] FROM ( select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
xxpc.ProductNum, xxpc.ProductDesc, ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum, 
CIRates.Rate, CIRates.CountryOfOrigin, 1 AS NoOrder from tmdCAProductClassification xxpc WITH (NOLOCK) join vid_CI_CA_Rates CIRates WITH (NOLOCK) on xxpc.ProductGuid = CIRates.ProductGuid and xxpc.PartnerID = CIRates.PartnerID WHERE xxpc.PartnerID = @PartnerID@ ) AS LookupViewInner WHERE @whereclause@', CAST(N'2014-11-17T17:35:02.300' AS DateTime), N'Displays the tariff rates associated with the products in the Canadian  Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-17T17:35:24.517' AS DateTime), N'c214ec30-fec9-452a-b74a-68e44f4be120', N'Classification Lookup: CI - CN HS Rates', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum] FROM ( select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
xxpc.ProductNum, xxpc.ProductDesc, ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum, 
CIRates.Rate, CIRates.CountryOfOrigin, 1 AS NoOrder from tmdCNProductClassification xxpc WITH (NOLOCK) join vid_CI_CN_Rates CIRates WITH (NOLOCK) on xxpc.ProductGuid = CIRates.ProductGuid and xxpc.PartnerID = CIRates.PartnerID WHERE xxpc.PartnerID = @PartnerID@ ) AS LookupViewInner WHERE @whereclause@', CAST(N'2014-11-17T17:35:24.517' AS DateTime), N'Displays the tariff rates associated with the products in the Chinese  Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-17T17:35:48.853' AS DateTime), N'34991a11-342e-43b7-bc7d-794c765580a1', N'Classification Lookup: CI - DE HS Rates', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum] FROM ( select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
xxpc.ProductNum, xxpc.ProductDesc, ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum, 
CIRates.Rate, CIRates.CountryOfOrigin, 1 AS NoOrder from tmdDEProductClassification xxpc WITH (NOLOCK) join vid_CI_DE_Rates CIRates WITH (NOLOCK) on xxpc.ProductGuid = CIRates.ProductGuid and xxpc.PartnerID = CIRates.PartnerID WHERE xxpc.PartnerID = @PartnerID@ ) AS LookupViewInner WHERE @whereclause@', CAST(N'2014-11-17T17:35:48.853' AS DateTime), N'Displays the tariff rates associated with the products in the German Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-17T17:36:10.630' AS DateTime), N'62e0aa62-73db-4d1a-8528-cc3d78661959', N'Classification Lookup: CI - IN HS Rates', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum] FROM ( select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
xxpc.ProductNum, xxpc.ProductDesc, ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum, 
CIRates.Rate, CIRates.CountryOfOrigin, 1 AS NoOrder from tmdINProductClassification xxpc WITH (NOLOCK) join vid_CI_IN_Rates CIRates WITH (NOLOCK) on xxpc.ProductGuid = CIRates.ProductGuid and xxpc.PartnerID = CIRates.PartnerID WHERE xxpc.PartnerID = @PartnerID@ ) AS LookupViewInner WHERE @whereclause@', CAST(N'2014-11-17T17:36:10.630' AS DateTime), N'Displays the tariff rates associated with the products in the Indian Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-17T17:36:33.273' AS DateTime), N'ef5c651c-eed4-46ac-ab2f-a210ecf7f31d', N'Classification Lookup: CI - MX HS Rates', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum] FROM ( select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
xxpc.ProductNum, xxpc.ProductDesc, ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum, 
CIRates.Rate, CIRates.CountryOfOrigin, 1 AS NoOrder from tmdMXProductClassification xxpc WITH (NOLOCK) join vid_CI_MX_Rates CIRates WITH (NOLOCK) on xxpc.ProductGuid = CIRates.ProductGuid and xxpc.PartnerID = CIRates.PartnerID WHERE xxpc.PartnerID = @PartnerID@ ) AS LookupViewInner WHERE @whereclause@', CAST(N'2014-11-17T17:36:33.273' AS DateTime), N'Displays the tariff rates associated with the products in the Mexican Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-17T17:36:53.210' AS DateTime), N'948640e7-93b5-4c8f-a04a-8543a00d0425', N'Classification Lookup: CI - NZ HS Rates', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum] FROM ( select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
xxpc.ProductNum, xxpc.ProductDesc, ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum, 
CIRates.Rate, CIRates.CountryOfOrigin, 1 AS NoOrder from tmdNZProductClassification xxpc WITH (NOLOCK) join vid_CI_NZ_Rates CIRates WITH (NOLOCK) on xxpc.ProductGuid = CIRates.ProductGuid and xxpc.PartnerID = CIRates.PartnerID WHERE xxpc.PartnerID = @PartnerID@ ) AS LookupViewInner WHERE @whereclause@', CAST(N'2014-11-17T17:36:53.210' AS DateTime), N'Displays the tariff rates associated with the products in the New Zealand Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-17T17:37:24.967' AS DateTime), N'98bf81e1-e2f1-4099-affa-18a17e982af4', N'Classification Lookup: CI - GB HS Rates', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum] FROM ( select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
xxpc.ProductNum, xxpc.ProductDesc, ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum, 
 CIRates.Rate, CIRates.CountryOfOrigin, 1 AS NoOrder from tmdGBProductClassification xxpc WITH (NOLOCK) join vid_CI_GB_Rates CIRates WITH (NOLOCK) on xxpc.ProductGuid = CIRates.ProductGuid and xxpc.PartnerID = CIRates.PartnerID WHERE xxpc.PartnerID = @PartnerID@ ) AS LookupViewInner WHERE @whereclause@', CAST(N'2014-11-17T17:37:24.967' AS DateTime), N'Displays the tariff rates associated with the products in the Great Britain Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:12:41.957' AS DateTime), N'60d86aa2-d3b3-492c-accf-a1ff2573094d', N'Classification Lookup: CI - US HS Descriptions', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(		
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
											 
											xxpc.ProductNum,  
											xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
											CIDesc.LongDescription,
											CIDesc.ShortDescription,
											1 AS NoOrder
										from tmdUSProductClassification xxpc WITH (NOLOCK) 
										join vid_CI_US_Descriptions CIDesc  WITH (NOLOCK) on  
											xxpc.ProductGuid = CIDesc.ProductGuid and
											xxpc.PartnerID = CIDesc.PartnerID
										WHERE
											xxpc.PartnerID = @PartnerID@
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:12:41.957' AS DateTime), N'Displays the US description for products in the US Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:16:36.697' AS DateTime), N'8c8e953d-c40f-4bbf-9340-49a52fa709ef', N'Classification Lookup: CI - AU HS Descriptions', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(		
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
											
											xxpc.ProductNum,  
											xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
											CIDesc.LongDescription,
											CIDesc.ShortDescription,
											1 AS NoOrder
										from tmdAUProductClassification xxpc WITH (NOLOCK) 
										join vid_CI_AU_Descriptions CIDesc  WITH (NOLOCK) on  
											xxpc.ProductGuid = CIDesc.ProductGuid and
											xxpc.PartnerID = CIDesc.PartnerID
										WHERE
											xxpc.PartnerID = @PartnerID@
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:16:36.697' AS DateTime), N'Displays the Australian description for products in the Australian Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:16:56.750' AS DateTime), N'0371f2cb-19dd-4c88-be8e-4bfa1839d194', N'Classification Lookup: CI - CA HS Descriptions', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(		
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
											
											xxpc.ProductNum,  
											xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
											CIDesc.LongDescription,
											CIDesc.ShortDescription,
											1 AS NoOrder
										from tmdCAProductClassification xxpc WITH (NOLOCK) 
										join vid_CI_CA_Descriptions CIDesc  WITH (NOLOCK) on  
											xxpc.ProductGuid = CIDesc.ProductGuid and
											xxpc.PartnerID = CIDesc.PartnerID
										WHERE
											xxpc.PartnerID = @PartnerID@
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:16:56.750' AS DateTime), N'Displays the Canadian description for products in the Canadian Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:17:17.530' AS DateTime), N'd901d402-c4a0-489b-a9c2-8cfe5f437dbf', N'Classification Lookup: CI - CN HS Descriptions', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(		
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
											 
											xxpc.ProductNum,  
											xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
											CIDesc.LongDescription,
											CIDesc.ShortDescription,
											1 AS NoOrder
										from tmdCNProductClassification xxpc WITH (NOLOCK) 
										join vid_CI_CN_Descriptions CIDesc  WITH (NOLOCK) on  
											xxpc.ProductGuid = CIDesc.ProductGuid and
											xxpc.PartnerID = CIDesc.PartnerID
										WHERE
											xxpc.PartnerID = @PartnerID@
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:17:17.530' AS DateTime), N'Displays the Chinese description for products in the Chinese Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:17:37.990' AS DateTime), N'11562be3-8531-48a8-b333-a5c06923daeb', N'Classification Lookup: CI - DE HS Descriptions', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(		
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
											
											xxpc.ProductNum,  
											xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
											CIDesc.LongDescription,
											CIDesc.ShortDescription,
											1 AS NoOrder
										from tmdDEProductClassification xxpc WITH (NOLOCK) 
										join vid_CI_DE_Descriptions CIDesc  WITH (NOLOCK) on  
											xxpc.ProductGuid = CIDesc.ProductGuid and
											xxpc.PartnerID = CIDesc.PartnerID
										WHERE
											xxpc.PartnerID = @PartnerID@
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:17:37.990' AS DateTime), N'Displays the German description for products in the German Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:18:02.377' AS DateTime), N'fe5b3c76-2b1d-4c53-b1eb-d2fb65820a86', N'Classification Lookup: CI - IN HS Descriptions', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(		
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
											  
											xxpc.ProductNum,  
											xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
											CIDesc.LongDescription,
											CIDesc.ShortDescription,
											1 AS NoOrder
										from tmdINProductClassification xxpc WITH (NOLOCK) 
										join vid_CI_IN_Descriptions CIDesc  WITH (NOLOCK) on  
											xxpc.ProductGuid = CIDesc.ProductGuid and
											xxpc.PartnerID = CIDesc.PartnerID
										WHERE
											xxpc.PartnerID = @PartnerID@
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:18:02.377' AS DateTime), N'Displays the Indian description for products in the Indian Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:18:22.143' AS DateTime), N'8ab1d580-f691-4c44-a0d2-614d618beb99', N'Classification Lookup: CI - MX HS Descriptions', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(		
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
											
											xxpc.ProductNum,  
											xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
											CIDesc.LongDescription,
											CIDesc.ShortDescription,
											1 AS NoOrder
										from tmdMXProductClassification xxpc WITH (NOLOCK) 
										join vid_CI_MX_Descriptions CIDesc  WITH (NOLOCK) on  
											xxpc.ProductGuid = CIDesc.ProductGuid and
											xxpc.PartnerID = CIDesc.PartnerID
										WHERE
											xxpc.PartnerID = @PartnerID@
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:18:22.143' AS DateTime), N'Displays the Mexican description for products in the Mexican Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:18:43.967' AS DateTime), N'61c72631-5593-492e-98d2-d3e22aa9b0cc', N'Classification Lookup: CI - NZ HS Descriptions', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(		
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
											
											xxpc.ProductNum,  
											xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
											CIDesc.LongDescription,
											CIDesc.ShortDescription,
											1 AS NoOrder
										from tmdNZProductClassification xxpc WITH (NOLOCK) 
										join vid_CI_NZ_Descriptions CIDesc  WITH (NOLOCK) on  
											xxpc.ProductGuid = CIDesc.ProductGuid and
											xxpc.PartnerID = CIDesc.PartnerID
										WHERE
											xxpc.PartnerID = @PartnerID@
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:18:43.967' AS DateTime), N'Displays the New Zealand description for products in the New Zealand Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:19:07.507' AS DateTime), N'eb8f1075-4524-4a2b-abd5-488d21cff08e', N'Classification Lookup: CI - GB HS Descriptions', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(		
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
											  
											xxpc.ProductNum,  
											xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
											CIDesc.LongDescription,
											CIDesc.ShortDescription,
											1 AS NoOrder
										from tmdGBProductClassification xxpc WITH (NOLOCK) 
										join vid_CI_GB_Descriptions CIDesc  WITH (NOLOCK) on  
											xxpc.ProductGuid = CIDesc.ProductGuid and
											xxpc.PartnerID = CIDesc.PartnerID
										WHERE
											xxpc.PartnerID = @PartnerID@
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:19:07.507' AS DateTime), N'Displays the Great Britain description for products in the Great Britain Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'c673291e-9d69-4138-ba3b-c41141f043d8', N'FTZ Lookup: FTZ Missing Manifest Data Detail', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY Man_ITDate
			,Man_ExportDate
			,Man_ImportDate ASC
		) AS [RowNum]
FROM (
	SELECT ''['' + ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.aspx?TXN='' + cast(fp.TxnNumGuid AS VARCHAR(50)) + ''&SOURCE=F)'' AS Edit
		,CASE 
			WHEN ma.MasterBillOfLading IS NULL
				THEN ''N''
			ELSE ''Y''
			END AS ManifestPresent
		,fp.TransportID AS Fifo_TransportID
		,IsNull(ma.MasterBillOfLading, '''') AS Man_MasterBillOfLading
		,IsNull(ma.HouseBillOfLading, '''') AS Man_HouseBillOfLading
		,IsNull(ma.ITNum, '''') AS Man_ITNum
		,CONVERT(DATE, (IsNull(ma.ITDate, ''1/1/1900'')), 101) AS Man_ITDate
		,IsNull(ma.ITFromPort, '''') AS Man_ITFromPort
		,IsNull(ma.VesselName, '''') AS Man_VesselName
		,IsNull(ma.ModeOfTransport, '''') AS Man_ModeOfTransport
		,CONVERT(DATE, (IsNull(ma.ExportDate, ''1/1/1900'')), 101) AS Man_ExportDate
		,CONVERT(DATE, (IsNull(ma.ImportDate, ''1/1/1900'')), 101) AS Man_ImportDate
		,IsNull(ma.FrgnPortOfLading, '''') AS Man_FrgnPortOfLading
		,IsNull(ma.USPortOfUnLading, '''') AS Man_USPortOfUnLading
		,IsNull(ma.InbondCarrier, '''') Man_InbondCarrier
		,IsNull(ma.manifestQty, 0) Man_manifestQty
		,IsNull(ma.ModeOfTransportDetail, '''') Man_ModeOfTransportDetail
		,IsNull(ma.SCACCode, '''') Man_SCACCode
		,IsNull(ma.TransportNum, '''') Man_TransportNum
		,IsNull(ma.ExportCountryCode, '''') Man_ExportCountryCode
		,fp.RPO11
		,fp.RPO12
		,fp.RPO13
		,fph.RCO21
		,fph.RCO22
		,fph.RCO23
	FROM txdFifoProcessing fp WITH (NOLOCK)
	JOIN txdFifoProcessingHtsValues fph WITH (NOLOCK) ON fp.partnerID = fph.PartnerID
		AND fp.TxnNumGUID = fph.TxnNumGUID
	LEFT JOIN txdManifestAssignment ma WITH (NOLOCK) ON fp.TransportID = ma.TransportID
		AND fp.PartnerID = ma.PartnerID
	WHERE fp.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
		AND fp.TxnCode IN (
			''RPPC''
			,''APPC''
			)
		AND fph.StatusCode <> ''D''
		AND fp.TransportID <> ''UpdateToForeignValue''
		AND (
			ma.MasterBillOfLading = ''''
			OR ma.MasterBillOfLading IS NULL
			OR ma.ITFromPort = ''''
			OR ma.VesselName = ''''
			OR ma.ModeOfTransport = ''''
			OR ma.ExportDate = ''1/1/1900''
			OR ma.ImportDate = ''1/1/1900''
			OR ma.FrgnPortOfLading = ''''
			OR ma.USPortOfUnLading = ''''
			OR ma.InbondCarrier = ''''
			OR ma.manifestQty = 0
			OR ma.ModeOfTransportDetail = ''''
			OR ma.SCACCode = ''''
			OR ma.TransportNum = ''''
			OR ma.ExportCountryCode = ''''
			)
		AND fp.AssignmentFlag <> ''Y''
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-06T13:19:45.253' AS DateTime), N'Receipts in Fifo Processing that are missing associated manifest data', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'38e707b1-d184-407a-b9a7-87846f18130d', N'FTZ Lookup: FTZ Inventory Balance Recon Errors', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY ValidationDesc ASC
		) AS [RowNum]
FROM (
	SELECT ''['' + ''Edit'' + '']'' + ''(/INTERFACES/fxdEditInvBalRecon.aspx?PROD='' + cast(inv.ProductNum AS VARCHAR(50)) + ''&SOURCE=0'' + ''&TXN=)'' AS Edit
		,v.ValidationDesc
		,inv.ProductNum
		,inv.ProductDesc
		,CAST(inv.TxnQty AS NUMERIC(38, 4)) AS TxnQty
		,inv.TxnQtyUom
		,v.ValidationCode
	FROM txdInvBalRecon inv WITH (NOLOCK)
	JOIN txdValidationWarnings v WITH (NOLOCK) ON inv.PartnerID = v.PartnerID
		AND inv.ProductNum = v.ProductNum
	WHERE v.TableName = ''txdInvBalRecon''
		AND inv.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-06T13:35:22.827' AS DateTime), N'InvBalRecon Validation Error Details', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'fc155897-eb3e-47ef-a60d-d6a78ae2e172', N'FTZ Lookup: FTZ FIFO Errors', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY ReceiptDate
			,ExportDate
			,ERPDate ASC
		) AS [RowNum]
FROM (
	SELECT ''['' + ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.aspx?TXN='' + cast(f.TxnNumGuid AS VARCHAR(50)) + '')'' AS Edit
		,v.ValidationDesc
		,f.ProductNum
		,f.ProductDesc
		,f.TxnCode
		,f.OrderNumReceipt
		,f.OrderNumWork
		,f.OrderNumShip
		,f.ProductTypeCode
		,f.NaftaCertified
		,f.Txnqty
		,f.TxnQtyUom
		,f.QtyPerIm
		,CAST(f.Weight AS NUMERIC(38, 4)) AS Weight
		,f.WeightUom
		,f.CountryShipTo
		,f.TransportID
		,f.ReceiptDocID
		,f.ExitDocID
		,f.AdjReceiptDocID
		,f.AdjProductNum
		,f.FromZoneID
		,f.ToZoneID
		,f.ModeOfTransport
		,CONVERT(DATE, f.ReceiptDate, 101) AS ReceiptDate
		,f.ItNum
		,f.BillOfLading
		,CONVERT(DATE, f.ExportDate, 101) AS ExportDate
		,f.ManifestQty
		,f.ValidFlag
		,f.AssignmentFlag
		,f.FifoFlag
		,CONVERT(DATE, f.ERPDate, 101) AS ERPDate
		,f.ReceiptSupplement
		,f.RPO11
		,f.RPO12
		,f.RPO13
		,h.HtsNum
		,h.HtsIndex
		,h.ManufacturerID
		,h.CountryOfOrigin
		,h.StatusCode
		,h.SpiCode1
		,h.SpiCode2
		,CAST(h.Value AS NUMERIC(38, 4)) AS Value
		,CAST(h.Value2 AS NUMERIC(38, 4)) AS Value2
		,h.RelationshipFlag
		,h.HtsDesc
		,h.HtsNum2
		,h.CurrencyCode
		,h.AltCurrencyCode
		,h.AdValoremRate
		,h.SpecificRate
		,h.HtsUomConvFactor
		,h.AddlHtsUomConvFactor
		,h.RptQtyUom
		,h.AddlRptQtyUom
		,h.DOTIndicator
		,h.FCCIndicator
		,h.FDAIndicator
		,h.AddlSpecificRate
		,h.ADDutyRate
		,h.ADCaseNumber
		,h.CVDutyRate
		,h.CVCaseNumber
		,CAST(h.AltValue AS NUMERIC(38, 4)) AS AltValue
		,CAST(h.AltValue2 AS NUMERIC(38, 4)) AS AltValue2
		,h.RCO21
		,h.RCO22
		,h.RCO23
		,v.ValidationCode
	FROM txdFifoProcessing f WITH (NOLOCK)
	JOIN txdFifoProcessingHtsValues h WITH (NOLOCK) ON f.PartnerID = h.PartnerID
		AND f.TxnNumGUID = h.TxnNumGUID
	JOIN txdValidationWarnings v WITH (NOLOCK) ON f.PartnerID = v.PartnerID
		AND f.TxnNumGuid = v.TxnNumGuid
	WHERE v.TableName = ''txdFifoProcessing''
		AND f.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-06T13:38:34.460' AS DateTime), N'FIFO Validation Error Details', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'c601b560-32a0-4199-b3e7-c5d665434e09', N'FTZ Lookup: FTZ Production Lookup', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY TxnDate, ERPDate asc ) AS [RowNum] FROM (  SELECT ''['' + ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.ASpx?TXN='' + cASt(fp.TxnNumGuid AS VARCHAR(50)) + ''&SOURCE=F&TARGET=PRODUCTION)'' AS Edit   ,CONVERT(DATE, fp.TxnDate, 101) AS TxnDate   ,CONVERT(DATE, fp.ERPDate, 101) AS ERPDate   ,fp.TxnCode   ,fp.ProductNum   ,fp.TransportID   ,fp.OrderNumReceipt   ,fp.OrderNumShip   ,fp.OrderNumWork   ,CAST(fp.TxnQty AS DECIMAL(38, 4)) AS TxnQty   ,CAST(fp.Weight AS DECIMAL(38, 4)) AS Weight   ,CAST(fph.Value AS DECIMAL(38, 4)) AS Value   ,CAST(fph.Value2 AS DECIMAL(38, 4)) AS Value2   ,fph.CountryOfOrigin   ,fph.ManufacturerID   ,fph.HTSIndex   ,fph.StatusCode   ,fp.TxnNumGuid AS ''ERP Id''   ,fp.RPO11   ,fp.RPO12   ,fp.RPO13   ,fph.RCO21   ,fph.RCO22   ,fph.RCO23  FROM txdFifoProcessing fp WITH (NOLOCK)  LEFT JOIN txdFifoProcessingHtsValues fph WITH (NOLOCK) ON fp.partnerID = fph.partnerID   AND fp.txnnumguid = fph.txnnumguid  WHERE fp.PartnerID = (    SELECT PartnerID    FROM tmfDefaults    )  ) AS LookupViewInner WHERE @whereclause@', CAST(N'1900-01-01T00:00:00.000' AS DateTime), N'All transactions in Fifo Processing', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'b2391a74-4aed-4513-be54-dcad0b56a2cb', N'FTZ Lookup: FTZ Staging ProductNumChange and Scrap Transactions', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY TxnDate
			,ERPDate ASC
		) AS [RowNum]
FROM (
	SELECT ''['' + ''Edit'' + '']'' + ''(/INTERFACES/fxdEditFifoProcessing.aspx?TXN='' + CAST(fp.TxnNumGuid AS VARCHAR(50)) + ''&SOURCE=F&TARGET=STAGING)'' AS Edit
		,CONVERT(DATE, fp.TxnDate, 101) AS TxnDate
		,CONVERT(DATE, fp.ERPDate, 101) AS ERPDate
		,fp.TxnCode
		,fp.TransportID
		,CASE 
			WHEN fp.TxnCode IN (
					''CPPC''
					,''XPPC''
					,''XPIM''
					)
				THEN fp.OrderNumReceipt
			ELSE fp.OrderNumShip
			END AS OrderNum
		,fp.ProductNum
		,fp.AdjProductNum
		,CAST(fp.TxnQty AS NUMERIC(38, 4)) AS TxnQty
		,CAST(fp.Weight AS NUMERIC(38, 4)) AS Weight
		,CAST(fph.Value AS NUMERIC(38, 4)) AS Value
		,CAST(fph.Value2 AS NUMERIC(38, 4)) AS Value2
		,fph.CountryOfOrigin
		,fph.ManufacturerID
		,fph.HTSIndex
		,fph.HtsNum
		,fph.HtsNum2
		,fph.StatusCode
		,fp.TxnNumGuid AS ERPId
		,fp.RPO11
		,fp.RPO12
		,fp.RPO13
		,fph.RCO21
		,fph.RCO22
		,fph.RCO23
		,1 AS NoOrder
	FROM ttdstagingFifoProcessing fp WITH (NOLOCK)
	JOIN ttdstagingFifoProcessingHtsValues fph ON fp.partnerID = fph.partnerID
		AND fp.txnnumguid = fph.txnnumguid
	WHERE fp.txncode IN (
			''CNPC''
			,''CPPC''
			,''XPPC''
			,''XPIM''
			,''XNPC''
			,''XNIM''
			)
		AND fp.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-06T13:31:10.357' AS DateTime), N'Product Number Change and Scrap Transactions in Staging Fifo Processing', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-08T14:22:02.013' AS DateTime), N'704a868c-d986-4d6e-890a-87423deebb5a', N'Export Lookup: Finalized Shipments', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip,
		eh.ShipDate,
		eh.LastProcessedDate,
		eh.ImportCountry,
		ep.UltimateConsigneeCompanyName,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK)
	JOIN txdExportParties ep (NOLOCK)
		ON eh.ExportGUID = ep.ExportGUID
		AND eh.PartnerID = ep.PartnerID
	WHERE eh.FinalizedFlag = ''Y''
		AND eh.PartnerID = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2013-08-08T14:22:02.013' AS DateTime), N'Displays the shipments that have been finalized.  ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-08T14:22:59.260' AS DateTime), N'a6d94094-4aec-4394-aada-d9b8ee5e1990', N'Export Lookup: Exports Missing Product Numbers', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@ ) AS [RowNum]
FROM    
	( 
	SELECT 
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		eh.ExportCountry, 
		eh.ImportCountry, 
		eh.HoldFlag, 
		ed.ProductNum, 
		ed.ProductDesc,
		1 AS NoOrder
	FROM txdExportHeader eh with (nolock)
	JOIN txdExportDetail ed with (nolock)
		  ON eh.ExportGUID = ed.ExportGUID
		  AND eh.PartnerID = ed.PartnerID
	WHERE eh.RecordType = ''E''
		  AND ed.ProductNum = ''''
		  AND ed.PartnerID = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2018-02-16T06:46:33.010' AS DateTime), N'Displays all of the products that are missing product numbers.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-08T14:24:16.937' AS DateTime), N'6754f933-0d24-4c59-90e2-535bd72db918', N'Export Lookup: Exports With License Required', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@ ) AS [RowNum]
FROM    
	( 
	SELECT 
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		eh.Status, 
		ed.ProductNum, 
		ed.Productdesc, 
		ed.ECNNum, 
		ed.DDTCUSMLCategory, 
		ed.LicenseRequired, 
		ed.LicenseNum,
		1 AS NoOrder
	FROM txdExportHeader eh with (nolock)
	JOIN txdExportDetail ed with (nolock)
		ON eh.ExportGuid = ed.ExportGuid
		AND eh.PartnerID = ed.PartnerID
	WHERE ed.LicenseRequired = ''Y''
		AND eh.recordtype = ''E''
		AND eh.partnerid = @PartnerID
	) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2018-02-16T07:32:07.100' AS DateTime), N'Displays all of the shipments which require licensing.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-08T14:25:09.853' AS DateTime), N'c14dd075-8951-4bd9-b98c-bfefff83f426', N'Export Lookup: Exports With Denied Parties', N'SELECT * ,    ROW_NUMBER() OVER (ORDER BY @orderby@, OrderNumShip) AS [RowNum]
            FROM 
	( 
	SELECT 
	''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE=E&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
	eh.OrderNumShip, 
	em.Message AS HoldReason,
	1 as NoOrder
	FROM txdExportHeader eh with (nolock)
	JOIN txdExportSystemMessages em with (nolock)
		ON eh.ExportGuid = em.ExportGuid
		AND eh.PartnerID = em.PartnerID
	where em.MessageType = ''DPS''
		AND eh.recordtype = ''E''
		AND eh.partnerid = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2018-02-16T07:38:57.593' AS DateTime), N'Displays shipments that have a denied party associated to them.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-08T14:26:03.773' AS DateTime), N'2b07e450-c321-4a80-82b9-712defa584a5', N'Export Lookup: All Hold Messages', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, ordernumship desc ) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
	''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
	eh.OrderNumShip, 
	em.Message AS HoldReason,
	1 AS NoOrder
	FROM txdExportHeader eh with (nolock)
	JOIN txdExportSystemMessages em with (nolock)
		ON eh.ExportGuid = em.ExportGuid
		AND eh.PartnerID = em.PartnerID
	WHERE em.HoldFlag = ''Y''
		AND eh.recordtype = ''E''
		AND eh.partnerid = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2018-02-16T07:36:11.767' AS DateTime), N'Displays all of the shipments which have hold messages assigned to them.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-08T14:27:08.520' AS DateTime), N'ac9a627a-ff70-4d2e-9b31-174b1135f794', N'Export Lookup: All Shipments on Hold', N'SELECT * , 
ROW_NUMBER() OVER ( ORDER BY @orderby@, OrderNumShip ) AS [RowNum]
FROM (
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST (eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		ISNULL(g.Decode, '''') as Status,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdExportParties ep (NOLOCK) 
		ON eh.ExportGUID = ep.ExportGUID
		AND eh.PartnerID = ep.PartnerID
	LEFT JOIN tmgglobalcodes g (nolock)
		ON g.partnerid = eh.partnerid
		AND g.code = eh.status
		AND g.fieldname = ''EXPORTSTATUS''
	WHERE
		EXISTS (SELECT ExportGuid FROM txdExportSystemMessages with (nolock)
                 WHERE ExportGuid = eh.ExportGuid AND HoldFlag = ''Y'')
		AND eh.Status = ''H''
		AND eh.recordtype = ''E''
		AND eh.partnerid = @PartnerID
) AS LookupViewInner
WHERE 
	@whereclause@', CAST(N'2018-02-16T07:01:05.657' AS DateTime), N'Displays all of the Shipements that are currently on Hold.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-08T14:28:10.773' AS DateTime), N'96766873-6ac1-4dd4-87d2-1ebdc5b59036', N'Export Lookup: Shipments With non-EAR99 Products', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT 
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		eh.Status, 
		ed.ProductNum, 
		ed.Productdesc, 
		ed.ECNNum, 
		ed.DDTCUSMLCategory, 
		ed.LicenseRequired, 
		ed.LicenseNum,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdExportDetail ed (NOLOCK) 
		ON eh.ExportGuid = ed.ExportGuid
		AND eh.PartnerID = ed.PartnerID
	WHERE ed.ECNNum NOT IN ('''', ''EAR99'')
		AND eh.recordtype = ''E''
		AND eh.partnerid = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2013-08-08T14:28:10.773' AS DateTime), N'Displays all of the shipments which do not contain items categorized under EAR99.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2013-08-08T14:28:59.933' AS DateTime), N'd4edbafe-6d89-4268-b764-94b14ec1e7a3', N'Export Lookup: Hold Message Counts', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, Count DESC ) AS [RowNum]
FROM    
	( 
	SELECT
		em.Message AS HoldReason, 
		COUNT(em.Message) AS Count,
		1 as NoOrder
	FROM txdExportHeader eh with (nolock)
	JOIN txdExportSystemMessages em with (nolock)
		ON eh.ExportGuid = em.ExportGuid
		AND eh.PartnerID = em.PartnerID
	WHERE em.HoldFlag = ''Y''
		AND eh.recordtype = ''E''
		AND eh.partnerid = @PartnerID
	GROUP BY em.Message
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2018-02-16T07:37:40.720' AS DateTime), N'Displays the number of times that a hold has been issued and the reason why it was issued.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:48:41.400' AS DateTime), N'ff1c36ee-fa59-4879-be7e-dadf09f247e8', N'Export Lookup: Shipments With Related Ultimate Consignee', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		ISNULL(g.Decode, eh.Status) as Status,
		ep.UltimateConsigneeID,
		ep.UltimateConsigneeCompanyName,
		ep.UltimateConsigneeCity,
		ep.UltimateConsigneeState,
		comp.RelationshipDetail,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdExportParties ep (NOLOCK) 
		ON eh.ExportGUID = ep.ExportGUID
		AND eh.PartnerID = ep.PartnerID
	JOIN tmgCompany comp (NOLOCK) 
		ON ep.UltimateConsigneeID = comp.CompanyID
		AND ep.PartnerID = comp.PartnerID
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.partnerid = eh.partnerid
		AND g.code = eh.status
		AND g.fieldname = ''EXPORTSTATUS''
	WHERE comp.RelationshipDetail <> ''''
		AND eh.recordtype = ''E''
		AND eh.partnerid = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T18:48:41.400' AS DateTime), N'Displays the shipments with an ultimate consignee who has an indicated relationship to the client.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:52:27.183' AS DateTime), N'3b5f7a82-97c6-42cb-af83-90ae77dad245', N'Export Lookup: Request to Ship Date KPI', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		ISNULL(g.Decode, eh.Status) AS Status,
		eh.RequestedDate,
		eh.ShipDate,
		DATEDIFF(DAY, eh.RequestedDate, eh.ShipDate) AS RequestToShipDays,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdExportParties ep (NOLOCK) 
		ON eh.ExportGUID = ep.ExportGUID
		AND eh.PartnerID = ep.PartnerID
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.recordtype = ''E''
		AND eh.partnerid = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T18:52:27.183' AS DateTime), N'Displays all shipments along with differences between the requested date and the ship date.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:55:21.447' AS DateTime), N'69a8f10e-78e3-4087-9834-654adc7f5642', N'Export Lookup: Denied Parties Hold', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@ ) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		eh.OrderNum,
		ISNULL(g.Decode, eh.Status) AS Status,
		em.Message AS HoldReason,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.fieldname = ''EXPORTSTATUS''
	JOIN txdExportSystemMessages em (NOLOCK) 
		ON eh.ExportGuid = em.ExportGuid 
		AND eh.PartnerID = em.PartnerID 
		AND em.MessageType = ''DPS''
	WHERE
		eh.Status = ''H''
		AND eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T18:55:21.447' AS DateTime), N'Displays all of the shipments that have been put on hold.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:57:14.670' AS DateTime), N'd6be8e80-99a5-4506-a748-dbd2c9331fdf', N'Export Lookup: Missing Export Tariff #', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		eh.OrderNum,
		ISNULL(g.Decode, eh.Status) AS Status,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	where eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID
		AND EXISTS(SELECT 1 FROM txdExportDetail ED (NOLOCK) 
						WHERE ed.ExportGUID = eh.ExportGUID
						AND ED.PartnerID = eh.PartnerID 
						AND ED.ExportTariffNum = ''''	
					)
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T18:57:14.670' AS DateTime), N'Displays the shipments that have detail lines missing an export tariff number.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:58:27.070' AS DateTime), N'93beabb3-bed0-438a-8518-4ddf06f527ea', N'Export Lookup: Missing ECCN', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		eh.OrderNum,
		ISNULL(g.Decode, eh.Status) AS Status,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	LEFT JOIN tmgGlobalCodes g WITH (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.RecordType = ''E''
	AND eh.PartnerID = @PartnerID
	AND EXISTS(SELECT 1 FROM txdExportDetail ED (NOLOCK)
					WHERE ed.ExportGUID = eh.ExportGUID
					AND ED.PartnerID = eh.PartnerID 
					AND ED.ECNNum  = ''''	
				)
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T18:58:27.070' AS DateTime), N'Displays the shipments that have detail lines missing an ECN number.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T11:57:54.760' AS DateTime), N'037161e4-9417-41e2-ab2b-dcd2694b7502', N'Classification Lookup: CI - CA Antidumping', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdCAProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_CA_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''ANTIDUMP'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T11:57:54.760' AS DateTime), N'Displays product information for CA products  where the ADCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T11:59:06.700' AS DateTime), N'd382e037-d89e-4d24-99b2-fbb62c95aaa6', N'Classification Lookup: CI - AU Antidumping', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										 
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdAUProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_AU_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''ANTIDUMP'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T11:59:06.700' AS DateTime), N'Displays product information for AU products  where the ADCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T11:59:29.147' AS DateTime), N'eed9312b-ce66-461b-ac57-07a2b97a7493', N'Classification Lookup: CI - CN Antidumping', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										   
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdCNProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_CN_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''ANTIDUMP'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T11:59:29.147' AS DateTime), N'Displays product information for CN products  where the ADCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T11:59:48.263' AS DateTime), N'ccfc703c-5089-45a6-8987-39dec00d30e7', N'Classification Lookup: CI - DE Antidumping', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										 
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdDEProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_DE_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''ANTIDUMP'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T11:59:48.263' AS DateTime), N'Displays product information for DE products  where the ADCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T12:00:06.067' AS DateTime), N'ce0c2d74-27b5-44d9-a849-cf413f917b13', N'Classification Lookup: CI - GB Antidumping', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										 
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum, 
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdGBProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_GB_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''ANTIDUMP'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T12:00:06.067' AS DateTime), N'Displays product information for MX products  where the ADCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T12:00:50.653' AS DateTime), N'8405f102-056c-466e-8b89-c6df3fa52a39', N'Classification Lookup: CI - IN Antidumping', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										 
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdINProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_IN_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''ANTIDUMP'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T12:00:50.653' AS DateTime), N'Displays product information for IN products  where the ADCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T12:01:11.050' AS DateTime), N'c254b2b2-21be-4106-b53b-44e9f4704897', N'Classification Lookup: CI - MX Antidumping', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										  
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdMXProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_MX_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''ANTIDUMP'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T12:01:11.050' AS DateTime), N'Displays product information for MX products  where the ADCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T12:01:27.177' AS DateTime), N'f53c73ab-78aa-452b-ad38-4684c827ac08', N'Classification Lookup: CI - NZ Antidumping', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										  
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdNZProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_NZ_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''ANTIDUMP'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T12:01:27.177' AS DateTime), N'Displays product information for NZ products  where the ADCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:59:00.873' AS DateTime), N'6bdb9e34-fa0c-4aab-8258-cf1d880aff44', N'Export Lookup: AES Flag Set to Y, no ITN, Processed Shipments', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		eh.OrderNum,
		ISNULL(g.Decode, eh.Status) as Status,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.RecordType = ''E''
		AND eh.partnerid = @PartnerID
		AND eh.AESSubmitFlag = ''Y''
		AND eh.AESITN = ''''
		AND eh.ProcessedFlag = ''Y''
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T18:59:00.873' AS DateTime), N'Displays the shipments have been processed in AES but have no ITN.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T12:05:49.003' AS DateTime), N'929ec982-a407-4bb4-8793-a696617067b1', N'Classification Lookup: CI - AU Countervailing', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdAUProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_AU_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''COUNTER'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T12:05:49.003' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T12:06:07.807' AS DateTime), N'b354f598-bae6-4557-95d8-14e28140b9ad', N'Classification Lookup: CI - CA Countervailing', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										  
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdCAProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_CA_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''COUNTER'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T12:06:07.807' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T12:06:23.100' AS DateTime), N'261e7987-d4e3-4544-961d-a7bdab384987', N'Classification Lookup: CI - CN Countervailing', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										 
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdCNProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_CN_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''COUNTER'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T12:06:23.100' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T12:06:38.613' AS DateTime), N'f3770335-467b-47d9-82c8-02939fd80c94', N'Classification Lookup: CI - DE Countervailing', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										 
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdDEProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_DE_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''COUNTER'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T12:06:38.613' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T12:06:52.840' AS DateTime), N'2796d909-0bfc-41e8-b7c4-8ccdca520656', N'Classification Lookup: CI - GB Countervailing', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit, 
										 
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdGBProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_GB_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''COUNTER'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T12:06:52.840' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T12:07:07.373' AS DateTime), N'c6784853-e68b-4b37-bd37-fdff8801c1e9', N'Classification Lookup: CI - IN Countervailing', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										   
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdINProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_IN_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''COUNTER'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T12:07:07.373' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T12:07:25.973' AS DateTime), N'4579386f-e5cd-432a-bac2-62ea427ad2ea', N'Classification Lookup: CI - MX Countervailing', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										  
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdMXProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_MX_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''COUNTER'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T12:07:25.973' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-19T12:07:43.353' AS DateTime), N'254bd21a-3365-46aa-aeae-7a8f4fa7baf6', N'Classification Lookup: CI - NZ Countervailing', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										 
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdNZProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_NZ_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''COUNTER'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-19T12:07:43.353' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:59:34.367' AS DateTime), N'c43387f4-cb76-45cc-a84a-040ca5197e32', N'Export Lookup: License maybe required', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		eh.OrderNum,
		ISNULL(g.Decode, eh.Status) AS Status,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	where eh.RecordType = ''E''
		AND eh.partnerid = @PartnerID
		AND eh.ProcessedFlag = ''Y''
		AND EXISTS(SELECT 1 FROM txdExportDetail ED with (nolock)
WHERE ED.ExportGUID = eh.ExportGUID AND ed.PartnerID = eh.PartnerID AND ED.LicenseRequired  = ''Y'')
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2018-02-16T06:57:19.203' AS DateTime), N'Displays the shipments that may require licensing.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'7038b51a-fc20-415f-8911-08c4f0c58f8d', N'FTZ Lookup: FTZ Charts', N' select       ''[''+ ''View '' + '']'' + ''(/VISUALIZATION/fdgChartVisualization.aspx?hide='' + isnull(vsp.Hide, '''') +   ''&type='' + vsp.Type +    ''&XTilt='' + cast(vsp.XTilt as varchar(50)) +   ''&Stacked='' + vsp.Stacked +   ''&SQL='' + cast(ts.SQLGuid as varchar(50)) +    ''&SQL2='' + vsp.SQL2 +   '')'' AS [View],           ts.SQLDescription + case vsp.SQL2 when '''' then '''' else '' & '' + (select SQLDescription from tmgSQL where SQLGUID = vsp.SQL2) end as ChartName,          vsp.Category,          vsp.Type  from tmgSQL ts  join txdVisualizationSQLParams vsp on    ts.SQLGUID = vsp.SQLGUID and   ts.PartnerID = vsp.PartnerID  where    vsp.Category = ''FTZ'' and   ts.PartnerID = (select PartnerID from tmfDefaults) 
', CAST(N'1900-01-01T00:00:00.000' AS DateTime), N'Charts illustrating FTZ activities over time', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T18:59:57.283' AS DateTime), N'b9b764cc-36ac-48a7-88f2-f4d076b4f003', N'Export Lookup: Missing Product Numbers', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	(
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ cast (eh.ExportGuid AS varchar(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		eh.OrderNum,
		ISNULL(g.Decode, eh.Status) as Status,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	where eh.recordtype = ''E''
		AND eh.partnerid = @PartnerID
		AND eh.ProcessedFlag = ''Y''
		AND EXISTS(SELECT 1 FROM txdExportDetail ED with (nolock)
					WHERE ED.ExportGUID = eh.ExportGUID 
					AND ed.PartnerID = eh.PartnerID 
					AND ED.productnum = '''')
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2018-02-16T06:56:16.833' AS DateTime), N'Displays shipments that have detail lines missing product numbers.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:00:36.327' AS DateTime), N'b2aab4fd-27a6-46fc-8bc4-c9bada344e40', N'Export Lookup: Shipments Approaching Filing Deadline', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		eh.OrderNum,
		eh.ExportDate, 
		ISNULL(g.Decode, eh.Status) AS Status,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.Status = ''H''
		AND eh.recordtype = ''E''
		AND eh.ExportDate <= DATEADD(DD, +1, GETDATE())
		AND eh.AESITN = ''''
		AND eh.partnerid = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:00:36.327' AS DateTime), N'Displays shipments that are approaching their export date.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:18:02.987' AS DateTime), N'719d7482-0120-4e36-ae81-83fb87c28cc7', N'Export Lookup: Shipments With FTZActive Parts', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@ ) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[Edit]'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGUID=''+ eh.ExportGUID + '')'' AS Edit,
		eh.OrderNumShip, 
		ISNULL(g.Decode, eh.Status) AS Status,
		eh.ExportDate, 
		eh.ShipDate, 
		eh.ExportCountry, 
		eh.ImportCountry,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdExportDetail ed (NOLOCK)
		ON ed.ExportGUID = eh.ExportGUID
		AND ed.PartnerID = eh.PartnerID
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	JOIN tmdUSProductClassification pc (NOLOCK)
		ON pc.PartnerID = eh.PartnerID
		AND pc.ProductNum = ed.ProductNum
	WHERE eh.Status = ''H''
		AND eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID
		AND eh.ExportCountry = ''US'' 
		AND pc.FtzActiveFlag = ''Y''
	) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:18:02.987' AS DateTime), N'Displays all of the shipments which contain parts that are processed in FTZs.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:20:32.750' AS DateTime), N'c66b01f4-2662-4728-a000-687495fb2e02', N'Export Lookup: Shipments With Products not in GC', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@ ) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[Edit]'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGUID=''+ eh.ExportGUID + '')'' AS Edit,
		eh.OrderNumShip, 
		ISNULL(g.Decode, eh.Status) as Status,		
		eh.ExportDate, 
		eh.ShipDate, 
		eh.ExportCountry, 
		eh.ImportCountry,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdExportDetail ed (NOLOCK)
		ON ed.ExportGUID = eh.ExportGUID
		AND ed.PartnerID = eh.PartnerID 
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	LEFT JOIN tmdProductClassification pc (NOLOCK)
		ON pc.PartnerID = eh.PartnerID
		AND pc.ProductNum = ed.ProductNum
	WHERE eh.Status = ''H''
		AND eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID
		--AND eh.ExportCountry = ''@Country_Code@'' 
		AND pc.PartnerID IS NULL
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:20:32.750' AS DateTime), N'Displays the shipments that contain products which are not stored GC.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:26:00.270' AS DateTime), N'd74730e1-ab11-4991-a405-f31cdf5868a7', N'Export Lookup: AES Transmissions Today', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.ShipmentRefNum,
		g.Decode as Status,
		aes.TransmissionDate AS ''AES Transmission Date'',
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdAESHeader aes (NOLOCK) 
		ON eh.ShipmentRefNum = aes.ShipmentRefNum 
		AND eh.PartnerID = aes.PartnerID
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID 
		AND eh.Status = ''P'' 
		AND DATEDIFF(d, GETDATE(), aes.TransmissionDate) = 0		
		AND aes.TransmittedFlag = ''Y''
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:26:00.270' AS DateTime), N'Displays the shipments that have been processed in AES on the current day.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:27:42.890' AS DateTime), N'cb340c75-a1a6-4f9c-924e-4c6ba2cb4f0a', N'Export Lookup: Shipments Processed Today', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
			''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ cast (eh.ExportGuid AS varchar(50)) + '')'' AS Edit,
			eh.InvoiceNum,
			MAX(g.Decode) as Status,
			MAX(em.EffDate) as ''Processed Date'',
			1 AS NoOrder
		FROM txdExportHeader eh (NOLOCK) 
		JOIN txdExportSystemMessages em (NOLOCK) 
			ON eh.ExportGUID = em.ExportGUID 
			AND eh.PartnerID = em.PartnerID
		LEFT JOIN tmgGlobalCodes g (NOLOCK)
			ON g.PartnerID = eh.PartnerID
			AND g.Code = eh.Status
			AND g.FieldName = ''EXPORTSTATUS''
		WHERE eh.RecordType = ''E''
			AND eh.PartnerID = @PartnerID 
			AND eh.Status = ''P'' 
			AND DATEDIFF(d, GETDATE(), em.EffDate) = 0
			AND em.Message = ''Shipment successfully processed.'' 
		GROUP BY eh.ExportGUID, eh.InvoiceNum, eh.RecordType
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:27:42.890' AS DateTime), N'Displays all shipments that have been processed on the current day.  ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:28:13.393' AS DateTime), N'81f3dead-b16f-4d78-846b-5a386bdd2d55', N'Export Lookup: All Export Messages By Shipment', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	(
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ cast (eh.ExportGuid AS varchar(50)) + '')'' AS Edit,
		eh.InvoiceNum,
		g.Decode AS Status,
		em.Message,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdExportSystemMessages em (NOLOCK) 
		ON eh.ExportGUID = em.ExportGUID 
		AND eh.PartnerID = em.PartnerId
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID 
		AND eh.Status NOT IN (''F'', ''V'')
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:28:13.393' AS DateTime), N'Displays the shipments that have system messages associated to them.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:28:43.310' AS DateTime), N'25480f2e-5b87-460f-8971-698f93d7a12d', N'Export Lookup: Duplicate Transactions', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		eh.InvoiceNum,
		COUNT(eh.InvoiceNum) AS DuplicateCount,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	WHERE eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID 
		AND eh.Status NOT IN (''F'', ''V'') 
	GROUP BY eh.InvoiceNum 
	HAVING COUNT(*) > 1
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:28:43.310' AS DateTime), N'Displays the shipments that have duplicate records as well as the number of duplications.    ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:29:17.933' AS DateTime), N'2ddfb8db-e07f-4210-9c25-05a24da73f93', N'Export Lookup: Number Of Exports By Carrier', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, CarrierID) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		eh.ExportCountry,
		eh.ImportCountry,
		eh.CarrierID,
		MAX(eh.ConveyanceName) AS ConveyanceName,
		COUNT(ExportGUID) AS ExportsByCarrier,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID 
		AND eh.Status NOT IN (''F'', ''V'') 
		AND eh.CarrierID <> ''''
	GROUP BY eh.CarrierID, eh.ImportCountry, eh.ExportCountry
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:29:17.933' AS DateTime), N'Displays the number of times the previously used carriers have been used.    ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:29:44.753' AS DateTime), N'27a65e7e-8b07-42c8-888d-7db41f5fe428', N'Export Lookup: Number Of Exports By Country Pairing', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		eh.ExportCountry,
		eh.ImportCountry,
		COUNT(ExportGUID) AS ExportsPerCountry,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	WHERE eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID 
		AND eh.Status NOT IN (''F'', ''V'')
	GROUP BY eh.ImportCountry, eh.ExportCountry
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:29:44.753' AS DateTime), N'Displays the number of exports for previously observed country pairings.    ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-01T16:53:54.977' AS DateTime), N'7e69f60e-26f1-4d6f-a87c-04555f9cb71d', N'BOM: For Re-analysis', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY CreatedDate, FinishedGoodProductNum ) AS [RowNum]
            FROM                  (
SELECT DISTINCT
''['' + ''View'' + ''](/Interfaces/fidBOMAnalysisUpload.aspx?BOM='' + IM.BOMGUID + '')'' as [View],
	bom.BillOfMaterials AS Name,
	CONVERT(varchar, im.EffDate, 101) AS CreatedDate,
	bom.ProductNum AS FinishedGoodProductNum,
	CAST(bom.Value as numeric(10,4)) AS FinishedGoodValue,
	bom.HTSNum AS FinishedGoodHsNum,
1 AS NoOrder
FROM txdbomim bom (NOLOCK)
JOIN usrBOMUpload up (NOLOCK) ON
	bom.PartnerID = up.PartnerID AND
	bom.BillOfMaterials = up.BillOfMaterials
JOIN txdBOMIM im (NOLOCK) ON
	bom.BOMGUID = im.BOMGUID AND
	bom.PartnerID = im.PartnerID
WHERE bom.PartnerID = @PartnerID@ AND bom.BillOfMaterials <> ''''
) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2014-08-01T16:53:54.977' AS DateTime), N'Displays finished good information for all completed BOMs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:30:08.200' AS DateTime), N'508254b9-cd75-466c-9cae-7bc43834555c', N'Export Lookup: AES Exorts Within 5 days and No ITN', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNum, 
		ISNULL(g.Decode, eh.Status) AS Status,
		eh.AESSubmitFlag,
		eh.AESITN,
		eh.ExportDate,
		1 AS NoOrder			
	FROM txdExportHeader eh (NOLOCK) 
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID 
		AND eh.Status not in (''F'', ''V'') 
		AND eh.AESSubmitFlag = ''Y'' 
		AND eh.AESITN = ''''
		AND eh.ExportDate >= DATEADD(DAY,-5, GETDATE())
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:30:08.200' AS DateTime), N'Displays the shipments within 5 days of the export date and do not yet have an ITN.  ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:30:37.700' AS DateTime), N'2e970280-bba4-49ee-bf5d-539c1b043a52', N'Export Lookup: Shipments Missing Compliance Data', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ cast (eh.ExportGuid AS varchar(50)) + '')'' AS Edit,
		eh.OrderNum, 
		ISNULL(g.Decode, eh.Status) as Status,
		ed.ProductNum,
		ed.ProductDesc,    
		ed.ECNNum,      
		ed.ExportTariffNum,      
		ed.CountryOfOrigin,
		xxpc.ProductTypeCode,
		1 AS NoOrder			
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdExportDetail ed (NOLOCK)
		ON eh.ExportGUID = ed.ExportGUID
		AND eh.PartnerID = ed.PartnerID
	JOIN txdExportParties ep (NOLOCK) 
		ON eh.ExportGUID = ep.ExportGUID
		AND eh.PartnerID = ep.PartnerID
	JOIN tmdUSProductClassification xxpc 
		ON ed.ProductGUID = CAST(xxpc.ProductGuid AS VARCHAR(50))     
		AND ed.PartnerID = xxpc.PartnerID      
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID
		AND eh.Status NOT IN (''F'', ''V'') 
		AND ed.ECNNum = ''''      
		OR ed.ExportTariffNum = ''''       
		OR ed.CountryOfOrigin = ''''
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:30:37.700' AS DateTime), N'Displays the shipments with detail lines that are missing an ECN number, export tarriff number, or country of origin.   ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:39:44.927' AS DateTime), N'3d45c253-e11f-428c-92a0-ef8366396d34', N'Export Lookup: Domestic Shipments', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
			''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
			eh.OrderNumShip, 
			ISNULL(g.Decode, eh.Status) as Status,
			eh.ShipmentRefNum, 
			eh.ShipDate,
			eh.ExportDate,
			eh.ExportCountry,
			eh.ImportCountry,
			1 AS NoOrder
		FROM txdExportHeader eh (NOLOCK) 
		JOIN txdExportParties ep (NOLOCK) 
			ON eh.ExportGUID = ep.ExportGUID
			AND eh.PartnerID = ep.PartnerID
		LEFT JOIN tmgGlobalCodes g (NOLOCK)
			ON g.PartnerID = eh.PartnerID
			AND g.Code = eh.Status
			AND g.FieldName = ''EXPORTSTATUS''
		where
			eh.Status = ''H'' and
			eh.RecordType = ''E'' and
			eh.PartnerID = @PartnerID and
			eh.ExportCountry = eh.ImportCountry
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:39:44.927' AS DateTime), N'Displays shipments where the ImportCountry is the same as the ExportCountry.  
', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:40:17.877' AS DateTime), N'0d082f57-1614-45b0-a385-65ad788a2bf2', N'Export Lookup: Processed Shipments', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		ISNULL(g.Decode, eh.Status) as Status,
		eh.ShipmentRefNum, 
		eh.ShipDate,
		eh.ExportDate,
		eh.ExportCountry,
		eh.ImportCountry,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdExportParties ep (NOLOCK) 
		ON eh.ExportGUID = ep.ExportGUID
		AND eh.PartnerID = ep.PartnerID
	LEFT JOIN tmgGlobalCodes g (nolock)
		ON g.partnerid = eh.partnerid
		AND g.code = eh.status
		AND g.fieldname = ''EXPORTSTATUS''
	where eh.recordtype = ''E''
		AND eh.partnerid = @PartnerID
		AND eh.ProcessedFlag = ''Y''
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:40:17.877' AS DateTime), N'Displays the shipments that have been processed.   ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T14:36:29.610' AS DateTime), N'4c1fd6bb-fa75-42d0-ad74-12ddf26f213e', N'FTA Lookup: FTA Lookup Non Qualifying', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY CertificateStartDate, CertificateEndDate, ProductNum ) AS [RowNum]
            FROM                  (
select distinct 
pnfc.ProductNum, 
pc.ProductDesc, 
certtype,
certdesc,
pnfc.ManufacturerID as SupplierID, 
CertificateStartDate, 
CertificateEndDate,
 PreferenceCriterion,
status,
1 AS NoOrder
from tmgProductNumFTACert pnfc 
join tmdProductClassification pc with (nolock) 
on pc.productnum = pnfc.productnum 
and pc.partnerid = pnfc.partnerid 
where Status = ''Active'' AND
CertType LIKE ''%NQ%'' AND
pnfc.PartnerID = @PartnerID@
) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2019-01-01T11:52:41.487' AS DateTime), N'Displays all products that have been marked "Non-Qualifying."', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:43:37.443' AS DateTime), N'837ee233-fb26-4e5c-83da-f4d019a945da', N'Export Lookup: Voided Shipments', N'SELECT *, ROW_NUMBER() OVER (
                                ORDER BY @orderby@
                                ) AS [RowNum]
FROM (
                SELECT DISTINCT ''['' + ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid='' + CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit, eh.OrderNumShip, ISNULL(g.Decode, eh.STATUS) AS STATUS, eh.ShipmentRefNum, eh.ShipDate, eh.ExportDate, eh.ExportCountry, eh.ImportCountry, eh.VoidReasonCode, eh.VoidExplanation, eh.ModifiedBy, 1 AS NoOrder

                FROM txdExportHeader eh(NOLOCK)
                JOIN txdExportParties ep(NOLOCK)
                                ON eh.ExportGUID = ep.ExportGUID
                                                AND eh.PartnerID = ep.PartnerID
                LEFT JOIN tmgGlobalCodes g(NOLOCK)
                                ON g.partnerid = eh.partnerid
                                                AND g.code = eh.STATUS
                                                AND g.fieldname = ''EXPORTSTATUS''
                WHERE eh.STATUS = ''V''
                                AND eh.recordtype = ''E''
                                AND eh.partnerid = @PartnerID@
                                AND eh.VoidFlag = ''Y''
                ) AS LookupViewInner
WHERE @whereclause@', CAST(N'2014-03-12T19:43:37.443' AS DateTime), N'Displays the shipments that have been voided.  ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:44:32.080' AS DateTime), N'8bd5a2ef-df05-474b-a9ff-ce6b1e26a968', N'Export Lookup: Accepted Shipments Without ECS Date', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT 
		''['' + ''Edit'' + '']'' + ''(/Export/fidConsolidate.aspx?TYPE='' + RIGHT(CustomsType, 1) + ''&CUSTOMSTYPE='' + SUBSTRING(CustomsType, 1, LEN(CustomsType) - 1) + ''&SRN='' + ShipmentRefNum AS Edit,
		CustomsType,
		ShipmentRefNum AS UCR,
		ITN AS MRN,
		CarrierId,
		TransmissionDate,
		DestinationCountry AS DestCtry,
		DATEDIFF(dd, GETDATE(), TransmissionDate) AS SinceExport,
		1 AS NoOrder
	FROM txdConsolidatedHeader(NOLOCK)
	WHERE partnerid = @PartnerID
		AND DestinationCountry NOT IN (
			SELECT CountryCode
			FROM tmfCountryGroup(NOLOCK)
			WHERE GroupName = ''EU''
			)
		AND ECSReceivedDate = ''01/01/1900''
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:44:32.080' AS DateTime), N'Displays the shipments which have not been put on hold and do not have an ECS date.    ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:44:39.953' AS DateTime), N'00f53a58-e099-46a4-8e8b-bdbd1eee946c', N'Export Lookup: Exports Within 5 Days of the Export Date and on hold', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		ISNULL(g.Decode, eh.Status) AS Status,
		eh.ShipmentRefNum, 
		eh.ShipDate,
		eh.ExportDate,
		eh.ExportCountry,
		eh.ImportCountry,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdExportParties ep (NOLOCK) 
		ON eh.ExportGUID = ep.ExportGUID
		AND eh.PartnerID = ep.PartnerID
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.Status = ''H''
		AND eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID
		AND DATEDIFF(Day, GETDATE(),eh.ExportDate) <= 5
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:44:39.953' AS DateTime), N'Displays the shipments which are within 5 days of their scheduled export date, but are on hold.  ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:45:41.587' AS DateTime), N'f9db24ed-b6c1-4de8-b6f6-7f0ae3b9eaa4', N'Export Lookup: Fatally Rejected EEI Fillings', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	(
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidAESTransmission.aspx?TYPE=E&SRN='' + aesh.ShipmentRefNum + '')'' AS Edit,
		aesh.ShipmentRefNum, 
		aesh.FinalDisposition,
		aesh.ExportDate,
		aesh.PortOfExportation,
		aesh.DestinationCountry,
		aesh.CarrierID,
		aesh.TransportRefNum,
		1 AS NoOrder
	FROM txdAESHeader aesh (nolock) 
	WHERE aesh.partnerid = @PartnerID
		AND aesh.FinalDisposition = ''R'' 
		AND aesh.SeverityIndicator = ''F''
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:45:41.587' AS DateTime), N'Displays the shipments which have been rejected in their final dispositions.    ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:55:23.680' AS DateTime), N'b7c06947-0135-4bdc-b264-3d7016ad770f', N'Export Lookup: Shipments With Process Overrides', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT 
		''['' + ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid='' + CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.ShipmentRefNum,
		eh.OrderNum,
		eh.ExportCountry,
		eh.ImportCountry,
		eh.ExportDate,
		ISNULL(g.Decode, '''') AS Status,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK)
	JOIN txdExportSystemMessages em (NOLOCK)
		ON eh.ExportGUID = em.ExportGUID
		AND eh.PartnerID = em.PartnerID
	LEFT JOIN tmgGlobalCodes g(NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE 1 = 1
		AND eh.recordtype = ''E''
		AND eh.partnerid = @PartnerID
		AND eh.Status = ''HP''
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:55:23.680' AS DateTime), N'Displays the shipments which were originally put on hold but have been overridden by the user. ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-24T15:54:42.913' AS DateTime), N'1cd9e170-88ff-4138-9afc-fd304ee1b283', N'FTA Records: By Plant (All)', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY CertificateStartDate, CertificateEndDate, ProductNum ) AS [RowNum]
								FROM                  (
								select distinct 
									pnfc.ProductNum,
									pc.ProductDesc,
									pnfc.ManufacturerID,
									pnfc.CertType,
									pnfc.CertDesc,
									pnfc.CertificateStartDate,
									pnfc.CertificateEndDate,
									Status,
									1 AS NoOrder
								from tmgproductnumftacert pnfc
								join txdBOMIM bim
									on bim.productnum = pnfc.productnum 
									and bim.bomguid = pnfc.bomguid
									and bim.partnerid = pnfc.partnerid
								join txdbompc bpc
									on bpc.bomguid = bim.bomguid
									and bpc.partnerid = bim.partnerid
									join tmdproductClassification pc with (nolock)
								on pc.productnum = pnfc.productnum
								and pc.partnerid = pnfc.partnerid
								where 
								bpc.PartnerID = @PartnerID@ and
								pnfc.CertDesc like ''%Analysis%''
								) AS LookupViewInner
								WHERE                               
																	@whereclause@', CAST(N'2019-01-02T16:19:47.660' AS DateTime), N'Displays Product and Certificate information for all plants', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T21:25:54.060' AS DateTime), N'7f70ffaf-3f3b-42d7-b6d8-88d05fdf494c', N'Export Lookup: AES Filings', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidAESTransmission.aspx?TYPE='' + eh.RecordType + ''&SRN='' + eh.ShipmentRefNum + '')'' AS Edit,
		aesh.ShipmentRefNum, 
		eh.Status,
		OrderNumShip,
		aesh.TransmissionDate,
		aess.ResponseDate,
		aesh.AESITN,
		(SELECT TOP 1 NarrativeText FROM txdAESReply (NOLOCK) WHERE ID = aess.ID ORDER BY EffDate DESC) AS LastResponse,
		1 AS NoOrder
	FROM txdAESHeader aesh (NOLOCK) 
	JOIN txdExportHeader eh (NOLOCK)
		ON aesh.ShipmentRefNum = eh.ShipmentRefNum 
		AND aesh.PartnerID = eh.PartnerID
	JOIN txdAESTransactionStatus aess (NOLOCK)
		ON aess.ShipmentRefNum = aesh.ShipmentRefNum 
		AND aess.PartnerID = aesh.PartnerID
	WHERE
		aesh.PartnerID = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T21:25:54.060' AS DateTime), N'Displays shipments that have been filed in AES and contains the relevant information about AES filings.  ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-24T16:40:15.520' AS DateTime), N'335c410e-edf7-46ef-9cf1-ed5034afb9a1', N'Solicitation Lookup (All)', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY SolicitationYear, DateSent, DueDate, Status ) AS [RowNum]
FROM                  (
select
Title,								 
Status, 
								 year(dr.PeriodBeginDate) as ''SolicitationYear'', 
								 convert (varchar,dr.DateSent,103) as ''DateSent'', 
								 convert (varchar,dr.DueDate, 103) as ''DueDate'',
								 comp.CompanyName as ''Supplier'',
								 drd.CertAgreement as ''Agreement'',
								 1 AS NoOrder
								 from tmgDocRequest dr (nolock) 
								 join tmgdocrequestdetail drd on
								 dr.DocReqGUID = drd.DocReqGUID and
								 dr.PartnerID = drd.PartnerID
								 join tmgCompany comp (nolock) on 
								drd.PartnerID = comp.PartnerID and 
								replace(drd.Supplier, cast(drd.PartnerID as varchar) + ''~'', '''') = comp.CompanyID 
								 where dr.PartnerID = @PartnerID@ 
								 ) AS LookupViewInner
								WHERE                               
																	@whereclause@', CAST(N'2014-11-24T16:40:15.520' AS DateTime), N'Displays all past and current solicitation requests.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T21:26:55.323' AS DateTime), N'333b819d-fbba-40a5-ac43-39027a5b5cc2', N'Export Lookup: Licenseable Shipments', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.OrderNumShip, 
		ISNULL(g.Decode, eh.Status) AS Status,
		ed.LicenseRequired,
		ed.LicenseNum,
		ed.ECNNum,
		eh.ExportCountry,
		eh.ImportCountry,
		ed.ExportTariffNum,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdExportDetail ed (NOLOCK) 
		ON eh.ExportGUID = ed.ExportGUID
		AND eh.PartnerID = ed.PartnerID
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.ProcessedFlag <> ''Y''
		AND eh.recordtype = ''E''
		AND eh.partnerid = @PartnerID
		AND ed.LicenseRequired = ''Y''
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T21:26:55.323' AS DateTime), N'Displays all of the shipments that have been processed and require licensing.    ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T21:27:33.103' AS DateTime), N'00cf4f44-7cf2-4734-89a4-37da34d69a08', N'Export Lookup: QP Shipments Without Corresponding Export Shipment', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		qh.InbondDate,
		qh.inbondNum,
		ISNULL(eh.ShipmentRefNum,'''') AS ShipmentRefNum,
		ISNULL(eh.OrderNumShip,'''') AS OrderNumShip, 
		ISNULL(g.Decode, eh.Status) AS Status,
		QPO1,
		EntryNum,
		1 AS NoOrder
	FROM txdQPHeader qh (NOLOCK)
	LEFT JOIN txdExportHeader eh (NOLOCK) 
		ON qh.PartnerId = eh.PartnerID 
		AND (qh.QPO1 = eh.OrderNumShip or qh.InbondNum = eh.EntryNum)
		AND eh.RecordType = ''E''
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.partnerid
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE qh.PartnerID = @PartnerID
		AND eh.PartnerID IS NULL
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T21:27:33.103' AS DateTime), N'Displays the shipments that have been filed as bonded shipments in the QP module, but do not have a corresponding shipment in the Export Management module.   ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T21:28:09.413' AS DateTime), N'85cef7be-2ed9-4a12-a52b-3fc6f17ed87f', N'Export Lookup: Export Shipments Without Correcsponding QP', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		eh.ExportDate,
		eh.OrderNumShip,
		eh.ShipmentRefNum,
		ISNULL(qh.InbondNum,'''') AS InbondNum, 
		ISNULL(g.Decode, eh.Status) AS Status,
		ISNULL(QPO1,'''') as QPO1,
		eh.EntryNum,
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	LEFT JOIN txdQPHeader qh(NOLOCK)
		ON qh.PartnerId = eh.PartnerID 
		AND (qh.QPO1 = eh.OrderNumShip OR qh.InbondNum = eh.EntryNum)
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.Status IN (''H'',''U'',''P'')
		AND eh.recordtype = ''E''
		AND eh.partnerid = @PartnerID
		AND qh.PartnerID IS NULL
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T21:28:09.413' AS DateTime), N'Displays the shipments that have been filed as bonded shipments in the Export Management module, but do not have a corresponding shipment in the QP module.   ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-01T14:46:28.830' AS DateTime), N'3afae6c9-68a8-46f9-9c91-bdf2815779da', N'Export Lookup: Shipments Processed in the Last 7, 30, 90 days', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
			''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ cast (eh.ExportGuid AS varchar(50)) + '')'' AS Edit,
			eh.InvoiceNum,
			MAX(g.Decode) AS Status,
			MAX(em.EffDate) AS ''Processed Date'',
			1 AS NoOrder
		FROM txdExportHeader eh (NOLOCK) 
		JOIN txdExportSystemMessages em (NOLOCK) 
			ON eh.ExportGUID = em.ExportGUID 
			AND eh.PartnerID = em.PartnerID
		LEFT JOIN tmgGlobalCodes g (NOLOCK)
			ON g.partnerid = eh.partnerid
			AND g.code = eh.status
			AND g.fieldname = ''EXPORTSTATUS''
		WHERE eh.recordtype = ''E''
			AND eh.partnerid = @PartnerID 
			AND eh.status = ''P'' 
			AND em.Effdate >= DATEADD(day, - @VALUE@, GETDATE()) 
			AND em.Message = ''Shipment successfully processed.'' 
		Group by eh.ExportGUID, eh.InvoiceNum, eh.RecordType
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-10-01T14:46:28.830' AS DateTime), N'Displays the shipments that have been processed in the last 7, 30, or 90 days based on the user''s selection in the dropdown', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-01T14:48:43.240' AS DateTime), N'94248d42-d1b0-4700-96e4-da8e4c1cb6fa', N'Export Lookup: AES Transmissions within the Last 7, 30, 90 Days', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.ShipmentRefNum,
		g.Decode AS Status,
		aes.TransmissionDate AS ''AES Transmission Date'',
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdAESHeader aes (NOLOCK) 
		ON eh.ShipmentRefNum = aes.ShipmentRefNum 
		AND eh.PartnerID = aes.PartnerID
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID 
		AND aes.TransmissionDate >= DATEADD(day,-@VALUE@, GETDATE()) 
		AND aes.TransmittedFlag = ''Y''
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-10-01T14:48:43.240' AS DateTime), N'Displays the shipments that have been transmitted via AES in the last 7, 30, or 90 days based on the user''s selection in the dropdown', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T09:11:51.713' AS DateTime), N'f0405e73-a1f7-4e09-9c3b-a97d5e76c6ce', N'Export Lookup: Export Lookup', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, OrderNumShip DESC ) AS [RowNum]
FROM    
	( 	
	SELECT 
		eh.PartnerID, eh.ExportGuid, eh.OrderNumShip, g.Decode AS Status, eh.ExportDate,
		1 AS NoOrder
	FROM txdExportHeader eh with (nolock)
	JOIN txdExportParties ep with (nolock)
		ON eh.ExportGuid = ep.ExportGuid 
		AND eh.PartnerID = ep.PartnerID
	LEFT JOIN tmgglobalcodes g with (nolock)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE
		eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2018-02-16T07:34:27.703' AS DateTime), N'Displays all export transactions.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-25T15:46:00.050' AS DateTime), N'c2e3b4f9-2338-4e16-9eab-66b3818a5f74', N'Export Lookup: Processed Shipments by User', N'SELECT * , 
ROW_NUMBER() OVER ( ORDER BY @orderby@, Week DESC, UserName ) AS [RowNum]
FROM (
	SELECT 
		DATEADD(week, DATEDIFF(week, 0, eh.LastProcessedDate), 0) as Week, 
		ed.UserName,
		COUNT(DISTINCT eh.ExportGUID) AS [Processed Count],
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK)
	JOIN txdExportDocumentation ed (NOLOCK) 
		ON eh.ExportGUID = ed.ExportGUID
		AND eh.PartnerID = ed.PartnerID
	WHERE eh.RecordType = ''E''
		AND eh.ProcessedFlag = ''Y'' 
		AND ed.Status = ''PRINTED''
		AND eh.PartnerID = @PartnerID
	GROUP BY DATEADD(week, DATEDIFF(week, 0, eh.LastProcessedDate), 0), ed.UserName
) AS LookupViewInner
WHERE 
	@whereclause@', CAST(N'2014-11-25T15:46:00.050' AS DateTime), N'Displays the number of shipments that have been processed by specific users by week', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-25T15:46:00.050' AS DateTime), N'ea5b9a8f-eb0c-4bce-9eba-3c0c65acdd96', N'Export Lookup: All AES Messages by ShipmentRefNum', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, ResponseDate DESC) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidAESTransmission.aspx?TYPE='' + eh.RecordType + ''&SRN='' + eh.ShipmentRefNum + '')'' AS Edit,
		aesh.ShipmentRefNum, 
		eh.Status,
		aesh.TransmissionDate,
		aess.ResponseDate,
		aesh.AESITN,
		aesr.NarrativeText AS LastResponse,
		1 AS NoOrder
	FROM txdAESHeader aesh (NOLOCK) 
	JOIN txdExportHeader eh (NOLOCK)
		ON aesh.ShipmentRefNum = eh.ShipmentRefNum 
		AND aesh.PartnerID = eh.PartnerID
	JOIN txdAESTransactionStatus aess (NOLOCK)
		ON aess.ShipmentRefNum = aesh.ShipmentRefNum 
		AND aess.PartnerID = aesh.PartnerID
	JOIN txdAESReply aesr (NOLOCK)
		ON aesr.ID = aess.ID
		AND aesr.PartnerID = aess.PartnerID
	WHERE
		aesh.PartnerID = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-11-25T15:46:00.050' AS DateTime), N'Displays the shipments with an AES response by the shipment reference number', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-10-02T11:38:26.990' AS DateTime), N'b0e87287-fe65-4f91-aadb-18ab63794fd7', N'FTZ Lookup: FTZ Missing Manifest Data', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY Man_ITDate
			,Man_ExportDate
			,Man_ImportDate ASC
		) AS [RowNum]
FROM (
	SELECT DISTINCT ''['' + ''Edit'' + '']'' + ''(/Interfaces/fxdManifestEntry.aspx?TYPE=EDT&TID='' + ma.TransportID + ''&CNUM='' + ma.ContainerNum + ''&BILL='' + ma.HouseBillOfLading + ''&ITNUM='' + ma.ITNum + '')'' AS Edit
		,CASE 
			WHEN ma.MasterBillOfLading IS NULL
				THEN ''N''
			ELSE ''Y''
			END AS ManifestPresent
		,fp.TransportID AS Fifo_TransportID
		,IsNull(ma.MasterBillOfLading, '''') AS Man_MasterBillOfLading
		,IsNull(ma.HouseBillOfLading, '''') AS Man_HouseBillOfLading
		,IsNull(ma.ITNum, '''') AS Man_ITNum
		,CONVERT(DATE, (IsNull(ma.ITDate, ''1/1/1900'')), 101) AS Man_ITDate
		,IsNull(ma.ITFromPort, '''') AS Man_ITFromPort
		,IsNull(ma.VesselName, '''') AS Man_VesselName
		,IsNull(ma.ModeOfTransport, '''') AS Man_ModeOfTransport
		,CONVERT(DATE, (IsNull(ma.ExportDate, ''1/1/1900'')), 101) AS Man_ExportDate
		,CONVERT(DATE, (IsNull(ma.ImportDate, ''1/1/1900'')), 101) AS Man_ImportDate
		,IsNull(ma.FrgnPortOfLading, '''') AS Man_FrgnPortOfLading
		,IsNull(ma.USPortOfUnLading, '''') AS Man_USPortOfUnLading
		,IsNull(ma.InbondCarrier, '''') Man_InbondCarrier
		,IsNull(ma.manifestQty, 0) Man_manifestQty
		,IsNull(ma.ModeOfTransportDetail, '''') Man_ModeOfTransportDetail
		,IsNull(ma.SCACCode, '''') Man_SCACCode
		,IsNull(ma.TransportNum, '''') Man_TransportNum
		,IsNull(ma.ExportCountryCode, '''') Man_ExportCountryCode
	FROM txdFifoProcessing fp WITH (NOLOCK)
	JOIN txdFifoProcessingHtsValues fph WITH (NOLOCK) ON fp.partnerID = fph.PartnerID
		AND fp.TxnNumGUID = fph.TxnNumGUID
	LEFT JOIN txdManifestAssignment ma WITH (NOLOCK) ON fp.TransportID = ma.TransportID
		AND fp.PartnerID = ma.PartnerID
	WHERE fp.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
		AND fp.TxnCode IN (
			''RPPC''
			,''APPC''
			)
		AND fph.StatusCode <> ''D''
		AND fp.TransportID <> ''UpdateToForeignValue''
		AND (
			ma.MasterBillOfLading = ''''
			OR ma.MasterBillOfLading IS NULL
			OR ma.ITFromPort = ''''
			OR ma.VesselName = ''''
			OR ma.ModeOfTransport = ''''
			OR ma.ExportDate = ''1/1/1900''
			OR ma.ImportDate = ''1/1/1900''
			OR ma.FrgnPortOfLading = ''''
			OR ma.USPortOfUnLading = ''''
			OR ma.InbondCarrier = ''''
			OR ma.manifestQty = 0
			OR ma.ModeOfTransportDetail = ''''
			OR ma.SCACCode = ''''
			OR ma.TransportNum = ''''
			OR ma.ExportCountryCode = ''''
			)
		AND fp.AssignmentFlag <> ''Y''
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-06T13:20:27.057' AS DateTime), N'Distinct TransportIDs that are missing manifest data', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-11-05T18:52:30.733' AS DateTime), N'2bf48c36-3a3b-4228-a989-5e3a9a3223ed', N'DPS Lookup: DPS Lookup', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, CompanyID desc )      AS [RowNum] FROM ( select      ''[''+ ''Edit'' + '']'' + ''(/Maintenance/fmgCompanyMaintenance.aspx?CompanyID='' + c.CompanyID + '')'' AS Edit,      ''['' + ''Search'' + '']'' + ''(/DTS/fxdDPSQuery.aspx?CompanyID='' + c.CompanyID +''&Search=Y)'' as Search,  c.CompanyID, c.CompanyID as ''CompanyAddressGUID'', c.CompanyType, c.DTSCompanyName, c.CompanyAddress1,     c.CompanyAddress2, c.CompanyCity, c.CompanyState, c.CompanyPostalCode, c.CompanyCountryCode,           c.DTSStatus, c.DTSLastScreenedDate, 1 AS NoOrder from tmgcompany c WITH (NOLOCK) where c.partnerid = @PartnerID       UNION         select      ''[''+ ''Edit'' + '']'' + ''(/Maintenance/fmgCompanyMaintenance.aspx?CompanyID='' + a.CompanyID + '')'' AS Edit,      ''['' + ''Search'' + '']'' + ''(/DTS/fxdDPSQuery.aspx?CompanyID='' + a.CompanyID +''&Search=Y)'' as Search,      a.CompanyID, a.CompanyAddressGUID, ''Secondary Address'' as CompanyType, a.DTSCompanyName, a.CompanyAddress1,     a.CompanyAddress2, a.CompanyCity, a.CompanyState, a.CompanyPostalCode, a.CompanyCountryCode,           a.DTSStatus, a.DTSLastScreenedDate, 1 AS NoOrder from tmgcompanyAddress a WITH (NOLOCK) where a.partnerid = @PartnerID        AND a.dtsstatus IN (''Blocked'', ''Manual Block'')     )     AS LookupViewInner WHERE @whereclause@ ', CAST(N'2015-11-05T18:52:30.733' AS DateTime), N'DPS Lookup: DPS Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2020-08-04T11:14:55.550' AS DateTime), N'5bee3d5f-1e06-4044-9fdc-65cc075367ea', N'DPS Lookup: Overridden Parties', N'SELECT * ,ROW_NUMBER() OVER ( ORDER BY @orderby@ ,CompanyID DESC ) AS [RowNum] FROM ( SELECT ''['' + ''Edit'' + ''](/Maintenance/fmgCompanyMaintenance.aspx?CompanyID='' + c.CompanyID + '')'' AS Edit ,ISNULL(''[Search](/DTS/fxdDPSQuery.aspx?CompanyID='' + c.CompanyID + '')'', '''') AS Search ,c.CompanyID ,c.CompanyID AS ''CompanyAddressGUID'' ,c.CompanyType ,c.DTSCompanyName ,c.CompanyAddress1 ,c.CompanyAddress2 ,c.CompanyCity ,c.CompanyState ,c.CompanyPostalCode ,c.CompanyCountryCode ,c.DTSStatus ,c.DTSLastScreenedDate ,1 AS NoOrder FROM tmgcompany c WITH (NOLOCK) WHERE c.partnerid = ( SELECT PartnerID FROM tmfDefaults WITH (NOLOCK) ) AND c.dtsstatus IN ( ''Blocked'' ,''Manual Block'' ) UNION SELECT ''['' + ''Edit'' + ''](/Maintenance/fmgCompanyMaintenance.aspx?CompanyID='' + a.CompanyID + '')'' AS Edit ,ISNULL(''[Search](/DTS/fxdDPSQuery.aspx?CompanyID='' + a.CompanyID + '')'', '''') AS Search ,a.CompanyID ,a.CompanyAddressGUID ,''Secondary Address'' AS CompanyType ,a.DTSCompanyName ,a.CompanyAddress1 ,a.CompanyAddress2 ,a.CompanyCity ,a.CompanyState ,a.CompanyPostalCode ,a.CompanyCountryCode ,a.DTSStatus ,a.DTSLastScreenedDate ,1 AS NoOrder FROM tmgcompanyAddress a WITH (NOLOCK) WHERE a.partnerid = ( SELECT PartnerID FROM tmfDefaults WITH (NOLOCK) ) AND a.dtsstatus IN ( ''Blocked'' ,''Manual Block'' ) ) AS LookupViewInner WHERE @whereclause@', CAST(N'2020-08-04T11:14:55.550' AS DateTime), N'Displays all parties that have a status of Overridden', N'N', N'N')
, (@PartnerID, CAST(N'2020-08-04T11:14:55.373' AS DateTime), N'7b7dc548-b62b-4c55-bcde-675e2ba72876', N'DPS Lookup: Blocked Parties', N'SELECT *   ,ROW_NUMBER() OVER (    ORDER BY @orderby@     ,CompanyID DESC    ) AS [RowNum]  FROM (   SELECT ''['' + ''Edit'' + '']'' + ''(/Maintenance/fmgCompanyMaintenance.aspx?CompanyID='' + c.CompanyID + '')'' AS Edit    ,ISNULL(''[Search](/DTS/fxdDPSQuery.aspx?CompanyID='' + c.CompanyID + '')'', '''') AS Search    ,c.CompanyID    ,c.CompanyID AS ''CompanyAddressGUID''    ,c.CompanyType    ,c.DTSCompanyName    ,c.CompanyAddress1    ,c.CompanyAddress2    ,c.CompanyCity    ,c.CompanyState    ,c.CompanyPostalCode    ,c.CompanyCountryCode    ,c.DTSStatus    ,c.DTSLastScreenedDate    ,1 AS NoOrder   FROM tmgcompany c WITH (NOLOCK)   WHERE c.partnerid = @PartnerID    AND c.dtsstatus IN (''Blocked'')      UNION      SELECT ''['' + ''Edit'' + '']'' + ''(/Maintenance/fmgCompanyMaintenance.aspx?CompanyID='' + a.CompanyID + '')'' AS Edit    ,ISNULL(''[Search](/DTS/fxdDPSQuery.aspx?CompanyID='' + a.CompanyID + '')'', '''') AS Search    ,a.CompanyID    ,a.CompanyAddressGUID    ,''Secondary Address'' AS CompanyType    ,a.DTSCompanyName    ,a.CompanyAddress1    ,a.CompanyAddress2    ,a.CompanyCity    ,a.CompanyState    ,a.CompanyPostalCode    ,a.CompanyCountryCode    ,a.DTSStatus    ,a.DTSLastScreenedDate    ,1 AS NoOrder   FROM tmgcompanyAddress a WITH (NOLOCK)   WHERE a.partnerid = @PartnerID    AND a.dtsstatus IN (''Blocked'')   ) AS LookupViewInner  WHERE @whereclause@', CAST(N'2020-08-04T11:14:55.373' AS DateTime), N'Displays all parties that have a status of Blocked', N'N', N'N')
, (@PartnerID, CAST(N'2014-10-14T10:34:10.440' AS DateTime), N'7a3bc757-a00e-45a8-8354-33cb31bf5e72', N'Classification Lookup: Classification Lookup Standard Countries', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum ) AS [RowNum]
            FROM              
  ( SELECT	''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit ,
xxpc.PartnerID, xxpc.ProductGuid, xxpc.ProductNum, xxpc.ProductDesc, xxpc.HsNum, xxpc.EffDate, 
max(isnull(al.AuditDate, '''')) as DateUpdated, max(isnull(al.Username, '''')) as LastUpdatedBy,
1 AS NoOrder
from tmd@COUNTRY_CODE@ProductClassification xxpc (nolock)
join tmdProductClassification pc on 
xxpc.PartnerID = pc.PartnerID and
xxpc.ProductGuid = pc.ProductGuid
left join tmdAuditLog al (nolock) on 
xxpc.PartnerID = al.PartnerID and
xxpc.ProductGuid = al.ProductGuid and
al.CountryCode = ''@COUNTRY_CODE@''
where 
xxpc.PartnerID = @PartnerID
group by xxpc.PartnerID, xxpc.ProductGuid, xxpc.ProductNum, xxpc.ProductDesc, xxpc.HsNum, xxpc.EffDate
) AS LookupViewInner
            WHERE                               @whereclause@', CAST(N'2018-03-01T10:48:57.693' AS DateTime), N'Displays all Products in the selected country profile', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-09-15T09:51:21.053' AS DateTime), N'7013fd15-076a-47ac-8b4f-f559214c45e1', N'Classification Lookup: Products with Non-Standard RptQtyUom', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
		) AS [RowNum]
FROM   (
SELECT ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + uspc.ProductNum + ''&ID='' + CAST (uspc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit, 
 uspc.ProductNum
		,ftz.HtsIndex
		,uspc.HsNum
		,hts.RptQtyUom
		,uspc.HsUomConvFactor
		,1 AS NoOrder
	FROM tmdUSProductClassification uspc WITH (NOLOCK)
	JOIN tmdUSProductClassificationFTZ ftz WITH (NOLOCK) ON uspc.ProductGuid = ftz.ProductGuid
		AND uspc.PartnerID = ftz.PartnerID
	JOIN tmdHTS hts WITH (NOLOCK) ON ftz.HtsIndex = hts.HtsIndex
		AND ftz.PartnerID = hts.PartnerID
	WHERE uspc.FTZActiveFlag = ''Y''
		AND hts.RptQtyUom NOT IN (
			SELECT Code
			FROM tmgGlobalCodes
			WHERE FieldName = ''StndRptQtyUom''
			)
		AND uspc.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-03-01T10:39:49.560' AS DateTime), N'Displays products where RptQtyUOM is not in the list of Standard Reporting UOM defined in Global Codes', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'1288F15A-258E-424E-917D-0C177F1C686A', N'Handbook Lookup: Exported IM - Summary', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum
		) AS [RowNum]
FROM (
	SELECT ch.HandbookID
		,cd.CommodityItemNum AS ItemNum
		,ed.ProductNum
		,sum(ed.TxnQty) AS ExportedTxnQty
		,ed.TxnQtyUOM
		,sum(ed.TotalValue) AS ExportedTotalValue
		,hd.RptQty AS RegRptQty
		,hd.TotalValue AS RegTotalValue
		,convert(VARCHAR, convert(DECIMAL(10, 4), ((hd.RptQty - sum(ed.TxnQty)) / hd.RptQty) * 100)) + ''%'' AS LeftPercentage
		,1 AS NoOrder
	FROM txdExportHeader eh WITH (NOLOCK)
	JOIN txdCNZONECCSHeader ch WITH (NOLOCK) ON eh.PartnerID = ch.PartnerID
		AND eh.ExportGuid = ch.ExportGUID
	JOIN txdExportDetail ed WITH (NOLOCK) ON eh.PartnerID = ed.PartnerID
		AND eh.ExportGuid = ed.ExportGuid
	JOIN txdCNZONECCSDetail cd WITH (NOLOCK) ON cd.PartnerID = ed.PartnerID
		AND cd.ExportGuid = ed.ExportGuid
		AND cd.CCSDetailGuid = ed.ExportDetailGuid
	JOIN txdHandbookHeader hh WITH (NOLOCK) ON hh.PartnerID = ch.partnerID
		AND hh.HandbookNum = ch.HandbookID
	JOIN txdHandbookDetail hd WITH (NOLOCK) ON hd.HandbookGuid = hh.HandbookGuid
		AND hd.PartnerID = hh.PartnerID
		AND hd.HandbookSerialNum = cd.CommodityItemNum
		AND hd.ProductNum = cd.ProductNum
	WHERE eh.RecordType = ''E''
		AND cd.CommodityItemNum <> ''''
		AND hd.ProductTypeCode = ''IM''
		AND hh.ReconciledFlag = ''N''
		AND eh.FIFOGenerated = ''N''
		AND eh.PartnerID = (
			SELECT PartnerID
			FROM tmfdefaults WITH (NOLOCK)
			)
	GROUP BY ch.HandbookID
		,cd.CommodityItemNum
		,ed.ProductNum
		,ed.TxnQtyUOM
		,hd.RptQty
		,hd.TotalValue
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays summary of Exported IM', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'1575B879-B58A-4C76-875E-9DC4D048B1D3', N'OSD Lookup: Customs Approved Scrap - Summary', N'DECLARE @SQL AS NVARCHAR(MAX);--variable to use dynamic SQL
DECLARE @ColName AS NVARCHAR(MAX);--variable to find distinct values
DECLARE @ColNameNull AS NVARCHAR(MAX);---variable to tag on isNull on distinct values

--Find distinct values/StatusCodes to use in dynamic query
SELECT  @ColName = isnull(@ColName + '','', '''') + QUOTENAME(Reason)
FROM    ( SELECT DISTINCT 
                    g.Decode as Reason
          FROM      txdScrapRequestHist s 
          join tmgGlobalCodes g 
          on g.FieldName = ''ScrapReasonCode'' and g.Code = s.ReasonCode
          where s.CustomApproval = ''Y''
        ) AS UniqueReasons

--Tag ISNULL onto distinct values, so 1900 shows up instead of NULL
SELECT @ColNameNull 
    = ISNULL(@ColNameNull + '','','''')
    + ''ISNULL('' + QUOTENAME(Reason) + '', 0) AS ''
    +QUOTENAME(Reason)
FROM (SELECT DISTINCT g.Decode as Reason FROM txdScrapRequestHist s join tmgGlobalCodes g on g.FieldName = ''ScrapReasonCode'' and s.ReasonCode = g.Code  where s.CustomApproval = ''Y'') AS PivotQueryNulls

PRINT @ColNameNull

--use dynamic SQL to PIVOT data
--The SourceData is the only thing that needs to be changed....change where clause as needed
SET @SQL = ''
WITH SourceData AS
(Select s.HandbookNum,s.ProductNum, cast(s.Quantity as numeric(38,4)) as Quantity, G.Decode as Reason

FROM txdScrapRequestHist s
join tmgGlobalCodes g
on g.FieldName = ''''ScrapReasonCode'''' and g.Code = s.ReasonCode
where s.ProductNum <> ''''''''

and s.CustomApproval = ''''Y''''
)

SELECT
HandbookNum, ProductNum, '' + @ColNameNull + ''
FROM SourceData
PIVOT

( sum(Quantity) FOR Reason in ('' + @ColName + '')) AS PivotResult

ORDER BY HandbookNum, ProductNum
'';
--Must use an aggregate function

--Execute query
EXEC (@SQL);', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays a summary qty based on Customs Approved Scrap per ProductNum', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'199EC356-40FB-404A-805E-74528F32E637', N'Handbook Lookup: Import Shipments', N'
SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ImportDate asc
		) AS [RowNum]
FROM (
	SELECT ch.CustomDeclarationID
		,ch.HandbookID
		,eh.OrderNumShip
		,convert(VARCHAR, eh.ExportDate, 101) AS ImportDate
		,cd.CommodityItemNum AS ItemNum
		,ed.ProductNum
		,ed.ProductDesc
		,ed.ImportTariffNum
		,ed.CountryOfOrigin
		,ed.TxnQty
		,ed.TxnQtyUOM
		,ed.TotalValue
		,1 AS NoOrder
	FROM txdExportHeader eh WITH (NOLOCK)
	JOIN txdCNZONECCSHeader ch WITH (NOLOCK) ON eh.PartnerID = ch.PartnerID
		AND eh.ExportGuid = ch.ExportGUID
	JOIN txdExportDetail ed WITH (NOLOCK) ON eh.PartnerID = ed.PartnerID
		AND eh.ExportGuid = ed.ExportGuid
	JOIN txdCNZONECCSDetail cd WITH (NOLOCK) ON cd.PartnerID = ed.PartnerID
		AND cd.ExportGuid = ed.ExportGuid
		AND cd.CCSDetailGuid = ed.ExportDetailGuid
	WHERE eh.RecordType = ''I''
		AND cd.CommodityItemNum <> ''''
		AND EXISTS (
			SELECT HandbookID
			FROM txdCNZONECCSHeader
			WHERE ReconciledFlag = ''N''
			)
		AND eh.FIFOGenerated = ''N''
		AND eh.PartnerID = (
			SELECT PartnerID
			FROM tmfdefaults WITH (NOLOCK)
			)
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-02-28T05:04:07.867' AS DateTime), N'This query displays all import shipments using a Handbook', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'303cdb68-eb69-4476-ad8e-47cdbd7411ef', N'China Classification:SDE History Lookup', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum
			,CurrentHSNum
			,LogDate DESC
		) AS [RowNum]
FROM (
	SELECT pc.ProductNum
		,B.CurrentHsNum
		,''['' + A.ContentSDE + '':'' + A.SDEValue + '']'' + '' is updated to '' + ''['' + B.CurrentContentSDE + '':'' + B.CurrentSDEValue + '']'' AS LOG
		,b.CurrentDate AS LogDate
		,1 AS NoOrder
	FROM (
		SELECT row_number() OVER (
				PARTITION BY hh.SDEGuid ORDER BY hh.EffDate DESC
				) AS Row
			,hh.ProductGuid
			,hh.EffDate
			,hh.SDEGuid
			,hh.HsNum
			,dh.SequenceNum
			,dh.ContentSDE
			,dh.SDEValue
		FROM tmdCNSDEHeaderHist hh
		JOIN tmdCNSDEDetailHist dh ON hh.SDEGuid = dh.SDEGuid
			AND hh.EffDate = dh.EffDate
		) AS A
	JOIN (
		SELECT row_number() OVER (
				PARTITION BY h.SDEGuid ORDER BY h.EffDate DESC
				) AS CurrentRow
			,h.ProductGuid
			,h.EffDate AS CurrentDate
			,h.SDEGuid AS CurrentSDEGuid
			,h.HsNum AS CurrentHsNum
			,d.SequenceNum AS CurrentSequenceNum
			,d.ContentSDE AS CurrentContentSDE
			,d.SDEValue AS CurrentSDEValue
		FROM (
			SELECT *
			FROM tmdCNSDEHeaderHist WITH (NOLOCK)
			WHERE PartnerID = (
					SELECT PartnerID
					FROM tmfDefaults WITH (NOLOCK)
					)
			
			UNION
			
			SELECT *
			FROM tmdCNSDEHeader WITH (NOLOCK)
			WHERE PartnerID = (
					SELECT PartnerID
					FROM tmfDefaults WITH (NOLOCK)
					)
			) AS h
		JOIN (
			SELECT *
			FROM tmdCNSDEDetailHist WITH (NOLOCK)
			WHERE PartnerID = (
					SELECT PartnerID
					FROM tmfDefaults WITH (NOLOCK)
					)
			
			UNION
			
			SELECT *
			FROM tmdCNSDEDetail WITH (NOLOCK)
			WHERE PartnerID = (
					SELECT PartnerID
					FROM tmfDefaults WITH (NOLOCK)
					)
			) AS d ON h.EffDate = d.EffDate
			AND h.SDEGUID = d.SDEGuid
		) AS B ON A.SDEGuid = B.CurrentSDEGUID
		AND A.Row = B.CurrentROW
		AND A.SequenceNum = B.CurrentSequenceNum
	JOIN tmdCNProductClassification pc WITH (NOLOCK) ON pc.ProductGuid = B.ProductGuid
		AND pc.PartnerID = (
			SELECT PartnerID
			FROM tmfdefaults WITH (NOLOCK)
			)
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-02-07T13:36:34.433' AS DateTime), N'SDE History Lookup', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'697BCBAF-0763-48C1-AD2F-33EC3A5AE36A', N'BOM Simulation Lookup: Import Shipments', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, ImportDate asc ) AS [RowNum]              FROM                  (  SELECT fp.ReceiptDocID as CCSNum,     fp.RPO11 as HandbookNum,    fp.OrderNumReceipt as OrderNumShip,    fp.BillOfLading,     convert(varchar,FP.TxnDate,101) as ImportDate,    convert(varchar,fp.ReceiptDate,101) as ArrivalDate,     fp.ProductNum,     fp.ProductDesc,     fph.HTSNum,      fph.Value,     fph.CurrencyCode,     fph.CountryOfOrigin,     fph.ManufacturerID,     fp.TxnQty,      fp.TxnQtyUOM,  1 AS NoOrder  FROM TTDSimulationFIFOProcessing fp with(nolock)  join TTDSimulationFIFOProcessingHTSValues fph with (nolock)  on fp.PartnerID = fph.PartnerID and fp.TxnNumGuid = fph.TxnNumGuid  where fp.SourceSystem = ''IP''and fp.TxnCode = ''RPPC'' and fp.PartnerID = (select PartnerID from tmfDefaults with (nolock))  ) AS LookupViewInner              WHERE                               @whereclause@
', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays All the Import Shipments on BOM Simulation page', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'6B74345C-522F-41A2-931F-12D924EAA889', N'OSD Lookup: Customs Rejected Scrap - Summary', N'DECLARE @SQL AS NVARCHAR(MAX);--variable to use dynamic SQL
DECLARE @ColName AS NVARCHAR(MAX);--variable to find distinct values
DECLARE @ColNameNull AS NVARCHAR(MAX);---variable to tag on isNull on distinct values

--Find distinct values/StatusCodes to use in dynamic query
SELECT  @ColName = isnull(@ColName + '','', '''') + QUOTENAME(Reason)
FROM    ( SELECT DISTINCT 
                    g.Decode as Reason
          FROM      txdScrapRequestHist s 
          join tmgGlobalCodes g 
          on g.FieldName = ''ScrapReasonCode'' and g.Code = s.ReasonCode
          where s.CustomApproval = ''N''
        ) AS UniqueReasons

--Tag ISNULL onto distinct values, so 1900 shows up instead of NULL
SELECT @ColNameNull 
    = ISNULL(@ColNameNull + '','','''')
    + ''ISNULL('' + QUOTENAME(Reason) + '', 0) AS ''
    +QUOTENAME(Reason)
FROM (SELECT DISTINCT g.Decode as Reason FROM txdScrapRequestHist s join tmgGlobalCodes g on g.FieldName = ''ScrapReasonCode'' and s.ReasonCode = g.Code  where s.CustomApproval = ''N'') AS PivotQueryNulls

PRINT @ColNameNull

--use dynamic SQL to PIVOT data
--The SourceData is the only thing that needs to be changed....change where clause as needed
SET @SQL = ''
WITH SourceData AS
(Select s.HandbookNum,s.ProductNum, cast(s.Quantity as numeric(38,4)) as Quantity, G.Decode as Reason

FROM txdScrapRequestHist s
join tmgGlobalCodes g
on g.FieldName = ''''ScrapReasonCode'''' and g.Code = s.ReasonCode
where s.ProductNum <> ''''''''

and s.CustomApproval = ''''N''''
)

SELECT
HandbookNum, ProductNum, '' + @ColNameNull + ''
FROM SourceData
PIVOT

( sum(Quantity) FOR Reason in ('' + @ColName + '')) AS PivotResult

ORDER BY HandbookNum, ProductNum
'';
--Must use an aggregate function

--Execute query
EXEC (@SQL);
', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays a summary qty based on Customs Rejected Scrap per ProductNum', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'70B3F396-B70D-4969-802B-E485B9F04529', N'Handbook Lookup: Handbook - PC', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,HandbookNum
			,PhaseNum
			,ItemNum
			,SequenceNum
		) AS [RowNum]
FROM (
	SELECT h.HandbookNum
		,h.PhaseNum
		,d.HandbookDetailSequenceNum AS SequenceNum
		,d.HandbookSerialNum AS ItemNum
		,d.ProductNum
		,d.HsNum
		,d.ProductName
		,d.ProductSDE
		,d.MaterialType
		,isnull(c1.CNDecodeShort, '''') AS UOM
		,isnull(c2.CNDecodeShort, '''') AS RptQtyUOM
		,CAST(d.RptQty AS NUMERIC(38, 4)) AS RptQty
		,cast(d.Value AS NUMERIC(38, 4)) AS Value
		,cast(d.TotalValue AS NUMERIC(38, 4)) AS TotalValue
		,isnull(c5.CNDecodeShort, '''') AS CurrencyCode
		,isnull(c3.CNDecodeShort, '''') AS TradeCountry
		,CAST(d.UOMRatio AS NUMERIC(38, 4)) AS UOMRatio
		,isnull(c4.CNDecodeSHORT, '''') AS TaxExemption
		,d.TreatMark
		,d.Remark
		,1 as NoOrder
	FROM TXDHandbookDetail d WITH (NOLOCK)
	JOIN txdHandbookHeader h WITH (NOLOCK) ON h.PartnerID = d.PartnerID
		AND h.HandbookGuid = d.HandbookGuid
	LEFT JOIN tmgCCSCodes c1 WITH (NOLOCK) ON c1.FieldName = ''UOM''
		AND d.UOM = c1.Code
		AND c1.PartnerID = d.PartnerID
	LEFT JOIN tmgCCSCodes c2 WITH (NOLOCK) ON c2.FieldName = ''UOM''
		AND d.RptQtyUOM = c2.Code
		AND c2.PartnerID = d.PartnerID
	LEFT JOIN tmgCCSCodes c3 WITH (NOLOCK) ON d.TradeCountry = c3.Code
		AND c3.FieldName = ''CountriesAndRegions''
		AND c3.PartnerID = d.PartnerID
	LEFT JOIN tmgCCSCodes c4 WITH (NOLOCK) ON d.TaxExemption = c4.Code
		AND c4.FieldName = ''TypeOfLevy''
		AND c4.PartnerID = d.PartnerID
	LEFT JOIN tmgCCSCodes c5 WITH (NOLOCK) ON d.CurrencyCode = c5.Code
		AND c5.FieldName = ''Currency''
		AND c5.PartnerID = d.PartnerID
	WHERE 1 = 1
		AND ProductTypeCode = ''PC''
		AND d.PartnerID = (
			SELECT PartnerID
			FROM tmfdefaults WITH (NOLOCK)
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays all Handbook Raw Material information', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'760FA9C8-24EC-4D2E-AF17-8D54E2DEB4FD', N'BOM Simulation Lookup: Import Goods In Transit', N'SELECT *   ,ROW_NUMBER() OVER (    ORDER BY @orderby@     ,ImportDate ASC    ) AS [RowNum]  FROM (   SELECT fp.ReceiptDocID AS CCSNum    ,fp.RPO11 AS HandbookNum    ,fp.OrderNumReceipt AS OrderNumShip    ,fp.BillOfLading    ,convert(VARCHAR, FP.TxnDate, 101) AS ImportDate    ,convert(VARCHAR, fp.ReceiptDate, 101) AS ArrivalDate    ,fp.ProductNum    ,fp.ProductDesc    ,fph.HTSNum    ,fph.Value    ,fph.CurrencyCode    ,fph.CountryOfOrigin    ,fph.ManufacturerID    ,fp.TxnQty    ,fp.TxnQtyUOM    ,1 AS NoOrder   FROM TTDSimulationFIFOProcessing fp WITH (NOLOCK)   JOIN TTDSimulationFIFOProcessingHTSValues fph WITH (NOLOCK) ON fp.PartnerID = fph.PartnerID    AND fp.TxnNumGuid = fph.TxnNumGuid   WHERE fp.SourceSystem = ''IP''    AND fp.TxnCode = ''RPPC'' AND fp.ReceiptDocID IN (     SELECT t1.EntryNum     FROM txdTracking t1 WITH (NOLOCK)     LEFT JOIN txdTracking t2 WITH (NOLOCK) ON t1.EntryNum = t2.EntryNum      AND t1.PartnerID = t2.PartnerID      AND t1.StatusCode = ''102''      AND t2.StatusCode = ''103''     WHERE t2.PartnerID IS NULL     )    AND fp.PartnerID = (     SELECT PartnerID     FROM tmfDefaults WITH (NOLOCK)     )   ) AS LookupViewInner  WHERE @whereclause@  
', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays Import Goods that are still in Transit ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'8736A285-CB86-4C83-A67F-3558787CF765', N'OSD Lookup: Pending Scrap - Summary', N'DECLARE @SQL AS NVARCHAR(MAX);--variable to use dynamic SQL
DECLARE @ColName AS NVARCHAR(MAX);--variable to find distinct values
DECLARE @ColNameNull AS NVARCHAR(MAX);---variable to tag on isNull on distinct values

--Find distinct values/StatusCodes to use in dynamic query
SELECT  @ColName = isnull(@ColName + '','', '''') + QUOTENAME(Reason)
FROM    ( SELECT DISTINCT 
                    g.Decode as Reason
          FROM      txdScrapRequest s 
          join tmgGlobalCodes g 
          on g.FieldName = ''ScrapReasonCode'' and g.Code = s.ReasonCode
         
        ) AS UniqueReasons

--Tag ISNULL onto distinct values, so 1900 shows up instead of NULL
SELECT @ColNameNull 
    = ISNULL(@ColNameNull + '','','''')
    + ''ISNULL('' + QUOTENAME(Reason) + '', 0) AS ''
    +QUOTENAME(Reason)
FROM (SELECT DISTINCT g.Decode as Reason FROM txdScrapRequest s join tmgGlobalCodes g on g.FieldName = ''ScrapReasonCode'' and s.ReasonCode = g.Code  ) AS PivotQueryNulls

PRINT @ColNameNull

--use dynamic SQL to PIVOT data
--The SourceData is the only thing that needs to be changed....change where clause as needed
SET @SQL = ''
WITH SourceData AS
(Select s.HandbookNum,s.ProductNum, cast(s.Quantity as numeric(38,4)) as Quantity, G.Decode as Reason

FROM txdScrapRequest s
join tmgGlobalCodes g
on g.FieldName = ''''ScrapReasonCode'''' and g.Code = s.ReasonCode
where s.ProductNum <> ''''''''


)

SELECT
HandbookNum, ProductNum, '' + @ColNameNull + ''
FROM SourceData
PIVOT

( sum(Quantity) FOR Reason in ('' + @ColName + '')) AS PivotResult

ORDER BY HandbookNum, ProductNum
'';
--Must use an aggregate function

--Execute query
EXEC (@SQL);', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays a summary qty based on Pending Scrap per ProductNum', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'A42AD1F7-7C1A-4DD0-B4CC-AA64DBBD31F2', N'Handbook Lookup: Data Intergrity - IM Missing BOM', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum
		) AS [RowNum]
FROM (
	SELECT hh.HandbookNum
		,hd.ProductNum
		,hd.HandbookSerialNum AS ItemNum
		,hd.ProductName
		,hd.ProductSDE
		,hd.HsNum
		,1 AS NoOrder
	FROM txdHandbookDetail hd WITH (NOLOCK)
	JOIN txdHandbookHeader hh WITH (NOLOCK) ON hd.PartnerID = hh.PartnerID
		AND hd.HandbookGuid = hh.HandbookGuid
	LEFT JOIN txdBOMIM IM WITH (NOLOCK) ON IM.ProductNum = hd.ProductNum
		AND (
			im.BOMStartDate > hh.EntryBeginDate
			OR im.BOMStartDate = hh.EntryBeginDate
			)
	WHERE im.ProductNum IS NULL
	and hh.PartnerID = (select PartnerID from tmfdefaults with (nolock))
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays the Finished Goods list which does not have a Registered BOM', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'BEF1ED32-94C6-403B-AA04-697DA207560C', N'BOM Simulation Lookup: Export Goods In Transit', N'SELECT *   ,ROW_NUMBER() OVER (ORDER BY @orderby@,ExportDate ASC) AS [RowNum]  
FROM (  
SELECT fp.ExitDocID AS CCSNum,
  fp.RPO11 AS HandbookNum,
  fp.OrderNumShip AS OrderNumShip,
  fp.BillOfLading,
  convert(VARCHAR, FP.TxnDate, 101) AS ExportDate,
  convert(VARCHAR, fp.ReceiptDate, 101) AS ShipDate,
  fp.CountryShipTo,
  fp.ProductNum,
  fp.ProductDesc,
  im.BillOfMaterials,
  fph.HTSNum,
  fph.Value,
  fph.CurrencyCode,
  fph.CountryOfOrigin,
  fph.ManufacturerID,
  fp.TxnQty,
  fp.TxnQtyUOM, 1 AS NoOrder   
  FROM TTDSimulationFIFOProcessing fp WITH (NOLOCK)  
  JOIN TTDSimulationFIFOProcessingHTSValues fph WITH (NOLOCK) 
  ON fp.PartnerID = fph.PartnerID    
  AND fp.TxnNumGuid = fph.TxnNumGuid   
  JOIN txdBOMIM im WITH (NOLOCK) 
  ON fp.PartnerID = im.PartnerID    
  AND fp.OrderNumWork = im.BOMGuid   
  WHERE fp.SourceSystem = ''IP''   
  AND fp.TxnCode = ''SPNM''  
  AND EXISTS (     
    SELECT 1     
    FROM txdTracking t1 WITH (NOLOCK)     
    LEFT JOIN txdTracking t2 WITH (NOLOCK) 
    ON t1.EntryNum = t2.EntryNum      
    AND t1.PartnerID = t2.PartnerID      
    AND t1.StatusCode = ''102''      
    AND t2.StatusCode = ''103''    
    WHERE t2.PartnerID IS NULL
    AND t1.EntryNum = fp.ReceiptDocID)        
  AND fp.PartnerID = (SELECT PartnerID FROM tmfDefaults WITH (NOLOCK)) 
  )AS LookupViewInner  WHERE @whereclause@', CAST(N'2018-04-10T09:54:06.520' AS DateTime), N'This query displays Export Goods In Transit on BOM Simulation page', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'CA9B1945-20C3-4515-88CE-AC12B82D460E', N'BOM Simulation Lookup: Export Shipments', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, ExportDate asc ) AS [RowNum]              FROM                  (  SELECT fp.ExitDocID as CCSNum,     fp.RPO11 as HandbookNum,    fp.OrderNumShip as OrderNumShip,    fp.BillOfLading,     convert(varchar,FP.TxnDate,101) as ExportDate,    convert(varchar,fp.ReceiptDate,101) as ShipDate,    fp.CountryShipTo,     fp.ProductNum,     fp.ProductDesc,     im.BillOfMaterials,     fph.HTSNum,      fph.Value,     fph.CurrencyCode,     fph.CountryOfOrigin,     fph.ManufacturerID,     fp.TxnQty,      fp.TxnQtyUOM,  1 AS NoOrder     FROM TTDSimulationFIFOProcessing fp with(nolock)  join TTDSimulationFIFOProcessingHTSValues fph with (nolock)  on fp.PartnerID = fph.PartnerID and fp.TxnNumGuid = fph.TxnNumGuid  join txdBOMIM im with (nolock)  on fp.PartnerID = im.PartnerID and fp.OrderNumWork = im.BOMGuid  where fp.SourceSystem = ''IP''and fp.TxnCode = ''SPNM'' and fp.ProductTypeCode = ''NM'' and fp.PartnerID = (select PartnerID from tmfDefaults with (nolock))  ) AS LookupViewInner              WHERE                               @whereclause@  
', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays All the Export Shipments on BOM Simulation page', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'CE62F9B1-79A4-4F1A-8981-AC317C90ACA5', N'Handbook Lookup: Handbook Lookup', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,HandbookNum
		) AS [RowNum]
FROM (
	SELECT HandbookNum
		,PhaseNum
		,EntryType
		,EntryBeginDate
		,EntryEndDate
		,SupervisingLocalCustoms
		,OperatingCompany
		,ProcessingCompany
		,ModeOfTrade
		,AgreementNum
		,ReconciledFlag
		,1 AS NoOrder
	FROM txdHandbookHeader
	WHERE 1 = 1
		AND PartnerID = (
			SELECT PartnerID
			FROM tmfdefaults WITH (NOLOCK)
			)
		AND HandbookNum <> ''''
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays all Handbook Header information', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'D502228F-9507-4DB0-A73B-301849A690C6', N'Handbook Lookup: Data Intergrity - Grouping Item not matching rules', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, HandbookNum) AS [RowNum]
            FROM                  ( 

SELECT hh.HandbookNum
	,hd.HandbookSerialNum as ItemNum
	,hd.HandbookDetailSequenceNum as SequenceNum
	,hd.ProductNum
	,hd.ProductName
	,hd.ProductSDE
	,hd.HSNum
	,1 as NoOrder
FROM txdHandbookHeader hh WITH (NOLOCK)
JOIN txdHandbookDetail hd WITH (NOLOCK) ON hh.PartnerID = hd.PartnerID
	AND hh.HandbookGuid = hd.HandbookGuid
JOIN (
	SELECT HandbookGuid
		,HandbookSerialNum
	FROM txdHandbookDetail
	GROUP BY HandbookSerialNum
		,HsNum
		,ProductName
		,ProductSDE
		,HandbookGuid
	HAVING count(HandbookSerialNum) > 1
	) AS Q ON Q.HandbookGuid = hh.HandbookgUID
	AND Q.HandbookSerialNum = hd.HandbookSerialNum
where hd.HandbookSerialNum <>''''
and hh.PartnerID = (select PartnerID from tmfDefaults with (nolock))
) AS LookupViewInner
            WHERE                               @whereclause@', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays the grouped items not matching the rules of same ProductSDE, HSNUM, ProductName', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'DF5DF14E-E237-4AE9-8B6D-1A7E1542139D', N'Handbook Lookup: Handbook - IM', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,HandbookNum
			,PhaseNum
			,ItemNum
			,SequenceNum
		) AS [RowNum]
FROM (
	SELECT h.HandbookNum
		,h.PhaseNum
		,d.HandbookDetailSequenceNum AS SequenceNum
		,d.HandbookSerialNum AS ItemNum
		,d.ProductNum
		,d.HsNum
		,d.ProductName
		,d.ProductSDE
		,isnull(c1.CNDecodeShort, '''') AS UOM
		,isnull(c2.CNDecodeShort, '''') AS RptQtyUOM
		,CAST(d.RptQty AS NUMERIC(38, 4)) AS RptQty
		,cast(d.Value AS NUMERIC(38, 4)) AS Value
		,cast(d.TotalValue AS NUMERIC(38, 4)) AS TotalValue
		,isnull(c5.CNDecodeShort, '''') AS CurrencyCode
		,isnull(c3.CNDecodeShort, '''') AS TradeCountry
		,CAST(d.UOMRatio AS NUMERIC(38, 4)) AS UOMRatio
		,isnull(c4.CNDecodeSHORT, '''') AS TaxExemption
		,d.TreatMark
		,d.Remark
		,1 AS NoOrder
	FROM TXDHandbookDetail d WITH (NOLOCK)
	JOIN txdHandbookHeader h WITH (NOLOCK) ON h.PartnerID = d.PartnerID
		AND h.HandbookGuid = d.HandbookGuid
	LEFT JOIN tmgCCSCodes c1 WITH (NOLOCK) ON c1.FieldName = ''UOM''
		AND d.UOM = c1.Code
		AND c1.PartnerID = d.PartnerID
	LEFT JOIN tmgCCSCodes c2 WITH (NOLOCK) ON c2.FieldName = ''UOM''
		AND d.RptQtyUOM = c2.Code
		AND c2.PartnerID = d.PartnerID
	LEFT JOIN tmgCCSCodes c3 WITH (NOLOCK) ON d.TradeCountry = c3.Code
		AND c3.FieldName = ''CountriesAndRegions''
		AND c3.PartnerID = d.PartnerID
	LEFT JOIN tmgCCSCodes c4 WITH (NOLOCK) ON d.TaxExemption = c4.Code
		AND c4.FieldName = ''TypeOfLevy''
		AND c4.PartnerID = d.PartnerID
	LEFT JOIN tmgCCSCodes c5 WITH (NOLOCK) ON d.CurrencyCode = c5.Code
		AND c5.FieldName = ''Currency''
		AND c5.PartnerID = d.PartnerID
	WHERE 1 = 1
		AND ProductTypeCode = ''IM''
		AND d.PartnerID = (
			SELECT PartnerID
			FROM tmfdefaults WITH (NOLOCK)
			)
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays all Handbook Finished Goods information', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'E140B5A7-6309-4B71-BF61-613F9419A4C1', N'Handbook Lookup: Imported PC - Summary', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum ) AS [RowNum]
            FROM                  (

SELECT 
		ch.HandbookID
		,cd.CommodityItemNum AS ItemNum
		,ed.ProductNum
		,sum(ed.TxnQty) as ImportedTxnQty
		,ed.TxnQtyUOM
		,sum(ed.TotalValue) as ImportedTotalValue
		,hd.RptQty as RegRptQty
		,hd.TotalValue as RegTotalValue
		,convert(varchar,convert(decimal(10,4),((hd.RptQty - sum(ed.TxnQty))/ hd.RptQty) * 100))+''%'' as LeftPercentage
		,1 AS NoOrder
	FROM txdExportHeader eh WITH (NOLOCK)
	JOIN txdCNZONECCSHeader ch WITH (NOLOCK) ON eh.PartnerID = ch.PartnerID
		AND eh.ExportGuid = ch.ExportGUID
	JOIN txdExportDetail ed WITH (NOLOCK) ON eh.PartnerID = ed.PartnerID
		AND eh.ExportGuid = ed.ExportGuid
	JOIN txdCNZONECCSDetail cd WITH (NOLOCK) ON cd.PartnerID = ed.PartnerID
		AND cd.ExportGuid = ed.ExportGuid
		AND cd.CCSDetailGuid = ed.ExportDetailGuid
	join txdHandbookHeader hh with (nolock)
	on hh.PartnerID = ch.partnerID and hh.HandbookNum = ch.HandbookID
	join txdHandbookDetail hd with (nolock)
	on hd.HandbookGuid = hh.HandbookGuid and hd.PartnerID = hh.PartnerID
	and hd.HandbookSerialNum = cd.CommodityItemNum and hd.ProductNum = cd.ProductNum
	WHERE eh.RecordType = ''I''
		AND cd.CommodityItemNum <> ''''
		and hd.ProductTypeCode = ''PC''
		AND hh.ReconciledFlag = ''N''
		AND eh.FIFOGenerated = ''N''
		AND eh.PartnerID = (
			SELECT PartnerID
			FROM tmfdefaults WITH (NOLOCK)
			)
			group by ch.HandbookID
		,cd.CommodityItemNum
		,ed.ProductNum
		,ed.TxnQtyUOM,hd.RptQty
		,hd.TotalValue
) AS LookupViewInner
            WHERE                               @whereclause@', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays summary of Imported PC', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'E2B1445B-412E-40B5-BC81-579FE2CCCFE9', N'Handbook Lookup: Export Shipments', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ExportDate asc
		) AS [RowNum]
FROM (
SELECT ch.CustomDeclarationID
		,ch.HandbookID
		,eh.OrderNumShip
		,convert(VARCHAR, eh.ExportDate, 101) AS ExportDate
		,cd.CommodityItemNum AS ItemNum
		,ed.ProductNum
		,ed.ProductDesc
		,ed.ExportTariffNum
		,ed.CountryOfOrigin
		,ed.TxnQty
		,ed.TxnQtyUOM
		,ed.TotalValue
		,1 AS NoOrder
	FROM txdExportHeader eh WITH (NOLOCK)
	JOIN txdCNZONECCSHeader ch WITH (NOLOCK) ON eh.PartnerID = ch.PartnerID
		AND eh.ExportGuid = ch.ExportGUID
	JOIN txdExportDetail ed WITH (NOLOCK) ON eh.PartnerID = ed.PartnerID
		AND eh.ExportGuid = ed.ExportGuid
	JOIN txdCNZONECCSDetail cd WITH (NOLOCK) ON cd.PartnerID = ed.PartnerID
		AND cd.ExportGuid = ed.ExportGuid
		AND cd.CCSDetailGuid = ed.ExportDetailGuid
	WHERE eh.RecordType = ''E''
		AND cd.CommodityItemNum <> ''''
		AND EXISTS (
			SELECT HandbookNum
			FROM txdHandbookHeader
			WHERE ReconciledFlag = ''N''
			)
		AND eh.FIFOGenerated = ''N''
		AND eh.PartnerID = (
			SELECT PartnerID
			FROM tmfdefaults WITH (NOLOCK)
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-28T05:08:57.210' AS DateTime), N'This query displays all export shipments using a Handbook', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'fde906cf-55fe-4bd4-b209-6ad17d2e9664', N'China Classification:SDE Action Required', N'
SELECT * 
,ROW_NUMBER() OVER (
ORDER BY @orderby@
,ProductNum
) AS [RowNum]
FROM (
SELECT DISTINCT cast(pc.ProductGuid AS VARCHAR(50)) AS PRODUCTGUID
,pc.ProductNum AS productNum
,pc.ProductDesc
,pc.AltProductDesc
,pc.ProductTypeCode
,pc.HsNum
,stuff((
SELECT ''|''
,cast(de1.SequenceNum AS VARCHAR(50)) + ''.'' + de1.DeclarableElement
FROM tmfDeclarableElement de1(NOLOCK)
WHERE de1.HsNum = sh.HsNum
AND de1.CultureCode = ''chi''
ORDER BY de1.SequenceNum ASC
FOR XML path('''')
), 1, 1, '''') AS DeclarableSDE
,sh.summarySDE AS SummarySDE
,sh.activeflag AS [ISActive]
,''There are SDE Values not maintained.'' AS IsSDEValueMaintained
,1 AS NoOrder
FROM tmdCNProductClassification pc
LEFT JOIN vid_CNSDE sh WITH (NOLOCK) ON sh.PartnerID = pc.PartnerID
AND cast(pc.ProductGuid AS VARCHAR(50)) = sh.ProductGuid
AND (
pc.HsNum = sh.HsNum
AND sh.HsNumField = ''hsnum''
)
LEFT JOIN tmfDeclarableElement de ON de.PartnerID = sh.PartnerID
AND de.CultureCode = ''chi''
AND de.HsNum = sh.HsNum
WHERE (
/*ContentSDE missing in SDE maintenance*/

pc.PRODUCTGUID IN (
SELECT DISTINCT a.ProductGuid
FROM tmfdeclarableelement d
JOIN tmdcnsdeheader a ON d.HSNum = a.HSNum
AND d.CultureCode = ''chi''
AND a.activeflag = ''Y''
LEFT JOIN tmdcnsdedetail b ON a.sdeguid = b.sdeguid
AND b.SequenceNum = d.SequenceNum
AND b.ContentSDE = d.declarableElement
AND a.PartnerID = b.PartnerID
WHERE b.SequenceNum IS NULL
AND a.PartnerID = (
SELECT PartnerID
FROM tmfdefaults
)
)
/*SDE values are not fully maintained*/
OR pc.PRODUCTGUID IN (
SELECT DISTINCT a.ProductGuid
FROM tmdcnSDEheader a
JOIN tmdcnsdedetail b ON a.sdeguid = b.sdeguid
WHERE SDEValue = ''''
AND a.activeflag = ''Y''
AND a.PartnerID = (
SELECT PartnerID
FROM tmfdefaults
)
)
OR sh.PartnerID IS NULL 
/* SDE does not exists in maintenance*/
)
AND pc.PartnerID = (
SELECT PartnerID
FROM tmfdefaults
)
AND pc.Activeflag = ''Y''
AND pc.HSNUM <> ''''
AND NOT EXISTS (
SELECT TOP 1 *
FROM tmdClassificationMessages WITH (NOLOCK)
WHERE ProductGuid = pc.ProductGuid
AND TableName = ''tmdCNProductClassification''
AND FieldName = ''HSNum''
)
) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'SDE Action Required', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-26T00:00:00.000' AS DateTime), N'2a8e8a3f-6bd4-47aa-88be-6dfd96a2b8a3', N'PSC Lookup: Entries Within 270 Days', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, releasedate asc ) AS [RowNum] FROM
(
select distinct rh.ReceiptDocID, uses.EntryNumber, uses.ReleaseDate,  uses.Status, uses.StatusDescription, datediff(day, uses.releasedate, getdate()) as ''Days Since Entry Released'', 1 as noorder
from txdUSEntryStatus uses with (nolock) 
join txdShipPCHist spch with (nolock) 
on uses.EntryNumber = spch.ExitDocID
and uses.PartnerID = spch.PartnerID
join txdReceiptHist rh with (nolock) 
on rh.FifoGUID = spch.FifoGUID
and rh.PartnerID = spch.PartnerID
where datediff(day, uses.releasedate, getdate()) < 270 
and spch.PartnerID = (select partnerid from tmfdefaults with (nolock))
)
AS LookupViewInner WHERE @whereclause@', CAST(N'2018-02-23T10:31:16.063' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-26T00:00:00.000' AS DateTime), N'3077e511-6fca-44d9-987f-a8682c72ac43', N'PSC Lookup: Record Changes', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, EffDate, ProjectName ) AS [RowNum] FROM
(
select distinct p.projectguid,
  p.EffDate, 
  p.Status, 
  p.ProjectName, 
  d.ReceiptDocID, 
  e.Explanation, 
  d.ClockSequence, 
  d.StatusCode,  
  s.ProductNum, 
  d.Field, 
  d.CurrentValue, 
  d.NewValue, 
  1 as noorder
from txdPSCDetails d with (nolock)
join txdPSCExplanations e with (nolock) 
on d.ProjectGuid = e.ProjectGuid 
and d.ExplanationGuid = e.ExplanationGuid
and d.PartnerID = e.PartnerID
join txdPSCProject p with (nolock)
 on d.ProjectGuid = p.ProjectGuid
and d.PartnerID = p.PartnerID
join txdShipPCHist s with (nolock) 
on s.FifoGUID = d.FifoGuid
and s.PartnerID = d.PartnerID
where d.Field = case ''@VALUE@'' 
											when ''ALL'' then d.Field
											when ''AddlHtsUomConvFactor'' then ''AddlHtsUomConvFactor''
											when ''CountryOfOrigin'' then ''CountryOfOrigin''
											when ''HtsIndex'' then ''HtsIndex''
											when ''HtsUomConvFactor'' then ''HtsUomConvFactor''
											when ''ManufacturerID'' then ''ManufacturerID''
											when ''Value'' then ''Value''
											when ''Value2'' then ''Value2''
											when ''Weight'' then ''Weight''
										else '''' end
)
AS LookupViewInner WHERE @whereclause@', CAST(N'2018-02-23T10:18:11.057' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-02T10:10:00.000' AS DateTime), N'89c31e15-a71e-42b2-b384-d08e6bfc4456', N'FTZ Lookup: FTZ Item Master Errors', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY ValidationDesc asc ) AS [RowNum] FROM (  select ''[''+ ''Edit'' + '']'' + ''(/MAINTENANCE/Edit.aspx?TYPE=1''+''&ID=''+ cast (pc.ProductGuid AS varchar(50))+''&COUNTRY=US''+''&SEARCHCOL=ProductNum''+''&SEARCHTXT=)'' AS Edit  ,   v.ValidationDesc  , pc.ProductNum  , pc.ProductDesc  , pc.ProductTypeCode  , pc.CommercialValue  ,    pc.CommercialValueCurrencyCode  , pc.WeightUom  , pc.TxnQtyUom  , pc.ReceiptSupplement  , pc.NaftaCertified  , pc.MxState  ,    pc.CaProvince  , pc.RPO11  , pc.RPO12  , pc.RPO13  , pc.HtsIndex  , pc.CurrencyCode  ,    CAST(pc.AltValue as Numeric (38,4)) AS AltValue  , CAST(pc.AltValue2 as Numeric (38,4)) AS AltValue2  , pc.AltCurrencyCode  ,     pc.HtsUomConvFactor  , pc.AddlHtsUomConvFactor  , pc.FDAIndicator  , pc.FCCIndicator  , pc.DOTIndicator  , pc.CVCaseNumber  ,     pc.CVDutyRate  , pc.ADCaseNumber  , pc.ADDutyRate  , pc.ManufacturerID  , pc.ZoneStatusCode  , pc.CountryOfOrigin  , pc.RCO21  ,     pc.RCO22  , pc.RCO23   , CAST(pc.Value as Numeric (38,4)) AS Value  , CAST(pc.Value2 as Numeric (38,4)) AS Value2  ,     CAST(pc.Weight as Numeric (38,4)) AS Weight  , v.ValidationCode      from txdValidationWarnings v with (nolock)      join tmdUSProductClassification pc with (nolock) on v.ProductNum=pc.ProductNum and v.PartnerID=pc.PartnerID       where v.TableName = ''tmdItemMaster'' and pc.PartnerID = (select PartnerID from tmfDefaults)  ) AS LookupViewInner WHERE @whereclause@', CAST(N'1900-01-01T00:00:00.000' AS DateTime), N'Displays all transactions that have errors in the Item Master.', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-26T00:00:00.000' AS DateTime), N'5ebd0bb6-6c65-4a7d-8131-82ccd58e28d1', N'PSC Lookup: Changes Applied, Documents Need Filing', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, EffDate desc ) AS [RowNum] FROM
(
select distinct 
  p.projectguid,
p.EffDate, 
d.ReceiptDocID, 
p.ProjectName, 
e.Explanation,  
1 as noorder
from txdPSCProject p with (nolock)
left join txdPSCExplanations e with (nolock)
 on p.ProjectGuid = e.ProjectGuid
and p.PartnerID = e.PartnerID
left join txdPSCDetails d with (nolock)
on p.ProjectGuid = d.ProjectGuid 
and d.ExplanationGuid = e.ExplanationGuid

left join txdPSCDocumentStatus s 
on s.ProjectGuid = p.ProjectGuid
and s.PartnerID = p.PartnerID
where p.Status = ''Applied'' 
and p.PartnerID = (select partnerid from tmfdefaults with (nolock))
)
AS LookupViewInner WHERE @whereclause@', CAST(N'2018-02-23T10:30:44.090' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-26T00:00:00.000' AS DateTime), N'79e2948c-56ff-4bb0-a389-7cd55784570e', N'PSC Lookup: Open Projects', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, EffDate desc ) AS [RowNum] FROM
(
select distinct   
  p.projectguid, p.EffDate, d.ReceiptDocID, p.ProjectName, e.Explanation, 1 as noorder
from txdPSCProject p with (nolock)
left join txdPSCExplanations e with (nolock)
on p.ProjectGuid = e.ProjectGuid
and p.PartnerID = e.PartnerID
left join txdPSCDetails d with (nolock)
on p.ProjectGuid = d.ProjectGuid 
and d.ExplanationGuid = e.ExplanationGuid
and d.PartnerID = e.PartnerID
left join txdPSCDocumentStatus s
 on s.ProjectGuid = p.ProjectGuid
and s.PartnerID = p.PartnerID
where p.Status = ''Open'' 
and p.PartnerID = (select partnerid from tmfdefaults with (nolock))
)
AS LookupViewInner WHERE @whereclause@', CAST(N'2018-02-23T10:27:58.580' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-26T00:00:00.000' AS DateTime), N'8a4fb21e-7808-4ca4-a2c5-484dc6eb93f5', N'PSC Lookup: Receipts Approaching 14 Day Window', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, receiptdate asc ) AS [RowNum] FROM
(
select distinct 
r.ReceiptDate, 
d.ReceiptDocID, 
p.ProjectName, 
e.Explanation, 
datediff(day, r.receiptdate, getdate()) as ''Days Since Receipt Date of Admission'', 
1 as noorder
from txdPSCProject p with (nolock)
left join txdPSCExplanations e 
on p.ProjectGuid = e.ProjectGuid
left join txdPSCDetails d with (nolock)
on p.ProjectGuid = d.ProjectGuid
 and d.ExplanationGuid = e.ExplanationGuid
and d.PartnerID = e.PartnerID
left join txdPSCDocumentStatus s with (nolock)
 on s.ProjectGuid = p.ProjectGuid
and s.PartnerID = p.PartnerID
left join txdReceiptHist r with (nolock)
 on r.ReceiptDocID = d.ReceiptDocID 
and r.FifoGUID = d.FifoGuid
and r.PartnerID = d.PartnerID
where p.Status = ''Open'' 
and datediff(day, r.receiptdate, getdate()) < 21
and p.partnerID = (select partnerid from tmfdefaults with (nolock))
)
AS LookupViewInner WHERE @whereclause@', CAST(N'2018-02-23T10:32:00.770' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:01:02.197' AS DateTime), N'5b2474a9-0601-408c-b56c-0c28d0949d6e', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Fifteen'' AS [ComparisonFieldName]
 ,man.ManualValidationFifteen AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationFifteen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationFifteen', CAST(N'2015-07-06T12:01:02.197' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:01:45.927' AS DateTime), N'0d3c541b-10de-4703-a97f-a698b9db7105', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentySeven'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentySeven AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentySeven <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentySeven', CAST(N'2015-07-06T12:01:45.927' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:02:02.070' AS DateTime), N'6f3e1055-6228-479d-b541-614b9dc45af1', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Sixteen'' AS [ComparisonFieldName]
 ,man.ManualValidationSixteen AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationSixteen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationSixteen', CAST(N'2015-07-06T12:02:02.070' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:02:39.630' AS DateTime), N'973c34eb-b4c1-4acb-aa10-2f9b2fdb5adf', N'EVValidation', N' INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Seventeen'' AS [ComparisonFieldName]
 ,man.ManualValidationSeventeen AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationSeventeen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationSeventeen', CAST(N'2015-07-06T12:02:39.630' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:02:47.343' AS DateTime), N'090e66d2-9dec-4668-a9e7-c952365d3b37', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentyEight'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentyEight AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentyEight <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentyEight', CAST(N'2015-07-06T12:02:47.343' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:03:17.033' AS DateTime), N'0592d979-f82a-4926-9fb2-2884e5024998', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Eighteen'' AS [ComparisonFieldName]
 ,man.ManualValidationEighteen AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationEighteen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationEighteen', CAST(N'2015-07-06T12:03:17.033' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:03:41.003' AS DateTime), N'd586d8f2-0a25-49e5-b5ea-497aadf4c573', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentyNine'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentyNine AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentyNine <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentyNine', CAST(N'2015-07-06T12:03:41.003' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:04:01.283' AS DateTime), N'c6804551-f0cb-4927-aa8d-753972e6d6be', N'EVValidation', N' INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Nineteen'' AS [ComparisonFieldName]
 ,man.ManualValidationNineteen AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationNineteen <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationNineteen', CAST(N'2015-07-06T12:04:01.283' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:04:26.300' AS DateTime), N'13c8ceba-e704-41bd-b12e-9df78bf40fbe', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Thirty'' AS [ComparisonFieldName]
 ,man.ManualValidationThirty AS [ComparisonFieldValue]
 ,''txdUSEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdUSEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationThirty <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationThirty', CAST(N'2015-07-06T12:04:26.300' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:04:35.627' AS DateTime), N'cafb76db-5b83-42aa-8f00-382f2cdbf2f9', N'EVValidation', N' INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Twenty'' AS [ComparisonFieldName]
 ,man.ManualValidationTwenty AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwenty <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwenty', CAST(N'2015-07-06T12:04:35.627' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:05:24.390' AS DateTime), N'088bd18d-2969-41e5-90a2-67d05e3885c3', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentyOne'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentyOne AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentyOne <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentyOne', CAST(N'2015-07-06T12:05:24.390' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:06:09.253' AS DateTime), N'304ddbc8-854e-4e58-af33-583a8d03b676', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentyTwo'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentyTwo AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentyTwo <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentyTwo', CAST(N'2015-07-06T12:06:09.253' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:06:51.003' AS DateTime), N'f9c1d401-6c7a-49f0-8335-ac9c990d0ba7', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentyThree'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentyThree AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentyThree <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentyThree', CAST(N'2015-07-06T12:06:51.003' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:07:34.850' AS DateTime), N'0c73aea4-40a1-4396-8e8b-06290cbf1973', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentyFour'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentyFour AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentyFour <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentyFour', CAST(N'2015-07-06T12:07:34.850' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:08:24.823' AS DateTime), N'1a680d8c-d65d-4172-ad7e-86728ce68cfb', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentyFive'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentyFive AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentyFive <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentyFive', CAST(N'2015-07-06T12:08:24.823' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:09:13.423' AS DateTime), N'6f39fb6a-1d68-4ce4-bd87-7d20db4882b4', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentySix'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentySix AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentySix <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentySix', CAST(N'2015-07-06T12:09:13.423' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:09:58.070' AS DateTime), N'1a2145b0-7f05-46d6-ac78-fb5ca2348cc1', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentySeven'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentySeven AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentySeven <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentySeven', CAST(N'2015-07-06T12:09:58.070' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:10:37.423' AS DateTime), N'6d76e19d-8023-4977-8631-0cd7d036188a', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentyEight'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentyEight AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentyEight <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentyEight', CAST(N'2015-07-06T12:10:37.423' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:11:24.930' AS DateTime), N'c5f7944d-2adb-4dd1-b165-bcbcbed740ed', N'EVValidation', N' INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation TwentyNine'' AS [ComparisonFieldName]
 ,man.ManualValidationTwentyNine AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationTwentyNine <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationTwentyNine', CAST(N'2015-07-06T12:11:24.930' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-07-06T12:12:03.860' AS DateTime), N'b5d4e4ed-5c15-476c-b741-5e5e7d4de845', N'EVValidation', N' INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''txdEntryValidationManualChecks'' AS [ComparisonTable]
 ,''Manual Validation Thirty'' AS [ComparisonFieldName]
 ,man.ManualValidationThirty AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''Entry'' AS [SourceFieldName]
 ,''Not Blank'' AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN txdEntryValidationManualChecks man WITH (NOLOCK)
 ON entry.EntryNum = man.EntryNum
  AND entry.PartnerID = man.PartnerID
WHERE man.ManualValidationThirty <> ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,man.ManualValidationThirty', CAST(N'2015-07-06T12:12:03.860' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-08-10T14:29:41.810' AS DateTime), N'f926aa47-aa83-4188-a5e7-6d1b76e3c2e5', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''tmdCAProductClassification'' AS [ComparisonTable]
 ,''PreferenceCode1'' AS [ComparisonFieldName]
 ,capc.PreferenceCode1 AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''SPICode1'' AS [SourceFieldName]
 ,entry.SPICode1 AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN tmdCAProductClassification capc WITH (NOLOCK)
 ON entry.ProductNum = capc.ProductNum
  AND entry.PartnerID = capc.PartnerID
WHERE capc.PreferenceCode1 <> entry.SPICode1
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,capc.PreferenceCode1
 ,entry.SPICode1', CAST(N'2015-08-10T14:29:41.810' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-08-10T14:31:31.383' AS DateTime), N'def0dcc8-4668-421d-b45e-4b29ee3ca95e', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''tmdCAProductClassification'' AS [ComparisonTable]
 ,''PreferenceCode2'' AS [ComparisonFieldName]
 ,capc.PreferenceCode2 AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''SPICode2'' AS [SourceFieldName]
 ,entry.SPICode2 AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
JOIN tmdCAProductClassification capc WITH (NOLOCK)
 ON entry.ProductNum = capc.ProductNum
  AND entry.PartnerID = capc.PartnerID
WHERE capc.PreferenceCode2 <> entry.SPICode2
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,capc.PreferenceCode2
 ,entry.SPICode2', CAST(N'2015-08-10T14:31:31.383' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-08-10T14:37:14.673' AS DateTime), N'566ec6c8-8f90-498d-aecb-1029e3e0eef1', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''Standard'' AS [ComparisonTable]
 ,''IORNum'' AS [ComparisonFieldName]
 ,''Not Blank'' AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''IORNum'' AS [SourceFieldName]
 ,entry.IORNum AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
WHERE entry.IORNum = ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,entry.IORNum', CAST(N'2015-08-10T14:37:14.673' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-08-10T14:38:57.420' AS DateTime), N'cd0c68ed-7450-4b36-a209-41425d913ed4', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''Standard'' AS [ComparisonTable]
 ,''InvoiceNum'' AS [ComparisonFieldName]
 ,''Not Blank'' AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''InvoiceNum'' AS [SourceFieldName]
 ,entry.InvoiceNum AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
WHERE entry.InvoiceNum = ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,entry.InvoiceNum', CAST(N'2015-08-10T14:38:57.420' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-08-10T14:43:51.260' AS DateTime), N'a9bca3ec-743b-4552-bfc3-6ec0b2998845', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''Standard'' AS [ComparisonTable]
 ,''ProductNum'' AS [ComparisonFieldName]
 ,''Not Blank'' AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''ProductNum'' AS [SourceFieldName]
 ,entry.ProductNum AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
WHERE entry.ProductNum = ''''
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,entry.ProductNum', CAST(N'2015-08-10T14:43:51.260' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-08-10T14:49:57.977' AS DateTime), N'70b7c34f-3fc8-4c0c-ae14-4ac2820d924f', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''Standard'' AS [ComparisonTable]
 ,''ValueforDuty'' AS [ComparisonFieldName]
 ,''Not Zero'' AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''ValueforDuty'' AS [SourceFieldName]
 ,entry.ValueforDuty AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
WHERE entry.ValueforDuty = 0
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,entry.ValueforDuty', CAST(N'2015-08-10T14:49:57.977' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-08-10T14:52:31.137' AS DateTime), N'1affc5d7-9058-4e57-b11a-1a5aaf61f69e', N'EVValidation', N'INSERT INTO txdEntryValidationErrors
SELECT entry.PartnerID AS [PartnerID]
 ,GetDate() AS [EffDate]
 ,entry.EntryGuid AS [EntryGUID]
 ,entry.LineGuid AS [LineGUID]
 ,''@validationguid@'' AS [ValidationGuid]
 ,''@group@'' AS [ValidationGroup]
 ,''@type@'' AS [ValidationType]
 ,''Standard'' AS [ComparisonTable]
 ,''CustomsDuty'' AS [ComparisonFieldName]
 ,''Not Zero'' AS [ComparisonFieldValue]
 ,''txdCAEntryVisibility'' AS [SourceTable]
 ,''CustomsDuty'' AS [SourceFieldName]
 ,entry.CustomsDuty AS [SourceFieldValue]
 ,''@message@'' AS [Message]
 ,''N'' AS [KeepDuringRollback]
 ,''N'' AS [DeletedFlag]
FROM txdCAEntryVisibility entry WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
 ON evss.entryguid = entry.entryguid
  AND evss.partnerid = entry.partnerid
WHERE entry.CustomsDuty = 0
 AND evss.StatusCode IN (
  ''N''
  ,''H''
  ,''U''
  )
 AND entry.ClosedFlag <> ''Y''
 AND entry.PartnerID = (
  SELECT PartnerID
  FROM tmfdefaults WITH (NOLOCK)
  )
GROUP BY entry.PartnerID
 ,entry.entryguid
 ,entry.LineGuid
 ,entry.CustomsDuty', CAST(N'2015-08-10T14:52:31.137' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-26T00:00:00.000' AS DateTime), N'ac557ce8-b082-4a06-a161-68d3836d5c88', N'PSC Lookup: Affected Documents', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, FilingDate desc ) AS [RowNum] FROM
(
select distinct
p.projectguid,
  d.FilingDate,
  d.Document,
  d.Status, 1 as noorder
from txdPSCDocumentStatus d with (nolock)
join txdPSCProject p with (nolock) 
on d.ProjectGuid = p.ProjectGuid
and d.PartnerID = p.PartnerID
where d.Type = ''Entry''
and d.Status = case ''@VALUE@'' 
											when ''ALL'' then d.Status
											when ''Needs PSC'' then ''Needs PSC''
											when ''Not Filed in ACE'' then ''Not Filed in ACE''
											when ''PSC Needs Review'' then ''PSC Needs Review''
											when ''PSC Transmitted'' then ''PSC Transmitted''
										else '''' end
  
  group by   
  p.projectguid,
  d.FilingDate,
  d.Document,
  d.Status
)
AS LookupViewInner WHERE @whereclause@', CAST(N'2018-02-23T10:26:13.520' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-06-16T12:19:38.867' AS DateTime), N'dd43a722-dcc9-4022-80b7-c551d1431fc6', N'EV Govt Lookup', N'
			SELECT * ,  ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]  
			FROM (
				SELECT DISTINCT a.GovtHeaderGUID, a.PartnerID, a.EntryNum , 
					CASE
						WHEN ev.PartnerID IS NULL THEN ''''
						ELSE ''View''
					END AS ViewCol,
					CASE
						WHEN ev.PartnerID IS NULL THEN ''No''
						ELSE ''Yes''
					END AS BrokerData,
					CASE
						WHEN b.PartnerID IS NULL THEN ''''
						ELSE ''Validations''
					END AS ValidationCol,
					MAX(CONVERT(VARCHAR(10), a.Effdate, 101)) AS ''EffDate'',  
					MAX(CONVERT(VARCHAR(10), a.EntryDate, 101)) AS ''EntryDate'',    
					ISNULL(d.Decode, '''') AS ''Status'',   a.BrokerName,  
					a.HouseBillOfLading,   a.ImporterID,   ''@country_code@'' AS Country,  
					1 AS NoOrder  
				FROM txd@country_code@EVGovernmentData a WITH (NOLOCK)
				LEFT OUTER JOIN txd@country_code@EntryVisibility ev WITH (NOLOCK)
					ON
					ev.PartnerID = a.PartnerID AND
					ev.EntryNum = a.EntryNum AND
					ev.LineNum = a.LineNum
				LEFT OUTER JOIN txdEVGovtValidationErrors b WITH (NOLOCK) 
					ON a.GovtDetailGUID = b.GovtDetailGUID   
					AND a.PartnerID = b.PartnerID    
				LEFT OUTER JOIN txdEVGovtValidationSummaryStatus evss WITH (NOLOCK) 
					ON evss.PartnerID = a.PartnerID    
					AND evss.GovtHeaderGUID = a.GovtHeaderGUID
				LEFT OUTER JOIN tmgGlobalCodes d WITH (NOLOCK) 
					ON a.PartnerID = d.PartnerID    
					AND d.FieldName = ''EVGovtSummaryStatus''    
					AND evss.StatusCode = d.Code    
				WHERE a.PartnerID = (select PartnerID from tmfDefaults WITH (NOLOCK))    
					AND a.EffDate = 
					(SELECT MAX(a2.effdate) FROM txd@country_code@EVGovernmentData a2 WITH (NOLOCK)
					WHERE a.PartnerID = a2.PartnerID AND a.EntryNum = a2.EntryNum)    
				GROUP BY a.GovtHeaderGUID, a.PartnerID , a.EntryNum , d.Decode, 
				a.BrokerName, a.HouseBillOfLading, a.ImporterID, ev.PartnerID, b.PartnerID

			) AS LookupViewInner  
			WHERE @whereclause@
		', CAST(N'2016-12-19T07:58:51.620' AS DateTime), N'Displays general government entry data information', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-06-16T12:19:38.867' AS DateTime), N'1dbad088-4044-489c-b734-5e9d48ce509b', N'Shipments Exceeding $2,500', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
		) AS [RowNum]
FROM (
	SELECT eh.effdate
		,eh.PartnerID
		,eh.ExportGuid
		,eh.OrderNumShip
		,eh.AccountNum
		,eh.OrderNum AS OrderNum
		,(
			SELECT cast(SUM(TotalValue) AS NUMERIC(38, 2))
			FROM txdExportDetail d WITH (NOLOCK)
			WHERE eh.partnerid = d.partnerid
				AND eh.exportguid = d.exportguid
			) AS TotalValue
		,eh.AESSubmitFlag
		,eh.AESITN
		,CASE 
			WHEN EXISTS (
					SELECT 1
					FROM txdExportSystemMessages esm WITH (NOLOCK)
					WHERE esm.PartnerID = eh.Partnerid
						AND esm.ExportGUID = eh.ExportguID
						AND esm.Field = ''AESSubmitFlag''
						AND esm.HoldFlag = ''Y''
					)
				AND NOT EXISTS (
					SELECT 1
					FROM txdExportSystemMessages esm WITH (NOLOCK)
					WHERE esm.PartnerID = eh.Partnerid
						AND esm.ExportGUID = eh.ExportguID
						AND esm.Field <> ''AESSubmitFlag''
						AND esm.HoldFlag = ''Y''
					)
				THEN g.decode + '' - AES Selection''
			ELSE g.Decode
			END AS STATUS
		,ep.SellerID
		,ep.SellerCompanyName
		,ep.BillToCompanyName
		,ep.ShipToCompanyName
		,eh.ImportCountry
		,ep.ShipToCity + '' -  '' + ep.ShipToCountryCode AS ShipToCityCountry
		,eh.RequestedDate
		,eha.EMHS01
		,eha.EMHS02
		,eha.EMHS03
		,ep.ShipFromCity
		,eha.EMHD01
		,ISNULL(STUFF((
					SELECT ''// '' + Note
					FROM txdExportNote en
					WHERE eh.ExportGUID = en.ExportGUID
					ORDER BY en.Effdate
					FOR XML PATH('''')
					), 1, 2, ''''), '''') AS Note
		,1 AS NoOrder
	FROM txdExportHeader eh with (nolock)
	JOIN txdExportParties ep with (nolock)
		ON eh.ExportGuid = ep.ExportGuid
			AND eh.PartnerID = ep.PartnerID
	JOIN txdExportHeaderAddlFields eha with (nolock)
		ON eh.ExportGuid = eha.ExportGuid
			AND eh.PartnerID = eha.PartnerID
	LEFT JOIN tmgglobalcodes g with (nolock)
		ON g.PartnerID = eh.PartnerID
			AND g.Code = eh.STATUS
			AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.RecordType = ''E''
		AND Eh.STATUS NOT IN (''V'')
		AND (
			SELECT SUM(TotalValue)
			FROM txdExportDetail d WITH (NOLOCK)
			WHERE eh.partnerid = d.partnerid
				AND eh.exportguid = d.exportguid
			) >= 2500
		AND (
			eh.AESSubmitFlag <> ''Y''
			OR eh.AESITN = ''''
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-16T07:46:52.687' AS DateTime), N'This shows AES Shipments Exceeding $2500', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-19T15:13:20.083' AS DateTime), N'9e6eb9fe-3ecd-486c-b4ce-6019d39eb299', N'FTA Lookup: FTA Charts', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY Type) AS [RowNum]
FROM                  (
select    
	''[''+ ''View '' + '']'' + ''(/VISUALIZATION/fdgChartVisualization.aspx?hide='' + isnull(vsp.Hide, '''') +
	''&type='' + vsp.Type + 
	''&XTilt='' + cast(vsp.XTilt as varchar(50)) +
	''&Stacked='' + vsp.Stacked +
	''&SQL='' + cast(ts.SQLGuid as varchar(50)) + 
	''&SQL2='' + vsp.SQL2 +
	'')'' AS [View], 
        ts.SQLDescription + case vsp.SQL2 when '''' then '''' else '' & '' + (select SQLDescription from tmgSQL WITH (NOLOCK) where SQLGUID = vsp.SQL2) end as ChartName,
        vsp.Category,
        vsp.Type,
        1 AS NoOrder 
from tmgSQL ts WITH (NOLOCK)
join txdVisualizationSQLParams vsp  WITH (NOLOCK) ON
	ts.SQLGUID = vsp.SQLGUID and
	ts.PartnerID = vsp.PartnerID
where 
	vsp.Category IN (''FTA'', ''FTA BOM Lookup'', ''FTA Certification Lookup'', ''FTA Certificate Lookup'', ''FTA Solicitation Lookup'')
and
	ts.PartnerID = (select PartnerID from tmfDefaults)

) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2018-04-23T15:32:42.743' AS DateTime), N'Displays charts that can be generated based off various reports from FTA data.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-05-07T00:50:23.173' AS DateTime), N'95099fe7-ada2-4e40-844c-5464696b1403', N'FTA Solicitation Lookup: Solicitations with Action Required', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY Status, DateSent, DueDate ) AS [RowNum]
            FROM                  (
select  ''['' + dr.Title + ''](/FTA/Maintenance/fmgSolicitationManagement.aspx?id='' + dr.DocReqGuid + '')'' as Title, 
dr.Status, 
year(dr.PeriodBeginDate) as ''SolicitationYear'', 
convert (varchar,dr.DateSent,101) as ''DateSent'', 
convert (varchar,dr.DueDate,101) as ''DueDate'',
1 AS NoOrder
from tmgDocRequest dr WITH (nolock) 
 where dr.PartnerID = @PartnerID@
  and Status = ''Action Required''
) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2018-02-27T23:20:56.580' AS DateTime), N'Displays solicitations which are currently awaiting a response.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-05-07T00:55:52.953' AS DateTime), N'87df2899-c698-47a6-a6ee-9be24bbf932f', N'Solicitation: Past Due', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY DueDate
			,STATUS
		) AS [RowNum]
FROM (
	SELECT DISTINCT ''['' + ''View'' + ''](/FTA/Maintenance/fmgSolicitationManagement.aspx?id='' + dr.DocReqGuid + '')'' AS [View]
		,dr.Title
		,drd.CertAgreement AS ''FTA''
		,convert(VARCHAR, dr.DueDate, 1) AS DueDate
		,DATEDIFF(d, dr.duedate, getdate()) AS DaysOverdue
		,dr.STATUS
		,comp.CompanyName AS Supplier
		,1 AS NoOrder
	FROM tmgDocRequest dr WITH (NOLOCK)
	JOIN tmgDocRequestDetail drd WITH (NOLOCK) ON dr.PartnerID = drd.PartnerID
		AND dr.DocReqGuid = drd.DocReqGuid
	JOIN tmgCompany comp WITH (NOLOCK) ON drd.PartnerID = comp.PartnerID
		AND replace(drd.Supplier, cast(drd.PartnerID AS VARCHAR) + ''~'', '''') = comp.CompanyID
	WHERE dr.PartnerID = @PartnerID@
		AND dr.DueDate < getdate()
		AND STATUS IN (
			''Sent''
			,''Not Complete''
			,''Action Required''
			)
	GROUP BY comp.companyname
		,dr.docreqguid
		,dr.DueDate
		,dr.STATUS
		,dr.title
		,drd.CertAgreement
		,drd.Supplier
		,drd.PartnerID
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-04-24T10:41:48.577' AS DateTime), N'Displays FTA, Supplier, and DueDate information for Solicitations that are overdue', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-05-07T01:03:33.780' AS DateTime), N'cd4319f7-69f9-48aa-9b45-278a2c0e13f1', N'FTA Solicitation Lookup: Active Solicitations', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY Status, SolicitationYear, DateSent, DueDate ) AS [RowNum]
            FROM                  (
select Distinct
 ''['' + dr.Title + ''](/FTA/Maintenance/fmgSolicitationManagement.aspx?id='' + dr.DocReqGuid + '')'' as Title, 
 Status, 
 year(dr.PeriodBeginDate) as ''SolicitationYear'', 
 convert (varchar,dr.DateSent,101) as ''DateSent'', 
 convert (varchar,dr.DueDate, 101) as ''DueDate'',
 ''['' + comp.CompanyName + ''](/FTA/Maintenance/fmgSupplierDashboard.aspx?SUPP='' + replace(drd.Supplier, cast(drd.PartnerID as varchar) + ''~'', '''') + '')'' as Supplier,
1 AS NoOrder
 from tmgDocRequest dr WITH (NOLOCK) 
 join tmgdocrequestdetail drd WITH (NOLOCK) on
 dr.DocReqGUID = drd.DocReqGUID and
 dr.PartnerID = drd.PartnerID
 join tmgCompany comp WITH (NOLOCK) on 
drd.PartnerID = comp.PartnerID and 
replace(drd.Supplier, cast(drd.PartnerID as varchar) + ''~'', '''') = comp.CompanyID 
 where dr.PartnerID = @PartnerID@
 and status not in (''Final'', ''Archived'', ''Complete'')
) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2018-04-23T15:02:58.480' AS DateTime), N'Displays solicitations which are currently active.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-31T14:47:18.787' AS DateTime), N'd6633343-53de-4d27-b9da-735b00b2a25e', N'FTA Certificate Lookup: Certificate Lookup', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY FromDate, ToDate, ProductNum ) AS [RowNum]
            FROM                  (
select 
								p.Name, 
								p.Status, 
								Convert (varchar,p.FromDate,101) as FromDate, 
								Convert (varchar,p.ToDate,101) as ToDate, 
								c.Company as CompanyName, 
								d.ProductNum,
								d.ProductDesc, 
								p.CertAgreement as FTA,
1 AS NoOrder
								from dbo.txdCertHeader p with (nolock)  
								inner join dbo.txdCertDetail d with (nolock) on  
								p.HeaderGuid = d.HeaderGuid and  
								p.PartnerID = d.PartnerID  
								left outer join dbo.txdCertCustomer c with (nolock) on  
								c.PartnerID = p.PartnerID and  
								c.HeaderGuid = p.HeaderGuid
								where p.Status = ''@Country_Code@''
								and p.PartnerID = @PartnerID@
) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2019-01-09T14:35:54.480' AS DateTime), N'Displays high-level certificate data', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-31T14:59:23.040' AS DateTime), N'036954d1-0c0e-4e9f-8577-2e659b320099', N'Solicitation Lookup: Outstanding Products', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, SupplierID ) AS [RowNum]
            FROM                  (
SELECT 
''['' + ''View'' + ''](/Maintenance/fmgCompanyMaintenance.aspx?CompanyID='' + pc.SupplierID + '')'' as [View],
    ISNULL(pc.SupplierID,''MISSING'') AS SupplierID,
        Comp.CompanyName as Supplier,
drd.CertAgreement as ''FTA'',
    COUNT(drd.Identifier) as [Outstanding Products],
1 AS NoOrder 
FROM tmgDocRequest DR WITH (NOLOCK) 
JOIN tmgDocRequestDetail DRD WITH (NOLOCK) ON 
    DR.PartnerID = DRD.PartnerID AND 
    DR.DocReqGUID = DRD.DocReqGUID 
LEFT JOIN tmdproductClassification pc WITH (nolock) 
ON pc.PartnerID = DR.PartnerID
AND pc.ProductNum = drd.identifier              
LEFT JOIN txdcertdetailstatus cds WITH(NOLOCK) ON cds.Detailguid = drd.docreqdetailguid
and cds.PartnerID = drd.PartnerID
JOIN tmgCompany comp WITH (nolock) on 
drd.PartnerID = comp.PartnerID and 
replace(drd.Supplier, cast(drd.PartnerID as varchar) + ''~'', '''') = comp.CompanyID 
      WHERE  dr.PartnerID = (SELECT PartnerID FROM tmfDefaults WITH (NOLOCK)) 
    AND YEAR(DR.PeriodBeginDate) = year(getdate())
    AND DR.Status IN (''SENT'',''NOT COMPLETE'',''ACTION REQUIRED'',''REJECTED'')  
    AND ( CDS.PartnerID IS NULL  OR cds.Generated<>''Y'')
GROUP BY pc.SupplierID, comp.CompanyName, DRd.supplier, drd.CertAgreement, DRD.PartnerID
) AS LookupViewInner
WHERE                               
         @whereclause@

', CAST(N'2019-01-02T16:30:10.307' AS DateTime), N'Displays supplier Information for products that have a PeriodBeginDate in the current year and have a solicitation that is not complete', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-07-31T15:01:06.690' AS DateTime), N'9c22ecee-4cfe-4402-a740-191638973c58', N'BOM Lookup', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY BOMStartDate, BOMEndDate, FinishedGood, Component ) AS [RowNum]
            FROM                  (
SELECT
''['' + ''View'' + ''](/Interfaces/fidBOMAnalysisUpload.aspx?BOM='' + IM.BOMGUID + '')'' as [View],
BillOfMaterials as Name,
Convert (varchar,BOMStartDate,101) as BOMStartDate,
Convert (varchar,BOMEndDate,101) as BOMEndDate,
IM.ProductNum as FinishedGood, 
CONVERT(DECIMAL(15,4),IM.Value) as FGNetCost,
CONVERT(DECIMAL(10,4),IM.CommercialValue) as FGTransactionValue,
IM.HTSNum as FGHSNum,
IM.CountryOfOrigin as FGCountryOfOrigin, 
PC.ProductNum as Component,
CONVERT(DECIMAL(15,4),PC.Value) as CNetCost,
CONVERT(DECIMAL(10,4),PC.AccumulationValue) as CTransactionValue,
PC.HTSNum as CHSNum,
PC.QtyPerIM as QtyPerIM, 
PC.TracedValue as CTracedValue,
PC.ManufacturerID as CManufacturerID,
1 AS NoOrder
FROM dbo.txdBOMIM IM WITH (NOLOCK) 
INNER JOIN dbo.txdBOMPC PC WITH (NOLOCK) ON IM.BOMGUID = PC.BOMGUID And IM.PartnerId = PC.PartnerId
WHERE IM.BOMType = ''FTA''
AND IM.PartnerID=@PartnerID@     
) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2019-01-09T14:39:19.497' AS DateTime), N'Provides finished good and component level BOM details', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-01T11:24:36.100' AS DateTime), N'f4f6ebb9-f6f9-4aba-84a7-469db2ce620c', N'BOM: Components with New Certificates', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY AcceptanceDate, ProductNum ) AS [RowNum]
            FROM                  (
                                Select 
                                ''['' + ''View'' + ''](/Interfaces/fidBOMAnalysisUpload.aspx?BOM='' + f.BOMGUID + '')'' as [View],
                                                f.BillOfMaterials,
                                                a.ProductNum,
                 								a.HTSNum as HSNum, 
                                                a.CountryOfOrigin,
                                                convert (varchar, d.effdate, 101) as AcceptanceDate,
                                1 AS NoOrder
                                from txdBOMPC a with(nolock)
                                join tmgProductNumFTAcert d with(nolock)
                                                on d.partnerid = a.partnerid
                                                and d.productnum= a.productnum
                                join txdBOMIM f with(nolock)
                                                on f.partnerid = a.partnerid
                                                and f.bomguid = a.bomguid
                                where
                                                a.PartnerID = @PartnerID@
                                                and d.effdate > GetDate() - 30
) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2019-01-18T14:49:00.123' AS DateTime), N'Displays BOM information for components with recently acquired certificates', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-01T13:26:39.507' AS DateTime), N'5c28fed1-5a35-4d65-a032-4a95b76662a5', N'Solicitation Lookup: Solicitations with New Comments', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY DateSent, EffDate, Status ) AS [RowNum]
            FROM                  (
SELECT
''['' + ''View'' + ''](/FTA/Maintenance/fmgSolicitationManagement.aspx?id='' + dr.DocReqGuid + '')'' as [View],
dr.Title,
DR.DateSent,
dc.Effdate,
drd.CertAgreement as ''FTA'',
DR.Status,
DC.Comment,
Comp.CompanyName as Supplier,
1 AS NoOrder
FROM tmgdocrequest DR WITH (NOLOCK) 
join tmgdocrequestdetail drd WITH (NOLOCK) 
on drd.DocReqGUID = dr.DocReqGUID and drd.PartnerID = dr.PartnerID
JOIN tmgCompany comp WITH (NOLOCK) 
on comp.CompanyID = Right(Drd.Supplier,( len(drd.Supplier) - Charindex(''~'',drd.Supplier)))
JOIN tmgDocRequestComments dc WITH (NOLOCK)
on dc.DocReqGUID = dr.DocReqGUID and dr.PartnerID = dc.PartnerID
WHERE dc.EffDate BETWEEN DateAdd(d,-30,GETDATE()) AND GETDATE()  and
 dr.PartnerID = @PartnerID@
) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2018-02-27T17:14:13.570' AS DateTime), N'Displays Supplier and FTA information for solicitations with comments added or changed within the last month', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-01T13:33:25.553' AS DateTime), N'96643fd0-194e-40e3-892e-db835796a94b', N'Solicitation Lookup: Available Products', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum ) AS [RowNum]
            FROM                  (
SELECT 
pc.ProductNum,
MAX(ISNULL(pc.ProductDesc, ''MISSING'')) AS ''ProductDesc'', 
drd.CertAgreement AS ''Agreement'',
ISNULL(pc.SupplierID, ''MISSING'') AS SupplierID,
ISNULL(comp.CompanyContactEmail, ''MISSING'') AS ''SupplierEmail'',
1 AS NoOrder							
FROM tmdproductClassification pc WITH (NOLOCK)
LEFT JOIN tmgCompany comp WITH (NOLOCK) 
ON pc.supplierid = comp.companyid AND pc.PartnerID = comp.PartnerID
LEFT JOIN tmgDocRequestDetail drd WITH (NOLOCK)
ON pc.ProductNum = drd.Identifier AND
pc.SupplierID = replace(drd.supplier, cast(drd.PartnerID as varchar(20)) + ''~'', '''')
AND pc.PartnerID = drd.PartnerID
AND ( drd.CertAgreement = ''NAFTA-US'' OR drd.CertAgreement = '''' )
LEFT JOIN 
(	SELECT PartnerID,ProductNum,ManufacturerID, COUNT(ProductNum) as pCount FROM tmgProductNumFTACert pnfc WITH (NOLOCK)
WHERE (CertificateStartDate BETWEEN ''01/01/'' +  cast(year(getdate()) as varchar(4))
										AND ''12/31/'' +  cast(year(getdate()) as varchar(4)) OR CertificateEndDate BETWEEN ''01/01/'' +  cast(year(getdate()) as varchar(4))
										AND ''12/31/'' +  cast(year(getdate()) as varchar(4)))
AND Status = ''Active'' AND CertType in (''NAFTA-US (NQ)'', ''NAFTA-US'') 
GROUP BY ProductNum,ManufacturerID,PartnerID ) p 
ON p.PartnerID = pc.PartnerID AND p.ProductNum = pc.ProductNum AND p.ManufacturerID = pc.SupplierID
--joins to doc requests to make sure no current solicitation for this part exists
LEFT JOIN 
(  SELECT drdx.PartnerID, drdx.Identifier, REPLACE(drdx.Supplier, CAST(drdx.PartnerID AS VARCHAR) + ''~'', '''') AS Supplier
FROM tmgDocRequestDetail drdx WITH (NOLOCK) 
JOIN tmgDocRequest dr WITH (NOLOCK) ON drdx.DocReqGUID = dr.DocReqGUID AND drdx.PartnerID = dr.PartnerID
LEFT JOIN (SELECT PartnerId, DocReqDetailGuid FROM tmgDocRequestDetailAttachments a WITH (NOLOCK) WHERE a.Status = ''Accepted'' ) dra
ON dra.DocReqDetailGuid = drdx.DocReqDetailGUID AND dra.PartnerId = drdx.PartnerID
WHERE drdx.StatusFlag NOT IN (''Final'', ''Not Sent'') AND dr.Status <> ''Archived'' AND dra.DocReqDetailGuid IS NULL
AND ( dr.periodbegindate BETWEEN ''01/01/'' +  cast(year(getdate()) as varchar(4))
										AND ''12/31/'' +  cast(year(getdate()) as varchar(4)) OR dr.periodenddate BETWEEN ''01/01/'' +  cast(year(getdate()) as varchar(4))
										AND ''12/31/'' +  cast(year(getdate()) as varchar(4)))
						 ) x 
ON x.PartnerID = pc.PartnerID AND x.Identifier = pc.ProductNum AND x.Supplier = pc.SupplierID
WHERE pc.SupplierID <> '''' AND p.pCount IS NULL AND x.Supplier IS NULL
AND pc.Partnerid=@PartnerID@              
--	@@SELECTED@@ --replaces with AND pc.CountryOfOrigin IN (agreement country list)
GROUP BY pc.Productguid, pc.ProductNum, drd.CertAgreement, pc.SupplierID, comp.CompanyContactEmail, drd.DocReqDetailGuid
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2019-01-02T16:31:09.177' AS DateTime), N'Displays Product and Supplier information for products with statuses of ''Active'' and ''Accepted''', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-01T13:36:21.733' AS DateTime), N'46e13ff4-7cbc-40e7-a8d6-39793267f2fb', N'Solicitation Lookup: Invalid Products', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum
		) AS [RowNum]
FROM (
	SELECT ''['' + pc.ProductNum + ''](/Maintenance/Edit.aspx?ID='' + cast(pc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS ProductNum
		,MAX(ISNULL(pc.ProductDesc, ''MISSING'')) AS ''ProductDesc''
		,ISNULL(''['' + pc.SupplierID + '']'' + ''(/Maintenance/fmgCompanyMaintenance.aspx?CompanyID='' + pc.SupplierID + '')'', ''MISSING'') AS SupplierID
		,ISNULL(comp.CompanyContactEmail, ''MISSING'') AS ''SupplierEmail''
		,1 AS NoOrder
	FROM tmdproductClassification pc WITH (NOLOCK)
	LEFT JOIN tmgCompany comp WITH (NOLOCK) ON pc.supplierid = comp.companyid
		AND pc.PartnerID = comp.PartnerID
	LEFT JOIN tmgcompanyemails emails WITH (NOLOCK) ON emails.partnerid = comp.partnerid
		AND emails.companyid = comp.companyid
	--joins to tmgProductNumFTACert to make sure no active records for this part exist
	LEFT JOIN (
		SELECT PartnerID
			,ProductNum
			,ManufacturerID
			,COUNT(ProductNum) AS pCount
		FROM tmgProductNumFTACert pnfc WITH (NOLOCK)
		WHERE (
				CertificateStartDate BETWEEN ''01/01/'' + cast(year(getdate()) AS VARCHAR(4))
					AND ''12/31/'' + cast(year(getdate()) AS VARCHAR(4))
				OR CertificateEndDate BETWEEN ''01/01/'' + cast(year(getdate()) AS VARCHAR(4))
					AND ''12/31/'' + cast(year(getdate()) AS VARCHAR(4))
				)
			AND STATUS = ''Active''
			AND CertType IN (
				''NAFTA-US (NQ)''
				,''NAFTA-US''
				)
		GROUP BY ProductNum
			,ManufacturerID
			,PartnerID
		) p ON p.PartnerID = pc.PartnerID
		AND p.ProductNum = pc.ProductNum
		AND p.ManufacturerID = pc.SupplierID
	--joins to doc requests to make sure no current solicitation for this part exists
	LEFT JOIN (
		SELECT drdx.PartnerID
			,drdx.Identifier
			,REPLACE(drdx.Supplier, CAST(drdx.PartnerID AS VARCHAR) + ''~'', '''') AS Supplier
		FROM tmgDocRequestDetail drdx WITH (NOLOCK)
		JOIN tmgDocRequest dr WITH (NOLOCK) ON drdx.DocReqGUID = dr.DocReqGUID
			AND drdx.PartnerID = dr.PartnerID
		LEFT JOIN (
			SELECT PartnerId
				,DocReqDetailGuid
			FROM tmgDocRequestDetailAttachments a WITH (NOLOCK)
			WHERE a.STATUS = ''Accepted''
			) dra ON dra.DocReqDetailGuid = drdx.DocReqDetailGUID
			AND dra.PartnerId = drdx.PartnerID
		WHERE drdx.StatusFlag NOT IN (
				''Final''
				,''Not Sent''
				)
			AND dr.STATUS <> ''Archived''
			AND dra.DocReqDetailGuid IS NULL
			AND (
				dr.periodbegindate BETWEEN ''01/01/'' + cast(year(getdate()) AS VARCHAR(4))
					AND ''12/31/'' + cast(year(getdate()) AS VARCHAR(4))
				OR dr.periodenddate BETWEEN ''01/01/'' + cast(year(getdate()) AS VARCHAR(4))
					AND ''12/31/'' + cast(year(getdate()) AS VARCHAR(4))
				)
		) x ON x.PartnerID = pc.PartnerID
		AND x.Identifier = pc.ProductNum
		AND x.Supplier = pc.SupplierID
	WHERE pc.SupplierID <> ''''
		AND p.pCount IS NULL
		AND x.Supplier IS NULL
		AND pc.PartnerID = @PartnerId@
		AND (
			comp.partnerid IS NULL
			OR comp.companytype <> ''supid''
			OR emails.useremail LIKE ''% %''
			OR comp.companycontactemail LIKE ''% %''
			OR emails.useremail = ''''
			OR emails.useremail LIKE ''%'' + CHAR(10) + ''%''
			OR comp.companycontactemail LIKE ''%'' + CHAR(10) + ''%''
			)
	--	@@SELECTED@@ --replaces with AND pc.CountryOfOrigin IN (agreement country list)
	GROUP BY pc.Productguid
		,pc.ProductNum
		,pc.SupplierID
		,comp.CompanyID
		,comp.CompanyContactEmail
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2019-01-02T16:33:46.597' AS DateTime), N'Displays product and supplier information for products that are available but do not have an active record or a current solicitation for the part', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-01T13:49:01.047' AS DateTime), N'0233f2be-d0c5-40b5-9b52-63d209145f8a', N'BOM: Missing Info', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY BOMStartDate, BOMEndDate, ProductNum ) AS [RowNum]
            FROM                  (
SELECT Distinct
''['' + ''View'' + ''](/Interfaces/fidBOMAnalysisUpload.aspx?BOM='' + IM.BOMGUID + '')'' as [View],
BillOfMaterials as Name,
Convert (varchar,BOMStartDate,101) as BOMStartDate,
Convert (varchar,BOMEndDate,101) as BOMEndDate,
IM.ProductNum as ProductNum,
1 AS NoOrder
FROM dbo.txdBOMIM IM WITH (NOLOCK) INNER JOIN dbo.txdBOMPC PC WITH (NOLOCK) ON IM.BOMGUID = PC.BOMGUID And IM.PartnerId = PC.PartnerId
WHERE
(PC.HTSNum='''' OR
PC.ManufacturerID = '''' OR
PC.CountryofOrigin = '''' OR
IM.CountryofManufacture = '''')
 AND PC.PartnerID=@PartnerID@
AND IM.BOMType=''FTA''
AND IM.Processflag = ''Y''
) AS LookupViewInner
WHERE                               
         @whereclause@', CAST(N'2019-01-09T14:43:11.680' AS DateTime), N'BOMs with missing HTS, Manufacturer ID, Country of Origin, or Country of Manufacture information', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-01T16:53:29.200' AS DateTime), N'fed3827f-7789-4ee7-91bb-09badd5c9f35', N'BOM Lookup: Finished Goods Due to Expire', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY BOMStartDate, BOMEndDate, ProductNum ) AS [RowNum]
            FROM                  (
SELECT
''['' + ''View'' + ''](/Interfaces/fidBOMAnalysisUpload.aspx?BOM='' + IM.BOMGUID + '')'' as [View],
BillOfMaterials as Name,
Convert (varchar,BOMStartDate,101) as BOMStartDate,
Convert (varchar,BOMEndDate,101) as BOMEndDate,
IM.ProductNum as ProductNum,
1 AS NoOrder
 FROM dbo.txdBOMIM IM WITH (NOLOCK) 
WHERE
 IM.BOMEndDate
 < GETDATE() + 30
 AND IM.BOMEndDate >= GETDATE()
and processflag = ''Y''
 AND IM.PartnerID=@PartnerId@              
) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2018-04-24T09:59:36.333' AS DateTime), N'Displays BOM information for BOMs set to expire within the next 30 days and without a subsequent BOM', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-01T17:05:51.297' AS DateTime), N'015cfa8c-1b76-4880-b400-7066c13693c3', N'BOM: Analysis Results', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, FinishedGoodProductNum ) AS [RowNum]
            FROM                  (
SELECT
	''['' + ''View'' + ''](/Interfaces/fidBOMAnalysisUpload.aspx?BOM='' + IM.BOMGUID + '')'' as [View], 
	im.productnum AS FinishedGoodProductNum,
	im.BillOfMaterials,
	im.Value AS FinishedGoodValue,
	pc.HSNum AS FinishedGoodHSNum,
	rs.RuleCategory,
	rs.Status,
	rr.TariffShiftFlag AS TariffShift,
	rr.DeMinimisFlag AS DeMinimis,
	rr.RVCFlag AS RVC,
	(select top 1 rvctype from txdRulesStatusRVCHist rvc with(nolock) where rvc.statusguid = rr.statusguid) as [RVCType],
	(select top 1 convert(varchar ,convert(decimal(10,4), percentage)) from txdRulesStatusRVCHist rvc with(nolock)  where rvc.statusguid = rr.statusguid)+''%'' AS RVCPercentage,
1 AS NoOrder
FROM txdbomim im WITH (NOLOCK)
JOIN tmdproductclassification pc WITH (NOLOCK) ON
	im.partnerid = pc.partnerid  AND
	im.productnum = pc.productnum
JOIN txdRulesStatushist rs with (nolock) ON
	im.partnerid = rs.partnerid AND
	im.bomguid = rs.heading
JOIN txdrulesstatusreasonhist rr WITH(nolock) ON
	rs.partnerid = im.partnerid AND
	rs.statusguid = rr.statusguid
JOIN (select PartnerID, max(AnalysisNo)as AnalysisNo, rulecategory, heading from txdrulesstatushist where rulecategory <>'''' group by rulecategory, heading, PartnerID ) AS Ana ON
	Ana.PartnerID = im.PartnerID AND
	Ana.AnalysisNo = rs.AnalysisNo AND
	Ana.rulecategory = rs.RuleCategory AND
	im.bomguid = Ana.heading
WHERE rs.RuleCategory <> ''Invalid'' AND rs.Status <> ''No Rule Found to Analyze''
AND im.partnerid = @PartnerID@
) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2019-01-09T14:43:47.307' AS DateTime), N'Displays BOM analysis results such as tariff shifts, De Minimis, and RVC information for valid BOMs with rules found to analyze	', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-04T09:42:38.377' AS DateTime), N'acd775e0-a3c7-46c3-bbd3-8431d1671066', N'BOM: Components Due to Expire', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY CertificateStartDate, CertificateEndDate, ProductNum ) AS [RowNum]
            FROM                  (
select distinct 
''['' + ''View'' + ''](/Interfaces/fidBOMAnalysisUpload.aspx?BOM='' + IM.BOMGUID + '')'' as [View],
	im.BillOfMaterials,
                 cert.ProductNum,
	cert.ManufacturerID, 
	convert(varchar, cert.CertificateStartDate, 103) as CertificateStartDate, 
	convert(varchar, cert.CertificateEndDate, 103) as CertificateEndDate,
	cert.CertType as Agreement,
	cert.CertDesc,
1 AS NoOrder 
from tmgProductNumFTACert cert with (nolock) 
join txdBOMPC bom with (nolock) 
	on cert.PartnerID = bom.PartnerID 
	and cert.productnum = bom.productnum
    and cert.ManufacturerId = bom.ManufacturerId
join txdBOMIM IM with (nolock) 
	on im.PartnerID = bom.PartnerID 
	and im.BOMGuid = bom.BOMGuid 
where cert.CertificateEndDate < GetDate() + 90
and year(cert.certificatestartdate) = year(im.bomstartdate)
and year(im.bomstartdate) = year(getdate())
and cert.PartnerID=@Partnerid@              
) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2018-04-23T15:23:26.087' AS DateTime), N'Displays product and certificate information for certificates that expire within the next 90 days', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:16:16.370' AS DateTime), N'ebb9f4e4-649a-4fac-8b17-99a136149418', N'Export Lookup: Recent AES Transmissions (Last 3 Months)', N'select distinct 
    ''[View]'' + ''(/Export/fidAESTransmission.aspx?ShipmentRefNum= '' + ah.ShipmentRefNum + '')'' as [View],
    ah.ShipmentRefNum, ah.AESITN, ah.ExportDate, ah.USPPICompanyName, ah.USPPIFederalID, ah.TransmissionDate, case 
    when TransmittedFlag = ''C'' then ''CANCELLED'' 
    when TransmittedFlag = ''N'' and TransmissionDate = ''1/1/1900'' then ''NOT SENT'' 
    else case 
        when ResponseFlag = ''N'' then ''PENDING REPLY'' 
        else case FinalDisposition
            when ''R'' then ''FATALLY REJECTED'' 
            when ''A'' then case SeverityIndicator
                when ''W'' then ''ACCEPTED WITH WARNINGS'' 
                when ''V'' then ''ACCEPTED WITH A VERIFICATION REQUEST'' 
                when ''C'' then ''ACCEPTED WITH A COMPLIANCE ALERT'' 
                when ''I'' then ''ACCEPTED WITH AN INFORMATIONAL NOTICE'' 
                when '''' then ''UNCONDITIONALLY ACCEPTED'' 
                end 
            else ''PENDING REPLY'' 
            end 
        end 
    end as Status
from txdAESHeader ah with (nolock)
where
    DATEDIFF(month, TransmissionDate, getdate()) <= 3 and
    PartnerID = @PartnerID@', CAST(N'2014-03-12T19:16:16.370' AS DateTime), N'Displays all AES shipments transmitted in the last 3 months', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-08-04T09:43:04.387' AS DateTime), N'ba648465-efc4-464c-a1b2-382ba3ebb46c', N'Certificate Lookup: Certificates Due to Expire', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY CertificateStartDate
			,CertificateEndDate
			,ProductNum
		) AS [RowNum]
FROM (
	SELECT DISTINCT cert.ProductNum
		,cert.ManufacturerID
		,convert(VARCHAR, cert.CertificateStartDate, 103) AS CertificateStartDate
		,convert(VARCHAR, cert.CertificateEndDate, 103) AS CertificateEndDate
		,cert.CertType AS Agreement
		,cert.CertDesc
		,1 AS NoOrder
	FROM tmgProductNumFTACert cert WITH (NOLOCK)
	WHERE cert.CertificateEndDate < GetDate() + 90
		AND cert.CertDesc = ''FTA Analysis''
		AND PartnerId = @PartnerID@
		AND cert.STATUS = ''Active''
		AND cert.certguid = (
			SELECT TOP 1 certguid
			FROM tmgProductNumFTACert
			WHERE cert.ProductNum = ProductNum
				AND cert.CertificateStartDate = CertificateStartDate
				AND cert.CertificateEndDate = CertificateEndDate
				AND cert.CertType = CertType
				AND cert.ManufacturerID = ManufacturerID
			ORDER BY effdate DESC
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-04-24T10:45:46.657' AS DateTime), N'Displays certificates  are due to expire in 90 days or less', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T14:35:11.043' AS DateTime), N'ee7f6bae-94a9-42b4-83be-2a05624a9e8f', N'FTA Lookup: FTA Lookup Qualifying', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY CertificateStartDate, CertificateEndDate, ProductNum ) AS [RowNum]
            FROM                  (
select distinct 
pnfc.ProductNum, 
pc.ProductDesc, 
certtype,
certdesc,
pnfc.ManufacturerID as SupplierID, 
CertificateStartDate, 
CertificateEndDate,
 PreferenceCriterion,
status,
1 AS NoOrder
from tmgProductNumFTACert pnfc WITH (NOLOCK)
join tmdProductClassification pc WITH (NOLOCK)
on pc.productnum = pnfc.productnum 
and pc.partnerid = pnfc.partnerid 
where Status = ''Active'' 
AND CertType NOT LIKE ''%NQ%'' 
 AND pnfc.PartnerID = @PartnerID@
) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2019-01-01T11:51:50.473' AS DateTime), N'Displays all products that have been marked "Qualifying."', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:23:58.840' AS DateTime), N'1e171681-4e9e-46e7-a42e-8116a5c334d9', N'Export Lookup: AES Transmissions Within Last 90 Days', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.ShipmentRefNum,
		g.Decode AS Status,
		aes.TransmissionDate AS ''AES Transmission Date'',
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdAESHeader aes (NOLOCK) 
		ON eh.ShipmentRefNum = aes.ShipmentRefNum 
		AND eh.PartnerID = aes.PartnerID
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID 
		AND aes.TransmissionDate >= DATEADD(day,-90, GETDATE()) 
		AND aes.TransmittedFlag = ''Y''
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:23:58.840' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:25:06.920' AS DateTime), N'2d177d2a-d7db-4983-93e0-23e7d9448b49', N'Export Lookup: AES Transmissions Within Last 30 Days', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.ShipmentRefNum,
		g.Decode AS Status,
		aes.TransmissionDate AS ''AES Transmission Date'',
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdAESHeader aes (NOLOCK) 
		ON eh.ShipmentRefNum = aes.ShipmentRefNum 
		AND eh.PartnerID = aes.PartnerID
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID  
		AND aes.TransmissionDate >= DATEADD(day,-30, GETDATE()) 
		AND aes.TransmittedFlag = ''Y''
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:25:06.920' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:25:35.693' AS DateTime), N'bd8382d9-977d-447b-98e5-445819485b4f', N'Export Lookup: AES Transmissions Within Last 7 Days', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
		''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ CAST(eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit,
		eh.ShipmentRefNum,
		g.Decode AS Status,
		aes.TransmissionDate AS ''AES Transmission Date'',
		1 AS NoOrder
	FROM txdExportHeader eh (NOLOCK) 
	JOIN txdAESHeader aes (NOLOCK) 
		ON eh.ShipmentRefNum = aes.ShipmentRefNum 
		AND eh.PartnerID = aes.PartnerID
	LEFT JOIN tmgGlobalCodes g (NOLOCK)
		ON g.PartnerID = eh.PartnerID
		AND g.Code = eh.Status
		AND g.FieldName = ''EXPORTSTATUS''
	WHERE eh.RecordType = ''E''
		AND eh.PartnerID = @PartnerID 
		AND aes.TransmissionDate >= DATEADD(day,-7, GETDATE()) 
		AND aes.TransmittedFlag = ''Y''
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:25:35.693' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T15:00:54.810' AS DateTime), N'bab638c6-35d2-47b3-8636-a7e1b6749cc5', N'FTA Records: Set to Expire', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY CertificateStartDate, CertificateEndDate, ProductNum ) AS [RowNum]
            FROM                  (
Select 
pnfc.ProductNum, 
productdesc,
convert (varchar,CertificateStartDate,101) as CertificateStartDate,
convert (varchar,CertificateEndDate,101) as CertificateEndDate, 
CertType,
PreferenceCriterion, 
Producer, 
TracedValue, 
Status,
1 AS NoOrder
from tmgProductNumFTACert pnfc with (NOLOCK)
join tmdproductClassification pc with (nolock) 
on pc.productnum = pnfc.productnum 
and pc.partnerid = pnfc.partnerid 
where Status = ''Active''
and certificateenddate <= (GETDATE()+@Country_Code@)
and certificateenddate > GETDATE()
and pnfc.PartnerID = @PARTNERID@
) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2019-01-02T16:28:39.790' AS DateTime), N'Displays Product and Certificate Information for Active certificates that expire within the selected time period', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:26:34.780' AS DateTime), N'd65291d4-887e-49b8-baa6-af0405ce9886', N'Export Lookup: Shipments Processed in the Last 90 days', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
			''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ cast (eh.ExportGuid AS varchar(50)) + '')'' AS Edit,
			eh.InvoiceNum,
			MAX(g.Decode) AS Status,
			MAX(em.EffDate) AS ''Processed Date'',
			1 AS NoOrder
		FROM txdExportHeader eh (NOLOCK) 
		JOIN txdExportSystemMessages em (NOLOCK) 
			ON eh.ExportGUID = em.ExportGUID 
			AND eh.PartnerID = em.PartnerID
		LEFT JOIN tmgGlobalCodes g (NOLOCK)
			ON g.partnerid = eh.partnerid
			AND g.code = eh.status
			AND g.fieldname = ''EXPORTSTATUS''
		WHERE eh.recordtype = ''E''
			AND eh.partnerid = @PartnerID 
			AND eh.status = ''P'' 
			AND em.Effdate >= DATEADD(day,-90, GETDATE()) 
			AND em.Message = ''Shipment successfully processed.'' 
		Group by eh.ExportGUID, eh.InvoiceNum, eh.RecordType
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:26:34.780' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:27:01.000' AS DateTime), N'55e29580-dd47-4acf-a527-ba4b539cb8d0', N'Export Lookup: Shipments Processed in the Last 30 days', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
	SELECT DISTINCT
			''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ cast (eh.ExportGuid AS varchar(50)) + '')'' AS Edit,
			eh.InvoiceNum,
			MAX(g.Decode) AS Status,
			MAX(em.EffDate) AS ''Processed Date'',
			1 AS NoOrder
		FROM txdExportHeader eh (NOLOCK) 
		JOIN txdExportSystemMessages em (NOLOCK) 
			ON eh.ExportGUID = em.ExportGUID 
			AND eh.PartnerID = em.PartnerID
		LEFT JOIN tmgGlobalCodes g (NOLOCK)
			ON g.partnerid = eh.partnerid
			AND g.code = eh.status
			AND g.fieldname = ''EXPORTSTATUS''
		WHERE eh.recordtype = ''E''
			AND eh.partnerid = @PartnerID 
			AND eh.status = ''P'' 
			AND em.Effdate >= DATEADD(day,-30, GETDATE()) 
			AND em.Message = ''Shipment successfully processed.'' 
		Group by eh.ExportGUID, eh.InvoiceNum, eh.RecordType
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:27:01.000' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:27:19.540' AS DateTime), N'56be8a2c-7675-4570-b6f9-c51fdceda043', N'Export Lookup: Shipments Processed in the Last 7 days', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
	( 
SELECT DISTINCT  ''[''+ ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid=''+ cast (eh.ExportGuid AS varchar(50)) + '')'' AS Edit, 
		 eh.InvoiceNum
		,MAX(g.Decode) AS STATUS
		,MAX(em.EffDate) AS ''Processed Date''
		,1 AS NoOrder
	FROM txdExportHeader eh(NOLOCK)
	JOIN txdExportSystemMessages em(NOLOCK) ON eh.ExportGUID = em.ExportGUID
		AND eh.PartnerID = em.PartnerID
	LEFT JOIN tmgGlobalCodes g(NOLOCK) ON g.partnerid = eh.partnerid
		AND g.code = eh.STATUS
		AND g.fieldname = ''EXPORTSTATUS''
	WHERE eh.recordtype = ''E''
		AND eh.partnerid = @PartnerID
		AND eh.STATUS = ''P''
		AND em.Effdate >= DATEADD(day, - 7, GETDATE())
		AND em.Message = ''Shipment successfully processed.''
	GROUP BY eh.ExportGUID
		,eh.InvoiceNum
		,eh.RecordType ) 
AS LookupViewInner 
WHERE @whereclause@', CAST(N'2014-03-12T19:27:19.540' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T15:03:30.253' AS DateTime), N'3ff42ee8-4d3d-4e2e-9952-a2ba5346c3ec', N'FTA Records: By Agreement', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY CertificateStartDate, CertificateEndDate, ProductNum ) AS [RowNum]
            FROM                  (
Select 
			pnfc.ProductNum, 
productdesc,
			pnfc.ManufacturerId, 
			CertificateStartDate,
			CertificateEndDate,
			CertType, 
			PreferenceCriterion, 
			Producer, 
			pnfc.CountryOfOrigin,
			TracedValue, 
			Status,
1 AS NoOrder
		from tmgproductnumftacert pnfc WITH (NOLOCK)
join tmdProductClassification pc with (nolock) 
on pc.productnum = pnfc.productnum 
and pc.partnerid = pnfc.partnerid 
		WHERE CertType=''@Country_Code@''
		AND pnfc.PartnerID=''@PARTNERID@''
) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2019-01-01T11:53:34.583' AS DateTime), N'Displays Product and Certificate Information for the selected agreement', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T15:11:55.950' AS DateTime), N'a460da7f-d75e-42ed-a2bc-7591c60c25bd', N'Certificates: Active Customer Requests', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY CertificateStartDate, CertificateEndDate, RequestName desc ) AS [RowNum]
            FROM                  (
select  
RequestName,
convert (varchar,RequestStartDate,101) as CertificateStartDate,
convert (varchar,RequestEndDate,101) as CertificateEndDate, 
AssignedTo,
1 AS NoOrder
from txdFTACertRequestHeader with (NOLOCK)
where 
GETDATE()>= RequestStartDate+@Country_Code@
and RequestStatus IN (''New'', ''Submitted'')
and PartnerID = @PARTNERID@
) AS LookupViewInner
WHERE                               
									@whereclause@
', CAST(N'2018-04-23T15:34:04.747' AS DateTime), N'Displays customer requests in a status of ‘New’ or ‘Submitted’ and have a CertificateStartDate within the selected period', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T15:16:47.107' AS DateTime), N'63b20a44-c67f-4839-a352-d5aa75ed2f25', N'BOM: By Status', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY BOMStartDate
			,BOMEndDate
			,ProductNum
		) AS [RowNum]
FROM (
	SELECT DISTINCT IM.BillOfMaterials
		,CONVERT(VARCHAR, IM.BOMStartDate, 101) AS BOMStartDate
		,CONVERT(VARCHAR, IM.BOMEndDate, 101) AS BOMEndDate
		,IM.ProductNum
		,RS.RuleCategory
		,1 AS NoOrder
	FROM txdBOMIM IM WITH (NOLOCK)
	JOIN txdRulesStatusHist RS WITH (NOLOCK) ON IM.BOMGUID = RS.Heading
		AND IM.PartnerID = RS.PartnerID
	WHERE RS.STATUS = ''@Country_Code@''
		AND IM.PartnerID = ''@PARTNERID@''
		 AND RS.AnalysisNo = (Select MAX(AnalysisNo) from txdRulesStatusHist where RS.Heading = Heading and RS.PartnerID = PartnerID and RS.RuleCategory = RuleCategory)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-04-24T10:38:19.667' AS DateTime), N'Displays BOMs with the selected status', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-24T15:52:39.990' AS DateTime), N'166f2036-dee2-4bd0-be6a-91071b7648d2', N'FTA Records: By Plant (Default)', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY CertificateStartDate
			,CertificateEndDate
			,ProductNum
		) AS [RowNum]
FROM (
	SELECT DISTINCT pnfc.ProductNum
		,pc.ProductDesc
		,pnfc.ManufacturerID
		,pnfc.CertType
		,pnfc.CertDesc
		,pnfc.CertificateStartDate
		,pnfc.CertificateEndDate
		,STATUS
		,1 AS NoOrder
	FROM tmgproductnumftacert pnfc WITH (NOLOCK)
	JOIN txdBOMIM bim WITH (NOLOCK) ON bim.productnum = pnfc.productnum
		AND bim.bomguid = pnfc.bomguid
		AND bim.partnerid = pnfc.partnerid
	JOIN tmdproductClassification pc WITH (NOLOCK) ON pc.productnum = pnfc.productnum
		AND pc.partnerid = pnfc.partnerid
	WHERE bim.plantid = ''@Country_Code@''
		AND bim.PartnerID = @PartnerID@
		AND pnfc.CertDesc LIKE ''%Analysis%''
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2019-01-02T16:19:18.510' AS DateTime), N'Displays Product and Certificate Information by the selected plant', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-24T16:38:11.863' AS DateTime), N'4ace1dac-1d5c-4ba2-bc70-eef8c80b59e3', N'Solicitation Lookup (Default)', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY SolicitationYear, DateSent, DueDate, Status ) AS [RowNum]
FROM                  (
select Distinct
dr.Title,
Status, 
 year(dr.PeriodBeginDate) as ''SolicitationYear'', 
 convert (varchar,dr.DateSent,103) as ''DateSent'', 
 convert (varchar,dr.DueDate, 103) as ''DueDate'',
 comp.CompanyName as ''Supplier'',
 drd.CertAgreement as ''Agreement'',
 1 AS NoOrder
 FROM tmgDocRequest dr WITH (NOLOCK) 
 join tmgdocrequestdetail drd WITH (NOLOCK)
 ON dr.DocReqGUID = drd.DocReqGUID and
 dr.PartnerID = drd.PartnerID
 join tmgCompany comp WITH (NOLOCK) on 
drd.PartnerID = comp.PartnerID and 
replace(drd.Supplier, cast(drd.PartnerID as varchar) + ''~'', '''') = comp.CompanyID 
 WHERE dr.PartnerID = @PartnerID@ 
 and dr.Status = ''@Country_Code@''

) AS LookupViewInner
WHERE                               
									@whereclause@', CAST(N'2019-01-09T14:48:03.893' AS DateTime), N'Displays all solicitation requests by status', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:06:58.290' AS DateTime), N'c94264f0-f794-4c21-b553-e1e16b22b7a2', N'FTZ Transition: Zone to Zone Transfers', N'SELECT
CASE WHEN (select count(*) from tmfProductCrossReference WITH (NOLOCK)) > 0
THEN ''The client has zone to zone transfers.''
ELSE ''The client does NOT have zone to zone transfers.''
END AS Message', CAST(N'2017-08-16T15:06:58.290' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:07:13.753' AS DateTime), N'99f07cb9-780a-4464-bc77-97851d2b4d1c', N'FTZ Transition: Are Beginning Balances Saved', N'SELECT
CASE WHEN (select count(*) from txdFTZBal WITH (NOLOCK)) > 0
THEN (select top 1 cast(txnDate as varchar (100)) AS MinTxnDate
from txdFTZBal  WITH (NOLOCK)
order by TxnDate asc)
ELSE ''Balances are NOT being saved.''
END AS Message', CAST(N'2017-08-16T15:07:13.753' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:07:48.050' AS DateTime), N'c1813db4-261e-46f2-b270-0fc4494f04a7', N'FTZ Transition: Does the client use Edit Inventory Layers', N'SELECT
CASE WHEN (select count(*) from txdRecordEditLog WITH (NOLOCK)) > 0
THEN ''The client is using Edit Inventory Layers.''
ELSE ''The client is NOT using Edit Inventory Layers.''
END AS Message', CAST(N'2017-08-16T15:07:48.050' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:08:15.753' AS DateTime), N'a683b9c6-6e1f-4e4d-8dd0-d9cf523d366d', N'FTZ Transition: Parts of the System that are lights out', N'SELECT
CASE WHEN XMLDocument.value(''(/configuration/automation/ftz/create_3461)[1]'',''varchar(500)'') = ''Y'' 
THEN ''Create_3461: Y''
ELSE ''Create_3461: N''
END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''

UNION

SELECT
CASE WHEN XMLDocument.value(''(/configuration/automation/ftz/generate_3461)[1]'',''varchar(500)'') = ''Y'' 
THEN ''Generate_3461: Y''
ELSE ''Generate_3461: N''
END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''

UNION

SELECT
CASE WHEN XMLDocument.value(''(/configuration/automation/ftz/generate_7501)[1]'',''varchar(500)'') = ''Y'' 
THEN ''Generate_7501: Y''
ELSE ''Generate_7501: N''
END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''

UNION

SELECT
CASE WHEN XMLDocument.value(''(/configuration/automation/ftz/transmit_3461)[1]'',''varchar(500)'') = ''Y'' 
THEN ''Transmit_3461: Y''
ELSE ''Transmit_3461: N''
END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''

UNION

SELECT
CASE WHEN XMLDocument.value(''(/configuration/automation/ftz/transmit_7501)[1]'',''varchar(500)'') = ''Y'' 
THEN ''Transmit_7501: Y''
ELSE ''Transmit_7501: N''
END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''

UNION

SELECT
CASE WHEN XMLDocument.value(''(/configuration/automation/ftz/transmit_214)[1]'',''varchar(500)'') = ''Y'' 
THEN ''Transmit_214: Y''
ELSE ''Transmit_214: N''
END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:08:15.753' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:42:12.043' AS DateTime), N'06f8e757-70bf-41b7-9afa-cf644bdaf750', N'Export Lookup: Finalized Shipments', N'SELECT DISTINCT
		''['' + ''Edit'' + '']'' + ''(/Export/fidExportCISLI.aspx?TYPE='' + eh.RecordType + ''&ExportGuid='' + CAST (eh.ExportGuid AS VARCHAR(50)) + '')'' AS Edit
	   ,eh.OrderNumShip
	   ,ISNULL(g.Decode,eh.Status) AS Status
	   ,eh.ShipmentRefNum
	   ,eh.ShipDate
	   ,eh.ExportDate
	   ,eh.ExportCountry
	   ,eh.ImportCountry
FROM	txdExportHeader eh WITH (NOLOCK)
JOIN	txdExportParties ep WITH (NOLOCK) ON eh.ExportGUID = ep.ExportGUID AND
										eh.PartnerID = ep.PartnerID
LEFT JOIN tmgglobalcodes g WITH (NOLOCK) ON g.partnerid = eh.partnerid AND
									   g.code = eh.status AND
									   g.fieldname = ''EXPORTSTATUS''
WHERE	eh.Status = ''H'' AND
		eh.recordtype = ''E'' AND
		eh.partnerid = @PartnerID@ AND
		eh.FinalizedFlag = ''Y''', CAST(N'2014-03-12T19:42:12.043' AS DateTime), N'Displays the shipments that have been finalized.  
', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:08:36.410' AS DateTime), N'8fbe633f-5c29-4e13-a452-78746b0a1b02', N'DPS Transition: Size of Sub Batches', N'select CASE WHEN XMLDocument.value(''(/configuration/denied_trade_screening/batch_process/batchrecordcount)[1]'',''varchar(500)'') = ''100'' THEN ''PASS'' ELSE ''Failed inspection. Please set the size of sub batches to 100.'' END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:08:36.410' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:08:52.130' AS DateTime), N'10bed9e9-de44-4165-bd46-901e9e4061ca', N'DPS Transition: SCC Integration', N'select CASE WHEN XMLDocument.value(''(/configuration/company_integration/scc_active)[1]'',''varchar(500)'') = ''Y''
AND EXISTS (SELECT 1 FROM tmdDPSSearchSettings WHERE SCCActive = ''Y'')
THEN ''SCC is integrated with DPS'' 
ELSE ''SCC is NOT integrated with DPS.'' END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:08:52.130' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:09:07.210' AS DateTime), N'c87a656a-f0a8-4fa5-9eed-a9d578a1d7c2', N'DPS Transition: ISF Integration', N'select CASE WHEN XMLDocument.value(''(/configuration/company_integration/isf_active)[1]'',''varchar(500)'') = ''Y'' THEN ''ISF is integrated with DPS'' ELSE ''ISF is NOT integrated with DPS.'' END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:09:07.210' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:09:27.230' AS DateTime), N'0a5e7da7-6e9d-4dc4-beb0-75f1dd8546df', N'DPS Transition: Primary DPS Contact', N'select XMLDocument.value(''(/configuration/denied_trade_screening/batch_process/email_addresses_to_send)[1]'',''varchar(500)'') as Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:09:27.230' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:09:42.750' AS DateTime), N'4815dd46-cf86-44b3-a201-21418da1f3bd', N'DPS Transition: Screening Credentials', N'select CASE 
    WHEN XMLDocument.value(''(/configuration/denied_trade_screening/batch_process/company)[1]'',''varchar(100)'') NOT IN ('''', ''COMPANY'', ''IPDEMO'')
    AND XMLDocument.value(''(/configuration/denied_trade_screening/batch_process/username)[1]'',''varchar(100)'') NOT IN ('''', ''CREATEUSER'', ''IPDEMO'')
    AND XMLDocument.value(''(/configuration/denied_trade_screening/batch_process/password)[1]'',''varchar(100)'') NOT IN ('''', ''ENTERPASSWORD'')
    THEN ''PASS'' 
    ELSE ''Failed inspection. Please obtain partner-specific credentials from Solutions Delivery'' END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:09:42.750' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:09:58.523' AS DateTime), N'e35805d4-3788-4c88-8097-c26be1062529', N'DPS Transition: Partner_URL', N'select CASE 
    WHEN XMLDocument.value(''(/configuration/denied_trade_screening/partner_url)[1]'',''varchar(100)'') LIKE ''%10.200%''
    THEN ''PASS'' 
    ELSE ''Failed inspection. Correct the Partner_URL config element with the Production IP Address'' END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:09:58.523' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'C4D037A1-5DD1-40C9-BAD4-1C8D9C2143AA', N'Classification Lookup: CI - US Retaliatory Tariffs', N'
SELECT *, ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum ASC) AS [RowNum]
FROM (
 SELECT
  ''[Edit](/Maintenance/Edit.aspx?ID=''+CAST(USpc.ProductGuid AS char(36))+''&TYPE=1&COUNTRY=''+CIRetaliatory.ControlCountry+'')'' AS Edit,
  USpc.ProductNum,
  USpc.ProductDesc,
  ''[''+USpc.HsNum+''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+USpc.HsNum+''&Country=''+CIRetaliatory.ControlCountry+'')'' AS HsNum,
  CIRetaliatory.ControlDesc,
  CIRetaliatory.TranslationValue,
  1 AS NoOrder
 FROM dbo.tmdUSProductClassification USpc WITH (NOLOCK)
 INNER JOIN dbo.vid_CI_US_RetaliatoryTariffs CIRetaliatory WITH (NOLOCK)
  ON USpc.PartnerID = CIRetaliatory.PartnerID
  AND USpc.ProductGuid = CIRetaliatory.ProductGuid
 WHERE USpc.PartnerID = @PartnerID
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'Displays the US retaliatory tariffs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'8FE95212-521C-4429-8DDB-601BD641D9F4', N'Classification Lookup: CI - CA Retaliatory Tariffs', N'
SELECT *, ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum ASC) AS [RowNum]
FROM (
 SELECT
  ''[Edit](/Maintenance/Edit.aspx?ID=''+CAST(CApc.ProductGuid AS char(36))+''&TYPE=1&COUNTRY=''+CIRetaliatory.ControlCountry+'')'' AS Edit,
  CApc.ProductNum,
  CApc.ProductDesc,
  ''[''+CApc.HsNum+''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+CApc.HsNum+''&Country=''+CIRetaliatory.ControlCountry+'')'' AS HsNum,
  CIRetaliatory.ControlDesc,
  CIRetaliatory.TranslationValue,
  1 AS NoOrder
 FROM dbo.tmdCAProductClassification CApc WITH (NOLOCK)
 INNER JOIN dbo.vid_CI_CA_RetaliatoryTariffs CIRetaliatory WITH (NOLOCK)
  ON CApc.PartnerID = CIRetaliatory.PartnerID
  AND CApc.ProductGuid = CIRetaliatory.ProductGuid
 WHERE CApc.PartnerID = @PartnerID
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'Displays the CA retaliatory tariffs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'F491E014-AB62-4D49-9D54-380976711EFB', N'Classification Lookup: CI - MX Retaliatory Tariffs', N'
SELECT *, ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum ASC) AS [RowNum]
FROM (
 SELECT
  ''[Edit](/Maintenance/Edit.aspx?ID=''+CAST(MXpc.ProductGuid AS char(36))+''&TYPE=1&COUNTRY=''+CIRetaliatory.ControlCountry+'')'' AS Edit,
  MXpc.ProductNum,
  MXpc.ProductDesc,
  ''[''+MXpc.HsNum+''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+MXpc.HsNum+''&Country=''+CIRetaliatory.ControlCountry+'')'' AS HsNum,
  CIRetaliatory.ControlDesc,
  CIRetaliatory.TranslationValue,
  1 AS NoOrder
 FROM dbo.tmdMXProductClassification MXpc WITH (NOLOCK)
 INNER JOIN dbo.vid_CI_MX_RetaliatoryTariffs CIRetaliatory WITH (NOLOCK)
  ON MXpc.PartnerID = CIRetaliatory.PartnerID
  AND MXpc.ProductGuid = CIRetaliatory.ProductGuid
 WHERE MXpc.PartnerID = @PartnerID
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'Displays the MX retaliatory tariffs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-19T15:14:37.230' AS DateTime), N'903adb12-b1f6-4f44-861a-5c3d0b8e4013', N'Export Lookup: Export Charts', N'select    
	''[''+ ''View '' + '']'' + ''(/VISUALIZATION/fdgChartVisualization.aspx?hide='' + isnull(vsp.Hide, '''') +
	''&type='' + vsp.Type + 
	''&XTilt='' + cast(vsp.XTilt as varchar(50)) +
	''&Stacked='' + vsp.Stacked +
	''&SQL='' + cast(ts.SQLGuid as varchar(50)) + 
	''&SQL2='' + vsp.SQL2 +
	'')'' AS [View], 
        ts.SQLDescription + case vsp.SQL2 when '''' then '''' else '' & '' + (select SQLDescription from tmgSQL where SQLGUID = vsp.SQL2) end as ChartName,
        vsp.Category,
        vsp.Type
from tmgSQL ts
join txdVisualizationSQLParams vsp on 
	ts.SQLGUID = vsp.SQLGUID and
	ts.PartnerID = vsp.PartnerID
where 
	vsp.Category = ''Export'' and
	ts.PartnerID = (select PartnerID from tmfDefaults)', CAST(N'2014-03-19T15:14:37.230' AS DateTime), N'Links to the configured charts for export.  
', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'8336AFF2-057B-47E6-9080-FDCCA0756275', N'Classification Lookup: CI - CN Retaliatory Tariffs', N'
SELECT *, ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum ASC) AS [RowNum]
FROM (
 SELECT
  ''[Edit](/Maintenance/Edit.aspx?ID=''+CAST(CNpc.ProductGuid AS char(36))+''&TYPE=1&COUNTRY=''+CIRetaliatory.ControlCountry+'')'' AS Edit,
  CNpc.ProductNum,
  CNpc.ProductDesc,
  ''[''+CNpc.HsNum+''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+CNpc.HsNum+''&Country=''+CIRetaliatory.ControlCountry+'')'' AS HsNum,
  CIRetaliatory.ControlDesc,
  CIRetaliatory.TranslationValue,
  1 AS NoOrder
 FROM dbo.tmdCNProductClassification CNpc WITH (NOLOCK)
 INNER JOIN dbo.vid_CI_CN_RetaliatoryTariffs CIRetaliatory WITH (NOLOCK)
  ON CNpc.PartnerID = CIRetaliatory.PartnerID
  AND CNpc.ProductGuid = CIRetaliatory.ProductGuid
 WHERE CNpc.PartnerID = @PartnerID
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'Displays the CN retaliatory tariffs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'B4F859B1-A65F-41A5-8E8A-1741AE3247C9', N'Classification Lookup: CI - TR Retaliatory Tariffs', N'
SELECT *, ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum ASC) AS [RowNum]
FROM (
 SELECT
  ''[Edit](/Maintenance/Edit.aspx?ID=''+CAST(TRpc.ProductGuid AS char(36))+''&TYPE=1&COUNTRY=''+CIRetaliatory.ControlCountry+'')'' AS Edit,
  TRpc.ProductNum,
  TRpc.ProductDesc,
  ''[''+TRpc.HsNum+''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+TRpc.HsNum+''&Country=''+CIRetaliatory.ControlCountry+'')'' AS HsNum,
  CIRetaliatory.ControlDesc,
  CIRetaliatory.TranslationValue,
  1 AS NoOrder
 FROM dbo.tmdTRProductClassification TRpc WITH (NOLOCK)
 INNER JOIN dbo.vid_CI_TR_RetaliatoryTariffs CIRetaliatory WITH (NOLOCK)
  ON TRpc.PartnerID = CIRetaliatory.PartnerID
  AND TRpc.ProductGuid = CIRetaliatory.ProductGuid
 WHERE TRpc.PartnerID = @PartnerID
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'Displays the TR retaliatory tariffs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'746D8778-1313-4A78-87D5-E4BDBDCF489B', N'Classification Lookup: CI - IN Retaliatory Tariffs', N'
SELECT *, ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum ASC) AS [RowNum]
FROM (
 SELECT
  ''[Edit](/Maintenance/Edit.aspx?ID=''+CAST(INpc.ProductGuid AS char(36))+''&TYPE=1&COUNTRY=''+CIRetaliatory.ControlCountry+'')'' AS Edit,
  INpc.ProductNum,
  INpc.ProductDesc,
  ''[''+INpc.HsNum+''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+INpc.HsNum+''&Country=''+CIRetaliatory.ControlCountry+'')'' AS HsNum,
  CIRetaliatory.ControlDesc,
  CIRetaliatory.TranslationValue,
  1 AS NoOrder
 FROM dbo.tmdINProductClassification INpc WITH (NOLOCK)
 INNER JOIN dbo.vid_CI_IN_RetaliatoryTariffs CIRetaliatory WITH (NOLOCK)
  ON INpc.PartnerID = CIRetaliatory.PartnerID
  AND INpc.ProductGuid = CIRetaliatory.ProductGuid
 WHERE INpc.PartnerID = @PartnerID
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'Displays the IN retaliatory tariffs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'262F4754-6EBE-4C7F-8BEC-BEB1B042294F', N'Classification Lookup: CI - JP Retaliatory Tariffs', N'
SELECT *, ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum ASC) AS [RowNum]
FROM (
 SELECT
  ''[Edit](/Maintenance/Edit.aspx?ID=''+CAST(JPpc.ProductGuid AS char(36))+''&TYPE=1&COUNTRY=''+CIRetaliatory.ControlCountry+'')'' AS Edit,
  JPpc.ProductNum,
  JPpc.ProductDesc,
  ''[''+JPpc.HsNum+''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+JPpc.HsNum+''&Country=''+CIRetaliatory.ControlCountry+'')'' AS HsNum,
  CIRetaliatory.ControlDesc,
  CIRetaliatory.TranslationValue,
  1 AS NoOrder
 FROM dbo.tmdJPProductClassification JPpc WITH (NOLOCK)
 INNER JOIN dbo.vid_CI_JP_RetaliatoryTariffs CIRetaliatory WITH (NOLOCK)
  ON JPpc.PartnerID = CIRetaliatory.PartnerID
  AND JPpc.ProductGuid = CIRetaliatory.ProductGuid
 WHERE JPpc.PartnerID = @PartnerID
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'Displays the JP retaliatory tariffs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'CC8BCB06-7AA4-46D4-A713-8109ABB4FBF5', N'Classification Lookup: CI - KR Retaliatory Tariffs', N'
SELECT *, ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum ASC) AS [RowNum]
FROM (
 SELECT
  ''[Edit](/Maintenance/Edit.aspx?ID=''+CAST(KRpc.ProductGuid AS char(36))+''&TYPE=1&COUNTRY=''+CIRetaliatory.ControlCountry+'')'' AS Edit,
  KRpc.ProductNum,
  KRpc.ProductDesc,
  ''[''+KRpc.HsNum+''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+KRpc.HsNum+''&Country=''+CIRetaliatory.ControlCountry+'')'' AS HsNum,
  CIRetaliatory.ControlDesc,
  CIRetaliatory.TranslationValue,
  1 AS NoOrder
 FROM dbo.tmdKRProductClassification KRpc WITH (NOLOCK)
 INNER JOIN dbo.vid_CI_KR_RetaliatoryTariffs CIRetaliatory WITH (NOLOCK)
  ON KRpc.PartnerID = CIRetaliatory.PartnerID
  AND KRpc.ProductGuid = CIRetaliatory.ProductGuid
 WHERE KRpc.PartnerID = @PartnerID
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'Displays the KR retaliatory tariffs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'18477154-ECD9-45CC-B87E-F3736AF02F62', N'Classification Lookup: CI - RU Retaliatory Tariffs', N'
SELECT *, ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum ASC) AS [RowNum]
FROM (
 SELECT
  ''[Edit](/Maintenance/Edit.aspx?ID=''+CAST(RUpc.ProductGuid AS char(36))+''&TYPE=1&COUNTRY=''+CIRetaliatory.ControlCountry+'')'' AS Edit,
  RUpc.ProductNum,
  RUpc.ProductDesc,
  ''[''+RUpc.HsNum+''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+RUpc.HsNum+''&Country=''+CIRetaliatory.ControlCountry+'')'' AS HsNum,
  CIRetaliatory.ControlDesc,
  CIRetaliatory.TranslationValue,
  1 AS NoOrder
 FROM dbo.tmdRUProductClassification RUpc WITH (NOLOCK)
 INNER JOIN dbo.vid_CI_RU_RetaliatoryTariffs CIRetaliatory WITH (NOLOCK)
  ON RUpc.PartnerID = CIRetaliatory.PartnerID
  AND RUpc.ProductGuid = CIRetaliatory.ProductGuid
 WHERE RUpc.PartnerID = @PartnerID
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-06-29T03:03:17.763' AS DateTime), N'Displays the RU retaliatory tariffs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-09-21T09:49:14.983' AS DateTime), N'BC12A687-E811-453A-B32F-DE68FC90ADF5', N'A0D29077-563B-4136-B0EF-115795350E53', N'SELECT ''4'' AS [Skip]  FROM tmdDecisionTreeSessionResult WITH (NOLOCK)  WHERE PartnerID=@partner AND TreeGuid=@tree AND SessionGuid=@session AND Name=''CBPRequestID'' AND Value IN (''UNSOLICITED'',''UNKNOWN'')', CAST(N'2015-09-21T11:41:04.250' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2015-09-21T09:49:14.983' AS DateTime), N'2F7BECEA-B5C2-472E-A734-4879757F0ACA', N'2B550687-F1B8-4B49-965B-31B78C607F3D', N'SELECT ''Permit Number is mandatory data'' AS [ErrorMessage]  FROM tmdDecisionTreeSessionResult WITH (NOLOCK)  WHERE PartnerID=@partner AND TreeGuid=@tree AND SessionGuid=@session AND Name=''PermitNumber'' AND Value=''''', CAST(N'2016-04-05T14:27:30.683' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2015-09-21T09:49:14.983' AS DateTime), N'096D1792-AB54-4B26-A94F-BB29C6CDCBDF', N'F8090050-6363-4C5A-9ED7-3382633F1297', N'SELECT ''Transaction Identification Number is mandatory data'' AS [ErrorMessage]  FROM tmdDecisionTreeSessionResult WITH (NOLOCK)  WHERE PartnerID=@partner AND TreeGuid=@tree AND SessionGuid=@session AND Name=''TransactionIdentificationNumber'' AND Value=''''', CAST(N'2016-04-05T14:27:10.787' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-01-27T11:11:38.600' AS DateTime), N'3BF294EE-AB9D-40D4-B65D-558EDF39AC63', N'88AD96DF-C23F-402F-B0B8-3817F020B389', N'SELECT ''PDFs only'' AS [WarningMessage]', CAST(N'2017-01-27T11:11:38.600' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2018-10-26T14:51:15.263' AS DateTime), N'75B5E312-CD03-4CFE-BC25-70F35CAF4E67', N'2618BDD2-9FED-4DEC-B422-40AAA904E991', N'SELECT TOP 1 ''PDFs only'' + CASE WHEN r.PartnerID IS NULL THEN '''' ELSE '' for document type '' + r.Value END AS [ErrorMessage]
	FROM tmdDecisionTreeSessionNode n WITH (NOLOCK)
	LEFT JOIN tmdDecisionTreeSessionResult r WITH (NOLOCK) ON n.PartnerID=r.PartnerID AND n.SessionGuid=r.SessionGuid AND Name=''DocumentLabel''
	WHERE n.PartnerID=@partner AND n.TreeGuid=@tree AND n.SessionGuid=@session AND @userResponse NOT LIKE ''%.pdf'' AND EXISTS (SELECT TOP 1 1 FROM tmdDecisionTreeSessionResult WITH (NOLOCK)  WHERE PartnerID=@partner AND TreeGuid=@tree AND SessionGuid=@session AND Name=''Required'' AND Value=''PDFOnly'')', CAST(N'2017-01-27T11:11:52.103' AS DateTime), N'DecisionTree', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-09-21T09:49:14.983' AS DateTime), N'689C1FB0-ED80-40E3-8F04-0119DC3A05E8', N'45A09622-14ED-4F5D-959E-468D68249377', N'SELECT ''3'' AS [Skip]  FROM tmdDecisionTreeSessionResult WITH (NOLOCK)  WHERE PartnerID=@partner AND TreeGuid=@tree AND SessionGuid=@session AND Name=''CBPRequestTypePresent'' AND Value=''No''', CAST(N'2015-09-21T09:46:22.623' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2018-10-30T09:56:28.957' AS DateTime), N'F59A02DC-D462-4FE2-86BE-03E4FF3EAE03', N'3F51A7D3-AC92-452A-91D5-5A656136C1DC', N'SELECT ''1'' AS [Skip]  FROM tmdDecisionTreeSessionResult WITH (NOLOCK)  WHERE PartnerID=@partner AND TreeGuid=@tree AND SessionGuid=@session AND EXISTS (SELECT TOP 1 1 FROM tmdDecisionTreeResult WITH (NOLOCK) WHERE PartnerID=@partner aND TreeGuid=@tree AND SessionGuid=@session AND Name=''Required'' AND Value=''IORNbr'')', CAST(N'2018-10-26T09:03:46.680' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2014-10-14T10:36:24.337' AS DateTime), N'435bfbe4-d808-427d-808b-36a29186258f', N'Classification Lookup: Classification Lookup Global', N'select 
pc.PartnerID, pc.ProductGuid, pc.ProductNum, pc.ProductDesc, pc.HsNum, pc.Datasource, pc.EffDate, 
max(isnull(al.AuditDate, '''')) as DateUpdated, max(isnull(al.Username, '''')) as LastUpdatedBy
from tmdProductClassification pc
left join tmdAuditLog al (nolock) on 
pc.PartnerID = al.PartnerID and
pc.ProductGuid = al.ProductGuid and
al.CountryCode = ''@COUNTRY_CODE@'' 
where 
pc.PartnerID = @PartnerID
group by pc.PartnerID, pc.ProductGuid, pc.ProductNum, pc.ProductDesc, pc.HsNum, pc.Datasource, pc.EffDate', CAST(N'2014-10-14T10:36:24.337' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-14T11:32:58.770' AS DateTime), N'9608cfb3-dfae-4372-93a1-b7e680c77bea', N'Classification Lookup: Unclassified Products Global', N'SELECT   pc.ProductNum ,
pc.ProductDesc ,
pc.HsNum ,
pc.ActiveFlag
FROM    tmdProductClassification pc WITH ( NOLOCK )
WHERE   pc.PartnerID = @PartnerID@
AND pc.hsnum = ''''', CAST(N'2014-10-14T11:32:58.770' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-09-21T09:49:14.983' AS DateTime), N'AD68D34D-3269-49BF-AC0E-50E3C8BE736D', N'B3399E7F-A028-4825-B133-8BD20EBA59CB', N'SELECT ''Answer required'' AS [ErrorMessage] WHERE LTrim(RTrim(@userResponse))=''''', CAST(N'2015-09-21T09:47:16.437' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2015-09-21T09:49:14.983' AS DateTime), N'29F232CF-639E-4ABA-8346-7BEED6D1EFC2', N'FF5E948B-3C11-4AD4-9254-A420FF2A1783', N'SELECT TOP 1 ''The use of this document in DIS is limited to entries for over-the-counter processing (Non-ABI submission) where PGA Message set data is otherwise required.'' AS [WarningMessage]  FROM tmdDecisionTreeSessionResult WITH (NOLOCK)  WHERE SessionGuid=@session AND TreeGuid=@tree AND Name IN (''DocumentType'',''DocumentLabel'')  ORDER BY EffDate DESC', CAST(N'2016-04-05T13:59:16.217' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2016-04-04T11:07:33.487' AS DateTime), N'D10E6F44-D09C-410C-8E07-6305D209B49B', N'Classification Lookup: AU Products Rates Origins', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum ASC
		) AS [RowNum]
FROM (
	SELECT ISNULL(''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'', '''') AS Edit
		,xxpc.ProductNum
		,xxpc.ProductName AS ProductName
		,xxpc.ProductDesc AS ProductDesc
		,xxpc.ProductGroup AS ProductGroup
		,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum
		,CIRates.Rate AS Rate
		,CIRates.CountryOfOrigin AS CountryOfOrigin
		,1 AS NoOrder
	FROM tmdAUProductClassification xxpc WITH (NOLOCK)
	JOIN vid_CI_AU_Rates CIRates WITH (NOLOCK) ON xxpc.ProductGuid = CIRates.ProductGuid
		AND xxpc.PartnerID = CIRates.PartnerID
	WHERE EXISTS (
			SELECT 1
			FROM usrProductNum
			WHERE xxpc.PartnerID = PartnerID
				AND xxpc.ProductNum = StyleNumber
			)
		AND xxpc.PartnerID = @PartnerID@
	
	UNION ALL
	
	SELECT '''' AS Edit
		,usr.StyleNumber
		,'''' AS ProductName
		,''StyleNumber not in AU GC'' AS ProductDesc
		,'''' AS ProductGroup
		,'''' AS HsNum
		,'''' AS Rate
		,'''' AS CountryOfOrigin
		,1 AS NoOrder
	FROM usrProductNum usr WITH (NOLOCK)
	WHERE NOT EXISTS (
			SELECT 1
			FROM tmdAUProductClassification
			WHERE usr.StyleNumber = ProductNum
				AND usr.PartnerID = PartnerID
			)
		AND usr.PartnerID = @PartnerID@
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2016-04-04T11:07:33.487' AS DateTime), N'Classification Lookup: AU Products Rates Origins', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-04-04T11:09:55.223' AS DateTime), N'FB415C4F-A2E4-4618-AABD-E4892B1667E3', N'Classification Lookup: CA Products Rates Origins', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum ASC
		) AS [RowNum]
FROM (
	SELECT ISNULL(''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'', '''') AS Edit
		,xxpc.ProductNum
		,xxpc.ProductName AS ProductName
		,xxpc.ProductDesc AS ProductDesc
		,xxpc.ProductGroup AS ProductGroup
		,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum
		,CIRates.Rate AS Rate
		,CIRates.CountryOfOrigin AS CountryOfOrigin
		,1 AS NoOrder
	FROM tmdCAProductClassification xxpc WITH (NOLOCK)
	JOIN vid_CI_CA_Rates CIRates WITH (NOLOCK) ON xxpc.ProductGuid = CIRates.ProductGuid
		AND xxpc.PartnerID = CIRates.PartnerID
	WHERE EXISTS (
			SELECT 1
			FROM usrProductNum
			WHERE xxpc.PartnerID = PartnerID
				AND xxpc.ProductNum = StyleNumber
			)
		AND xxpc.PartnerID = @PartnerID@
	
	UNION ALL
	
	SELECT '''' AS Edit
		,usr.StyleNumber
		,'''' AS ProductName
		,''StyleNumber not in CA GC'' AS ProductDesc
		,'''' AS ProductGroup
		,'''' AS HsNum
		,'''' AS Rate
		,'''' AS CountryOfOrigin
		,1 AS NoOrder
	FROM usrProductNum usr WITH (NOLOCK)
	WHERE NOT EXISTS (
			SELECT 1
			FROM tmdCAProductClassification
			WHERE usr.StyleNumber = ProductNum
				AND usr.PartnerID = PartnerID
			)
		AND usr.PartnerID = @PartnerID@
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2016-04-04T11:09:55.223' AS DateTime), N'Classification Lookup: CA Products Rates Origins', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-04-04T11:12:09.540' AS DateTime), N'514D8300-FF2E-48BB-8D52-A6619FB4AF25', N'Classification Lookup: JP Products Rates Origins', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum ASC
		) AS [RowNum]
FROM (
	SELECT ISNULL(''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'', '''') AS Edit
		,xxpc.ProductNum
		,xxpc.ProductName AS ProductName
		,xxpc.ProductDesc AS ProductDesc
		,xxpc.ProductGroup AS ProductGroup
		,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum
		,CIRates.Rate AS Rate
		,CIRates.CountryOfOrigin AS CountryOfOrigin
		,1 AS NoOrder
	FROM tmdJPProductClassification xxpc WITH (NOLOCK)
	JOIN vid_CI_JP_Rates CIRates WITH (NOLOCK) ON xxpc.ProductGuid = CIRates.ProductGuid
		AND xxpc.PartnerID = CIRates.PartnerID
	WHERE EXISTS (
			SELECT 1
			FROM usrProductNum
			WHERE xxpc.PartnerID = PartnerID
				AND xxpc.ProductNum = StyleNumber
			)
		AND CIRates.CountryOfOrigin = ''JAPAN - GENERAL RATE FOR TARIFF''
		AND xxpc.PartnerID = @PartnerID@
	
	UNION ALL
	
	SELECT '''' AS Edit
		,usr.StyleNumber
		,'''' AS ProductName
		,''StyleNumber not in JP GC'' AS ProductDesc
		,'''' AS ProductGroup
		,'''' AS HsNum
		,'''' AS Rate
		,'''' AS CountryOfOrigin
		,1 AS NoOrder
	FROM usrProductNum usr WITH (NOLOCK)
	WHERE NOT EXISTS (
			SELECT 1
			FROM tmdJPProductClassification
			WHERE usr.StyleNumber = ProductNum
				AND usr.PartnerID = PartnerID
			)
		AND usr.PartnerID = @PartnerID@
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2016-04-04T11:12:09.540' AS DateTime), N'Classification Lookup: JP Products Rates Origins', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-04-04T11:14:00.247' AS DateTime), N'E7D2DB6E-C15E-4415-BF13-C610A59E9EBE', N'Classification Lookup: NL Products Rates Origins', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum ASC
		) AS [RowNum]
FROM (
	SELECT ISNULL(''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'', '''') AS Edit
		,xxpc.ProductNum
		,xxpc.ProductName AS ProductName
		,xxpc.ProductDesc AS ProductDesc
		,xxpc.ProductGroup AS ProductGroup
		,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum
		,CIRates.Rate AS Rate
		,CIRates.CountryOfOrigin AS CountryOfOrigin
		,1 AS NoOrder
	FROM tmdNLProductClassification xxpc WITH (NOLOCK)
	JOIN vid_CI_NL_Rates CIRates WITH (NOLOCK) ON xxpc.ProductGuid = CIRates.ProductGuid
		AND xxpc.PartnerID = CIRates.PartnerID
	WHERE EXISTS (
			SELECT 1
			FROM usrProductNum
			WHERE xxpc.PartnerID = PartnerID
				AND xxpc.ProductNum = StyleNumber
			)
		AND xxpc.PartnerID = @PartnerID@
	
	UNION ALL
	
	SELECT '''' AS Edit
		,usr.StyleNumber
		,'''' AS ProductName
		,''StyleNumber not in NL GC'' AS ProductDesc
		,'''' AS ProductGroup
		,'''' AS HsNum
		,'''' AS Rate
		,'''' AS CountryOfOrigin
		,1 AS NoOrder
	FROM usrProductNum usr WITH (NOLOCK)
	WHERE NOT EXISTS (
			SELECT 1
			FROM tmdNLProductClassification
			WHERE usr.StyleNumber = ProductNum
				AND usr.PartnerID = PartnerID
			)
		AND usr.PartnerID = @PartnerID@
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2016-04-04T11:14:00.247' AS DateTime), N'Classification Lookup: NL Products Rates Origins', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-04-04T11:15:12.127' AS DateTime), N'8B06F878-1894-455E-AEAA-6942690906B8', N'Classification Lookup: US Products Rates Origins', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum ASC
		) AS [RowNum]
FROM (
	SELECT ISNULL(''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'', '''') AS Edit
		,xxpc.ProductNum
		,xxpc.ProductName AS ProductName
		,xxpc.ProductDesc AS ProductDesc
		,xxpc.ProductGroup AS ProductGroup
		,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum
		,CIRates.Rate AS Rate
		,CIRates.CountryOfOrigin AS CountryOfOrigin
		,1 AS NoOrder
	FROM tmdUSProductClassification xxpc WITH (NOLOCK)
	JOIN vid_CI_US_Rates CIRates WITH (NOLOCK) ON xxpc.ProductGuid = CIRates.ProductGuid
		AND xxpc.PartnerID = CIRates.PartnerID
	WHERE EXISTS (
			SELECT 1
			FROM usrProductNum
			WHERE xxpc.PartnerID = PartnerID
				AND xxpc.ProductNum = StyleNumber
			)
		AND CIRates.CountryOfOrigin = ''US COLUMN ONE - GENERAL COUNTRIES''
		AND xxpc.PartnerID = @PartnerID@
	
	UNION ALL
	
	SELECT '''' AS Edit
		,usr.StyleNumber
		,'''' AS ProductName
		,''StyleNumber not in US GC'' AS ProductDesc
		,'''' AS ProductGroup
		,'''' AS HsNum
		,'''' AS Rate
		,'''' AS CountryOfOrigin
		,1 AS NoOrder
	FROM usrProductNum usr WITH (NOLOCK)
	WHERE NOT EXISTS (
			SELECT 1
			FROM tmdUSProductClassification
			WHERE usr.StyleNumber = ProductNum
				AND usr.PartnerID = PartnerID
			)
		AND usr.PartnerID = @PartnerID@
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2016-04-04T11:15:12.127' AS DateTime), N'Classification Lookup: US Products Rates Origins', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-04-08T15:14:11.800' AS DateTime), N'22B106BE-9E1F-422F-BCA3-CE481FC0F003', N'Classification Lookup: CI - NL HS Rates', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum ASC
		) AS [RowNum]
FROM (
	SELECT ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' AS Edit
		,xxpc.ProductNum
		,xxpc.ProductDesc
		,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum
		,CIRates.Rate
		,CIRates.CountryOfOrigin
		,1 AS NoOrder
	FROM tmdNLProductClassification xxpc WITH (NOLOCK)
	JOIN vid_CI_NL_Rates CIRates WITH (NOLOCK) ON xxpc.ProductGuid = CIRates.ProductGuid
		AND xxpc.PartnerID = CIRates.PartnerID
	WHERE xxpc.PartnerID = @PartnerID@
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2016-04-08T15:14:11.800' AS DateTime), N'Displays the tariff rates associated with the products in the Japanese Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-04-14T09:44:00.557' AS DateTime), N'511586AF-7D9B-4C6B-9F4A-C9D76324797B', N'PTI Update Everything by Default', N'UPDATE @Data@ SET @ActionFlag@=''Y'' WHERE 1=1', CAST(N'1900-01-01T00:00:00.000' AS DateTime), N'PTI Update Everything by Default', N'N', N'N')
, (@PartnerID, CAST(N'2016-04-14T09:44:00.557' AS DateTime), N'06D8EDFF-CD4F-4444-BBEA-41C8A6122425', N'PTI Insert if not Update', N'
DECLARE @z3@ varchar(MAX)

SELECT @z3@ = COALESCE(@z3@+'' AND '',''ON '') + CASE WHEN name=''PK_PartnerID'' THEN ''@PartnerId@'' ELSE name END + ''=s.'' + SUBSTRING(name,4,255)
FROM tempdb.sys.columns WHERE object_id=OBJECT_ID(''@Data@'') AND @pointA@ < column_id AND column_id < @pointB@

EXEC('' UPDATE d SET @ActionFlag@=CASE''
   + ''  WHEN s.PartnerID IS NULL AND d.PTI_SYS_CHANGE_OPERATION=''''U'''' THEN ''''I''''''
   + ''  WHEN s.PartnerID IS NULL AND d.PTI_SYS_CHANGE_OPERATION=''''D'''' THEN ''''N''''''
   + ''  WHEN s.PartnerID IS NOT NULL AND d.PTI_SYS_CHANGE_OPERATION=''''I'''' THEN ''''U''''''
   + ''  ELSE @ActionFlag@ END''
   + '' FROM @Data@ d WITH (TABLOCKX) LEFT JOIN @tableWithPartnerId@ s '' + @z3@ + '' WHERE d.@ActionFlag@ =''''Y'''''')', CAST(N'1900-01-01T00:00:00.000' AS DateTime), N'PTI Insert if not Update', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-04-14T09:44:00.557' AS DateTime), N'B592F2DC-0579-45CF-879D-A98DD3A96829', N'PTI Break Circular Logic', N'
DECLARE @z3@ varchar(MAX), @z5@ varchar(MAX), @q@ varchar(MAX)

SELECT @z3@ = COALESCE(@z3@ + '' AND '', '''') + ''t.'' + name + ''=d.'' + name FROM tempdb.sys.columns WHERE object_id=OBJECT_ID(''@Data@'') AND @PointA@ < column_id AND column_id < @PointB@
SELECT @z5@ = COALESCE(@z5@ + '','', '''') + CASE WHEN name=''PartnerId'' THEN ''1 AS [pid]'' ELSE name END FROM tempdb.sys.columns c
	LEFT JOIN tigPTIColumnsNotToUpdate ntu WITH (NOLOCK) ON c.name=ntu.ColumnName AND ntu.TableName=''@TableWithPartnerID@'' AND ntu.SourcePartnerID=@SourcePartnerID@
	WHERE object_id=OBJECT_ID(''@Data@'') AND @PointB@ < column_id AND ntu.PartnerID IS NULL

SET @q@=''UPDATE d SET @ActionFlag@=''''N'''' FROM @Data@ d WHERE
	HASHBYTES(''''md5'''', (SELECT '' + @z5@ + '' FROM @Data@ t WITH (NOLOCK) WHERE '' + REPLACE(@z3@, ''d.PK_PartnerID'', ''t.PK_PartnerID'') + '' FOR XML RAW)) =
	HASHBYTES(''''md5'''', (SELECT '' + @z5@ + '' FROM @TableWithPartnerID@ t WITH (NOLOCK) WHERE '' + REPLACE(REPLACE(@z3@, ''d.PK_PartnerID'', ''@PartnerId@''), ''t.PK_'', ''t.'') + '' FOR XML RAW))''
EXEC(@q@)', CAST(N'1900-01-01T00:00:00.000' AS DateTime), N'PTI Break Circular Logic', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-04-14T09:44:00.557' AS DateTime), N'25047C06-AC22-4098-8171-7DDF8EFAC200', N'PTI Match on ProductNum not ProductGUID', N'
DECLARE @z1@ varchar(max), @z3@ varchar(MAX), @z5@ varchar(MAX)

SELECT @z1@ = COALESCE(@z1@ + '','', '''') + CASE WHEN name=''@ActionFlag@'' THEN ''d.SYS_CHANGE_OPERATION'' ELSE ''''''N'''''' END FROM tempdb.sys.columns WHERE object_id=OBJECT_ID(''@Data@'') AND column_id < @PointA@
SELECT @z3@ = COALESCE(@z3@ + '','', '''') + ''t.'' + name FROM tempdb.sys.columns WHERE object_id=OBJECT_ID(''@Data@'') AND @PointA@ < column_id AND column_id < @PointB@
SELECT @z5@ = COALESCE(@z5@ + '','', '''') + CASE WHEN name=''PartnerId'' OR name=''ProductGuid'' THEN ''t.PK_'' ELSE ''d.'' END + name FROM tempdb.sys.columns WHERE object_id=OBJECT_ID(''@Data@'') AND @PointB@ < column_id

SELECT DISTINCT t.PartnerID AS PK_PartnerID, t.ProductGuid AS PK_ProductGuid, d.PartnerID AS newPartnerID, d.ProductGuid AS newProductGuid
INTO #temp FROM @TableName@ t JOIN @Data@ d ON t.PartnerID=d.PartnerID AND t.ProductNum=d.ProductNum WHERE d.@ActionFlag@ IN (''Y'', ''I'', ''U'', ''D'')

UPDATE d SET @ActionFlag@=''N'' FROM @Data@ d JOIN #temp t ON d.PartnerID=t.newPartnerID AND d.ProductGuid=t.newProductGuid
EXEC(''INSERT INTO @Data@ SELECT '' + @z1@ + '', d.PTI_TableName, '' + @z3@ + '', ''''X'''', '' + @z5@ + '' FROM @Data@ d JOIN #temp t ON d.PartnerID=t.newPartnerID AND d.ProductGuid=t.newProductGuid'')', CAST(N'1900-01-01T00:00:00.000' AS DateTime), N'PTI Match on ProductNum not ProductGUID', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-04-14T09:44:00.557' AS DateTime), N'DF2080AC-257F-4C58-B0AD-295B0D9C5B98', N'PTI Ignore if Exists', N'DECLARE @z3@ varchar(MAX)

SELECT @z3@ = COALESCE(@z3@ + '' AND '', ''	ON '') + ''t.'' + SUBSTRING(name,4,255) + ''=d.'' + SUBSTRING(name,4,255) 
FROM tempdb.sys.columns WHERE object_id=OBJECT_ID(''@Data@'') AND @pointA@ < column_id AND column_id < @pointB@

EXEC(''UPDATE d SET @ActionFlag@=''''N'''' ''
   + ''FROM @Data@ d WITH (NOLOCK) ''
   + ''INNER JOIN @tableWithPartnerId@ t WITH (NOLOCK) ''
   + @z3@ 
   + '' WHERE d.@ActionFlag@ =''''Y'''' '')', CAST(N'1900-01-01T00:00:00.000' AS DateTime), N'PTI Ignore if Exists', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:03:37.720' AS DateTime), N'FBA3A149-EDBC-4E9A-B451-FE7E2F679A52', N'Classification Lookup: CI - HN HS Rates', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum] FROM ( select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
xxpc.ProductNum, xxpc.ProductDesc, ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum, 
CIRates.Rate, CIRates.CountryOfOrigin, 1 AS NoOrder from tmdHNProductClassification xxpc WITH (NOLOCK) join vid_CI_HN_Rates CIRates WITH (NOLOCK) on xxpc.ProductGuid = CIRates.ProductGuid and xxpc.PartnerID = CIRates.PartnerID WHERE xxpc.PartnerID = @PartnerID@ ) AS LookupViewInner WHERE @whereclause@', CAST(N'2016-05-19T14:03:37.720' AS DateTime), N'Displays the tariff rates associated with the products in the Honduran Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:03:37.720' AS DateTime), N'F18E84E5-3B8F-4F11-B223-A7205E44F095', N'Classification Lookup: CI - HN HS Descriptions', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(		
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
											
											xxpc.ProductNum,  
											xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
											CIDesc.LongDescription,
											CIDesc.ShortDescription,
											1 AS NoOrder
										from tmdHNProductClassification xxpc WITH (NOLOCK) 
										join vid_CI_HN_Descriptions CIDesc  WITH (NOLOCK) on  
											xxpc.ProductGuid = CIDesc.ProductGuid and
											xxpc.PartnerID = CIDesc.PartnerID
										WHERE
											xxpc.PartnerID = @PartnerID@
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2016-05-19T14:03:37.720' AS DateTime), N'Displays the Honduran description for products in the Honduran Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:03:37.720' AS DateTime), N'44323E49-924A-4C40-9F89-AEC366653DA0', N'Classification Lookup: CI - HN Antidumping', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										  
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdHNProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_HN_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''ANTIDUMP'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2016-05-19T14:03:37.720' AS DateTime), N'Displays product information for HN products  where the ADCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:03:37.720' AS DateTime), N'72FF0262-FB39-434B-988D-7991B3357DA0', N'Classification Lookup: CI - HN Countervailing', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										  
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdHNProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_HN_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''COUNTER'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2016-05-19T14:03:37.720' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:14:52.980' AS DateTime), N'24677FEB-90DC-4E43-8260-B667A795B29F', N'Classification Lookup: CI - TW HS Rates', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum] FROM ( select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
xxpc.ProductNum, xxpc.ProductDesc, ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum, 
CIRates.Rate, CIRates.CountryOfOrigin, 1 AS NoOrder from tmdTWProductClassification xxpc WITH (NOLOCK) join vid_CI_TW_Rates CIRates WITH (NOLOCK) on xxpc.ProductGuid = CIRates.ProductGuid and xxpc.PartnerID = CIRates.PartnerID WHERE xxpc.PartnerID = @PartnerID@ ) AS LookupViewInner WHERE @whereclause@', CAST(N'2016-05-19T14:14:52.980' AS DateTime), N'Displays the tariff rates associated with the products in the Taiwanese Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:14:52.980' AS DateTime), N'B0BE15F4-BFFA-4709-826F-3227ED0FFAB3', N'Classification Lookup: CI - TW HS Descriptions', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(		
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
											
											xxpc.ProductNum,  
											xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
											CIDesc.LongDescription,
											CIDesc.ShortDescription,
											1 AS NoOrder
										from tmdTWProductClassification xxpc WITH (NOLOCK) 
										join vid_CI_TW_Descriptions CIDesc  WITH (NOLOCK) on  
											xxpc.ProductGuid = CIDesc.ProductGuid and
											xxpc.PartnerID = CIDesc.PartnerID
										WHERE
											xxpc.PartnerID = @PartnerID@
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2016-05-19T14:14:52.980' AS DateTime), N'Displays the Taiwanese description for products in the Taiwanese Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:14:52.980' AS DateTime), N'16ADE86D-C0B7-4309-BCDA-3B289545C7B0', N'Classification Lookup: CI - TW Antidumping', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										  
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdTWProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_TW_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''ANTIDUMP'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2016-05-19T14:14:52.980' AS DateTime), N'Displays product information for TW products  where the ADCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:14:52.980' AS DateTime), N'AF5432D5-21A7-477C-9CB4-7BDDED4D46C9', N'Classification Lookup: CI - TW Countervailing', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										  
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdTWProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_TW_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''COUNTER'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2016-05-19T14:14:52.980' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:16:01.980' AS DateTime), N'7AA7929F-0D37-47DB-A3D1-B40612F3B81E', N'Classification Lookup: CI - KR HS Rates', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum] FROM ( select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
xxpc.ProductNum, xxpc.ProductDesc, ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum, 
CIRates.Rate, CIRates.CountryOfOrigin, 1 AS NoOrder from tmdKRProductClassification xxpc WITH (NOLOCK) join vid_CI_KR_Rates CIRates WITH (NOLOCK) on xxpc.ProductGuid = CIRates.ProductGuid and xxpc.PartnerID = CIRates.PartnerID WHERE xxpc.PartnerID = @PartnerID@ ) AS LookupViewInner WHERE @whereclause@', CAST(N'2016-05-19T14:16:01.980' AS DateTime), N'Displays the tariff rates associated with the products in the Korean Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:16:01.980' AS DateTime), N'5CB8B7CB-B71D-46A1-B5D2-05C4845943C3', N'Classification Lookup: CI - KR HS Descriptions', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(		
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
											
											xxpc.ProductNum,  
											xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
											CIDesc.LongDescription,
											CIDesc.ShortDescription,
											1 AS NoOrder
										from tmdKRProductClassification xxpc WITH (NOLOCK) 
										join vid_CI_KR_Descriptions CIDesc  WITH (NOLOCK) on  
											xxpc.ProductGuid = CIDesc.ProductGuid and
											xxpc.PartnerID = CIDesc.PartnerID
										WHERE
											xxpc.PartnerID = @PartnerID@
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2016-05-19T14:16:01.980' AS DateTime), N'Displays the Korean description for products in the Korean Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:16:01.980' AS DateTime), N'BBFDE863-A694-4401-BA35-F34A5B604C71', N'Classification Lookup: CI - KR Antidumping', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										  
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdKRProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_KR_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''ANTIDUMP'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2016-05-19T14:16:01.980' AS DateTime), N'Displays product information for KR products  where the ADCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:16:01.980' AS DateTime), N'BE8B027F-FAB9-4056-A749-D18A55E52900', N'Classification Lookup: CI - KR Countervailing', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										  
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdKRProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_KR_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''COUNTER'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2016-05-19T14:16:01.980' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:19:30.350' AS DateTime), N'922EA34A-90A1-49D1-B104-B2FC520BBC7C', N'Classification Lookup: CI - JP HS Descriptions', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(		
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
											
											xxpc.ProductNum,  
											xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
											CIDesc.LongDescription,
											CIDesc.ShortDescription,
											1 AS NoOrder
										from tmdJPProductClassification xxpc WITH (NOLOCK) 
										join vid_CI_JP_Descriptions CIDesc  WITH (NOLOCK) on  
											xxpc.ProductGuid = CIDesc.ProductGuid and
											xxpc.PartnerID = CIDesc.PartnerID
										WHERE
											xxpc.PartnerID = @PartnerID@
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2016-05-19T14:19:30.350' AS DateTime), N'Displays the Japanese description for products in the Japanese Classification table', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:19:30.350' AS DateTime), N'4541A8A2-16E8-46A4-8C92-A8E314916AD3', N'Classification Lookup: CI - JP Antidumping', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										  
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdJPProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_JP_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''ANTIDUMP'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2016-05-19T14:19:30.350' AS DateTime), N'Displays product information for JP products  where the ADCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-05-19T14:19:30.350' AS DateTime), N'7043B109-FB6F-4934-A04C-471E61215695', N'Classification Lookup: CI - JP Countervailing', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,
										  
										xxpc.ProductNum,  
										xxpc.ProductDesc, 
''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,
										CIControls.ControlType,
										CIControls.TranslationValue,
										1 AS NoOrder
									from tmdJPProductClassification xxpc WITH (NOLOCK) 
									JOIN vid_CI_JP_Controls CIControls  WITH (NOLOCK) on
										CIControls.ControlType = ''COUNTER'' and
										xxpc.ProductGuid = CIControls.ProductGuid and
										xxpc.PartnerID = CIControls.PartnerID
									WHERE
										xxpc.PartnerID = @PartnerID@
) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2016-05-19T14:19:30.350' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'04770037-EAFD-4804-91AC-21040D078B04', N'BOM Simulation Lookup: Customs Approved Scrap', N'SELECT *   ,ROW_NUMBER() OVER (    ORDER BY @orderby@     ,ProductNum    ) AS [RowNum]  FROM (   SELECT HandbookNum    ,ProductNum    ,BatchNum    ,sum(Quantity) AS Quantity    ,1 AS NoOrder   FROM txdScrapRequestHist s   JOIN (    SELECT TOP 1 *    FROM txdSimulationReports    ORDER BY effdate DESC    ) AS r ON r.PartnerID = s.PartnerID   WHERE SubmitDate BETWEEN r.BeginningDate     AND r.EndingDate    AND STATUS = ''A''    AND s.CustomApproval = ''Y''    AND s.HandbookNum IN (     SELECT RPO11     FROM ttdSimulationFIFOProcessing WITH (NOLOCK)     )   GROUP BY s.HandbookNum    ,s.ProductNum    ,s.BatchNum   ) AS LookupViewInner  WHERE @whereclause@
', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays scrap that has been accepted by customs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.710' AS DateTime), N'fcd86ce2-b597-4ca3-b7bc-5d749635d262', N'Broker Pedimento Header', N'/*Header*/
				SELECT PedimentoNum,SUBSTRING(PedimentoNum,1,2) AS YEAR, SUBSTRING(PedimentoNum,4,2) AS PortCode, SUBSTRING(PedimentoNum,7,4) AS Patente,
				SUBSTRING(PedimentoNum,12,7) AS Sequence, PedimentoCategory AS [Pedimento Category], PedimentoCode, PedimentoRegimen, GrossValue as [Value],
				CompanyName AS [Company Name], PedimentoPaymentDate AS [Payment Date]
				FROM txdMXBrokerPedimentoHeader with (nolock)
				ORDER BY PedimentoPaymentDate DESC', CAST(N'2018-07-05T18:51:29.710' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.710' AS DateTime), N'370a391a-c293-4dda-ab96-66c33ce7b794', N'Broker Pedimento Parties', N'/*Parties*/
				select PedimentoNum, CompanyID, CompanyName, CompanyAddress1, CompanyCity, CompanyState, CompanyPostalCode, CompanyCountry
				from txdMXBrokerPedimentoParties with (nolock)', CAST(N'2018-07-05T18:51:29.710' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.710' AS DateTime), N'd76ca6f8-206f-4361-8dfb-2bae8b545a8f', N'Broker Pedimento invoice', N'/*Invoice*/
				select PedimentoNum, InvoiceNum, InvoiceDate, invoiceValue, InvoiceValueCurrencyCode, InvoiceValueUSD,
				BuyerSellerName, BuyerSellerFederalID
				from txdMXBrokerPedimentoInvoice with (nolock)', CAST(N'2018-07-05T18:51:29.710' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.710' AS DateTime), N'e8ec7f29-3430-480a-b97b-4cc8816edd49', N'Broker Pedimento Rules', N'/*Rules*/
				select PedimentoNum, SectionNum, MXHSNum, RuleType, RuleType2, RuleNumber, RuleNumber2 ,TxnQty, Value
				from txdMXBrokerPedimentoRules with (nolock)', CAST(N'2018-07-05T18:51:29.710' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'471A4CF0-3CCE-4226-A350-89806F1E38DF', N'BOM Simulation Lookup: Pending Scrap', N' SELECT *   ,ROW_NUMBER() OVER (    ORDER BY @orderby@     ,ProductNum    ) AS [RowNum]  FROM (select HandbookNum, ProductNum, BatchNum, g1.Decode as Reason, Quantity, g2.Decode as Status,1 AS NoOrder from txdScrapRequest s     join tmgGlobalCodes g1 WITH (NOLOCK)     ON G1.PartnerID = s.PartnerID and g1.FieldName = ''ScrapReasonCode''     join tmgGlobalCodes g2 with (nolock)     on s.PartnerID = g2.PartnerID and g2.FieldName = ''ScrapStatusCode''     join (select top 1 * from txdSimulationReports     order by effdate desc) as r     on r.PartnerID = s.PartnerID     WHERE      SubmitDate between r.BeginningDate and r.EndingDate         and s.HandbookNum in (select RPO11 FROM ttdSimulationFIFOProcessing with (nolock))   ) AS LookupViewInner  WHERE @whereclause@  
', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays summarized Pending Scrap on BOM Simulation page', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'5EF6FA28-07DA-4109-AC97-540EDFDFFDB9', N'Export Lookup:Export Time Stamp', N'DECLARE @SQL AS NVARCHAR(MAX);
DECLARE @ColName AS NVARCHAR(MAX);

SELECT  @ColName = isnull(@ColName + '','', '''') + QUOTENAME(Status)
FROM    ( SELECT DISTINCT
                    StatusCode + ''-'' + Status as Status
          FROM      dbo.txdTracking
          where Status <>'''' and EntryNum in (select CustomDeclarationID1  from txdCNZONECCSSupplemental with (nolock)
where RecordType1 = ''E'')
        ) AS X
ORDER BY X.Status;
--SELECT @ColName
 
SET @SQL = ''
WITH PivotData AS
(Select EntryNum,InvoiceNum, StatusCode + ''''-'''' + Status as Status, isnull(EffDate,''''1900/1/1'''') as EffDate
FROM txdTracking where entryNum <> '''''''' and EntryNum in (select CustomDeclarationID1  from txdCNZONECCSSupplemental with (nolock)
where RecordType1 = ''''E'''') )
 
SELECT
EntryNum, InvoiceNum,'' + @ColName + ''
FROM PivotData
PIVOT
(max(EffDate) FOR Status in ('' + @ColName + '')) AS PivotResult
ORDER BY EntryNum
''; 
EXEC (@SQL);
', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This will show the Time Stamp management data for Export at EntryNum level', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.710' AS DateTime), N'27922e21-2c8c-429f-bc1b-9c0f226efa12', N'Broker Pedimento Transportation', N'/*Transportation*/
				select PedimentoNum, CarrierFederalID, CarrierCURP, CarrierName, CountryofTransport, TransportID, ManifestQty,
				CarrierAddress, SerialNum
				from txdMXBrokerPedimentoTransportation with (nolock)', CAST(N'2018-07-05T18:51:29.710' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.713' AS DateTime), N'32776f78-2efd-4746-8551-b57dbe223dd2', N'Broker Pedimento Observations', N'/*Observations*/
				select PedimentoNum, LineNum, ObservationText
				from txdMXBrokerPedimentoObservations with (nolock)', CAST(N'2018-07-05T18:51:29.713' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.713' AS DateTime), N'6f1145c8-7255-4ca3-8684-d378b70b688a', N'Broker Pedimento Bill of Lading', N'/*BillofLading*/
				select MasterBillOfLading, HouseBillOfLading
				from txdMXBrokerPedimentoBillofLading with (nolock)', CAST(N'2018-07-05T18:51:29.713' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.713' AS DateTime), N'038a775f-47e4-4256-8ec7-eca05cf24793', N'Broker Pedimento Compliments', N'/*Compliments*/
				select PedimentoNum, IdentificationType, Identification1, Identification2, Identification3
				from txdMXBrokerPedimentoCompliments with (nolock)', CAST(N'2018-07-05T18:51:29.713' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'86CE6117-34A9-4A62-B0F7-CBBACED5BEB4', N'BOM Simulation Lookup: Component Balance', N'select a.ProductNum as ProductNum , sum(a.ReceiptQuantity)as ReceiptQuantity, sum(a.ShipmentQuantity)as ShipmentQuantity, sum(a.CustomsApprovedScrap)as CustomsApprovedScrap, sum(a.EXGoodsInTransit- a.IMGoodsInTransit) as GoodsInTransit, sum(a.PendingScrap)as PendingScrap, sum(a.Inventory)as Inventory,sum(a.ReceiptQuantity)- sum(a.ShipmentQuantity)+ sum(a.PendingScrap)+ sum(a.EXGoodsInTransit)-sum(a.IMGoodsInTransit) as IPSystemBalance,sum(a.ReceiptQuantity)- sum(a.ShipmentQuantity)+ sum(a.PendingScrap)+ sum(a.EXGoodsInTransit)-sum(a.IMGoodsInTransit)- sum(a.Inventory) as Comparison, 1 as NoOrder
from
(
SELECT ProductNum,sum(TxnQty) AS ReceiptQuantity,0 as ShipmentQuantity, 0 as CustomsApprovedScrap, 0 as IMGoodsInTransit,  0 as EXGoodsInTransit,0 as Inventory, 0 as PendingScrap 
FROM TTDSimulationFIFOProcessing  WITH (NOLOCK)
WHERE SourceSystem = ''IP''
AND TxnCode = ''RPPC''
group by ProductNum

union all

SELECT ProductNum,0 as ReceiptQuantity, sum(TxnQty) AS ShipmentQuantity, 0 as CustomsApprovedScrap, 0 as IMGoodsInTransit,  0 as EXGoodsInTransit, 0 as Inventory, 0 as PendingScrap
FROM TTDSimulationFIFOProcessing  WITH (NOLOCK)
WHERE SourceSystem = ''PTR''
AND TxnCode = ''SPNM''
AND ProductTypeCode = ''PC''
group by ProductNum


-- Customs Approved Scrap-- 
union all
SELECT ProductNum,0 as ReceiptQuantity,0 AS ShipmentQuantity, sum(Quantity) AS CustomsApprovedScrap,0 as IMGoodsInTransit,  0 as EXGoodsInTransit,  0 as Inventory, 0 as PendingScrap
FROM txdScrapRequestHist s
JOIN (
SELECT TOP 1 *
FROM txdSimulationReports
ORDER BY effdate DESC
) AS r ON r.PartnerID = s.PartnerID
WHERE SubmitDate BETWEEN r.BeginningDate
AND r.EndingDate
AND STATUS = ''A''
AND s.HandbookNum IN (
SELECT RPO11
FROM ttdSimulationFIFOProcessing WITH (NOLOCK)
)group by ProductNum


-- Import GIT-- 
union all

SELECT ProductNum,0 as ReceiptQuantity,0 AS ShipmentQuantity, 0 as CustomsApprovedScrap, sum(TxnQty) as  IMGoodsInTransit,0 as EXGoodsInTransit,  0 as Inventory, 0 as PendingScrap
FROM TTDSimulationFIFOProcessing WITH (NOLOCK)
WHERE SourceSystem = ''IP''
AND TxnCode = ''RPPC''
AND ProductTypeCode = ''PC''
AND ReceiptDocID IN (
SELECT t1.EntryNum
FROM txdTracking t1 WITH (NOLOCK)
LEFT JOIN txdTracking t2 WITH (NOLOCK) ON t1.EntryNum = t2.EntryNum
AND t1.PartnerID = t2.PartnerID
AND t1.StatusCode = ''102''
AND t2.StatusCode = ''103''
WHERE t2.PartnerID IS NULL
)group by ProductNum


--Export GIT -- 
union all
SELECT ProductNum ,0 as ReceiptQuantity,0 AS ShipmentQuantity, 0 as CustomsApprovedScrap,0 as IMGoodsInTransit,sum(TxnQty) as EXGoodsInTransit, 0 as Inventory, 0 as PendingScrap
FROM TTDSimulationFIFOProcessing  WITH (NOLOCK)
WHERE SourceSystem = ''IP''
AND TxnCode = ''SPNM''
AND ProductTypeCode = ''PC''
AND ExitDocID IN (
SELECT t1.EntryNum
FROM txdTracking t1 WITH (NOLOCK)
LEFT JOIN txdTracking t2 WITH (NOLOCK) ON t1.EntryNum = t2.EntryNum
AND t1.PartnerID = t2.PartnerID
AND t1.StatusCode = ''102''
AND t2.StatusCode = ''103''
WHERE t2.PartnerID IS NULL
)group by ProductNum


-- Inventory Balance--  
union all 
select productnum, 0 as ReceiptQuantity,0 AS ShipmentQuantity, 0 as CustomsApprovedScrap, 0 as IMGoodsInTransit,  0 as EXGoodsInTransit, txnqty as Inventory, 0 as PendingScrap from ttdStagingInvBalRecon 
where convert(varchar,TxnDate,112) =''20160501'' 

--Pending Scrap--  
union all 
SELECT ProductNum ,0 as ReceiptQuantity,0 AS ShipmentQuantity, 0 as CustomsApprovedScrap, 0 as IMGoodsInTransit,  0 as EXGoodsInTransit,  0 as Inventory, sum(s.Quantity) as PendingScrap
FROM txdScrapRequest s
JOIN (
SELECT TOP 1 *
FROM txdSimulationReports
ORDER BY effdate DESC
) AS r ON r.PartnerID = s.PartnerID
WHERE SubmitDate BETWEEN r.BeginningDate
AND r.EndingDate
AND s.HandbookNum IN (
SELECT RPO11
FROM ttdSimulationFIFOProcessing WITH (NOLOCK)
)
group by ProductNum
)a
group by ProductNum', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays the Component Balance that are out of balance under BOM Simulation page', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.713' AS DateTime), N'ca1c064a-e643-45bc-ab7b-9e8d867c130b', N'Broker Pedimento Container', N'/*Container*/
				select PedimentoNum, ContainerNum, ContainerType
				from txdMXBrokerPedimentoContainer with (nolock)', CAST(N'2018-07-05T18:51:29.713' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'9C2E4A93-9303-437D-AE71-5456994C32D8', N'BOM Simulation Lookup: Customs Rejected Scrap', N'SELECT *   ,ROW_NUMBER() OVER (    ORDER BY @orderby@     ,ProductNum    ) AS [RowNum]  FROM (    select HandbookNum, ProductNum, BatchNum, g.Decode as Reason, Quantity,  1 AS NoOrder   from txdScrapRequestHist s     join tmgGlobalCodes g WITH (NOLOCK)     ON G.PartnerID = s.PartnerID and g.FieldName = ''ScrapReasonCode''     join (select top 1 * from txdSimulationReports     order by effdate desc) as r     on r.PartnerID = s.PartnerID     WHERE      SubmitDate between r.BeginningDate and r.EndingDate      and Status = ''R''      and s.HandbookNum in (select RPO11 FROM ttdSimulationFIFOProcessing with (nolock))   ) AS LookupViewInner  WHERE @whereclause@  
', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query displays scrap that has been rejected by customs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.717' AS DateTime), N'006dac3a-5c47-42ca-9101-7fe2d172d0db', N'Broker Pedimento Detail', N'/*Detail*/
				select PedimentoNum, SectionNum, MXHSNum, ProductNum, MXProductDesc, TxnQty, TxnQtyUOM, TotalValue, TotalValueUSD,
				ValueMXN, ProgramType, Program1, TotalCustomsValue
				from trdReportMXBrokerPedimentoDetail with (nolock)', CAST(N'2018-07-05T18:51:29.717' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'ac994280-154b-4295-b52c-63e5342e9444', N'KICKOFF - Handbook Detail Upload', N'insert into tlgapplicationlaunchstatus SELECT PartnerID,getdate(),''server1'',newid(),''Handbook Detail Upload'',1,''dxdExecuteSQLBatch.dll'',''LAUNCH'','''',''CLEAR PRW - Handbook Detail Upload'',''N'',''N'' from tmfdefaults with (nolock)', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This query will kick off Handbook Detail Upload workflow', N'N', N'N')
, (@PartnerID, CAST(N'2018-07-05T18:51:29.717' AS DateTime), N'e778fcae-9e33-49be-b6e7-cbde0cede802', N'Broker Pedimento Fees', N'/*Fees*/
				select PedimentoNum, FeeType, FeeAmount, FeeRateType, FeeTotal, FeeFormOfPayment
				from txdMXBrokerPedimentoFees with (nolock)', CAST(N'2018-07-05T18:51:29.717' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.717' AS DateTime), N'033a2c60-c480-4c91-a232-8231bfb8fcaf', N'Broker Pedimentos Rectificaciones', N'/*Rectificaciones*/
				select PedimentoNum, RectifiedPedimentoNum, PedimentoCode, OriginalPedimentoNum, OriginalPedimentoCode,
				BrokerFederalID, OriginalBrokerFederalID, CustomsLocation, PaymentDate, 
				from txdMXBrokerPedimentoRectificaciones with (nolock)', CAST(N'2018-07-05T18:51:29.717' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.720' AS DateTime), N'40ac9fe6-ed38-44f7-b1f5-4b41e60547c6', N'Broker Pedimento RectificationFees', N'/*RectificationFees*/
				select PedimentoNum, FeeType, FeeAmount, PaymentType
				from txdMXBrokerPedimentoRectificacionesFees with (nolock)', CAST(N'2018-07-05T18:51:29.720' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.720' AS DateTime), N'a4c6671e-a142-4c35-97e0-2417219781f6', N'Broker Pedimento HSLine', N'/*HSLine*/
				select PedimentoNum, SectionNum, MXHsNum as [AltHtsNum], TotalValueNonOriginating, Duty
				from txdMXBrokerPedimentoHSLineArticle303 with (nolock)', CAST(N'2018-07-05T18:51:29.720' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.720' AS DateTime), N'' + cast(@Partnerid as varchar(30)) + 'f015-deb9-49e0-86b3-7ffdf74f3df5', N'Broker Pedimento HSLine ItemFees', N'/*HSLineItemFees*/
				select PedimentoNum, SectionNum, MXHSNum as [AltHtsNum], TaxType, TaxTotal, TaxRate, TaxRateType, TaxTotal,
				TaxFormOfPayment
				from txdMXBrokerPedimentoHSLineItemFees with (nolock)', CAST(N'2018-07-05T18:51:29.720' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.750' AS DateTime), N'58fc7d7f-1cf8-41d4-b6a9-ab2d91ba8da0', N'DataStage_Header_List', N'SELECT SR.PartnerID, SR.Folio, SR.Folio AS [Solicitud], SR.RFCoPatenteAduanal AS [Agente], SR.Fecha_Inicial, SR.Fecha_Final, SR.Compared, 
							(SELECT COUNT(*) FROM txdMXDataStageFolioReference FR WITH (NOLOCK)
        						WHERE FR.PartnerID = SR.PartnerID AND FR.Folio = SR.Folio) AS [No._Pedimentos],
							(SELECT COUNT(*) FROM txdMXDataStageQueue FR WITH (NOLOCK)
        						WHERE FR.PartnerID = SR.PartnerID AND FR.Folio = SR.Folio) AS [Validation_Queue]
					FROM txdMXDataStageResumen SR WITH (NOLOCK)
					WHERE SR.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''', CAST(N'2018-07-05T18:51:29.750' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.750' AS DateTime), N'05ce4128-df50-4a52-beae-a7daa37c5f06', N'DataStage_Detail_List', N'SELECT FR.Folio, FR.PedimentoNum, PH.TipoOperacion AS PedimentoCategory, PH.ClaveDocumento AS PedimentoCode,
					 (SELECT COUNT(*) FROM txdMXDataComparison SR WITH (NOLOCK) 
							 WHERE FR.PartnerID = SR.PartnerID AND SR.Additional1 = FR.Folio AND PH.PedimentoNum = SR.Reference) AS [Errors_Per_Pedimento]
				FROM txdMXDataStageFolioReference FR WITH (NOLOCK)
				JOIN txdMXDataStageHeader501 PH WITH (NOLOCK)
					ON (FR.PedimentoNum = PH.PedimentoNum AND
						FR.PartnerID = PH.PartnerID)
				WHERE FR.PartnerID = ''@PARTNERID@'' AND FR.Folio = ''@FOLIO@''', CAST(N'2018-07-05T18:51:29.750' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'E413A01B-CB5D-4AFA-B490-91696348EE87', N'Import Lookup:Import Time Stamp', N'DECLARE @SQL AS NVARCHAR(MAX);
DECLARE @ColName AS NVARCHAR(MAX);

SELECT  @ColName = isnull(@ColName + '','', '''') + QUOTENAME(Status)
FROM    ( SELECT DISTINCT
                    StatusCode + ''-'' + Status as Status
          FROM      dbo.txdTracking
          where Status <>'''' and EntryNum in (select CustomDeclarationID1  from txdCNZONECCSSupplemental with (nolock)
where RecordType1 = ''I'')
        ) AS X
ORDER BY X.Status;
--SELECT @ColName
 
SET @SQL = ''
WITH PivotData AS
(Select EntryNum,InvoiceNum, StatusCode + ''''-'''' + Status as Status, isnull(EffDate,''''1900/1/1'''') as EffDate
FROM txdTracking where entryNum <> '''''''' and EntryNum in (select CustomDeclarationID1  from txdCNZONECCSSupplemental with (nolock)
where RecordType1 = ''''I'''') )
 
SELECT
EntryNum, InvoiceNum,'' + @ColName + ''
FROM PivotData
PIVOT
(max(EffDate) FOR Status in ('' + @ColName + '')) AS PivotResult
ORDER BY EntryNum
''; 
EXEC (@SQL);
', CAST(N'2016-08-15T00:00:00.000' AS DateTime), N'This will show the Time Stamp management data for Import at EntryNum level', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.933' AS DateTime), N'31ad6fc8-bd9e-4a79-ba34-6c846f0302bb', N'DSPedimentosContributionDifferences702', N'SELECT '''' AS [ViewContributionDifferences702],PedimentoNum,Patente,Pedimento,SeccionAduanera,ClaveContribucion,FormaPago,ImportePago,TipoPedimento,FechaPagoReal
				FROM txdMXDataStageContributionDifferences702 WITH (nolock)
				WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
				ORDER BY PedimentoNum DESC
				--Order by', CAST(N'2018-07-05T18:51:29.933' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.933' AS DateTime), N'3573bab9-3817-4d33-b491-f28187b35836', N'DSPedimentosRectification701', N'SELECT '''' AS [ViewRectification701],PedimentoNum,Patente,Pedimento,SeccionAduanera,ClaveDocumento,FechaPago,PedimentoAnterior,PatenteAnterior,
SeccionAduaneraAnterior,DocumentoAnterior,FechaOperacionAnterior,PedimentoOriginal,PatenteAduanalOrig,SeccionAduaneraDespOrig,FechaPagoReal
FROM txdMXDataStageRectification701 WITH (nolock)
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
ORDER BY PedimentoNum DESC', CAST(N'2018-07-05T18:51:29.933' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.933' AS DateTime), N'd05f2d85-d5d6-426a-854b-e399fcfbebbb', N'DSPedimentosDetailObservations558', N'SELECT '''' AS [ViewDetailObservations558],PedimentoNum,Patente,Pedimento,SeccionAduanera,Fraccion,SecuenciaFraccion,SecuenciaObservacion,Observaciones,FechaPagoReal
FROM txdMXDataStageDetailObservations558 WITH (nolock)
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
ORDER BY PedimentoNum DESC', CAST(N'2018-07-05T18:51:29.933' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.937' AS DateTime), N'fe2e791e-9ee5-484b-aed7-d3bb98a48cb2', N'DSPedimentosDetailDuties557', N'SELECT '''' AS [ViewDetailDetailDuties557],PedimentoNum,Patente,Pedimento,SeccionAduanera,Fraccion,SecuenciaFraccion,ClaveContribucion,FormaPago,ImportePago,FechaPagoReal
FROM txdMXDataStageDetailDuties557 WITH (nolock)
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
ORDER BY PedimentoNum DESC', CAST(N'2018-07-05T18:51:29.937' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.937' AS DateTime), N'63413c66-a744-46a4-a4b4-069425bf2a3c', N'DSPedimentosDetailDutyRates556', N'SELECT '''' AS [ViewDetailDetailDutyRates556],PedimentoNum,Patente,Pedimento,SeccionAduanera,Fraccion,SecuenciaFraccion,ClaveContribucion,TasaContribucion,TipoTasa,FechaPagoReal
FROM txdMXDataStageDetailDutyRates556 WITH (nolock)
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
ORDER BY PedimentoNum DESC', CAST(N'2018-07-05T18:51:29.937' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.943' AS DateTime), N'7e79de1d-dbff-4292-bfbf-2bbaf5b3a4c6', N'DSPedimentosCustomsAccounts555', N'SELECT '''' AS [ViewCustomsAccounts555],PedimentoNum,Patente,Pedimento,SeccionAduanera,Fraccion,SecuenciaFraccion,InstitucionEmisora,NumeroCuenta,FolioConstancia,FechaConstancia,ClaveGarantia,
ValorUnitarioTitulo,TotalGarantia,CantidadUnidadesMedida,TitulosAsignados,FechaPagoReal
FROM txdMXDataStageCustomsAccounts555 WITH (nolock)
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
ORDER BY PedimentoNum DESC', CAST(N'2018-07-05T18:51:29.943' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.943' AS DateTime), N'65709b68-61d9-41f5-9171-52e4d87a6cab', N'DSPedimentosDetailIdentifiers554', N'SELECT '''' AS [ViewDetailIdentifiers554],PedimentoNum,Patente,Pedimento,SeccionAduanera,Fraccion,SecuenciaFraccion,ClaveCaso,IdentificadorCaso,
ComplementoCaso,FechaPagoReal
FROM txdMXDataStageDetailIdentifiers554 WITH (nolock)
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
ORDER BY PedimentoNum DESC', CAST(N'2018-07-05T18:51:29.943' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.970' AS DateTime), N'727c4f3d-e507-4b38-b0d7-8cfe3d44fce9', N'DSPedimentosPermits553', N'SELECT '''' AS [ViewPermits553],PedimentoNum,Patente,Pedimento,SeccionAduanera,Fraccion,SecuenciaFraccion,ClavePermiso,FirmaDescargo,NumeroPermiso,
ValorComercialDolares,CantidadMUMTarifa,FechaPagoReal
FROM txdMXDataStagePermits553 WITH (nolock)
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
ORDER BY PedimentoNum DESC', CAST(N'2018-07-05T18:51:29.970' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.970' AS DateTime), N'79fb13fd-d641-4e03-adeb-e6f1884729aa', N'DSPedimentosMerchandises552', N'SELECT '''' AS [ViewMerchandises552],PedimentoNum,Patente,Pedimento,SeccionAduanera,Fraccion,SecuenciaFraccion,VinNumeroSerie,KilometrajeVehiculo,FechaPagoReal
FROM txdMXDataStageMerchandises552 WITH (nolock)
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
ORDER BY PedimentoNum DESC', CAST(N'2018-07-05T18:51:29.970' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:29.970' AS DateTime), N'ae587578-7e1e-4a74-bc63-1a1d23b2d034', N'DSPedimentosDetail551', N'SELECT '''' AS [ViewDetail551],PedimentoNum,Patente,Pedimento,SeccionAduanera,Fraccion,SecuenciaFraccion,SubdivisionFraccion,DescripcionMercancia,
PrecioUnitario,ValorAduana,ValorComercial,ValorDolares,CantidadUMComercial,UnidadMedidaComercial,CantidadUMTarifa,UnidadMedidaTarifa,ValorAgregado,
ClaveVinculacion,MetodoValorizacion,CodigoMercanciaProducto,MarcaMercanciaProducto,ModeloMercanciaProducto,PaisOrigenDestino,PaisCompradorVendedor,
EntidadFedOrigen,EntidadFedDestino,EntidadFedComprador,EntidadFedVendedor,TipoOperacion,ClaveDocumento,FechaPagoReal
FROM txdMXDataStageDetail551 WITH (nolock)
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
ORDER BY PedimentoNum DESC', CAST(N'2018-07-05T18:51:29.970' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-06T12:10:34.260' AS DateTime), N'10668F56-D3D8-4996-8FF6-8819D383E034', N'Classification Lookup: CI - SG HS Rates', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum] FROM ( select    ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,  xxpc.ProductNum, xxpc.ProductDesc, ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,   CIRates.Rate, CIRates.CountryOfOrigin, 1 AS NoOrder from tmdSGProductClassification xxpc WITH (NOLOCK) join vid_CI_SG_Rates CIRates WITH (NOLOCK) on xxpc.ProductGuid = CIRates.ProductGuid and xxpc.PartnerID = CIRates.PartnerID WHERE xxpc.PartnerID = @PartnerID@ ) AS LookupViewInner WHERE @whereclause@', CAST(N'2017-06-29T05:13:20.357' AS DateTime), N'Displays the tariff rates associated with the products in the Singapore Classification table', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-06T12:10:34.297' AS DateTime), N'A1579FA1-8907-4DB7-9545-97C10355913A', N'Classification Lookup: CI - SG HS Descriptions', N'SELECT * ,           ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]          FROM               (              select    ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,                           xxpc.ProductNum,               xxpc.ProductDesc,   ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,             CIDesc.LongDescription,             CIDesc.ShortDescription,             1 AS NoOrder            from tmdSGProductClassification xxpc WITH (NOLOCK)             join vid_CI_SG_Descriptions CIDesc  WITH (NOLOCK) on               xxpc.ProductGuid = CIDesc.ProductGuid and             xxpc.PartnerID = CIDesc.PartnerID            WHERE             xxpc.PartnerID = @PartnerID@           ) AS LookupViewInner          WHERE                                          @whereclause@', CAST(N'2017-06-29T05:13:20.357' AS DateTime), N'Displays the Singapore description for products in the Singapore Classification table', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-06T12:10:34.303' AS DateTime), N'B363C910-43E7-41C6-8106-CC2CFA66FA27', N'Classification Lookup: CI - SG Antidumping', N'SELECT * ,           ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]          FROM               (  select    ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,                           xxpc.ProductNum,              xxpc.ProductDesc,   ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,            CIControls.ControlType,            CIControls.TranslationValue,            1 AS NoOrder           from tmdSGProductClassification xxpc WITH (NOLOCK)            JOIN vid_CI_SG_Controls CIControls  WITH (NOLOCK) on            CIControls.ControlType = ''ANTIDUMP'' and            xxpc.ProductGuid = CIControls.ProductGuid and            xxpc.PartnerID = CIControls.PartnerID           WHERE            xxpc.PartnerID = @PartnerID@  ) AS LookupViewInner          WHERE                                          @whereclause@', CAST(N'2017-06-29T05:13:20.357' AS DateTime), N'Displays product information for SG products  where the ADCaseNumber is not blank', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-06T12:10:34.310' AS DateTime), N'61075A1A-9FF2-4553-AF1D-C274A41A307B', N'Classification Lookup: CI - SG Countervailing', N'SELECT * ,           ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]          FROM               (  select    ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,                         xxpc.ProductNum,              xxpc.ProductDesc,   ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,            CIControls.ControlType,            CIControls.TranslationValue,            1 AS NoOrder           from tmdSGProductClassification xxpc WITH (NOLOCK)            JOIN vid_CI_SG_Controls CIControls  WITH (NOLOCK) on            CIControls.ControlType = ''COUNTER'' and            xxpc.ProductGuid = CIControls.ProductGuid and            xxpc.PartnerID = CIControls.PartnerID           WHERE            xxpc.PartnerID = @PartnerID@  ) AS LookupViewInner          WHERE                                          @whereclause@', CAST(N'2017-06-29T05:13:20.357' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-06T12:10:34.310' AS DateTime), N'268B2FF4-7A87-4D84-BD4B-DF7F43648F6C', N'Classification Lookup: CI - HK HS Rates', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum] FROM ( select    ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,  xxpc.ProductNum, xxpc.ProductDesc, ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,   CIRates.Rate, CIRates.CountryOfOrigin, 1 AS NoOrder from tmdHKProductClassification xxpc WITH (NOLOCK) join vid_CI_HK_Rates CIRates WITH (NOLOCK) on xxpc.ProductGuid = CIRates.ProductGuid and xxpc.PartnerID = CIRates.PartnerID WHERE xxpc.PartnerID = @PartnerID@ ) AS LookupViewInner WHERE @whereclause@', CAST(N'2017-06-29T05:13:20.357' AS DateTime), N'Displays the tariff rates associated with the products in the HongKong Classification table', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-06T12:10:34.320' AS DateTime), N'5A2B83AC-E29C-4351-AC7B-CABD5A91EB34', N'Classification Lookup: CI - HK HS Descriptions', N'SELECT * ,           ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]          FROM               (              select    ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,                          xxpc.ProductNum,               xxpc.ProductDesc,   ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,             CIDesc.LongDescription,             CIDesc.ShortDescription,             1 AS NoOrder            from tmdHKProductClassification xxpc WITH (NOLOCK)             join vid_CI_HK_Descriptions CIDesc  WITH (NOLOCK) on               xxpc.ProductGuid = CIDesc.ProductGuid and             xxpc.PartnerID = CIDesc.PartnerID            WHERE             xxpc.PartnerID = @PartnerID@           ) AS LookupViewInner          WHERE                                          @whereclause@', CAST(N'2017-06-29T05:13:20.357' AS DateTime), N'Displays the HongKong description for products in the HongKong Classification table', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-06T12:10:34.320' AS DateTime), N'BEA105AA-C07E-4C51-8A5A-F29BADD6E218', N'Classification Lookup: CI - HK Antidumping', N'SELECT * ,           ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]          FROM               (  select    ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,                          xxpc.ProductNum,              xxpc.ProductDesc,   ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,            CIControls.ControlType,            CIControls.TranslationValue,            1 AS NoOrder           from tmdHKProductClassification xxpc WITH (NOLOCK)            JOIN vid_CI_HK_Controls CIControls  WITH (NOLOCK) on            CIControls.ControlType = ''ANTIDUMP'' and            xxpc.ProductGuid = CIControls.ProductGuid and            xxpc.PartnerID = CIControls.PartnerID           WHERE            xxpc.PartnerID = @PartnerID@  ) AS LookupViewInner          WHERE                                          @whereclause@', CAST(N'2017-06-29T05:13:20.357' AS DateTime), N'Displays product information for HK products  where the ADCaseNumber is not blank', N'N', N'N')
, (@PartnerID, CAST(N'2018-07-05T18:51:29.970' AS DateTime), N'f1823c79-3d8d-44f4-939b-2b867806db86', N'DSPedimentosShipTo520', N'SELECT '''' AS [ViewShipTo520],PedimentoNum,Patente,Pedimento,SeccionAduanera,IndentFiscalDestinatario,
NombreDestinatarioMercancia,CalleDestinatario,NumInteriorDestinatario,NumExteriorDestinatario,CpDestinatario,
MunicpioDestinatario,PaisDestinatario,FechaPagoReal
FROM txdMXDataStageShipTo520 WITH (nolock)
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
ORDER BY PedimentoNum DESC', CAST(N'2018-07-05T18:51:29.970' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.010' AS DateTime), N'6d975767-f715-46ed-8d43-9ef28f59997a', N'DSPedimentosDischarges512', N'SELECT '''' AS [ViewDischarges512],PedimentoNum,Patente,Pedimento,SeccionAduanera,PatenteAduanalOrig,PedimentoOriginal,SeccionAduaneraDespOrig,DocumentoOriginal,
FechaOperacionOrig,FraccionOriginal,UnidadMedida,MercanciaDescargada,TipoPedimento,FechaPagoReal
FROM txdMXDataStageDischarges512 WITH (nolock)
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
ORDER BY pedimentonum DESC
--ORDER BY', CAST(N'2018-07-05T18:51:30.010' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.010' AS DateTime), N'e46d046a-59bf-4f33-b8c6-04ad6f6cce0f', N'DSPedimentosHeaderObservations511', N'SELECT '''' AS [ViewHeaderObservations511],PedimentoNum,Patente,Pedimento,SeccionAduanera,SecuenciaObservacion,Observaciones,TipoPedimento,FechaValidacionPagoR
FROM txdMXDataStageHeaderObservations511 WITH (nolock)
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
ORDER BY pedimentonum DESC
--ORDER BY', CAST(N'2018-07-05T18:51:30.010' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-10T15:13:19.183' AS DateTime), N'A199FE19-D713-40CE-B195-C44CCDE30D4E', N'Entry Declaration Correction All Entries', N'SELECT entry.EntryGUID, entry.EntryNum, entry.EntryType, entry.IORName As Importer, entry.EntryDate,
				 entry.PortOfEntry, entry.BrokerName
			FROM @VALIDATIONTABLE@ entry WITH (NOLOCK)
			INNER JOIN txdEntryValidationSummaryStatus status WITH (NOLOCK)
			ON entry.PartnerID = status.PartnerID
				AND entry.EntryGUID = status.EntryGUID
				AND status.FieldName = ''EVSummaryStatus''
				AND status.StatusCode = @STATUS@
			WHERE entry.PartnerID = @PARTNERID@
			AND NOT EXISTS (SELECT 1 FROM txdEntryDeclarationCorrectionComplete comp WITH (NOLOCK)
							WHERE comp.PartnerID = entry.PartnerID AND comp.EntryGUID = entry.EntryGUID)
			GROUP BY entry.EntryGUID, entry.EntryNum, entry.EntryType, entry.IORName,
				entry.EntryDate, entry.PortOfEntry, entry.BrokerName', CAST(N'2017-07-10T15:13:19.183' AS DateTime), N'Displays all entries that have been marked as needing corrections.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-06-16T14:31:13.717' AS DateTime), N'd06a425c-4cf7-4f06-bb13-cf0a705e93a2', N'Lookup Dropdown SQL', N'
								SELECT ''7 days'',7 
								UNION ALL
								SELECT ''30 days'',30
								UNION ALL
								SELECT ''90 days'',90

							', CAST(N'2017-06-16T14:31:13.717' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.017' AS DateTime), N'aff039de-d4ad-401d-b235-1501a53099e0', N'DSPedimentosHeaderDuties510', N'SELECT '''' AS [ViewHeaderDuties510],PedimentoNum,Patente,Pedimento,SeccionAduanera,ClaveContribucion,FormaPago,ImportePago,TipoPedimento,FechaPagoReal
FROM txdMXDataStageHeaderDuties510 WITH (nolock)
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
ORDER BY pedimentonum DESC
--ORDER BY', CAST(N'2018-07-05T18:51:30.017' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.017' AS DateTime), N'72b5efb8-fbf9-436a-bf7e-0382a156a30c', N'DSPedimentosHeaderDutyRates509', N'SELECT '''' AS [ViewHeaderDutyRates509],PedimentoNum,Patente,Pedimento,SeccionAduanera,ClaveContribucion,TasaContribucion,TipoTasa,TipoPedimento,FechaPagoReal
FROM txdMXDataStageHeaderDutyRates509 WITH (nolock)
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
ORDER BY pedimentonum DESC
--ORDER BY', CAST(N'2018-07-05T18:51:30.017' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.020' AS DateTime), N'816627b2-9d07-4077-9ece-6a60fff11370', N'DSPedimentosGeneralAccounts508', N'SELECT
	 '' AS [VieweneralAccounts508],PedimentoNum,Patente,Pedimento,SeccionAduanera,InstitucionEmisora,NumeroCuenta,FolioConstancia,FechaConstancia TipoCuenta,ClaveGarantia,ValorUnitarioTitulo,TotalGarantia,CantidadUnidades,TitulosAsignados,FechaPagoReal 
FROM
	 txdMXDataStageGeneralAccounts508 WITH (nolock) 
WHERE
	 PartnerID = ''' + cast(@Partnerid as varchar(30)) + ''' 
ORDER BY
	 pedimentonum 
DESC
	 --ORDER BY
	 ', CAST(N'2018-07-05T18:51:30.020' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.020' AS DateTime), N'3fabba1b-552e-42c1-adb3-f2ea70a53ca5', N'DSPedimentosIdentifiers507', N'SELECT '''' AS [ViewHeaderIdentifiers507],PedimentoNum,Patente,Pedimento,SeccionAduanera,ClaveCaso,IdentificadorCaso,TipoPedimento,ComplementoCaso,FechaValidacionPagoR
FROM txdMXDataStageHeaderIdentifiers507 WITH (nolock) 
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + ''' 
ORDER BY pedimentonum DESC
--ORDER BY	 ', CAST(N'2018-07-05T18:51:30.020' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.020' AS DateTime), N'e8b768f7-16a1-44d9-b32f-287a0ee0709a', N'DSPedimentosDates506', N'SELECT '''' AS [ViewHeaderDates506],PedimentoNum,Patente,Pedimento,SeccionAduanera,TipoFecha,FechaOperacion,FechaValidacionPagoR
FROM txdMXDataStageDates506 WITH (nolock) 
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + ''' 
ORDER BY pedimentonum DESC
--ORDER BY	 ', CAST(N'2018-07-05T18:51:30.020' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.023' AS DateTime), N'6ac1548a-7c5a-4542-9a55-cb3fd673f42b', N'DSPedimentosInvoices505', N'SELECT '''' AS [ViewInvoices505],	PedimentoNum,Patente,Pedimento,SeccionAduanera,FechaFacturacion,NumeroFactura,TerminoFacturacion,
MonedaFacturacion,ValorDolares,ValorMonedaExtranjera,PaisFacturacion,EntidadFedFacturacion,IndentFiscalProveedor,ProveedorMercancia,CalleProveedor,NumInteriorProveedor,
NumExteriorProveedor,CpProveedor,MunicipioProveedor,FechaPagoReal
FROM txdMXDataStageInvoices505 WITH (nolock) 
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + ''' 
ORDER BY pedimentonum DESC
--ORDER BY', CAST(N'2018-07-05T18:51:30.023' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.023' AS DateTime), N'336cc688-ad34-47a5-8342-12a29efed353', N'DSPedimentosContainers504', N'SELECT '''' AS [ViewContainers504],PedimentoNum,Patente,Pedimento,SeccionAduanera,NumContenedor,TipoContenedor,FechaPagoReal
FROM txdMXDataStageContainers504 WITH (nolock) 
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + ''' 
ORDER BY pedimentonum DESC
--ORDER BY', CAST(N'2018-07-05T18:51:30.023' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.023' AS DateTime), N'6fca1955-a03c-4bb2-9f75-391946db31ea', N'DSPedimentosBillOfLading503', N'SELECT '''' AS [ViewBillOfLading503],PedimentoNum,Patente,Pedimento,SeccionAduanera,NumeroGuia,TipoGuia,FechaPagoReal
FROM txdMXDataStageBillOfLading503 WITH (nolock) 
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + ''' 
ORDER BY pedimentonum DESC
--ORDER BY', CAST(N'2018-07-05T18:51:30.023' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-06-16T14:33:53.240' AS DateTime), N'b6512305-c4b1-4198-ab14-e544e331da35', N'Lookup Dropdown SQL	', N'SELECT ''7 days'',7 UNION ALL SELECT ''30 days'',30 UNION ALL SELECT ''90 days'',90	', CAST(N'2017-06-16T14:33:53.240' AS DateTime), N'', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-23T17:35:04.427' AS DateTime), N'020d59bd-69db-4349-96ec-15e8181b69c8', N'Lookup Dropdown SQL', N'
					SELECT ''Qualifying'',''Qualifying''
					UNION ALL
				SELECT ''Non-Qualifying'',''Non-Qualifying''
				', CAST(N'2017-07-23T17:35:04.427' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-23T17:35:04.483' AS DateTime), N'ed2fd480-4ea4-4a38-ade0-52f19d4412c4', N'Lookup Dropdown SQL', N'
					SELECT ''NAFTA-US'',''NAFTA-US''
					UNION ALL
					SELECT ''CAFTA-DR'',''CAFTA-DR''
					UNION ALL
					SELECT ''US-KOREA'',''US-KOREA''
					UNION ALL
					SELECT ''US-AUSTRALIA'',''US-AUSTRALIA''
					UNION ALL
					SELECT ''ASEAN'',''ASEAN''
					UNION ALL
					SELECT ''COUNTRYOFORIGIN'',''COUNTRYOFORIGIN''


				', CAST(N'2017-07-23T17:35:04.483' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-23T17:35:04.490' AS DateTime), N'33eed4fa-0001-4e3a-b8e4-2ad6894adedf', N'Lookup Dropdown SQL', N'
					
					SELECT ''All'',''PlantID''
					UNION ALL
					SELECT ''MX_PL002'',''MX_PL002''
					UNION ALL
					SELECT ''CA_PL003'',''CA_PL003''
					UNION ALL
					SELECT ''PL004_Loc'',''PL004_Loc''
					UNION ALL
					SELECT ''US_PL001'',''US_PL001''
					
					
					
				', CAST(N'2017-07-23T17:35:04.490' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-23T17:35:04.497' AS DateTime), N'0647a9b3-11aa-4b30-83a1-6787ed6758c3', N'Lookup Dropdown SQL', N'
					SELECT ''30 days'',30
					UNION ALL
					SELECT ''60 days'',60
					UNION ALL
					SELECT ''90 days'',90

				', CAST(N'2017-07-23T17:35:04.497' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-23T17:35:04.500' AS DateTime), N'b607baaf-a9c1-4a7f-a40e-cc9e86ba6d69', N'Lookup Dropdown SQL', N'
				SELECT ''All'',''Status''
				UNION ALL
				SELECT ''Action Required'' as Status,''Action Required'' as Status
				UNION ALL 
				SELECT ''Archived'' as Status,''Archived'' as Status
				UNION All
				SELECT ''Complete'' as Status,''Complete'' as Status
				UNION All
				SELECT ''Final'' as Status,''Final'' as Status
				UNION All
				SELECT ''Not Complete'' as Status,''Not Complete'' as Status
				UNION All
				SELECT ''Not Sent'' as Status,''Not Sent'' as Status
				UNION All
				SELECT ''Rejected'' as Status,''Rejected'' as Status
				UNION All
				SELECT ''Sent'' as Status,''Sent'' as Status
		
			', CAST(N'2017-07-23T17:35:04.500' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-23T17:35:04.510' AS DateTime), N'a2b0babb-7eaa-4807-8da0-88afd7a39079', N'Lookup Dropdown SQL', N'
					SELECT ''NAFTA-US'',''NAFTA-US''
					UNION ALL
					SELECT ''CAFTA-DR'',''CAFTA-DR''
					UNION ALL
					SELECT ''US-KOREA'',''US-KOREA''
					UNION ALL
					SELECT ''US-AUSTRALIA'',''US-AUSTRALIA''
					UNION ALL
					SELECT ''ASEAN'',''ASEAN''
					UNION ALL
					SELECT ''COUNTRYOFORIGIN'',''COUNTRYOFORIGIN''


				', CAST(N'2017-07-23T17:35:04.510' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-23T17:35:04.517' AS DateTime), N'd8c9418f-54bf-4e79-aed0-5f04c2a9c1a1', N'Lookup Dropdown SQL', N'
				SELECT ''Unprinted'' as Status,''Unprinted'' as Status
				UNION ALL 
				SELECT ''SUnPrinted'' as Status,''SUnPrinted'' as Status
				UNION All
				SELECT ''Printed'' as Status,''Printed'' as Status
				UNION All
				SELECT ''NonCert'' as Status,''NonCert'' as Status
				UNION All
				SELECT ''NonCertGen'' as Status,''NonCertGen'' as Status
				UNION All
				SELECT ''Void'' as Status,''Void'' as Status

			', CAST(N'2017-07-23T17:35:04.517' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-23T17:35:04.520' AS DateTime), N'a42419ac-c10d-402a-b74f-489f7d6d4588', N'Lookup Dropdown SQL', N'
					SELECT ''30 days'',30
					UNION ALL
					SELECT ''60 days'',60
					UNION ALL
					SELECT ''90 days'',90

				', CAST(N'2017-07-23T17:35:04.520' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-23T17:35:04.537' AS DateTime), N'826b89b7-f07b-4c3d-9c97-15da4be23dd2', N'Lookup Dropdown SQL', N'
					SELECT ''Failed'' as Status,''Failed'' as Status
					UNION ALL 
					SELECT ''Passed'' as Status,''Passed'' as Status
				', CAST(N'2017-07-23T17:35:04.537' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-26T08:23:10.110' AS DateTime), N'da43a0b6-e499-4b3b-8898-dfbfca3a17f1', N'DPS Dropdown', N' SELECT ''30 days'',30
                                                                UNION ALL
                                                                SELECT ''60 days'',60
                                                                UNION ALL
                                                                SELECT ''90 days'',90', CAST(N'2017-07-26T08:23:10.110' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:35.873' AS DateTime), N'379a8340-f4aa-45bf-a557-e85b7792d278', N'3C8FED73-84E5-4B63-B3D5-256B26E0DE80', N'declare @year1 int
declare @year2 int
DECLARE @ParmDefinition nvarchar(500); 
declare @sql nvarchar(1000) 
declare @column varchar(30)

set @year2 = year(GETDATE())
set @year1 = @year2 - 1
set @column = ''DeferredDutySavings''


set @ParmDefinition = ''@year1a int, @year2a int''


set @sql = N''
select m.Month [ ],
  sum(case when year = @year1a then v.'' + @column + '' else 0 end) ['' + cast(@year1 as varchar(4)) + ''],
  sum(case when year = @year2a then v.'' + @column + '' else 0 end) ['' + cast(@year2 as varchar(4)) + '']
from trdDutySavingsSummary v
right join (
select 1 monthNum, ''''Jan'''' Month
union select 2, ''''Feb''''
union select 3, ''''Mar''''
union select 4, ''''Apr''''
union select 5, ''''May''''
union select 6, ''''Jun''''
union select 7, ''''Jul''''
union select 8, ''''Aug''''
union select 9, ''''Sep''''
union select 10, ''''Oct''''
union select 11, ''''Nov''''
union select 12, ''''Dec'''') as m on v.month = m.monthNum
group by m.Month, m.monthNum
order by m.monthNum''

exec sp_executeSql @sql, @ParmDefinition, @year1, @year2
', CAST(N'2018-01-12T09:44:35.873' AS DateTime), N'Deferred Duty Savings', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-10-12T16:35:34.117' AS DateTime), N'9E933C2B-1235-4B1B-BF64-CCD496E75F19', N'Inventario Negativo y Disponible', N'SELECT 
	PC.ProductNum AS [Producto_Pendiente],
	CASE WHEN IM.ProductTypeCode = ''IM'' THEN ''***IM***''
		ELSE IM.ProductTypeCode 
	END AS ProductTypeCode,
	IM.TxnQtyUom,
	MI.AltHTSIndex AS AltHTSIndex, 
	MAX(IM.ProductDesc) AS ProductDescription, 
	CONVERT(DECIMAL(38,7), SUM(PC.TxnQty)) AS [Cantidad_Pendiente], 
	CONVERT(VARCHAR(10),ISNULL(PC.TxnDate, ''1900-01-01''),111) AS [Fecha_Embarque],
	''--'' AS [--],
	CASE WHEN IM.ProductTypeCode = ''IM'' THEN ''***IM NOT ALLOWED***''
		ELSE ISNULL(AB.ProductNum, '''')
	END AS [Producto_sustituto],
--	ISNULL(AB.ProductNum, '''') AS [Producto_sustituto],
	ISNULL(AB.AltHTSIndex, '''') AS [Fraccion_sustituto],
	AB.ReceiptDocID as [Pedimento],
	ISNULL(CONVERT(DECIMAL(38,7), AB.TxnQtyAvail), 0) AS [Cantidad],
	MAX(ISNULL(CONVERT(DECIMAL(38,7), BR.TxnQty), 0)) AS [ERP_InvBalRecon],
	MIN(CONVERT(VARCHAR(10),ISNULL(AB.TxnDate, ''1900-01-01''),111)) AS [Fecha_Recibo],
	CONVERT(VARCHAR(10),ISNULL(AB.ExpirationDate, ''1900-01-01''),111) AS [Fecha_Expiracion],
	CASE WHEN (AB.PedimentoCode IN (''IN'', ''V1'') AND AB.ExpirationDate = ''1900-01-01'') THEN ''NO CALCULADO''
	ELSE CASE WHEN ISNULL(CONVERT(DECIMAL(38,7), AB.TxnQtyAvail), 0) = 0 THEN ''SIN SALDO DISPONIBLE''
		 ELSE ''DEFINITIVO/LOCAL MATERIAL'' END
	END AS TIPO_SALDO,
	ISNULL(AB.PedimentoCode, '''') AS PedimentoCode,
    '''' AS Identificacion
FROM txdPendingPC PC	WITH (NOLOCK) 
JOIN tmdItemMaster IM	WITH (NOLOCK) ON PC.PartnerID = IM.PartnerID AND PC.ProductNum = IM.ProductNum
JOIN tmdMXItemMaster MI WITH (NOLOCK) ON PC.PartnerID = MI.PartnerID AND PC.ProductNum = MI.ProductNum
LEFT JOIN (		SELECT 
					MAX(FR.PartnerID) AS PartnerID,
					FR.ProductNum, 
					FR.ReceiptDocId,
					TxnQtyUom,
					SUM(TxnQty) AS TxnQtyAvail, 
					AltHTSIndex, 
					TxnDate, 
					ISNULL(PH.PedimentoCode, '''') AS PedimentoCode,
					ExpirationDate 
				FROM txdFifoReceipt FR WITH (NOLOCK) 
				JOIN txdMXFIFOProcessingHIST MF WITH (NOLOCK) 
				ON MF.PartnerID = FR.PartnerID AND MF.TxnNumGUID = FR.TxnNumGUID
				LEFT JOIN txdMXPedimentoHeader PH WITH (NOLOCK) 
				ON PH.PartnerID = FR.PartnerID AND PH.PedimentoNum = FR.ReceiptDocID
				WHERE FR.ProductTypeCode = ''PC''
				GROUP BY FR.ProductNum, AltHTSIndex, TxnQtyUom, TxnDate, PH.PedimentoCode, ExpirationDate, FR.ReceiptDocId) AS AB 
				ON	AB.AltHTSIndex	= MI.AltHTSIndex AND
				AB.TxnQtyUom		= IM.TxnQtyUom	 AND 
				PC.ProductTypeCode	= ''PC''			 AND 
				(PC.TxnDate BETWEEN AB.TxnDate AND (CASE WHEN AB.ExpirationDate = ''1900-01-01'' THEN ''2050-01-01'' ELSE AB.ExpirationDate END) AND AB.PedimentoCode IN (''IN'', ''V1''))
LEFT JOIN txdInvBalRecon BR WITH (NOLOCK) 
ON BR.PartnerID = AB.PartnerID AND BR.ProductNum = AB.ProductNum
GROUP BY PC.ProductNum, IM.ProductTypeCode, IM.TxnQtyUom, MI.AltHTSIndex, PC.TxnDate, AB.ProductNum, AB.AltHTSIndex, AB.ReceiptDocID,AB.TxnQtyAvail, AB.ExpirationDate, AB.PedimentoCode
ORDER BY PC.ProductNum, AB.ExpirationDate
--GROUP BY
--ORDER BY
', CAST(N'2017-10-12T16:35:34.117' AS DateTime), N'This query is used to review available inventory for substitute part numbers on IMMEX', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:35.920' AS DateTime), N'0a3254a1-9bdd-4dc6-bafd-886daaad4200', N'3C8FED73-84E5-4B63-B3D5-256B26E0DE80', N'declare @year1 int
declare @year2 int
DECLARE @ParmDefinition nvarchar(500); 
declare @sql nvarchar(1000) 
declare @column varchar(30)

set @year2 = year(GETDATE())
set @year1 = @year2 - 1
set @column = ''MPFSavings''


set @ParmDefinition = ''@year1a int, @year2a int''


set @sql = N''
select m.Month [ ],
  sum(case when year = @year1a then v.'' + @column + '' else 0 end) ['' + cast(@year1 as varchar(4)) + ''],
  sum(case when year = @year2a then v.'' + @column + '' else 0 end) ['' + cast(@year2 as varchar(4)) + '']
from trdDutySavingsSummary v
right join (
select 1 monthNum, ''''Jan'''' Month
union select 2, ''''Feb''''
union select 3, ''''Mar''''
union select 4, ''''Apr''''
union select 5, ''''May''''
union select 6, ''''Jun''''
union select 7, ''''Jul''''
union select 8, ''''Aug''''
union select 9, ''''Sep''''
union select 10, ''''Oct''''
union select 11, ''''Nov''''
union select 12, ''''Dec'''') as m on v.month = m.monthNum
group by m.Month, m.monthNum
order by m.monthNum''

exec sp_executeSql @sql, @ParmDefinition, @year1, @year2
', CAST(N'2018-01-12T09:44:35.920' AS DateTime), N'MPF Savings', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:35.940' AS DateTime), N'0c280c30-d48d-4212-b50a-f95a697ff072', N'3C8FED73-84E5-4B63-B3D5-256B26E0DE80', N'declare @year1 int
declare @year2 int
DECLARE @ParmDefinition nvarchar(500); 
declare @sql nvarchar(1000) 
declare @column varchar(30)

set @year2 = year(GETDATE())
set @year1 = @year2 - 1
set @column = ''ExportDutySavings''


set @ParmDefinition = ''@year1a int, @year2a int''


set @sql = N''
select m.Month [ ],
  sum(case when year = @year1a then v.'' + @column + '' else 0 end) ['' + cast(@year1 as varchar(4)) + ''],
  sum(case when year = @year2a then v.'' + @column + '' else 0 end) ['' + cast(@year2 as varchar(4)) + '']
from trdDutySavingsSummary v
right join (
select 1 monthNum, ''''Jan'''' Month
union select 2, ''''Feb''''
union select 3, ''''Mar''''
union select 4, ''''Apr''''
union select 5, ''''May''''
union select 6, ''''Jun''''
union select 7, ''''Jul''''
union select 8, ''''Aug''''
union select 9, ''''Sep''''
union select 10, ''''Oct''''
union select 11, ''''Nov''''
union select 12, ''''Dec'''') as m on v.month = m.monthNum
group by m.Month, m.monthNum
order by m.monthNum''

exec sp_executeSql @sql, @ParmDefinition, @year1, @year2
', CAST(N'2018-01-12T09:44:35.940' AS DateTime), N'Export Savings', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:35.940' AS DateTime), N'83efe6f3-879f-423b-9721-ed88031bac5b', N'3C8FED73-84E5-4B63-B3D5-256B26E0DE80', N'declare @year1 int
declare @year2 int
DECLARE @ParmDefinition nvarchar(500); 
declare @sql nvarchar(1000) 
declare @column varchar(30)

set @year2 = year(GETDATE())
set @year1 = @year2 - 1
set @column = ''InvertedDutySavings''


set @ParmDefinition = ''@year1a int, @year2a int''

DECLARE @DistOnly as numeric

select @DistOnly = count(*) from (select top 1 * from txdshipimhist(nolock)) q


set @sql = N''
select m.Month [ ],
  sum(case when year = @year1a then v.'' + @column + '' else 0 end) ['' + cast(@year1 as varchar(4)) + ''],
  sum(case when year = @year2a then v.'' + @column + '' else 0 end) ['' + cast(@year2 as varchar(4)) + '']
from trdDutySavingsSummary v
right join (
select 1 monthNum, ''''Jan'''' Month
union select 2, ''''Feb''''
union select 3, ''''Mar''''
union select 4, ''''Apr''''
union select 5, ''''May''''
union select 6, ''''Jun''''
union select 7, ''''Jul''''
union select 8, ''''Aug''''
union select 9, ''''Sep''''
union select 10, ''''Oct''''
union select 11, ''''Nov''''
union select 12, ''''Dec'''') as m on v.month = m.monthNum
group by m.Month, m.monthNum
order by m.monthNum''


IF 0 = @DistOnly
begin
  select '''' [No Manufacturing Events]
end
else
begin
  exec sp_executeSql @sql, @ParmDefinition, @year1, @year2
end', CAST(N'2018-01-12T09:44:35.940' AS DateTime), N'Inverted Duty Savings', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:35.943' AS DateTime), N'106ab8bd-6907-4cf0-b583-328f66bc324e', N'3C8FED73-84E5-4B63-B3D5-256B26E0DE80', N'declare @year1 int
declare @year2 int
DECLARE @ParmDefinition nvarchar(500); 
declare @sql nvarchar(1000) 
declare @column varchar(30)

set @year2 = year(GETDATE())
set @year1 = @year2 - 1
set @column = ''ScrapDutySavings''


set @ParmDefinition = ''@year1a int, @year2a int''


set @sql = N''
select m.Month [ ],
  sum(case when year = @year1a then v.'' + @column + '' else 0 end) ['' + cast(@year1 as varchar(4)) + ''],
  sum(case when year = @year2a then v.'' + @column + '' else 0 end) ['' + cast(@year2 as varchar(4)) + '']
from trdDutySavingsSummary v
right join (
select 1 monthNum, ''''Jan'''' Month
union select 2, ''''Feb''''
union select 3, ''''Mar''''
union select 4, ''''Apr''''
union select 5, ''''May''''
union select 6, ''''Jun''''
union select 7, ''''Jul''''
union select 8, ''''Aug''''
union select 9, ''''Sep''''
union select 10, ''''Oct''''
union select 11, ''''Nov''''
union select 12, ''''Dec'''') as m on v.month = m.monthNum
group by m.Month, m.monthNum
order by m.monthNum''

exec sp_executeSql @sql, @ParmDefinition, @year1, @year2
', CAST(N'2018-01-12T09:44:35.943' AS DateTime), N'Scrap Savings', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:35.943' AS DateTime), N'2eaea1d6-eabe-467b-ae14-1075cafc23aa', N'3C8FED73-84E5-4B63-B3D5-256B26E0DE80', N'
DECLARE @BeginDate AS datetime
DECLARE @Partner as varchar(10)
declare @year1 int
declare @year2 int
DECLARE @ParmDefinition nvarchar(500); 
declare @sql nvarchar(2000) 

---------------------------------------------------
SET @BeginDate = DATEADD(yy, DATEDIFF(yy, 0, dateadd(DD, -1, dateadd(YY,datediff(yy,0,getdate()),0))), 0) --First day of previous year
--set @BeginDate = ''1/1/2016''
--select @BeginDate

set @year2 = year(GETDATE())
set @year2 = (YEAR(@BeginDate) + 1)
set @year1 = @year2 - 1


set @ParmDefinition = ''@year1a int, @year2a int''

If OBJECT_ID(''tempdb..#TempStatusValues'') Is Not Null
drop table #TempStatusValues
If OBJECT_ID(''tempdb..#TempMonths'') Is Not Null
drop table #TempMonths


select year(r.ReceiptDate) year, month(r.ReceiptDate) month, case when r.StatusCode = ''D'' then ''Domestic'' else ''Foreign'' end as status, SUM(r.enteredValue) value
into #TempStatusValues 
from (
select r.ReceiptDate, rh.StatusCode, (case when rh.HtsNum <> rh.HtsNum2 then rh.Value + rh.Value2 else rh.Value end) * r.TxnQty as enteredValue
from txdReceiptHist r
join txdReceiptHistHtsValues rh on r.FifoGUID = rh.FifoGUID and r.PartnerID = rh.PartnerID
where r.ReceiptDate >= @BeginDate
union all
select r.ReceiptDate, rh.StatusCode, (case when rh.HtsNum <> rh.HtsNum2 then rh.Value + rh.Value2 else rh.Value end) * r.TxnQty as enteredValue
from txdReceiptHist r
join txdFifoProcessingHtsValuesClock rh on r.FifoGUID = rh.FifoGUID and r.PartnerID = rh.PartnerID
where r.ReceiptDate >= @BeginDate
) r
group by year(r.ReceiptDate), month(r.ReceiptDate), r.StatusCode

select * into #TempMonths from (
select 1 monthNum, ''Jan'' Month
union select 2, ''Feb''
union select 3, ''Mar''
union select 4, ''Apr''
union select 5, ''May''
union select 6, ''Jun''
union select 7, ''Jul''
union select 8, ''Aug''
union select 9, ''Sep''
union select 10, ''Oct''
union select 11, ''Nov''
union select 12, ''Dec'') a

set @sql = N''
select m.Month [ ],
  sum(case when year = @year1a and status = ''''Domestic'''' then v.value else 0 end) ['' + cast(@year1 as varchar(4)) + '' Domestic],
  sum(case when year = @year1a and status = ''''Foreign'''' then v.value else 0 end) ['' + cast(@year1 as varchar(4)) + '' Foreign],
  sum(case when year = @year2a and status = ''''Domestic'''' then v.value else 0 end) ['' + cast(@year2 as varchar(4)) + '' Domestic],
  sum(case when year = @year2a and status = ''''Foreign'''' then v.value else 0 end) ['' + cast(@year2 as varchar(4)) + '' Foreign]
from #TempStatusValues v
right join #TempMonths m on m.monthNum = v.month
group by m.Month, m.monthNum
order by m.monthNum''

exec sp_executeSql @sql, @ParmDefinition, @year1, @year2', CAST(N'2018-01-12T09:44:35.943' AS DateTime), N'Domestic vs Foreign Value Received', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:35.943' AS DateTime), N'c870d2cf-edcf-42f2-902e-c6951f57931d', N'3C8FED73-84E5-4B63-B3D5-256B26E0DE80', N'
DECLARE @BeginDate AS datetime
DECLARE @Partner as varchar(10)
declare @year1 int
declare @year2 int
DECLARE @ParmDefinition nvarchar(500); 
declare @sql nvarchar(2000) 

---------------------------------------------------
SET @BeginDate = DATEADD(yy, DATEDIFF(yy, 0, dateadd(DD, -1, dateadd(YY,datediff(yy,0,getdate()),0))), 0) --First day of previous year
--set @BeginDate = ''1/1/2010''
--select @BeginDate

--select year(txnDate), count(*) from txdFifoProcessingHist group by year(txnDate)


set @year2 = year(GETDATE())
set @year2 = (YEAR(@BeginDate) + 1)
set @year1 = @year2 - 1


set @ParmDefinition = ''@year1a int, @year2a int''

If OBJECT_ID(''tempdb..#TempTxnCounts'') Is Not Null
drop table #TempTxnCounts
If OBJECT_ID(''tempdb..#TempMonths2'') Is Not Null
drop table #TempMonths2


select year(r.TxnDate) year, month(r.TxnDate) month, r.TxnCode, count(*) count
into #TempTxnCounts 
from txdFifoProcessingHIST r
where r.TxnDate >= @BeginDate
and r.PartnerID = @PartnerID
group by year(r.TxnDate), month(r.TxnDate), r.TxnCode

select * into #TempMonths2 from (
select 1 monthNum, ''Jan'' Month
union select 2, ''Feb''
union select 3, ''Mar''
union select 4, ''Apr''
union select 5, ''May''
union select 6, ''Jun''
union select 7, ''Jul''
union select 8, ''Aug''
union select 9, ''Sep''
union select 10, ''Oct''
union select 11, ''Nov''
union select 12, ''Dec'') a



set @sql = N''
SELECT  Month [ ]
        , ['' + cast(@year1 as varchar(4)) + ''] = ISNULL(max(CASE WHEN year = @year1a THEN count END), 0)
        , ['' + cast(@year2 as varchar(4)) + ''] = ISNULL(max(CASE WHEN year = @year2a THEN count END), 0)
FROM    
(
  SELECT  m.Month, v.year, m.monthNum, txncode
   , v.count
  FROM    #TempTxnCounts  v
right join #TempMonths2 m on m.monthNum = v.month 
) q
GROUP BY month, monthNum
order by monthNum''


exec sp_executeSql @sql, @ParmDefinition, @year1, @year2', CAST(N'2018-01-12T09:44:35.943' AS DateTime), N'Number of Transactions', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:36.583' AS DateTime), N'aedf6c9a-4482-404a-ae66-9156d6b7b6af', N'22F7FB7C-EC94-4760-88CE-41306975601C', N'select ''Click on chart data points to drill in and see more details.''', CAST(N'2018-01-12T09:44:36.583' AS DateTime), N'', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.593' AS DateTime), N'0d717cd4-a553-4771-b81c-3043abef7518', N'22F7FB7C-EC94-4760-88CE-41306975601C', N'DECLARE @BeginDate AS datetime
DECLARE @Partner as varchar(10)
declare @year1 int
declare @year2 int
DECLARE @ParmDefinition nvarchar(500); 

declare @sql nvarchar(2000) 


---------------------------------------------------
SET @BeginDate = DATEADD(yy, DATEDIFF(yy, 0, dateadd(DD, -1, dateadd(YY,datediff(yy,0,getdate()),0))), 0) --First day of previous year
--set @BeginDate = ''1/1/2009''
--select @BeginDate

set @year2 = year(GETDATE())
set @year2 = (YEAR(@BeginDate) + 1)
set @year1 = @year2 - 1


IF OBJECT_ID(''tempdb..#TempReceiptData'') IS NOT NULL
    DROP TABLE #TempReceiptData

select MAX(txnDate) TxnDate, ReceiptDocID, partnerID 
into #TempReceiptData
from txdReceiptHist d with (nolock) 
    where d.txnDate > DATEADD(month, -14, getdate()) and d.txnDate < GETDATE() and d.PartnerID = @PartnerID
    group by ReceiptDocID, PartnerID

select month + '' '' + cast(year(dateadd(month, -1, endMonth)) as varchar(4)) [ ], 
  ISNULL(SUM(good),0) [Filed Timely], ISNULL(SUM(bad),0) [Not Filed Timely],
    ''fxdScoreCard.aspx?GUID=2893A8CD-91CA-48CF-A88A-74FEC47CA589&0=@value'' LINK
from (
  select d.txndate, d.receiptdocid, 
    case when dateDiff(day, max(d.TxnDate), min(s.effdate)) > 5 then 0 else 1 end as good, 
    case when dateDiff(day, max(d.TxnDate), min(s.effdate)) > 5 then 1 else 0 end as bad 
  from txdABITransactionStatus abi with (nolock) 
  join #TempReceiptData d with (nolock) on abi.referenceID = d.receiptdocid and abi.partnerid = d.partnerid 
  join txdABITransactionStatus s with (nolock) on s.referenceID = d.receiptdocid and s.partnerid = d.partnerid and s.type = ''ConcurrenceDetail'' and s.status=''FINAL''
  where abi.type = ''214''
  group by d.txndate, d.receiptdocid
) v
right join (
select *, dateadd(month, monthnum, cast(''1/1/'' + cast(case when monthNum > month(getdate()) then @year1 else @year2 end as varchar(4)) as DATE)) endMonth from (
  select 1 monthNum, ''Jan'' Month
  union select 2, ''Feb''
  union select 3, ''Mar''
  union select 4, ''Apr''
  union select 5, ''May''
  union select 6, ''Jun''
  union select 7, ''Jul''
  union select 8, ''Aug''
  union select 9, ''Sep''
  union select 10, ''Oct''
  union select 11, ''Nov''
  union select 12, ''Dec'') mm
) m on dateadd(day, (-1 * day(v.txnDate)) + 1, v.txnDate) = dateadd(month, -1, m.endMonth)
group by month, endMonth
order by endMonth

drop table #TempReceiptData', CAST(N'2018-01-12T09:44:36.593' AS DateTime), N'E214 - Timing of Filing', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:36.603' AS DateTime), N'289c22bd-fbad-4056-9063-93b1abb0fecd', N'22F7FB7C-EC94-4760-88CE-41306975601C', N'DECLARE @BeginDate AS datetime
DECLARE @Partner as varchar(10)
declare @year1 int
declare @year2 int
DECLARE @ParmDefinition nvarchar(500); 

declare @sql nvarchar(2000) 


---------------------------------------------------
SET @BeginDate = DATEADD(yy, DATEDIFF(yy, 0, dateadd(DD, -1, dateadd(YY,datediff(yy,0,getdate()),0))), 0) --First day of previous year
--set @BeginDate = ''1/1/2016''
--select @BeginDate

set @year2 = year(GETDATE())
set @year2 = (YEAR(@BeginDate) + 1)
set @year1 = @year2 - 1


select [Month & Year] as [ ], SUM(p)[# with Pending GO Messages], SUM(g) [# with GO Messages],
  ''fxdScoreCard.aspx?GUID=808504E2-2221-4B89-A8EF-4E3758619387&0=@value'' link
from (
  select month + '' '' + cast(year(dateadd(month, -1, endMonth)) as varchar(4)) [Month & Year], 
    case when dispositioncode = ''1R'' then Count(distinct referenceID) else 0 end p, 
    case when dispositioncode = ''1S'' then Count(distinct referenceID) else 0 end g,
    endMonth
  from (
    select r.ActionDate, r.referenceID, r.dispositioncode
    from txdABICF214Replies r with (nolock)
    where dispositioncode in (''1R'',''1S'')
    and r.Actiondate > @BeginDate
    and r.PartnerID = @PartnerID
  ) v
  right join (
  select *, dateadd(month, monthnum, cast(''1/1/'' + cast(case when monthNum > month(getdate()) then @year1 else @year2 end as varchar(4)) as DATE)) endMonth from (
    select 1 monthNum, ''Jan'' Month
    union select 2, ''Feb''
    union select 3, ''Mar''
    union select 4, ''Apr''
    union select 5, ''May''
    union select 6, ''Jun''
    union select 7, ''Jul''
    union select 8, ''Aug''
    union select 9, ''Sep''
    union select 10, ''Oct''
    union select 11, ''Nov''
    union select 12, ''Dec'') mm
  ) m on dateadd(day, (-1 * day(v.ActionDate)) + 1, v.ActionDate) = dateadd(month, -1, m.endMonth)
  group by month, endMonth, dispositioncode
) a group by [Month & Year], endmonth
order by endMonth', CAST(N'2018-01-12T09:44:36.603' AS DateTime), N'Bills of Lading - GO Status Messages', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:36.630' AS DateTime), N'ccbc456d-0fb7-4019-8d27-1edf8a24b882', N'22F7FB7C-EC94-4760-88CE-41306975601C', N'DECLARE @BeginDate AS datetime
declare @year1 int
declare @year2 int

---------------------------------------------------
SET @BeginDate = DATEADD(yy, DATEDIFF(yy, 0, dateadd(DD, -1, dateadd(YY,datediff(yy,0,getdate()),0))), 0) --First day of previous year
--set @BeginDate = ''1/1/2009''
--select @BeginDate

set @year2 = year(GETDATE())
set @year2 = (YEAR(@BeginDate) + 1)
set @year1 = @year2 - 1

select month + '' '' + cast(year(dateadd(month, -1, endMonth)) as varchar(4)) [ ], COUNT(distinct products) DaysOutOfBalance,
 ''fxdScoreCard.aspx?GUID=1546F6E0-F068-46CC-BF60-5C43CCD1C66B&0=@value'' LINK
--*
from (
select *, case when m.endMonth < outofbalancestart or dateadd(month, -1, m.endMonth) > ISNULL(v.OutOfBalanceEnd, GETDATE()) then null else 
                v.productNum end products
from dbo.trdSummaryComponentBalanceAudit v
right join (
select *, dateadd(month, monthnum, cast(''1/1/'' + cast(case when monthNum > month(getdate()) then @year1 else @year2 end as varchar(4)) as DATE)) endMonth from (
select 1 monthNum, ''Jan'' Month
union select 2, ''Feb''
union select 3, ''Mar''
union select 4, ''Apr''
union select 5, ''May''
union select 6, ''Jun''
union select 7, ''Jul''
union select 8, ''Aug''
union select 9, ''Sep''
union select 10, ''Oct''
union select 11, ''Nov''
union select 12, ''Dec'') mm
) m on ISNULL(v.OutOfBalanceEnd, GETDATE()) > dateadd(month, -1, m.endMonth) 
) a
--where a.DaysOutOfBalance > 0
group by month, endMonth
order by endMonth', CAST(N'2018-01-12T09:44:36.630' AS DateTime), N'Out of Balance - Number of Parts', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:36.637' AS DateTime), N'37f0d82a-09b0-4e78-af55-f5ef76465a18', N'22F7FB7C-EC94-4760-88CE-41306975601C', N'DECLARE @BeginDate AS datetime
declare @year1 int
declare @year2 int

---------------------------------------------------
SET @BeginDate = DATEADD(yy, DATEDIFF(yy, 0, dateadd(DD, -1, dateadd(YY,datediff(yy,0,getdate()),0))), 0) --First day of previous year
--set @BeginDate = ''1/1/2009''
--select @BeginDate

set @year2 = year(GETDATE())
set @year2 = (YEAR(@BeginDate) + 1)
set @year1 = @year2 - 1

select month + '' '' + cast(year(dateadd(month, -1, endMonth)) as varchar(4)) [ ], SUM(isnull(DaysOutOfBalance,0)) DaysOutOfBalance,
 ''fxdScoreCard.aspx?GUID=1546F6E0-F068-46CC-BF60-5C43CCD1C66B&0=@value'' LINK
--*
from (
select *, case when m.endMonth < outofbalancestart or dateadd(month, -1, m.endMonth) > ISNULL(v.OutOfBalanceEnd, GETDATE()) then 0 else 
                datediff(day, outofbalancestart, case when ISNULL(outofbalanceEnd, GETDATE()) < m.endMonth 
                                then ISNULL(OutOfBalanceEnd, GETDATE()) else m.endMonth end) end DaysOutOfBalance
from dbo.trdSummaryComponentBalanceAudit v
right join (
select *, dateadd(month, monthnum, cast(''1/1/'' + cast(case when monthNum > month(getdate()) then @year1 else @year2 end as varchar(4)) as DATE)) endMonth from (
select 1 monthNum, ''Jan'' Month
union select 2, ''Feb''
union select 3, ''Mar''
union select 4, ''Apr''
union select 5, ''May''
union select 6, ''Jun''
union select 7, ''Jul''
union select 8, ''Aug''
union select 9, ''Sep''
union select 10, ''Oct''
union select 11, ''Nov''
union select 12, ''Dec'') mm
) m on ISNULL(v.OutOfBalanceEnd, GETDATE()) > dateadd(month, -1, m.endMonth) 
) a
--where a.DaysOutOfBalance > 0
group by month, endMonth
order by endMonth', CAST(N'2018-01-12T09:44:36.637' AS DateTime), N'Out of Balance - Total Days with Discrepancies for All Parts', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-10-15T10:11:05.313' AS DateTime), N'ba2f7ca8-14f5-4a42-ba87-fc276e3c052b', N'22F7FB7C-EC94-4760-88CE-41306975601C', N'DECLARE @BeginDate AS datetime
declare @year1 int
declare @year2 int

---------------------------------------------------
SET @BeginDate = DATEADD(yy, DATEDIFF(yy, 0, dateadd(DD, -1, dateadd(YY,datediff(yy,0,getdate()),0))), 0) --First day of previous year
--set @BeginDate = ''1/1/2009''
--select @BeginDate

set @year2 = year(GETDATE())
set @year2 = (YEAR(@BeginDate) + 1)
set @year1 = @year2 - 1

IF OBJECT_ID(''tempdb..#TempAuditData'') IS NOT NULL 
  DROP TABLE #TempAuditData

select *, dateadd(month, monthnum, cast(''1/1/'' + cast(case when monthNum > month(getdate()) then @year1 else @year2 end as varchar(4)) as DATE)) endMonth,
  cast(0 as numeric(38,20)) txnQty 
into #TempAuditData
from (
  select 1 monthNum, ''Jan'' Month
  union select 2, ''Feb''
  union select 3, ''Mar''
  union select 4, ''Apr''
  union select 5, ''May''
  union select 6, ''Jun''
  union select 7, ''Jul''
  union select 8, ''Aug''
  union select 9, ''Sep''
  union select 10, ''Oct''
  union select 11, ''Nov''
  union select 12, ''Dec'') mm


--select month + '' '' + cast(year(dateadd(month, -1, endMonth)) as varchar(4)) [Month & Year], sum(txnQty) DaysOutOfBalance,
-- ''fxdScoreCard.aspx?GUID=1546F6E0-F068-46CC-BF60-5C43CCD1C66B&0=@value'' LINK
--*
DECLARE @endMonth as date
DECLARE table_cursor CURSOR FOR
select endMonth from #TempAuditData

OPEN table_cursor  

FETCH NEXT FROM table_cursor   
INTO @endMonth

WHILE @@FETCH_STATUS = 0  
BEGIN 
  update #TempAuditData set txnQty = (
      select SUM(abs(imcomparative)) from (
        select row_number() over (partition by ProductNum order by txnDate desc) as rn,
            productNum, imcomparative
           from trdSummaryDetailComponentBalanceAudit m
           where PartnerID = @PartnerID
           and txnDate < @endMonth
         ) m2
      where m2.rn = 1 )
  where endMonth = @endMonth
  
    
    FETCH NEXT FROM table_cursor   
    INTO @endMonth
END   
CLOSE table_cursor;  
DEALLOCATE table_cursor; 

select month + '' '' + cast(year(dateadd(month, -1, endMonth)) as varchar(4)) [ ], isnull(TxnQty, 0) [TotalTxnQty],
 ''fxdScoreCard.aspx?GUID=1546F6E0-F068-46CC-BF60-5C43CCD1C66B&0=@value'' LINK 
from #TempAuditData
order by endMonth

DROP TABLE #TempAuditData', CAST(N'2018-10-15T10:11:05.313' AS DateTime), N'Out of Balance - Sum of Transaction Quantity', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:36.647' AS DateTime), N'9d637803-ba8c-4ef5-96e5-d9c902f4f284', N'22F7FB7C-EC94-4760-88CE-41306975601C', N'DECLARE @BeginDate AS datetime
declare @year1 int
declare @year2 int

---------------------------------------------------
SET @BeginDate = DATEADD(yy, DATEDIFF(yy, 0, dateadd(DD, -1, dateadd(YY,datediff(yy,0,getdate()),0))), 0) --First day of previous year
--set @BeginDate = ''1/1/2016''
--select @BeginDate

set @year2 = year(GETDATE())
set @year2 = (YEAR(@BeginDate) + 1)
set @year1 = @year2 - 1


select cast(m.Month as varchar(50)) + '' '' + cast(case when m.monthNum > month(getdate()) then @year1 else @year2 end as varchar(4)) [ ],
  sum(case when t = ''Error'' then v.value else 0 end) [Errors], 
  sum(case when t = ''Warning'' then v.value else 0 end) [Warnings],
  ''fxdScoreCard.aspx?GUID=7CEB68D8-BD82-45CB-9E81-DF9598FBF37B&0=@value'' as [Link]
from ( select year, month, avg(value) value, t from (
  select year(rundate) year, month(rundate) month, sum(count) value, CASE when validationCode like ''W%'' then ''Warning'' else ''Error'' end t 
    from trdSummaryValidationWarnings where partnerid = @PartnerID and rundate >= dateadd(month, -12, getdate())
    group by rundate, CASE when validationCode like ''W%'' then ''Warning'' else ''Error'' end
  )a group by year, month, t) v
right join (
select 1 monthNum, ''Jan'' Month
union select 2, ''Feb''
union select 3, ''Mar''
union select 4, ''Apr''
union select 5, ''May''
union select 6, ''Jun''
union select 7, ''Jul''
union select 8, ''Aug''
union select 9, ''Sep''
union select 10, ''Oct''
union select 11, ''Nov''
union select 12, ''Dec'') m on m.monthNum = v.month
group by m.Month, m.monthNum, v.year
order by case when m.monthNum > month(getdate()) then -1 * m.monthNum else m.monthNum end', CAST(N'2018-01-12T09:44:36.647' AS DateTime), N'Validations - Average by Month', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:36.653' AS DateTime), N'21fdb896-9162-47b2-9b28-9cd084eeb98b', N'22F7FB7C-EC94-4760-88CE-41306975601C', N'
DECLARE @BeginDate AS datetime
declare @year1 int
declare @year2 int

---------------------------------------------------
SET @BeginDate = DATEADD(yy, DATEDIFF(yy, 0, dateadd(DD, -1, dateadd(YY,datediff(yy,0,getdate()),0))), 0) --First day of previous year
--set @BeginDate = ''1/1/2016''
--select @BeginDate

set @year2 = year(GETDATE())
set @year2 = (YEAR(@BeginDate) + 1)
set @year1 = @year2 - 1

select cast(m.Month as varchar(50)) + '' '' + cast(case when m.monthNum > month(getdate()) then @year1 else @year2 end as varchar(4)) [ ], 
  isnull(sum(v.value), 0) [Pushbacks],
  ''fxdScoreCard.aspx?GUID=90522456-E445-42B0-8871-A18F35EAFB24&0=@value'' as [Link]
from ( select year, month, sum(value) value from (
  select year(rundate) year, month(rundate) month, sum(count) value 
    from trdSummaryStagingPushback where partnerid = @PartnerID and rundate >= dateadd(month, -12, getdate())
    group by rundate
  )a group by year, month) v
right join (
select 1 monthNum, ''Jan'' Month
union select 2, ''Feb''
union select 3, ''Mar''
union select 4, ''Apr''
union select 5, ''May''
union select 6, ''Jun''
union select 7, ''Jul''
union select 8, ''Aug''
union select 9, ''Sep''
union select 10, ''Oct''
union select 11, ''Nov''
union select 12, ''Dec'') m on m.monthNum = v.month
group by m.Month, m.monthNum, v.year
order by case when m.monthNum > month(getdate()) then -1 * m.monthNum else m.monthNum end

', CAST(N'2018-01-12T09:44:36.653' AS DateTime), N'Pushback to Staging - Transaction Count', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-10-15T10:11:05.317' AS DateTime), N'ee22c2e7-f48d-4ff2-875e-339e8d71c93b', N'22F7FB7C-EC94-4760-88CE-41306975601C', N'DECLARE @BeginDate AS datetime
DECLARE @Partner as varchar(10)
declare @year1 int
declare @year2 int
DECLARE @ParmDefinition nvarchar(500); 

declare @sql nvarchar(2000) 


---------------------------------------------------
SET @BeginDate = DATEADD(yy, DATEDIFF(yy, 0, dateadd(DD, -1, dateadd(YY,datediff(yy,0,getdate()),0))), 0) --First day of previous year
--set @BeginDate = ''1/1/2009''
--select @BeginDate

set @year2 = year(GETDATE())
set @year2 = (YEAR(@BeginDate) + 1)
set @year1 = @year2 - 1


select month + '' '' + cast(year(dateadd(month, -1, endMonth)) as varchar(4)) [ ], 
  SUM(isnull(case when substring(txnCode, 2, 1) = ''P'' then txnQty else 0 end, 0)) Positive, 
  SUM(isnull(case when substring(txnCode, 2, 1) = ''N'' then txnQty else 0 end, 0)) Negative,
 ''fxdScoreCard.aspx?GUID=14F0B05A-3144-4783-BAF4-D1BF41C8E603&0=@value'' LINK
--*
from dbo.txdFifoProcessingHist v WITH (NOLOCK)
right join (
select *, dateadd(month, monthnum, cast(''1/1/'' + cast(case when monthNum > month(getdate()) then @year1 else @year2 end as varchar(4)) as DATE)) endMonth from (
  select 1 monthNum, ''Jan'' Month
  union select 2, ''Feb''
  union select 3, ''Mar''
  union select 4, ''Apr''
  union select 5, ''May''
  union select 6, ''Jun''
  union select 7, ''Jul''
  union select 8, ''Aug''
  union select 9, ''Sep''
  union select 10, ''Oct''
  union select 11, ''Nov''
  union select 12, ''Dec'') mm
) m on dateadd(day, (-1 * day(v.txnDate)) + 1, v.txnDate) = dateadd(month, -1, m.endMonth) 
  and v.txnCode like ''A%'' and v.PartnerID = @PartnerID
group by month, endMonth
order by endMonth', CAST(N'2018-10-15T10:11:05.317' AS DateTime), N'Adjustments - Sum of Transaction Quantity', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:36.670' AS DateTime), N'2db93da1-e0fe-4b9a-b7c5-a7c9e975a185', N'22F7FB7C-EC94-4760-88CE-41306975601C', N'DECLARE @BeginDate AS datetime
declare @year1 int
declare @year2 int

---------------------------------------------------
SET @BeginDate = DATEADD(yy, DATEDIFF(yy, 0, dateadd(DD, -1, dateadd(YY,datediff(yy,0,getdate()),0))), 0) --First day of previous year
--set @BeginDate = ''1/1/2016''
--select @BeginDate

set @year2 = year(GETDATE())
set @year2 = (YEAR(@BeginDate) + 1)
set @year1 = @year2 - 1

if exists (select top 1 1 from tmdScopeOfAuthority with (nolock) 
  where PartnerID = @PartnerID)
begin

  if exists (select top 1 1 from trdSummaryValidationWarnings with (nolock) 
    where validationCode = ''WG515''
    and PartnerID = @PartnerID)
  begin
    select month + '' '' + cast(year(dateadd(month, -1, endMonth)) as varchar(4)) [ ], 
      ISNULL(sum(Count), 0) ScopeOfAuthorityWarnings
    from (  
      select rundate, Count
      from trdSummaryValidationWarnings with (nolock) 
      where validationCode = ''WG515''
      and PartnerID = @PartnerID
    ) v
    right join (
    select *, dateadd(month, monthnum, cast(''1/1/'' + cast(case when monthNum > month(getdate()) then @year1 else @year2 end as varchar(4)) as DATE)) endMonth from (
      select 1 monthNum, ''Jan'' Month
      union select 2, ''Feb''
      union select 3, ''Mar''
      union select 4, ''Apr''
      union select 5, ''May''
      union select 6, ''Jun''
      union select 7, ''Jul''
      union select 8, ''Aug''
      union select 9, ''Sep''
      union select 10, ''Oct''
      union select 11, ''Nov''
      union select 12, ''Dec'') mm
    ) m on dateadd(day, (-1 * day(v.rundate)) + 1, v.rundate) = dateadd(month, -1, m.endMonth)
    group by month, endMonth
    order by endMonth
  end 
  else
  begin
    select '''' [No Violations Found (assumes validation is enabled)] where 1 = 2
  end

end
else
begin
  select '''' [Scope of Authority not Setup] where 1 = 2
end', CAST(N'2018-01-12T09:44:36.670' AS DateTime), N'Scope of Authority Violations - Count of Transactions', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:36.703' AS DateTime), N'78be4c9f-96ef-471c-a4bc-06b9185a573a', N'7CEB68D8-BD82-45CB-9E81-DF9598FBF37B', N'DECLARE @BeginDate AS datetime
declare @year1 int
declare @year2 int
---------------------------------------------------
SET @BeginDate = DATEADD(yy, DATEDIFF(yy, 0, dateadd(DD, -1, dateadd(YY,datediff(yy,0,getdate()),0))), 0) --First day of previous year

set @year2 = year(GETDATE())
set @year2 = (YEAR(@BeginDate) + 1)
set @year1 = @year2 - 1

select v.ValidationCode, v.ValidationDesc [Validation Description], sum(v.Count) [# of Transactions]
from trdSummaryValidationWarnings v
join (
select 1 monthNum, ''Jan '' + cast(case when 1 > month(getdate()) then @year1 else @year2 end as varchar(4)) Month
union select 2, ''Feb '' + cast(case when 2 > month(getdate()) then @year1 else @year2 end as varchar(4))
union select 3, ''Mar '' + cast(case when 3 > month(getdate()) then @year1 else @year2 end as varchar(4))
union select 4, ''Apr '' + cast(case when 4 > month(getdate()) then @year1 else @year2 end as varchar(4))
union select 5, ''May '' + cast(case when 5 > month(getdate()) then @year1 else @year2 end as varchar(4))
union select 6, ''Jun '' + cast(case when 6 > month(getdate()) then @year1 else @year2 end as varchar(4))
union select 7, ''Jul '' + cast(case when 7 > month(getdate()) then @year1 else @year2 end as varchar(4))
union select 8, ''Aug '' + cast(case when 8 > month(getdate()) then @year1 else @year2 end as varchar(4))
union select 9, ''Sep '' + cast(case when 9 > month(getdate()) then @year1 else @year2 end as varchar(4))
union select 10, ''Oct '' + cast(case when 10 > month(getdate()) then @year1 else @year2 end as varchar(4))
union select 11, ''Nov '' + cast(case when 11 > month(getdate()) then @year1 else @year2 end as varchar(4))
union select 12, ''Dec '' + cast(case when 12 > month(getdate()) then @year1 else @year2 end as varchar(4))) m on m.monthNum = month(rundate)
where @TargetString and rundate >= dateadd(month, -12, getdate()) and v.PartnerID = @PartnerID
group by ValidationCode,  v.ValidationDesc
order by 1', CAST(N'2018-01-12T09:44:36.703' AS DateTime), N'Summary for Month', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:36.760' AS DateTime), N'105d8d4b-5ab0-4e63-bdb0-96e829bace3b', N'90522456-E445-42B0-8871-A18F35EAFB24', N'declare @dt as date 
set   @TargetString

select rundate [Date Transactions Pushed Back], count [# of Transactions]
from trdSummaryStagingPushback 
where partnerID = @PartnerID
  and rundate >= @dt and rundate < dateadd(month, 1, @dt)
and rundate > dateadd(month, -12, getdate())', CAST(N'2018-01-12T09:44:36.760' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:36.807' AS DateTime), N'716d0e9a-9f91-4c72-8f84-6e5448538b0b', N'1546F6E0-F068-46CC-BF60-5C43CCD1C66B', N'declare @OutOfBalanceDT as date 
set  @TargetString

select top 25 ProductNum, OutOfBalanceStart [Part Went Out of Balance On], OutOfBalanceEnd [Part Came Back in Balance On], 
datediff(day, outofbalancestart, case when ISNULL(outofbalanceEnd, GETDATE()) < DateAdd(month, 1, @OutOfBalanceDT) 
                    then ISNULL(OutOfBalanceEnd, GETDATE()) else DateAdd(month, 1, @OutOfBalanceDT) end) DaysOutOfBalanceOnSelectedDate
from (select *, ISNULL(OutOfBalanceEnd, GETDATE()) as OutOfBalanceDT from trdSummaryComponentBalanceAudit) m 
where OutOfBalanceDT >= @OutOfBalanceDT
  and OutOfBalanceStart < dateadd(millisecond, -3, dateadd(month, 1, cast(@OutOfBalanceDT as datetime)))
order by 4 desc', CAST(N'2018-01-12T09:44:36.807' AS DateTime), N'Top 25 Parts Out of Balance the Longest', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:36.820' AS DateTime), N'7179428a-cce2-491c-a68b-e795d4e82c33', N'1546F6E0-F068-46CC-BF60-5C43CCD1C66B', N'declare @OutOfBalanceDT as date 
set  @TargetString

select top 100 v.TxnDate [Date of Change], v.ProductNum, cast(round(v.imComparative,6) as numeric(38,6)) DiscrepantQuantity, 
  cast(round(mostRecent.imComparative,6) as numeric(38,6)) PreviousDiscrepantQuantity, mostRecent.txnDate PreviousDate
from (select txnDate, ProductNum, imComparative, partnerid from trdSummaryDetailComponentBalanceAudit where txnDate >= @OutOfBalanceDT and txnDate <= dateadd(month, 1, @OutOfBalanceDT) ) v
left join (select m2.* 
  from (
       select m.*, row_number() over (partition by ProductNum order by TxnDate desc) as rn
       from trdSummaryDetailComponentBalanceAudit m
        where txnDate < @OutOfBalanceDT and partnerid = @PartnerID
     ) m2
  where m2.rn = 1
) mostRecent on v.ProductNum = mostRecent.ProductNum and v.PartnerID = mostRecent.PartnerID
where v.imComparative <> 0
order by abs(v.imComparative - isnull(mostRecent.imComparative,0)) desc, v.ProductNum, v.txnDate', CAST(N'2018-01-12T09:44:36.820' AS DateTime), N'Top 25 Largest Changes to Component Balances for Selected Month', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:36.840' AS DateTime), N'85ebad49-9204-440b-b6da-c748681ca976', N'14F0B05A-3144-4783-BAF4-D1BF41C8E603', N'declare @dt as date 
set   @TargetString 

select top 100 ProductNum, TxnCode, SUM(txnQty) txnQty
from txdFifoProcessingHist f
where f.txnCode like ''A%''
  and f.txnDate >= @dt and f.txnDate < DATEADD(month, 1, @dt)
  and f.PartnerID = @PartnerID
group by f.ProductNum, f.txnCode
order by 3 desc, 1', CAST(N'2018-01-12T09:44:36.840' AS DateTime), N'Top 100 Adjustments for Month', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-01-12T09:44:36.863' AS DateTime), N'ff641302-4606-4ff2-b01b-72e729cdc68a', N'2893A8CD-91CA-48CF-A88A-74FEC47CA589', N'declare @dt as date 
set   @TargetString

IF OBJECT_ID(''tempdb..#TempReceiptData'') IS NOT NULL
    DROP TABLE #TempReceiptData

select MAX(txnDate) TxnDate, ReceiptDocID, partnerID 
into #TempReceiptData
from txdReceiptHist d with (nolock) 
    where d.txnDate > DATEADD(month, -14, getdate()) and d.txnDate < GETDATE() and d.PartnerID = @PartnerID
    group by ReceiptDocID, PartnerID

select d.TxnDate, d.ReceiptDocID, 
  case when dateDiff(day, max(d.TxnDate), min(s.effdate)) > 5 then 0 else 1 end as Good, 
  case when dateDiff(day, max(d.TxnDate), min(s.effdate)) > 5 then 1 else 0 end as Bad 
from txdABITransactionStatus abi with (nolock) 
join #TempReceiptData d with (nolock) on abi.referenceID = d.receiptdocid and abi.partnerid = d.partnerid 
join txdABITransactionStatus s with (nolock) on s.referenceID = d.receiptdocid and s.partnerid = d.partnerid and s.type = ''ConcurrenceDetail'' and s.status=''FINAL''
where abi.type = ''214''
  and d.txnDate >= @dt and d.txnDate < DATEADD(month, 1, @dt)
  and d.PartnerID = @PartnerID
group by d.txndate, d.receiptdocid

drop table #TempReceiptData', CAST(N'2018-01-12T09:44:36.863' AS DateTime), N'E214 Filing Detail', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-01-03T08:02:17.923' AS DateTime), N'1a6d97b3-5c0b-4f3e-b0fd-cdbf140409af', N'Customer Request Completion Rate', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@  ) AS [RowNum] FROM (select crh.CompanyID as Customer, 
comp.CompanyName,
count(crd.requestdetailguid) as TotalParts, 
sum(case when cd.partnerid is null then 0 else 1 end) as Completed, 
sum(case when cd.partnerid is null then 1 else 0 end) as Outstanding, 
cast(sum(case when cd.partnerid is null then 0 else 1 end) as numeric (28,20))/cast(count(crd.requestdetailguid) as numeric (28,20))*100 as PercentageCompleted,
1 as NoOrder
FROM txdFTACertRequestHeader CRH with(nolock)
join txdftacertrequestdetail crd with(nolock)
on crh.partnerid = crd.partnerid
and crh.RequestGuid = crd.RequestGuid
LEFT JOIN txdcertdetail cd WITH (NOLOCK) 
ON crd.requestdetailguid = cd.detailguid
AND crd.partnerid = cd.partnerid
Join tmgCompany comp with(nolock)
on crh.CompanyID=comp.CompanyID
and crh.PartnerID=comp.PartnerID
where requeststatus <> ''new''
group by comp.CompanyID,crh.companyid,comp.CompanyName ) AS LookupViewInner WHERE @whereclause@', CAST(N'2019-01-03T08:02:17.923' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-02-19T11:07:09.960' AS DateTime), N'BCK DE-AES-2.4.2 E_EXP_AMD 20180219115004', N'DE-AES-2.4.2 E_EXP_AMD', N'

	
DECLARE @EffectiveValidationDate DATETIME = GETDATE()

DELETE
FROM txdDEAESValidationWarning
WHERE PartnerID = @PartnerID
	AND DeclarationGUID = @DeclarationGUID
	AND DeclarationDataGUID = @DeclarationDataGUID

CREATE TABLE #ValidationWarning (
	Location VARCHAR(1000) NOT NULL,
	Warning VARCHAR(2000) NOT NULL
	)

--Header:
INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/MRN'' AS Location,
	''MRN is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.MRN = ''''

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/CountainerFlag'' AS Location,
	''CountainerFlag is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.ContainerFlag <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/CountainerFlag'' AS Location,
	''CountainerFlag is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 <> ''AE''
		AND DD.ContainerFlag = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/TotalGrossWeight'' AS Location,
	''TotalGrossWeight should be greater than zero'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.TotalGrossWeight IS NOT NULL
	AND DD.TotalGrossWeight <= 0

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/TotalGrossWeight'' AS Location,
	''TotalGrossWeight is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		OR DD1.SpecialCircumstances <> ''E''
		OR EXISTS (
			SELECT *
			FROM txdDEAESGoodsItem GI1
			WHERE GI1.DeclarationDATAGUID = DD1.DeclarationDATAGUID
				AND GI1.PreviousProcedure IN (''71'', ''78'')
				AND (
					EXISTS (
						SELECT *
						FROM txdDEAESGoodsItem GI
						WHERE GI.DeclarationDATAGUID = DD.DeclarationDATAGUID
							AND GI.ItemNumber = GI1.ItemNumber
							AND GI.GrossWeight <> 0
						)
					OR (
						NOT EXISTS (
							SELECT *
							FROM txdDEAESGoodsItem GI2
							WHERE GI2.DeclarationDATAGUID = DD.DeclarationDATAGUID
								AND GI2.ItemNumber = GI1.ItemNumber
							)
						AND GI1.GrossWeight <> 0
						)
					)
			)
		)
	AND DD.TotalGrossWeight IS NULL

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/TotalGrossWeight'' AS Location,
	''TotalGrossWeight should not be less than the sum of changed GoodsItems/GrossWeight plus the unchanged GoodsItems/GrossWeight given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		SELECT SUM(GI.GrossWeight)
		FROM txdDEAESGoodsItem GI
		WHERE GI.PartnerID = @PartnerID
			AND GI.DeclarationDataGUID = @DeclarationDataGUID
		) + (
		SELECT SUM(GI2.GrossWeight)
		FROM txdDEAESGoodsItem GI1
		JOIN txdDEAESGoodsItem GI2
			ON GI1.PartnerID = GI2.PartnerID
				AND GI1.DeclarationGUID = GI2.DeclarationGUID
		WHERE GI1.PartnerID = @PartnerID
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.DeclarationDataGUID = DD1.DeclarationDataGUID
			AND GI2.ItemNumber <> GI1.ItemNumber
		) > DD.TotalGrossWeight

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/TotalGrossWeight'' AS Location,
	''TotalGrossWeight should not be less than the sum of changed GoodsItems/NetWeight plus the unchanged GoodsItems/NetWeight given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		SELECT SUM(GI.NetWeight)
		FROM txdDEAESGoodsItem GI
		WHERE GI.PartnerID = @PartnerID
			AND GI.DeclarationDataGUID = @DeclarationDataGUID
		) + (
		SELECT SUM(GI2.NetWeight)
		FROM txdDEAESGoodsItem GI1
		JOIN txdDEAESGoodsItem GI2
			ON GI1.PartnerID = GI2.PartnerID
				AND GI1.DeclarationGUID = GI2.DeclarationGUID
		WHERE GI1.PartnerID = @PartnerID
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.DeclarationDataGUID = DD1.DeclarationDataGUID
			AND GI2.ItemNumber <> GI1.ItemNumber
		) > DD.TotalGrossWeight

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/TotalGrossWeight'' AS Location,
	''TotalGrossWeight should be same as TotalGrossWeight given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
			(SELECT COUNT(PartnerID) 
			FROM tmgGlobalCodes GC WHERE GC.PartnerID = @PartnerID AND GC.FieldName=''DE-AES-I0251''
			AND GC.Code IN 
				(SELECT GID.Type + ''      '' + GID.Qualifier FROM txdDEAESGoodsItemDocument GID 
				WHERE GID.PartnerID = @PartnerID AND  GID.DeclarationDataGUID = DD1.DeclarationDataGUID)) > 0
		)
	AND DD.TotalGrossWeight <> DD1.TotalGrossWeight

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/GrossWeight'' AS Location,
	''GrossWeight is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GI.GrossWeight IS NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID = GI1.PartnerID
				AND DD1.DeclarationDataGUID = GI1.DeclarationDataGUID
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND GI1.ItemNumber = GI.ItemNumber
			AND (
				DD1.DeclarationType2 = ''AE''
				OR DD1.SpecialCircumstances <> ''E''
				OR GI1.PreviousProcedure IN (''71'', ''78'')
				AND DD1.TotalGrossWeight = ''''
				)
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/GrossWeight'' AS Location,
	''''''0'''' is not valid value for GrossWeight'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GrossWeight = 0
	AND (
		(
			SELECT COUNT(*)
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
				ON DD1.PartnerID = GI1.PartnerID
					AND DD1.DeclarationDataGUID = GI1.DeclarationDataGUID
			WHERE DD1.PartnerID = @PartnerID
				AND DD1.DeclarationDataGUID = @DeclarationDataGUID
				AND GI1.GrossWeight <> 0
			) = 0
		OR NOT EXISTS (
			SELECT *
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
				ON DD2.PartnerID = GI2.PartnerID
					AND DD2.DeclarationDataGUID = GI2.DeclarationDataGUID
			WHERE DD2.PartnerID = DD.PartnerID
				AND DD2.DeclarationGUID = DD.DeclarationGUID
				AND DD2.DeclarationDataGUID = (
					SELECT TOP 1 M.DeclarationDataGUID
					FROM txdDEAESMessage M
					WHERE M.PartnerID = @PartnerID
						AND M.DeclarationGUID = @DeclarationGUID
						AND M.Type = ''E_EXP_DAT''
					----AND M.STATUS = ''TRANSMITTED''
					ORDER BY M.SequenceNum DESC
					)
				AND DD2.DeclarationType2 = ''AE''
				AND GI2.ItemNumber <> GI.ItemNumber
				AND GI2.GrossWeight <> 0
			)
		OR NOT EXISTS (
			SELECT *
			FROM txdDEAESDeclarationData DD3
			JOIN txdDEAESGoodsItem GI3
				ON DD3.PartnerID = GI3.PartnerID
					AND DD3.DeclarationDataGUID = GI3.DeclarationDataGUID
			WHERE DD3.PartnerID = DD.PartnerID
				AND DD3.DeclarationGUID = DD.DeclarationGUID
				AND DD3.DeclarationDataGUID = (
					SELECT TOP 1 M.DeclarationDataGUID
					FROM txdDEAESMessage M
					WHERE M.PartnerID = @PartnerID
						AND M.DeclarationGUID = @DeclarationGUID
						AND M.Type = ''E_EXP_DAT''
					----AND M.STATUS = ''TRANSMITTED''
					ORDER BY M.SequenceNum DESC
					)
				AND DD3.DeclarationType2 = ''AE''
				AND GI3.ItemNumber <> GI.ItemNumber
				AND GI3.GrossWeight <> 0
				AND EXISTS (
					SELECT *
					FROM txdDEAESDeclarationData DD4
					JOIN txdDEAESGoodsItem GI4
						ON DD4.PartnerID = GI4.PartnerID
							AND DD4.DeclarationDataGUID = GI4.DeclarationDataGUID
					WHERE DD4.PartnerID = DD.PartnerID
						AND DD4.DeclarationGUID = DD.DeclarationGUID
						AND DD4.DeclarationDataGUID = (
							SELECT TOP 1 M.DeclarationDataGUID
							FROM txdDEAESMessage M
							WHERE M.PartnerID = @PartnerID
								AND M.DeclarationGUID = @DeclarationGUID
								AND M.Type = ''E_EXP_IND''
							----AND M.STATUS = ''TRANSMITTED''
							ORDER BY M.SequenceNum DESC
							)
						AND GI4.ItemNumber = GI3.ItemNumber
						AND GI4.RefundEstimatedQuantityFlag = 0
					)
			)
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/GrossWeight'' AS Location,
	''''''0'''' should be indicated as the value for GrossWeight'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GrossWeight <> 0
	AND (
		GIP.Number = 0
		OR EXISTS (
			SELECT *
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItemPackage GIP1
				ON DD1.PartnerID = GIP1.PartnerID
					AND DD1.DeclarationDataGUID = GIP1.DeclarationDataGUID
			WHERE DD1.PartnerID = DD.PartnerID
				AND DD1.DeclarationGUID = DD.DeclarationGUID
				AND DD1.DeclarationDataGUID = (
					SELECT TOP 1 M.DeclarationDataGUID
					FROM txdDEAESMessage M
					WHERE M.PartnerID = @PartnerID
						AND M.DeclarationGUID = @DeclarationGUID
						AND M.Type = ''E_EXP_DAT''
					----AND M.STATUS = ''TRANSMITTED''
					ORDER BY M.SequenceNum DESC
					)
				AND GIP1.GoodsItemGUID = GI.GoodsItemGUID
				AND GIP1.Number = 0
			)
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/GrossWeight'' AS Location,
	''Gross Weight should be greater than or equal to the Net Weight unless it is ''''0'''''' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GI.GrossWeight <> 0
		AND GI.GrossWeight < GI.NetWeight
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/GrossWeight'' AS Location,
	''GrossWeight should be greater than ''''0'''''' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GrossWeight IS NOT NULL
	AND GI.GrossWeight <= 0
	AND DD.TotalGrossWeight IS NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID = GI1.PartnerID
				AND DD1.DeclarationDataGUID = GI1.DeclarationDataGUID
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND GI1.ItemNumber = GI.ItemNumber
			AND GI1.PreviousProcedure IN (''71'', ''78'')
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items/GrossWeight'' AS Location,
	''The sum of changed GoodsItems/GrossWeight plus the unchanged GoodsItems/GrossWeight given in DAT message should not be less than the sum of changed GoodsItems/NetWeight plus the unchanged GoodsItems/NetWeight given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		SELECT SUM(GI.GrossWeight)
		FROM txdDEAESGoodsItem GI
		WHERE GI.PartnerID = @PartnerID
			AND GI.DeclarationDataGUID = @DeclarationDataGUID
		) + (
		SELECT SUM(GI2.GrossWeight)
		FROM txdDEAESGoodsItem GI1
		JOIN txdDEAESGoodsItem GI2
			ON GI1.PartnerID = GI2.PartnerID
				AND GI1.DeclarationGUID = GI2.DeclarationGUID
		WHERE GI1.PartnerID = @PartnerID
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.DeclarationDataGUID = DD1.DeclarationDataGUID
			AND GI2.ItemNumber <> GI1.ItemNumber
		) < (
		SELECT SUM(GI3.NetWeight)
		FROM txdDEAESGoodsItem GI3
		WHERE GI3.PartnerID = @PartnerID
			AND GI3.DeclarationDataGUID = @DeclarationDataGUID
		) + (
		SELECT SUM(GI5.GrossWeight)
		FROM txdDEAESGoodsItem GI4
		JOIN txdDEAESGoodsItem GI5
			ON GI4.PartnerID = GI5.PartnerID
				AND GI4.DeclarationGUID = GI5.DeclarationGUID
		WHERE GI4.PartnerID = @PartnerID
			AND GI4.DeclarationDataGUID = @DeclarationDataGUID
			AND GI5.DeclarationDataGUID = DD1.DeclarationDataGUID
			AND GI5.ItemNumber <> GI4.ItemNumber
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/Goods Items/GrossWeight'' AS Location,
	''Goods Item/GrossWeight should be same as Goods Item/GrossWeight given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID 
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
			(SELECT COUNT(PartnerID) 
			FROM tmgGlobalCodes GC WHERE GC.PartnerID = @PartnerID AND GC.FieldName=''DE-AES-I0251''
			AND GC.Code IN 
				(SELECT GID.Type + ''      '' + GID.Qualifier FROM txdDEAESGoodsItemDocument GID 
				WHERE GID.PartnerID = @PartnerID AND  GID.DeclarationDataGUID = DD1.DeclarationDataGUID)) > 0
		)
	AND GI.GrossWeight <> 
	(SELECT GI1.GrossWeight FROM txdDEAESGoodsItem GI1 WHERE GI1.PartnerID = @PartnerID AND GI1.DeclarationDataGUID = DD1.DeclarationDataGUID)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/UCR; '' + (
		SELECT CASE 
				WHEN GI.ItemNumber IS NULL
					THEN ''''
				ELSE ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/UCR''
				END
		) AS Location,
	''UCR is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
LEFT JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)
	AND (
		GI.UCR IS NOT NULL
		OR GI.UCR <> ''''
		OR DD.UCR <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/UCR;'' + (
		SELECT CASE 
				WHEN GI.ItemNumber IS NULL
					THEN ''''
				ELSE '' Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/UCR''
				END
		) AS Location,
	''UCR is not allowed to be specified both on Header level and on Goods Item level'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)
	AND DD.UCR <> ''''
	AND GI.UCR <> ''''

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/UCR; '' + (
		SELECT CASE 
				WHEN GI.ItemNumber IS NULL
					THEN ''''
				ELSE ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/UCR''
				END
		) AS Location,
	''UCR should be provided either on Header level or on Goods Item level'' AS Warning
FROM txdDEAESDeclarationData DD
LEFT JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND (
				DD1.DeclarationType2 <> ''AE''
				AND DD1.SpecialCircumstances <> ''A''
				)
		)
	AND DD.UCR = ''''
	AND (
		GI.UCR IS NULL
		OR GI.UCR = ''''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items/UCR'' AS Location,
	''The same UCR is not allowed to be used for all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		DD.UCR = ''''
		AND (
			SELECT COUNT(DISTINCT GI1.UCR)
			FROM txdDEAESGoodsItem GI1
			WHERE GI1.PartnerID = @PartnerID
				AND GI1.DeclarationDataGUID = @DeclarationDataGUID
				AND GI1.UCR <> ''''
			) = 1
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/BIN'' AS Location,
	''BIN is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.BIN = ''''

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/InlandModeOfTransport'' AS Location,
	''InlandModeOfTransport is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.InlandModeOfTransport <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/InlandModeOfTransport'' AS Location,
	''InlandModeOfTransport is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 <> ''AE''
		AND (
			DD1.DeclarationType2 = ''AM''
			AND DD1.DeclarationType3 = ''c''
			OR DD1.DeclarationType2 = ''zP''
			AND DD1.DeclarationType3 IN (''c'', ''o'', ''u'')
			OR DD1.DeclarationType2 = ''wP''
			AND DD1.DeclarationType3 IN (''o'', ''u'')
			)
		AND DD.InlandModeOfTransport = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/InlandModeOfTransport'' AS Location,
	''"5" and "50" are not permissible values for InlandModeOfTransport'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.SpecialCircumstances <> ''A''
		AND DD.InlandModeOfTransport IN (''5'', ''50'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/InlandModeOfTransport'' AS Location,
	''"7" and "70" are not permissible values for InlandModeOfTransport'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.InlandModeOfTransport IN (''7'', ''70'')

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/BorderModeOfTransport'' AS Location,
	''BorderModeOfTransport is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.BorderModeOfTransport <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/BorderModeOfTransport'' AS Location,
	''BorderModeOfTransport is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 <> ''AE''
		AND DD.BorderModeOfTransport = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/BorderModeOfTransport'' AS Location,
	''"5" and "50" are not permissible values for BorderModeOfTransport'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD1.DeclarationType2 <> ''AE''
	AND DD1.SpecialCircumstances <> ''A''
	AND DD.BorderModeOfTransport IN (''5'', ''50'')

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/BorderModeOfTransport'' AS Location,
	''"7" and "70" are not permissible values for BorderModeOfTransport'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD1.DeclarationType2 <> ''AE''
	AND DD.BorderModeOfTransport IN (''7'', ''70'')

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/BorderTypeOfTransport'' AS Location,
	''BorderTypeOfTransport is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.BorderTypeOfTransport <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/BorderTypeOfTransport'' AS Location,
	''BorderTypeOfTransport is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD1.DeclarationType2 <> ''AE''
	AND (
		DD1.DeclarationType2 = ''AM''
		AND DD1.DeclarationType3 = ''c''
		OR DD1.DeclarationType2 = ''zP''
		AND DD1.DeclarationType3 IN (''c'', ''o'', ''u'')
		OR DD1.DeclarationType2 = ''wP''
		AND DD1.DeclarationType3 IN (''o'', ''u'')
		)
	AND DD.BorderTypeOfTransport = ''''

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/BorderTransportMeansID'' AS Location,
	''BorderTransportMeansID is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.BorderTransportMeansID <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/BorderTransportMeansNationality'' AS Location,
	''BorderTransportMeansNationality is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.BorderTransportMeansNationality <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/BorderTransportMeansNationality'' AS Location,
	''BorderTransportMeansNationality is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD1.DeclarationType2 <> ''AE''
	AND (
		DD1.DeclarationType2 = ''AM''
		AND DD1.DeclarationType3 = ''c''
		OR DD1.DeclarationType2 = ''zP''
		AND DD1.DeclarationType3 IN (''c'', ''o'', ''u'')
		OR DD1.DeclarationType2 = ''wP''
		AND DD1.DeclarationType3 IN (''o'', ''u'')
		)
	AND DD.BorderModeOfTransport NOT IN (''2'', ''20'', ''5'', ''50'', ''9'', ''90'')
	AND DD.BorderTransportMeansNationality = ''''

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/DeclarationOffice'' AS Location,
	''DeclarationOffice is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationOffice = ''''

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/DeclarationOffice'' AS Location,
	''The values for DeclarationOffice in E_EXP_AMD and E_EXP_DAT declarations should match'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD.DeclarationOffice <> ''''
	AND DD.DeclarationOffice <> DD1.DeclarationOffice

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/DeclarantIDType'' AS Location,
	''DeclarantIDType is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus NOT LIKE ''_0__''
		AND DD.DeclarantIDType <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/DeclarantIDType'' AS Location,
	''DeclarantIDType is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_0__''
		AND DD.DeclarantIDType = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/DeclarantIDType'' AS Location,
	''"2" should be specified as the value for DeclarantIDType'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_0__''
		AND DD.DeclarantIDType <> ''''
		AND DD.DeclarantIDType <> ''2''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/DeclarantID'' AS Location,
	''DeclarantID is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus NOT LIKE ''_0__''
		AND DD.DeclarantID <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/DeclarantID'' AS Location,
	''DeclarantID is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_0__''
		AND DD.DeclarantID = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/DeclarantID'' AS Location,
	''The values for DeclarantID in E_EXP_AMD and E_EXP_DAT declarations should match'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD.DeclarantID <> ''''
	AND DD.DeclarantID <> DD1.DeclarantID

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/DeclarantBranch'' AS Location,
	''DeclarantBranch is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus NOT LIKE ''_0__''
		AND DD.DeclarantBranch <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/DeclarantBranch'' AS Location,
	''DeclarantBranch is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_0__''
		AND DD1.DeclarantBranch <> ''0000''
		AND DD.DeclarantBranch = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/DeclarantBranch'' AS Location,
	''The values for DeclarantBranch in E_EXP_AMD and E_EXP_DAT declarations should match'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD.DeclarantBranch <> ''''
	AND DD.DeclarantBranch <> DD1.DeclarantBranch

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/AgentIDType'' AS Location,
	''AgentIDType is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus NOT LIKE ''_1__''
		AND DD.AgentIDType <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/AgentIDType'' AS Location,
	''AgentIDType is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_1__''
		AND DD.AgentIDType = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/AgentIDType'' AS Location,
	''"2" should be specified as the value for AgentIDType'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_0__''
		AND DD.AgentIDType <> ''''
		AND DD.AgentIDType <> ''2''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/AgentID'' AS Location,
	''AgentID is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus NOT LIKE ''_1__''
		AND DD.AgentID <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/AgentID'' AS Location,
	''AgentID is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_1__''
		AND DD.AgentID = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/AgentID'' AS Location,
	''The values for AgentID in E_EXP_AMD and E_EXP_DAT declarations should match'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD.AgentID <> ''''
	AND DD.AgentID <> DD1.AgentID

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/AgentBranch'' AS Location,
	''AgentBranch is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus NOT LIKE ''_1__''
		AND DD.AgentBranch <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/AgentBranch'' AS Location,
	''AgentBranch is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_1__''
		AND DD1.AgentBranch <> ''0000''
		AND DD.AgentBranch = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/AgentBranch'' AS Location,
	''The values for AgentBranch in E_EXP_AMD and E_EXP_DAT declarations should match'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD.AgentBranch <> ''''
	AND DD.AgentBranch <> DD1.AgentBranch

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/TotalInvoice'' AS Location,
	''TotalInvoice is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.TotalInvoice IS NOT NULL
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/TotalInvoice'' AS Location,
	''TotalInvoice is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 <> ''AE''
		AND (
			DD1.DeclarationType2 = ''AM''
			AND DD1.DeclarationType3 = ''c''
			OR DD1.DeclarationType2 = ''zP''
			AND DD1.DeclarationType3 IN (''c'', ''o'', ''u'')
			OR DD1.DeclarationType2 = ''wP''
			AND DD1.DeclarationType3 IN (''o'', ''u'')
			)
		AND DD.TotalInvoice IS NULL
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/TotalInvoice'' AS Location,
	''TotalInvoice should be same as TotalInvoice given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
			(SELECT COUNT(PartnerID) 
			FROM tmgGlobalCodes GC WHERE GC.PartnerID = @PartnerID AND GC.FieldName=''DE-AES-I0251''
			AND GC.Code IN 
				(SELECT GID.Type + ''      '' + GID.Qualifier FROM txdDEAESGoodsItemDocument GID 
				WHERE GID.PartnerID = @PartnerID AND  GID.DeclarationDataGUID = DD1.DeclarationDataGUID)) > 0
		)
	AND DD.TotalInvoice <> DD1.TotalInvoice

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/TotalInvoiceCurrency'' AS Location,
	''TotalInvoiceCurrency is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.TotalInvoiceCurrency <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/TotalInvoiceCurrency'' AS Location,
	''TotalInvoiceCurrency is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 <> ''AE''
		AND (
			DD1.DeclarationType2 = ''AM''
			AND DD1.DeclarationType3 = ''c''
			OR DD1.DeclarationType2 = ''zP''
			AND DD1.DeclarationType3 IN (''c'', ''o'', ''u'')
			OR DD1.DeclarationType2 = ''wP''
			AND DD1.DeclarationType3 IN (''o'', ''u'')
			)
		AND DD.TotalInvoiceCurrency = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/TotalInvoiceCurrency'' AS Location,
	''TotalInvoiceCurrency should be same as TotalInvoiceCurrency given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
			(SELECT COUNT(PartnerID) 
			FROM tmgGlobalCodes GC WHERE GC.PartnerID = @PartnerID AND GC.FieldName=''DE-AES-I0251''
			AND GC.Code IN 
				(SELECT GID.Type + ''      '' + GID.Qualifier FROM txdDEAESGoodsItemDocument GID 
				WHERE GID.PartnerID = @PartnerID AND  GID.DeclarationDataGUID = DD1.DeclarationDataGUID)) > 0
		)
	AND DD.TotalInvoiceCurrency <> DD1.TotalInvoiceCurrency

--Goods Item	
INSERT INTO #ValidationWarning
SELECT ''Goods Item'' AS Location,
	''At least one Goods Item is mandatory to be provided'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND (
				DD1.DeclarationType2 = ''AE''
				OR DD1.DeclarationType2 <> ''AE''
				AND DD1.SpecialCircumstances <> ''A''
				AND DD1.UCR <> ''''
				AND DD.UCR = ''''
				)
		)
	AND NOT EXISTS (
		SELECT GI.GoodsItemGUID
		FROM txdDEAESGoodsItem GI
		WHERE GI.PartnerID = @PartnerID
			AND GI.DeclarationDataGUID = @DeclarationDataGUID
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/ItemNumber'' AS Location,
	''ItemNumber is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GI.ItemNumber = ''''
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESDeclarationData DD2
			ON DD1.PartnerID = DD2.PartnerID
				AND DD1.DeclarationGUID = DD2.DeclarationGUID
		JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID = GI2.PartnerID
				AND DD2.DeclarationDataGUID = GI2.DeclarationDataGUID
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD2.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_IND''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND (
				DD1.DeclarationType2 = ''AE''
				AND GI.ItemNumber = GI2.ItemNumber
				AND GI2.RefundEstimatedQuantityFlag = 1 ----the name for AUSFUHRERSTATTUNG / Schätzwert in IND message was not specified
				OR DD1.DeclarationType2 <> ''AE''
				AND DD1.SpecialCircumstances <> ''A''
				AND DD1.UCR <> ''''
				AND DD.UCR = ''''
				)
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/ItemNumber'' AS Location,
	''ItemNumber is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber <> ''''
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESDeclarationData DD2
			ON DD1.PartnerID = DD2.PartnerID
				AND DD1.DeclarationGUID = DD2.DeclarationGUID
		JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID = GI2.PartnerID
				AND DD2.DeclarationDataGUID = GI2.DeclarationDataGUID
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD2.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_IND''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND (
				DD1.DeclarationType2 = ''AE''
				AND GI.ItemNumber = GI2.ItemNumber
				AND GI2.RefundEstimatedQuantityFlag <> 1 ----the name for AUSFUHRERSTATTUNG / Schätzwert in IND message was not specified		
				)
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items/NetWeight'' AS Location,
	''NetWeight should be greater than zero'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.NetWeight IS NOT NULL
	AND GI.NetWeight <= 0

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/NetWeight'' AS Location,
	''NetWeight is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GI.NetWeight IS NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND (
				DD1.DeclarationType2 = ''AE''
				OR DD1.SpecialCircumstances <> ''A''
				AND DD1.UCR <> ''''
				AND DD.UCR = ''''
				)
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/Goods Items/NetWeight'' AS Location,
	''Goods Item/NetWeight should be same as Goods Item/NetWeight given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID 
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
			(SELECT COUNT(PartnerID) 
			FROM tmgGlobalCodes GC WHERE GC.PartnerID = @PartnerID AND GC.FieldName=''DE-AES-I0251''
			AND GC.Code IN 
				(SELECT GID.Type + ''      '' + GID.Qualifier FROM txdDEAESGoodsItemDocument GID 
				WHERE GID.PartnerID = @PartnerID AND  GID.DeclarationDataGUID = DD1.DeclarationDataGUID)) > 0
		)
	AND GI.NetWeight <> 
	(SELECT GI1.NetWeight FROM txdDEAESGoodsItem GI1 WHERE GI1.PartnerID = @PartnerID AND GI1.DeclarationDataGUID = DD1.DeclarationDataGUID)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/RefundAmount'' AS Location,
	''RefundAmount is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.RefundAmount IS NOT NULL
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/RefundAmount'' AS Location,
	''RefundAmount is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GI.RefundAmount IS NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items/RefundAmount'' AS Location,
	''RefundAmount should be greater than zero'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.RefundAmount IS NOT NULL
	AND GI.RefundAmount <= 0

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/SupplementaryQuantity'' AS Location,
	''SupplementaryQuantity is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.SupplementaryQuantity IS NOT NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/SupplementaryQuantity'' AS Location,
	''SupplementaryQuantity should be greater than ''''0'''''' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.SupplementaryQuantity IS NOT NULL
	AND GI.SupplementaryQuantity <= 0


INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/Goods Items/SupplementaryQuantity'' AS Location,
	''Goods Item/SupplementaryQuantity should be same as Goods Item/SupplementaryQuantity given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID 
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
			(SELECT COUNT(PartnerID) 
			FROM tmgGlobalCodes GC WHERE GC.PartnerID = @PartnerID AND GC.FieldName=''DE-AES-I0251''
			AND GC.Code IN 
				(SELECT GID.Type + ''      '' + GID.Qualifier FROM txdDEAESGoodsItemDocument GID 
				WHERE GID.PartnerID = @PartnerID AND  GID.DeclarationDataGUID = DD1.DeclarationDataGUID)) > 0
		)
	AND GI.SupplementaryQuantity <> 
	(SELECT GI1.SupplementaryQuantity FROM txdDEAESGoodsItem GI1 WHERE GI1.PartnerID = @PartnerID AND GI1.DeclarationDataGUID = DD1.DeclarationDataGUID)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/StatisticalValue'' AS Location,
	''StatisticalValue is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GI.StatisticalValue IS NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND (
				DD1.DeclarationType2 = ''AE''
				AND DD1.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
				OR (
					DD1.DeclarationType2 = ''AM''
					AND DD1.DeclarationType3 = ''c''
					OR DD1.DeclarationType2 = ''zP''
					AND DD1.DeclarationType3 IN (''c'', ''o'', ''u'')
					OR DD1.DeclarationType2 = ''wP''
					AND DD1.DeclarationType3 IN (''o'', ''u'')
					)
				)
		)


INSERT INTO #ValidationWarning
SELECT @E_EXP_AMD_NAME + '' (E_EXP_AMD)/Goods Items/StatisticalValue'' AS Location,
	''Goods Item/StatisticalValue should be same as Goods Item/StatisticalValue given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID 
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
			(SELECT COUNT(PartnerID) 
			FROM tmgGlobalCodes GC WHERE GC.PartnerID = @PartnerID AND GC.FieldName=''DE-AES-I0251''
			AND GC.Code IN 
				(SELECT GID.Type + ''      '' + GID.Qualifier FROM txdDEAESGoodsItemDocument GID 
				WHERE GID.PartnerID = @PartnerID AND  GID.DeclarationDataGUID = DD1.DeclarationDataGUID)) > 0
		)
	AND GI.StatisticalValue <> 
	(SELECT GI1.StatisticalValue FROM txdDEAESGoodsItem GI1 WHERE GI1.PartnerID = @PartnerID AND GI1.DeclarationDataGUID = DD1.DeclarationDataGUID)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/Number'' AS Location,
	''Packages/Number is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
LEFT JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GIP.PartnerID IS NOT NULL
	AND GIP.DeclarationGUID IS NOT NULL
	AND GIP.Number IS NULL
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/Number'' AS Location,
	''Packages/Number is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GIP.Number IS NOT NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages  ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/Number'' AS Location,
	''''''1'''' should be specified as the value for Packages/Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GIP.Type IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'')
		AND GIP.Number IS NOT NULL
		AND GIP.Number <> 1
		AND NOT EXISTS (
			SELECT *
			FROM txdDEAESDeclarationData DD1
			WHERE DD1.PartnerID = DD.PartnerID
				AND DD1.DeclarationGUID = DD.DeclarationGUID
				AND DD1.DeclarationDataGUID = (
					SELECT TOP 1 M.DeclarationDataGUID
					FROM txdDEAESMessage M
					WHERE M.PartnerID = @PartnerID
						AND M.DeclarationGUID = @DeclarationGUID
						AND M.Type = ''E_EXP_DAT''
					----AND M.STATUS = ''TRANSMITTED''
					ORDER BY M.SequenceNum DESC
					)
				AND DD1.DeclarationType2 = ''AE''
			)
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/Number'' AS Location,
	''''''0'''' is not allowed to be specified as the value for Packages/Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GIP.Type IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
		AND GIP.Number = 0
		)
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages/Number'' AS Location,
	''If ''''0'''' is specified as the value for Packages/Number, all the rest values of Packages/Number for the same Goods Item should be ''''0'''' either'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)
	AND EXISTS (
		SELECT GIP1.PartnerID
		FROM txdDEAESGoodsItemPackage GIP1
		WHERE GIP1.PartnerID = @PartnerID
			AND GIP1.GoodsItemGUID = GI.GoodsItemGUID
			AND GIP1.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
			AND GIP1.Number = 0
		)
	AND EXISTS (
		SELECT GIP2.PartnerID
		FROM txdDEAESGoodsItemPackage GIP2
		WHERE GIP2.PartnerID = @PartnerID
			AND GIP2.GoodsItemGUID = GI.GoodsItemGUID
			AND GIP2.Number <> 0
		)

/* Removed in 2.4.2
INSERT INTO #ValidationWarning
SELECT ''Goods Item('' + CAST(GI.ItemNumber AS VARCHAR) + '')/Packages('' + CAST(GIP.SequenceNum AS VARCHAR) + '')/Number'' AS Location,
	''If ''''0'''' is specified as the value for Packages/Number, there should exist record in other Goods Item with the same Packages/MarksAndNumbers value and the value other than ''''0'''' for Packages/Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON GI.PartnerID = GIP.PartnerID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)
	AND GIP.Number = 0
	AND NOT EXISTS (
		SELECT GIP2.PartnerID
		FROM txdDEAESGoodsItemPackage GIP2
		WHERE GIP2.PartnerID = @PartnerID
			AND GIP2.GoodsItemGUID = GIP.GoodsItemGUID
			AND GIP2.GoodsItemPackageGUID <> GIP.GoodsItemPackageGUID
			AND GIP2.Number <> 0
		)
	AND NOT (
		EXISTS (
			SELECT GIP3.PartnerID
			FROM txdDEAESGoodsItemPackage GIP3
			WHERE GIP3.PartnerID = @PartnerID
				AND GIP3.DeclarationDataGUID = @DeclarationDataGUID
				AND GIP3.GoodsItemGUID <> GIP.GoodsItemGUID
				AND GIP3.MarksAndNumbers = GIP.MarksAndNumbers
				AND GIP3.Number <> 0
				AND GIP3.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
			)
		OR EXISTS (
			SELECT GIP4.PartnerID
			FROM txdDEAESGoodsItemPackage GIP4
			JOIN txdDEAESGoodsItem GI2
				ON GIP4.PartnerID = GI2.PartnerID
					AND GIP4.GoodsItemGUID = GI2.GoodsItemGUID
			WHERE GIP4.PartnerID = @PartnerID
				AND GIP4.DeclarationDataGUID = (
					SELECT TOP 1 M1.DeclarationDataGUID
					FROM txdDEAESMessage M1
					WHERE M1.PartnerID = @PartnerID
						AND M1.DeclarationGUID = @DeclarationGUID
						AND M1.Type = ''E_EXP_DAT''
					----AND M1.STATUS = ''TRANSMITTED''
					ORDER BY M1.SequenceNum DESC
					)
				AND GI2.ItemNumber NOT IN (
					SELECT GI1.ItemNumber
					FROM txdDEAESGoodsItem GI1
					WHERE GI1.PartnerID = @PartnerID
						AND GI1.DeclarationDataGUID = @DeclarationDataGUID
					)
				AND GIP4.Number <> 0
				AND GIP4.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
			)
		)
*/

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/SequenceNumber'' AS Location,
	''Packages/SequenceNumber is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GIP.PartnerID IS NOT NULL
	AND GIP.DeclarationGUID IS NOT NULL
	AND GIP.SequenceNumber IS NULL
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/SequenceNumber'' AS Location,
	''Packages/SequenceNumber is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GIP.SequenceNumber IS NOT NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/Type'' AS Location,
	''Packages/Type is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GIP.PartnerID IS NOT NULL
	AND GIP.DeclarationGUID IS NOT NULL
	AND GIP.Type = ''''
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/Type'' AS Location,
	''Packages/Type is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GIP.Type <> ''''
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/MarksAndNumbers'' AS Location,
	''Packages/MarksAndNumbers is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GIP.PartnerID IS NOT NULL
	AND GIP.DeclarationGUID IS NOT NULL
	AND GIP.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
	AND GIP.MarksAndNumbers = ''''
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/MarksAndNumbers'' AS Location,
	''Packages/MarksAndNumbers is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GIP.MarksAndNumbers <> ''''
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/MainItemNumber'' AS Location,  
	''Packages/MainItemNumber is required and permitted only if Packages/Number is 0'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.MainItemNumber <> 0 
		AND GIP.Number <> 0
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/MainItemNumber'' AS Location,  
	''Packages/MainItemNumber in range from 1 to Header/TotalItems'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.MainItemNumber < 1 
		OR GIP.MainItemNumber > DD.TotalItems
		)


INSERT INTO #ValidationWarning
SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/MainItemNumber'' AS Location,  
	''Packages/MainItemNumber is not valid'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.MainItemNumber <> 0 
		AND NOT EXISTS
            (                                                      
            SELECT GIP1.PartnerID
            FROM txdDEAESGoodsItemPackage GIP1                                         
            WHERE GIP1.PartnerID = @PartnerID
            AND GIP1.DeclarationDataGUID = GI.DeclarationDataGUID
			AND GIP1.GoodsItemGUID <> GIP.GoodsItemGUID
			AND GIP1.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
            AND GIP1.MarksAndNumbers=GIP.MarksAndNumbers
            AND GIP1.Number <> 0                                                                                                                    
            )
		
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages'' AS Location,
	''At least one Package is mandatory to be provided'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND NOT EXISTS (
		SELECT GIP.PartnerID
		FROM txdDEAESGoodsItemPackage GIP
		WHERE GIP.PartnerID = @PartnerID
			AND DD.DeclarationDataGUID = @DeclarationDataGUID
			AND GIP.GoodsItemGUID = GI.GoodsItemGUID
			AND GIP.GoodsItemPackageGUID IS NOT NULL
		)
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Container ['' + CONVERT(VARCHAR(3), GIC.SequenceNum) + '']/Number'' AS Location,
	''Container/Number is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemContainer GIC
	ON DD.PartnerID = GIC.PartnerID
		AND DD.DeclarationDataGUID = GIC.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIC.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GIC.Number <> ''''
	AND (
		DD.ContainerFlag = ''0''
		OR EXISTS (
			SELECT *
			FROM txdDEAESDeclarationData DD1
			WHERE DD1.PartnerID = DD.PartnerID
				AND DD1.DeclarationGUID = DD.DeclarationGUID
				AND DD1.DeclarationDataGUID = (
					SELECT TOP 1 M.DeclarationDataGUID
					FROM txdDEAESMessage M
					WHERE M.PartnerID = @PartnerID
						AND M.DeclarationGUID = @DeclarationGUID
						AND M.Type = ''E_EXP_DAT''
					----AND M.STATUS = ''TRANSMITTED''
					ORDER BY M.SequenceNum DESC
					)
				AND DD1.DeclarationType2 = ''AE''
			)
		)
	/*	
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Container [''+CONVERT(VARCHAR(3),GIC.SequenceNum)+'']/Number'' AS Location, 
''Container/Number is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemContainer GIC
ON DD.PartnerID = GIC.PartnerID  AND DD.DeclarationDataGUID = GIC.DeclarationDataGUID AND GI.GoodsItemGUID = GIC.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GIC.Number = ''''
	AND DD.ContainerFlag = ''1''
	AND 
		NOT EXISTS
		(SELECT (*)
		FROM txdDEAESGoodsItem GI1
		WHERE GI1.DeclarationDataGUID=GI.DeclarationDataGUID
		AND GI1.ItemNumber <> GI.ItemNumber
		AND GI1.Number <> '''' 
		AND 
			EXISTS
			(SELECT (*)
			FROM txdDEAESGoodsItem GI2
			WHERE GI2.DeclarationGUID=GI.DeclarationGUID
			AND GI2.ItemNumber <> GI.ItemNumber
			AND GI2.ItemNumber <> GI1.ItemNumber
			AND GI2.Number <> '''' 
			)
		)*/

		
INSERT INTO txdDEAESValidationWarning
SELECT @PartnerID AS PartnerID,
	GETDATE() AS EffDate,
	@DeclarationGUID AS DeclarationGUID,
	@DeclarationDataGUID AS DeclarationDataGUID,
	NEWID() AS WarningGUID,
	Location,
	Warning,
	''N'',
	''N''
FROM #ValidationWarning

', CAST(N'2018-02-19T11:07:09.960' AS DateTime), N'DE-AES-2.4.2 E_EXP_AMD validation query', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-02-19T11:07:10.437' AS DateTime), N'BCK DE-AES-2.4.2 E_EXP_DAT 20180219115004', N'DE-AES-2.4.2 E_EXP_DAT', N'


DECLARE @EffectiveValidationDate datetime = GETDATE()
	
DELETE
FROM txdDEAESValidationWarning
WHERE PartnerID = @PartnerID
	AND DeclarationGUID = @DeclarationGUID
	AND DeclarationDataGUID = @DeclarationDataGUID

CREATE TABLE #ValidationWarning (
	Location VARCHAR(1000) NOT NULL,
	Warning VARCHAR(2000) NOT NULL
	)



--Header:
INSERT INTO #ValidationWarning
SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationType1'' AS Location, 
''Declaration Type1 is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
								AND NOT
									( 
										DD.DeclarationType2=''AE'' 
										AND	DD.DeclarationType3 IN (''q'',''s'')
									)
										AND DD.DeclarationType1=''''

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationType1'' AS Location, 
''Declaration Type1 is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2=''AE'' 
										AND	DD.DeclarationType3 IN (''q'',''s'')
										AND DD.DeclarationType1<>''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationType2'' AS Location,
''Declaration Type2 is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2=''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationType2'' AS Location,
''"zP" in not valid value'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType1 NOT IN (''EU'', ''EX'')
										AND DD.DeclarationType2 = ''zP''
                                    )									

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationType3'' AS Location,
''Declaration Type3 is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType3=''''
                                    )									

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationType2+DeclarationType3'' AS Location,
''Not valid values are indicated for DeclarationType2 and DeclarationType3'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND DeclarationType1 NOT IN (''EU'', ''EX'')
									AND
										(	DD.DeclarationType2=''nB'' 
											AND	DD.DeclarationType3 IN (''b'',''c'', ''d'')
											OR DD.DeclarationType2=''nK'' 
											AND	DD.DeclarationType3 IN (''b'',''c'', ''d'')
											OR DD.DeclarationType2=''nN'' 
											AND	DD.DeclarationType3 IN (''b'',''c'', ''d'')
										)	

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationType3'' AS Location, 
''The values of DeclarationType3 in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND DD.DeclarationType3 <> DD1.DeclarationType3								

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/MRN'' AS Location, 
''MRN is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
								AND ( 
										DD.DeclarationType2=''AE'' 
										AND DD.MRN=''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/MRN'' AS Location, 
''MRN is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2<>''AE'' 
										AND DD.MRN<>''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExportCountry'' AS Location, 
''Export Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		DD.ExportCountry = ''''
        )

INSERT INTO #ValidationWarning		

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExportCountry, Itinerary/Country'' AS Location, 
''Header/ExportCountry should be the same as the first Country from the list on Itinerary tab'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND DD.ExportCountry <> ''''
	AND
		(
		SELECT TOP 1 Country 																				
		FROM txdDEAESItinerary IT
		WHERE   IT.PartnerID = @PartnerID 
		AND IT.DeclarationDataGUID = @DeclarationDataGUID
		ORDER BY IT.SequenceNum ASC
		) <> DD.ExportCountry

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExportCountry'' AS Location, 
	''"DE" should be inserted as the value for Export Country'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( NOT
			(	
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''e'', ''f'', ''g'', ''i'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''q'', ''r'', ''w'', ''x'') 
			)
		AND ExportCountry <> ''DE''
        )

INSERT INTO #ValidationWarning	

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DestinationCountry'' AS Location, 
''Destination Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		DD.DestinationCountry = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DestinationCountry'' AS Location,  
	''Not valid country indicated as the Destination Country'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
			DD.DeclarationType1 = ''EU''
			AND DD.DestinationCountry <> ''''
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-I0811''
				)
		OR
			DD.DeclarationType1 = ''EX''
			AND DD.DestinationCountry <> ''''
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-I0802''
				)
		OR
			DD.DeclarationType1 = ''CO''
			AND DD.DestinationCountry <> ''''
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-I0806''
				)
		OR
			DeclarationType2 = ''AE'' 
			AND	DeclarationType3 IN (''q'', ''s'')
			AND DD.DestinationCountry <> ''''
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-C0010''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID2.PartnerID
				FROM txdDEAESGoodsItemDocument GID2	
				WHERE   GID2.PartnerID = @PartnerID 
				AND GID2.DeclarationDataGUID = @DeclarationDataGUID
				AND GID2.Type = ''X002''
				AND	GID2.Qualifier = ''E01''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-A0181''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID3.PartnerID
				FROM txdDEAESGoodsItemDocument GID3	
				WHERE   GID3.PartnerID = @PartnerID 
				AND GID3.DeclarationDataGUID = @DeclarationDataGUID
				AND GID3.Type = ''X002''
				AND	GID3.Qualifier = ''E02''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-A0182''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID4.PartnerID
				FROM txdDEAESGoodsItemDocument GID4	
				WHERE   GID4.PartnerID = @PartnerID 
				AND GID4.DeclarationDataGUID = @DeclarationDataGUID
				AND GID4.Type = ''X002''
				AND	GID4.Qualifier = ''E03''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-A0183''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID5.PartnerID
				FROM txdDEAESGoodsItemDocument GID5	
				WHERE   GID5.PartnerID = @PartnerID 
				AND GID5.DeclarationDataGUID = @DeclarationDataGUID
				AND GID5.Type = ''X002''
				AND	GID5.Qualifier = ''E04''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-A0184''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID6.PartnerID
				FROM txdDEAESGoodsItemDocument GID6	
				WHERE   GID6.PartnerID = @PartnerID 
				AND GID6.DeclarationDataGUID = @DeclarationDataGUID
				AND GID6.Type = ''X002''
				AND	GID6.Qualifier = ''E05''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-A0185''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID7.PartnerID
				FROM txdDEAESGoodsItemDocument GID7	
				WHERE   GID7.PartnerID = @PartnerID 
				AND GID7.DeclarationDataGUID = @DeclarationDataGUID
				AND GID7.Type = ''X002''
				AND	GID7.Qualifier = ''E06''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-A0186''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID8.PartnerID
				FROM txdDEAESGoodsItemDocument GID8	
				WHERE   GID8.PartnerID = @PartnerID 
				AND GID8.DeclarationDataGUID = @DeclarationDataGUID
				AND GID8.Type = ''3LLC''
				AND	GID8.Qualifier = ''A22''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-A0222''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID9.PartnerID
				FROM txdDEAESGoodsItemDocument GID9	
				WHERE   GID9.PartnerID = @PartnerID 
				AND GID9.DeclarationDataGUID = @DeclarationDataGUID
				AND GID9.Type = ''3LLC''
				AND	GID9.Qualifier = ''A24''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-A0224''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID10.PartnerID
				FROM txdDEAESGoodsItemDocument GID10	
				WHERE   GID10.PartnerID = @PartnerID 
				AND GID10.DeclarationDataGUID = @DeclarationDataGUID
				AND GID10.Type = ''3LLC''
				AND	GID10.Qualifier = ''A26''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-A0226''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID11.PartnerID
				FROM txdDEAESGoodsItemDocument GID11	
				WHERE   GID11.PartnerID = @PartnerID 
				AND GID11.DeclarationDataGUID = @DeclarationDataGUID	
				AND GID11.Type = ''3LLC''
				AND	GID11.Qualifier = ''A27''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-A0227''
				)
		OR EXISTS
				(
				SELECT GI12.PartnerID
				FROM txdDEAESGoodsItem GI12
				WHERE  GI12.PartnerID = @PartnerID 
				AND GI12.DeclarationDataGUID = @DeclarationDataGUID	
				AND GI12.NationalProcedure NOT IN (''F61'', ''F62'', ''F64'')
				)
			AND DD.DestinationCountry IN (''QQ'', ''QR'', ''QS'')
		OR EXISTS
				(
				SELECT GI13.PartnerID
				FROM txdDEAESGoodsItem GI13
				WHERE  GI13.PartnerID = @PartnerID 
				AND GI13.DeclarationDataGUID = @DeclarationDataGUID	
				AND GI13.NationalProcedure NOT IN (''F61'', ''F62'', ''6F0'')
				)
			AND DD.DestinationCountry IN (''QU'', ''QV'', ''QP'')
			
		OR NOT EXISTS
				(
				SELECT GI14.PartnerID
				FROM txdDEAESGoodsItem GI14
				LEFT JOIN txdDEAESGoodsItemDocument GID14
				ON GI14.PartnerID=GID14.PartnerID  AND GI14.GoodsItemGUID=GID14.GoodsItemGUID
				AND
					(
					GID14.Type = ''3LLA''
					AND	GID14.Qualifier IN (''82'', ''231'', ''EU'')
					OR GID14.Type = ''3LLB''
					AND	GID14.Qualifier IN (''81E'', ''81K'', ''81S'', ''231'')
					OR GID14.Type = ''3LLC''
					AND	GID14.Qualifier IN (''81E'', ''81S'', ''231'')
					OR GID14.Type = ''C064''
					AND	GID14.Qualifier IN (''DE'', ''EU'')
					OR GID14.Type = ''E990''
					AND	GID14.Qualifier IN (''DEE'', ''DES'', ''EU'')
					OR GID14.Type = ''C052''
					AND	GID14.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'', ''EU'')
					OR GID14.Type = ''C070''
					AND GID14.Qualifier IN (''LY'', ''EU'')
					OR GID14.Type = ''X002''
					AND	GID14.Qualifier IN (''DEE'', ''DES'', ''231'')
					OR GID14.Type = ''E020''
					AND	GID14.Qualifier IN (''FWE'', ''FWS'', ''231'', ''EU'')
					OR GID14.Type = ''X002''
					AND	GID14.Qualifier IN (''A09'', ''A10'', ''A12'', ''A13'', ''A16'', ''A17'', ''EU'')
					OR GID14.Type = ''3LLC''
					AND	GID14.Qualifier IN (''A18'', ''A19'', ''A21'', ''A23'', ''A25'')
					)				
				WHERE   GI14.PartnerID = DD.PartnerID 
				AND GI14.DeclarationDataGUID = DD.DeclarationDataGUID
				AND GID14.GoodsItemDocumentGUID IS NOT NULL
				)
			AND DD.DestinationCountry = ''QZ''
		)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DestinationCountry, Itinerary/Country'' AS Location, 
''Header/DestinationCountry should be the same as the last Country from the list on Itinerary tab'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
		DD.DestinationCountry <> ''''
		AND
		(
		SELECT TOP 1 Country 																				
		FROM txdDEAESItinerary IT
		WHERE   IT.PartnerID = @PartnerID 
		AND IT.DeclarationDataGUID = @DeclarationDataGUID
		ORDER BY IT.SequenceNum DESC
		) <> DD.DestinationCountry

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationDate'' AS Location,
''Declaration Date is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationDate=''''
                                    )									

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ApplicableDate'' AS Location, 
''Applicable Date is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
								AND ( 
										DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
										AND DD.ApplicableDate=''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ApplicableDate'' AS Location, 
''Applicable Date is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2 NOT IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
										AND DD.ApplicableDate<>''''
                                    )

INSERT INTO #ValidationWarning

SELECT 	-----N1												
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ApplicableDate'' AS Location, 
''Applicable Date can not be in the future.'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
										AND DD.ApplicableDate <> ''''
										AND DD.ApplicableDate>@EffectiveValidationDate
                                    )

INSERT INTO #ValidationWarning

SELECT 	-----N1												
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ApplicableDate'' AS Location, 
''Applicable Date should be in the previous month of the Declaration Date'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2 = ''mS'' 
										AND 
											(
											DATEDIFF(day, DD.ApplicableDate, DD.DeclarationDate) > 30
											OR DATEDIFF(day, DD.ApplicableDate, DD.DeclarationDate) < 0
											)
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExitDate'' AS Location, 
''Exit Date is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
								AND ( 
										DD.DeclarationType2 IN (''nA'', ''nK'', ''nN'') 
										AND DD.ExitDate=''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExitDate'' AS Location, 
''Exit Date is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2 NOT IN (''nA'', ''nK'', ''nN'') 
										AND DD.ExitDate<>''''
                                    )

INSERT INTO #ValidationWarning

SELECT   -----N2
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExitDate'' AS Location, 
''Exit Date can not be in the future.'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2 IN (''nA'', ''nK'', ''nN'')
										AND DD.ExitDate <> ''''
										AND DD.ExitDate>@EffectiveValidationDate
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/SpecialCircumstances'' AS Location, 
''Special Circumstances is not allowed for "AM+k" and "AM+l" types of declaration'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2 = ''AM'' 
										AND	DD.DeclarationType3 IN (''k'',''l'')
										AND DD.SpecialCircumstances <> ''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TransportCostsMethodOfPayment, Goods Items/TransportCostsMethodOfPayment'' AS Location, 
''Transport Costs Method Of Payment should be specified either on Header level or on the Goods Item level'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(SELECT COUNT (*) 																				
				FROM txdDEAESGoodsItem GI
				WHERE   GI.PartnerID = @PartnerID 
				AND GI.DeclarationDataGUID = @DeclarationDataGUID
				AND GI.TransportCostsMethodOfPayment <> ''''
			) > 0
		AND DD.TransportCostsMethodOfPayment <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items/TransportCostsMethodOfPayment'' AS Location,  
	''The same Transport Costs Method Of Payment is not allowed to be used for all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.TransportCostsMethodOfPayment = ''''
		AND 
			(
			SELECT COUNT (DISTINCT GI.TransportCostsMethodOfPayment)
			FROM txdDEAESGoodsItem GI
			WHERE   GI.PartnerID = @PartnerID 
			AND GI.DeclarationDataGUID = @DeclarationDataGUID
			AND GI.TransportCostsMethodOfPayment <> ''''
			) = 1
		)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/PartiesStatus'' AS Location,
''Parties Status is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.PartiesStatus=''''
                                    )									

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/PartiesStatus'' AS Location, 
''The values of PartiesStatus in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND DD.PartiesStatus <> DD1.PartiesStatus								

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/PartiesStatus'' AS Location, 
''Not valid value for Parties Status'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										(	DeclarationType2=''AM'' 
											AND	DeclarationType3 IN (''e'',''f'')
											OR DeclarationType2=''wP'' 
											AND	DeclarationType3 IN (''q'',''r'',''w'',''x'')
										)
											AND PartiesStatus LIKE ''_01_''
									OR
										( 
										DeclarationType2=''mS'' 
										AND 
											(
											PartiesStatus LIKE ''_01_''
											OR PartiesStatus LIKE ''_10_''
											OR PartiesStatus LIKE ''_11_''
											)
										)
									OR
										(	DeclarationType2=''AM'' 
											AND	DeclarationType3 IN (''g'',''i'')
											OR DeclarationType2=''zP'' 
											AND	DeclarationType3 IN (''e'',''f'',''q'',''r'')
										)
											AND PartiesStatus LIKE ''__1_''
									OR
										( 
										DeclarationType2=''AM'' 
										AND	DeclarationType3 IN (''k'',''l'')
										AND 
											(
											PartiesStatus LIKE ''1___''
											OR PartiesStatus LIKE ''__1_''
											)
										)
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/PartiesStatus'' AS Location, 
''The value like "***0" should be indicated for the field PartiesStatus '' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND 
									NOT
										(	DeclarationType2 IN (''zP'',''nB'',''nK'',''nN'') 
											AND	DeclarationType3 IN (''b'',''c'',''d'')
										)
											AND PartiesStatus NOT LIKE ''___0''

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/PartiesStatus'' AS Location, 
''The value like "***1", "***2" or "***3" should be indicated for the field PartiesStatus '' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
									AND 
										(	DeclarationType2 = ''zP'' 
											AND	DeclarationType3 IN (''a'',''b'',''c'',''d'',''e'',''f'',''m'',''n'',''o'',''p'',''q'',''r'')
										OR
											DeclarationType2 IN (''nB'',''nK'',''nN'') 
											AND	DeclarationType3 IN (''b'',''c'')
										)
											AND 
												(
												PartiesStatus NOT LIKE ''___1''
												AND PartiesStatus NOT LIKE ''___2''
												AND PartiesStatus NOT LIKE''___3''
												)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/PartiesStatus'' AS Location, 
''The value like "***1", "***2" or "***3" should be indicated for the field PartiesStatus '' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
									AND 
										(	DeclarationType2 = ''zP'' 
											AND	DeclarationType3 IN (''s'',''t'',''u'',''v'')
										OR
											DeclarationType2 IN (''nB'',''nK'',''nN'') 
											AND	DeclarationType3 = ''d''
										)
											AND 
												(
												PartiesStatus NOT LIKE ''___1''
												AND PartiesStatus NOT LIKE ''___2''
												)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ContainerFlag'' AS Location,
''Countainer Flag is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.ContainerFlag=''''
                                    )									

INSERT INTO #ValidationWarning
/*
SELECT 														----------------THE FIELD IS NOT IN THE UPDATED STRUCTURE ANY MORE
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/StatisticalMessageFlag'' AS Location, 	
''Statistical MessageFlag is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
								AND ( 
										DeclarationType2=''nN'' 
										AND StatisticalMessageFlag=''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/StatisticalMessageFlag'' AS Location, 
''Statistical MessageFlag is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DeclarationType2<>''nN'' 
										AND StatisticalMessageFlag<>''''
                                    )

INSERT INTO #ValidationWarning*/

SELECT    -----N3
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalGrossWeight; Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/GrossWeight'' AS Location, 
''Gross Weight is required to be indicated both on Header level/TotalGrossWeight and on the Goods Item level/GrossWeight'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
			(	
			DD.DeclarationType2 = ''AE'' 
			OR 
			DD.DeclarationType2 = ''AM'' 
			AND DD.DeclarationType3 IN (''k'',''l'')
			AND DD.SpecialCircumstances <> ''E''
			)
		
			AND 
			(DD.TotalGrossWeight = 0
			OR GI.GrossWeight = 0	
			)
			

INSERT INTO #ValidationWarning	

SELECT    -----N3
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalGrossWeight; Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/GrossWeight'' AS Location, 
''Gross Weight is required to be indicated either on Header level/TotalGrossWeight or on the Goods Item level/GrossWeight or in both places'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT (
			DD.DeclarationType2 = ''AE'' 
			OR 
			DD.DeclarationType2 = ''AM'' 
			AND DD.DeclarationType3 IN (''k'',''l'')
			AND DD.SpecialCircumstances <> ''E''
			)
		AND	
			(	
			GI.PreviousProcedure IN (''71'', ''78'')
			AND GI.GrossWeight = 0
			AND DD.TotalGrossWeight = 0
			)
		

INSERT INTO #ValidationWarning		

SELECT  
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalGrossWeight'' AS Location, 
''Total Gross Weight should not be less than the sum of Gross Weights of all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DD.TotalGrossWeight <> 0
		AND
			
			(SELECT SUM (GrossWeight) 																				
				FROM txdDEAESGoodsItem GI
				WHERE   GI.PartnerID = @PartnerID 
				AND GI.DeclarationDataGUID = @DeclarationDataGUID
			) > DD.TotalGrossWeight
		)

INSERT INTO #ValidationWarning

SELECT  
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalGrossWeight'' AS Location, 
''Total Gross Weight should not be less than the sum of Net WeightS of all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DD.TotalGrossWeight <> 0
		AND
			
			(SELECT SUM (NetWeight) 																				
				FROM txdDEAESGoodsItem GI
				WHERE   GI.PartnerID = @PartnerID 
				AND GI.DeclarationDataGUID = @DeclarationDataGUID
			) > DD.TotalGrossWeight
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/GrossWeight'' AS Location,  
	''"0" should not be indicated as the value for Gross Weight'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT (
			DD.BorderModeOfTransport IN (''7'', ''70'')
			OR (SELECT COUNT (*) 																				
				FROM txdDEAESGoodsItem GI1
				WHERE   GI1.PartnerID = @PartnerID 
				AND GI1.DeclarationDataGUID = @DeclarationDataGUID
				AND GI1.GrossWeight <> 0
				) > 0
			)
		AND GI.GrossWeight = 0
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/GrossWeight'' AS Location,  
	''"0" should be indicated as the value for Gross Weight'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID=GIP.PartnerID  AND DD.DeclarationDataGUID=GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND	
		DD.BorderModeOfTransport IN (''7'', ''70'')
		AND	
			(
				GI.NetWeight = 0
				OR GIP.Number = 0
			)
			AND GI.GrossWeight <> 0
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/GrossWeight'' AS Location,  
	''Gross Weight should be greater than or equal to Net Weight'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GI.GrossWeight <> 0
		AND GI.GrossWeight < GI.NetWeight
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/GrossWeight'' AS Location,  
	''Gross Weight should be greater than zero'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GI.PreviousProcedure IN (''71'', ''78'')
		AND DD.TotalGrossWeight = 0
		AND NOT GI.GrossWeight > 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items/GrossWeight'' AS Location,  
	''the sum of the Gross Weights should not be less than the sum of the Net Weights'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		SELECT SUM (GrossWeight) 																				
		FROM txdDEAESGoodsItem GI1
		WHERE   GI1.PartnerID = @PartnerID 
		AND GI1.DeclarationDataGUID = @DeclarationDataGUID
		)
		< 
		(
		SELECT SUM (NetWeight) 																				
		FROM txdDEAESGoodsItem GI2
		WHERE   GI2.PartnerID = @PartnerID 
		AND GI2.DeclarationDataGUID = @DeclarationDataGUID
		)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/Note'' AS Location, 
''Note is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
								AND ( 
										DD.DeclarationType2=''AM'' 
										AND	DD.DeclarationType3=''i''
										AND DD.Note=''''
                                    )

INSERT INTO #ValidationWarning

SELECT   -----N5
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/UCR, Goods Items/UCR'' AS Location, 
''UCR is not allowed allowed to be specified both on Header level and on Goods Item level'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(SELECT COUNT (*) 																				
				FROM txdDEAESGoodsItem GI
				WHERE   GI.PartnerID = @PartnerID 
				AND GI.DeclarationDataGUID = @DeclarationDataGUID
				AND GI.UCR <> ''''
			) > 0
		AND DD.UCR <> ''''
		)

INSERT INTO #ValidationWarning

SELECT   -----N6
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/UCR, Goods Items/UCR'' AS Location, 
''UCR is required to be specified either on Header level on or Goods Item level'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(SELECT COUNT (*) 																				-------------???????????????????????????????
				FROM txdDEAESGoodsItem GI
				WHERE   GI.PartnerID = @PartnerID 
				AND GI.DeclarationDataGUID = @DeclarationDataGUID
				AND GI.UCR = ''''
			) > 0
		AND DD.SpecialCircumstances <> ''A''
		AND DD.UCR = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items/UCR'' AS Location,  
	''The same UCR is not allowed to be used for all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.UCR = ''''
		AND 
			(SELECT COUNT (*) 																				-------------???????????????????????????????
				FROM txdDEAESGoodsItem GI
				WHERE   GI.PartnerID = @PartnerID 
				AND GI.DeclarationDataGUID = @DeclarationDataGUID
				AND GI.UCR = ''''
			) = 0
		AND
			(
			SELECT COUNT (DISTINCT GI1.UCR)
			FROM txdDEAESGoodsItem GI1
			WHERE   GI1.PartnerID = @PartnerID 
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI1.UCR <> ''''
			) = 1
		)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/LRN'' AS Location, 
''LRN is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	---AND	DD1.Type = ''E_EXP_IND''		----IND
	AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
    AND (																									
		DD1.LRN <> '''' 
		AND DD.LRN <> ''''
		)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalItems'' AS Location, 
''Total Items is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
								AND ( 
										DD.DeclarationType2 <> ''AE'' 
										AND DD.TotalItems=0
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalItems'' AS Location, 
''Total Items is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2 = ''AE'' 
										AND DD.TotalItems<>0
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/BIN'' AS Location,
''BIN is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.BIN = ''''
                                    )									

INSERT INTO #ValidationWarning		
									
SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OPLocalClearanceAuthorizationNumber'' AS Location, 
	''OPLocal Clearance Authorization Number is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			NOT (	
					DD.DeclarationType2 = ''zP'' 
					AND	DD.DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
				)
			AND DD.OPLocalClearanceAuthorizationNumber <> ''''
		)		
									
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OPLocalClearanceAuthorizationNumber'' AS Location, 
	''OPLocal Clearance Authorization Number is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
			AND DD.OPLocalClearanceAuthorizationNumber = ''''
		)		
									
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OPAuthorizationNumber'' AS Location, 
	''OPAuthorization Number is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD                               
WHERE DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
			DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'' , ''b'', ''c'', ''d'', ''e'', ''f'', ''m'', ''n'', ''o'', ''p'', ''q'', ''r'')
			OR DD.DeclarationType2 = ''nB'' 
			AND	DD.DeclarationType3 IN (''b'', ''c'')
			OR DD.DeclarationType2 = ''nK'' 
			AND	DD.DeclarationType3 IN (''b'', ''c'')
			OR DD.DeclarationType2 = ''nN'' 
			AND	DD.DeclarationType3 IN (''b'', ''c'')
			)
			AND DD.OPAuthorizationNumber= ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OPAuthorizationNumber'' AS Location, 
	''OPAuthorization Number is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			NOT (	
					DD.DeclarationType2 = ''zP'' 
					AND	DD.DeclarationType3 IN (''a'', ''b'', ''c'', ''d'', ''e'', ''f'', ''m'', ''n'', ''o'', ''p'', ''q'', ''r'')
					OR DD.DeclarationType2 = ''nB'' 
					AND	DD.DeclarationType3 IN (''b'', ''c'')
					OR DD.DeclarationType2 = ''nK'' 
					AND	DD.DeclarationType3 IN (''b'', ''c'')
					OR DD.DeclarationType2 = ''nN'' 
					AND	DD.DeclarationType3 IN (''b'', ''c'')
				)
			AND DD.OPAuthorizationNumber <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/TrustedExporterNumber'' AS Location, 
	''Trusted Exporter Number is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''k'', ''l'')
			)
			AND DD.TrustedExporterNumber = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/TrustedExporterNumber'' AS Location, 
	''Trusted Exporter Number is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT (	
					DD.DeclarationType2 = ''AM'' 
					AND	DD.DeclarationType3 IN (''k'', ''l'')
				)
				AND DD.TrustedExporterNumber <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AuthorizedExporterNumber'' AS Location, 
	''Authorized Exporter Number is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''e'', ''f'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			OR DD.DeclarationType2 = ''mS'' 
			AND	DD.DeclarationType3 = ''a''
			)
			AND DD.AuthorizedExporterNumber = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AuthorizedExporterNumber'' AS Location, 
	''Authorized Exporter Number is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT (	
					DD.DeclarationType2 = ''AM'' 
					AND	DD.DeclarationType3 IN (''a'', ''b'', ''c'', ''d'', ''e'', ''f'')
					OR DD.DeclarationType2 = ''wP'' 
					AND	DD.DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
					OR DD.DeclarationType2 = ''mS'' 
					AND	DD.DeclarationType3 = ''a''
				)
				AND DD.AuthorizedExporterNumber <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/InlandModeOfTransport'' AS Location, 
	''Inland Mode Of Transport is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'')
			OR DD.DeclarationType2 = ''nA'' 
			OR DD.DeclarationType2 = ''nB''
			OR DD.DeclarationType2 = ''nK''
			OR DD.DeclarationType2 = ''nN''
			OR DD.DeclarationType2 = ''mS''
			)
			AND DD.InlandModeOfTransport = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/InlandModeOfTransport'' AS Location, 
	''Inland Mode Of Transport is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			(	
				DD.DeclarationType2 = ''AM'' 
				AND	DD.DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
			)
			AND DD.InlandModeOfTransport <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/InlandModeOfTransport'' AS Location, 
	''Not valid value is indicated for Inland Mode Of Transport'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT
				(	
				DD.DeclarationType2 = ''AM'' 
				AND	DD.DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
				)
			AND (
				DD.InlandModeOfTransport IN (''5'', ''50'')
				AND DD.SpecialCircumstances <> ''A''
				OR DD.InlandModeOfTransport IN (''7'', ''70'')
				AND DD.DeclarationType2 <> ''mS''
				)
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DepartureTypeOfTransport'' AS Location, 
	''Departure Type Of Transport is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DD.DeclarationType2 <> ''AE'' 
			AND DD.DepartureTypeOfTransport <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DepartureTypeOfTransport'' AS Location, 
	''Departure Type Of Transport is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DD.DeclarationType2 = ''AE'' 
			AND DD.DepartureTypeOfTransport = ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DepartureTransportMeansID'' AS Location, 
	''Departure Transport Means ID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DD.DeclarationType2 <> ''AE'' 
			AND DD.DepartureTransportMeansID <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DepartureTransportMeansNationality'' AS Location, 
	''Departure Transport Means Nationality is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DD.DeclarationType2 <> ''AE'' 
			AND DD.DepartureTransportMeansNationality <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/BorderModeOfTransport'' AS Location, 
	''Border Mode Of Transport is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DD.BorderModeOfTransport = ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/BorderModeOfTransport'' AS Location, 
	''Value for Border Mode Of Transport is not valid'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND DD.BorderModeOfTransport <> ''''
		and (
			 BorderModeOfTransport IN (''5'', ''50'')
			AND SpecialCircumstances <> ''A''
			OR BorderModeOfTransport IN (''7'', ''70'')
			AND DeclarationType2 <> ''mS''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/BorderTypeOfTransport'' AS Location, 
	''Border Type Of Transport is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DD.DeclarationType2 = ''AE'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'')
			OR DD.DeclarationType2 = ''nA'' 
			OR DD.DeclarationType2 = ''nB''
			OR DD.DeclarationType2 = ''nK''
			OR DD.DeclarationType2 = ''nN''
			OR DD.DeclarationType2 = ''mS''
			)
			AND DD.BorderTypeOfTransport = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/BorderTransportMeansID'' AS Location, 
	''Border Transport Means ID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			DD.DeclarationType2 = ''AE'' 
			AND DD.BorderTransportMeansID = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/BorderTransportMeansNationality'' AS Location, 
	''Border Transport Means Nationality is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DD.DeclarationType2 = ''AE'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'')
			OR DD.DeclarationType2 = ''nA'' 
			OR DD.DeclarationType2 = ''nB''
			OR DD.DeclarationType2 = ''nK''
			OR DD.DeclarationType2 = ''nN''
			OR DD.DeclarationType2 = ''mS''
			)
			AND DD.BorderModeOfTransport NOT IN (''2'', ''20'', ''5'', ''50'', ''9'', ''90'')
			AND DD.BorderTransportMeansNationality = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoading'' AS Location, 
	''Place Of Loading is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD                               
WHERE DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			NOT(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'', ''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
				OR DeclarationType2 = ''mS''
				)
			AND(
				AuthorizedExporterNumber <> '''' 
				OR OPLocalClearanceAuthorizationNumber <> '''' 
				)
			AND PlaceOfLoading= ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoading'' AS Location, 
	''Place Of Loading is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 	(
			DeclarationType2 = ''AE''			
			OR DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
			OR DeclarationType2 = ''mS''
			OR NOT 
					(	
					AuthorizedExporterNumber <> '''' 
					OR OPLocalClearanceAuthorizationNumber <> '''' 
					)
			)
			AND PlaceOfLoading <> ''''
		)
/*
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoading'' AS Location, 
	''Place Of Loading is not allowed if by the Header/AuthorizedExporterNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND  	
		(
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''e'', ''f'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
		)
	AND 
		(	
			AuthorizedExporterNumber <> '''' 
			OR OPLocalClearanceAuthorizationNumber <> '''' 
		)
	AND PlaceOfLoading <> ''''
*/

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoading'' AS Location, 
	''Place Of Loading is not allowed if by the Header/OPLocalClearanceAuthorizationNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND  	
		(
			DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
		)
	AND 
		(	
			AuthorizedExporterNumber <> '''' 
			OR OPLocalClearanceAuthorizationNumber <> '''' 
		)
	AND PlaceOfLoading <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAddress'' AS Location, 
	''Place Of Loading Address is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD                               
WHERE DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			NOT(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'', ''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
				OR DeclarationType2 = ''mS''
				)
			AND PlaceOfLoading = '''' 
			AND PlaceOfLoadingAddress = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAddress'' AS Location, 
	''Place Of Loading Address is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
				OR DeclarationType2 = ''mS''
				OR PlaceOfLoading <> '''' 
			)
			AND PlaceOfLoadingAddress <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAddress'' AS Location, 
	''Place Of Loading Address is not allowed if by the Header/AuthorizedExporterNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingAddress <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAddress'' AS Location, 
	''Place Of Loading Address is not allowed if by the Header/OPLocalClearanceAuthorizationNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingAddress <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingPostCode'' AS Location, 
	''Place Of Loading Post Code is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD                               
WHERE DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			NOT(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'', ''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
				OR DeclarationType2 = ''mS''
				)
			AND	PlaceOfLoading = '''' 
			AND PlaceOfLoadingPostCode = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingPostCode'' AS Location, 
	''Place Of Loading Post Code is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
				OR DeclarationType2 = ''mS''
				OR PlaceOfLoading <> '''' 
			)
			AND PlaceOfLoadingPostCode <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingPostCode'' AS Location, 
	''Place Of Loading Post Code is not allowed if by the Header/AuthorizedExporterNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingPostCode <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingPostCode'' AS Location, 
	''Place Of Loading Post Code is not allowed if by the Header/OPLocalClearanceAuthorizationNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingPostCode <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingCity'' AS Location, 
	''Place Of Loading City is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD                               
WHERE DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			NOT(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'', ''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
				OR DeclarationType2 = ''mS''
				)
			AND PlaceOfLoading = '''' 
			AND PlaceOfLoadingCity = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingCity'' AS Location, 
	''Place Of Loading City is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
				OR DeclarationType2 = ''mS''
				OR PlaceOfLoading <> '''' 
			)
			AND PlaceOfLoadingCity <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingCity'' AS Location, 
	''Place Of Loading City is not allowed if by the Header/AuthorizedExporterNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingCity <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingCity'' AS Location, 
	''Place Of Loading City is not allowed if by the Header/OPLocalClearanceAuthorizationNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingCity <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAdditionalInformation'' AS Location, 
	''Place Of Loading Additional Information is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD                               
WHERE DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			NOT(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'', ''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
				OR DeclarationType2 = ''mS''
				)
			AND PlaceOfLoading = '''' 
			AND PlaceOfLoadingAdditionalInformation = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAdditionalInformation'' AS Location, 
	''Place Of Loading Additional Information is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
				OR DeclarationType2 = ''mS''
				OR PlaceOfLoading <> '''' 
			)
			AND PlaceOfLoadingAdditionalInformation <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAdditionalInformation'' AS Location, 
	''Place Of Loading Additional Information is not allowed if by the Header/AuthorizedExporterNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingAdditionalInformation <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAdditionalInformation'' AS Location, 
	''Place Of Loading Additional Information is not allowed if by the Header/OPLocalClearanceAuthorizationNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingAdditionalInformation <> ''''
		)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationOffice'' AS Location, 
''Declaration Office is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		DeclarationOffice = ''''
        )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationOffice'' AS Location, 
''The values of DeclarationOffice in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND DD.DeclarationOffice <> DD1.DeclarationOffice								

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SupplementaryDeclarationOffice'' AS Location, 
	''Supplementary Declaration Office is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''b'', ''d'', ''f'', ''l'')
			OR DeclarationType2 = ''AE'' 
			AND	DeclarationType3 IN (''n'', ''p'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''b'', ''d'', ''f'', ''n'', ''p'', ''r'', ''t'', ''v'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''n'', ''p'', ''r'', ''t'', ''v'', ''x'')
			)
			AND SupplementaryDeclarationOffice = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SupplementaryDeclarationOffice'' AS Location, 
	''Supplementary Declaration Office is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''b'', ''d'', ''f'', ''l'')
				OR DeclarationType2 = ''AE'' 
				AND	DeclarationType3 IN (''n'', ''p'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''b'', ''d'', ''f'', ''n'', ''p'', ''r'', ''t'', ''v'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''n'', ''p'', ''r'', ''t'', ''v'', ''x'')
				)
				AND SupplementaryDeclarationOffice <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExitOffice'' AS Location, 
	''Exit Office is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			OR DeclarationType2 = ''zP'' 
			OR DeclarationType2 = ''wP'' 
			)
			AND ExitOffice = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExitOffice'' AS Location, 
	''Exit Office is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 = ''AM'' 
				OR DeclarationType2 = ''zP'' 
				OR DeclarationType2 = ''wP''
				)
				AND ExitOffice <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExitOffice'' AS Location, 
	''Exit Office is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
			AND DD.ExitOffice <> DD.DeclarationOffice
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ActualExitOffice'' AS Location, 
	''Actual ExitOffice is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''nA'' 
			OR DeclarationType2 = ''nK'' 
			OR DeclarationType2 = ''nN'' 
			)
			AND ActualExitOffice = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ActualExitOffice'' AS Location, 
	''Actual ExitOffice is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 = ''nA'' 
				OR DeclarationType2 = ''nK'' 
				OR DeclarationType2 = ''nN''
				)
				AND ActualExitOffice <> ''''
         )

INSERT INTO #ValidationWarning

/*SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/TransactionNature'' AS Location, 
	''Transaction Nature is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DeclarationType2 = ''AE'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'') 
			OR DeclarationType2 = ''nA'' 
			OR DeclarationType2 = ''nB''
			OR DeclarationType2 = ''nK''
			OR DeclarationType2 = ''nN''
			OR DeclarationType2 = ''mS''
			)
			AND TransactionNature = ''''
        )

INSERT INTO #ValidationWarning*/

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TransactionNature; Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/TransactionNature'' AS Location, 
''Transaction Nature should be specified either on Header level or on Goods Item level'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GI.TransactionNature <> ''''
	AND DD.TransactionNature <> ''''

INSERT INTO #ValidationWarning

SELECT  
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/TransactionNature'' AS Location, 
''Transaction Nature is required'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			DD.TransactionNature = ''''
		AND (	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DeclarationType2 = ''AE'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'')
			OR DeclarationType2 = ''nA'' 
			OR DeclarationType2 = ''nB''
			OR DeclarationType2 = ''nK''
			OR DeclarationType2 = ''nN''
			OR DeclarationType2 = ''mS''
			)
		AND GI.TransactionNature = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items/TransactionNature'' AS Location,  
	''The same value for Transaction Nature is not allowed to be used for all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.TransactionNature = ''''
		AND 
			(
			SELECT COUNT (*)
			FROM txdDEAESGoodsItem GI
			WHERE   GI.PartnerID = @PartnerID 
			AND GI.DeclarationDataGUID = @DeclarationDataGUID
			AND GI.TransactionNature = ''''
			) = 0
		AND 
			(
			SELECT COUNT (DISTINCT GI1.TransactionNature)
			FROM txdDEAESGoodsItem GI1
			WHERE   GI1.PartnerID = @PartnerID 
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI1.TransactionNature <> ''''
			) = 1
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalInvoice'' AS Location, 			-----N7
	''Total Invoice is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DeclarationType2 = ''AE'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'') 
			OR DeclarationType2 = ''nA'' 
			OR DeclarationType2 = ''nB''
			OR DeclarationType2 = ''nK''
			OR DeclarationType2 = ''nN''
			OR DeclarationType2 = ''mS''
			)
			AND TotalInvoice = 0
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalInvoiceCurrency'' AS Location, 
	''Total Invoice Currency is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DeclarationType2 = ''AE'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'') 
			OR DeclarationType2 = ''nA'' 
			OR DeclarationType2 = ''nB''
			OR DeclarationType2 = ''nK''
			OR DeclarationType2 = ''nN''
			OR DeclarationType2 = ''mS''
			)
			AND TotalInvoiceCurrency = ''''
        )






--------------new segment Special events has been added












		
INSERT INTO #ValidationWarning

SELECT 
''Itinerary/Country'' AS Location, 						
''Itinerary/Country is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS
		(
		SELECT IT.PartnerID
		FROM txdDEAESItinerary IT	
		WHERE   IT.PartnerID = DD.PartnerID 
		AND IT.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	IT.Country <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT 
''Itinerary/Country'' AS Location, 
''The list of the Countries should contain "DE"'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(	
		DeclarationType2 = ''AM'' 
		AND	DeclarationType3 IN (''e'', ''f'')
		OR DeclarationType2 = ''wP'' 
		AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'') 
		OR DeclarationType2 = ''zP'' 
		AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'') 
		)
	AND
		(
		SELECT COUNT (*) 															
		FROM txdDEAESItinerary IT
		WHERE   IT.PartnerID = @PartnerID 
		AND IT.DeclarationDataGUID = @DeclarationDataGUID
		AND IT.Country = ''DE''
		) = 0

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/SealType'' AS Location, 
''Seal Type is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
		SELECT GID1.PartnerID
		FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESGoodsItemDocument GID1
		ON DD1.PartnerID=GID1.PartnerID  AND DD1.DeclarationDataGUID=GID1.DeclarationDataGUID		
		WHERE   DD1.PartnerID = DD.PartnerID 
		AND DD1.DeclarationGUID = DD.DeclarationGUID
		---AND	DD1.Type = ''E_EXP_IND''		------IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GID1.Type = ''5MMN''
		)
	AND DD.SealType=''''
		
INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/SealType'' AS Location, 
''Seal Type is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS
		(
		SELECT GID2.PartnerID
		FROM txdDEAESDeclarationData DD2
		JOIN txdDEAESGoodsItemDocument GID2
		ON DD2.PartnerID=GID2.PartnerID  AND DD2.DeclarationDataGUID=GID2.DeclarationDataGUID		
		WHERE   DD2.PartnerID = DD.PartnerID 
		AND DD2.DeclarationGUID = DD.DeclarationGUID
		---AND	DD2.Type = ''E_EXP_IND''		------IND
		AND DD2.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GID2.Type = ''5MMN''
		)
	AND DD.SealType<>''''
		
INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalSeals'' AS Location, 
''Total Seals is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
		SELECT GID2.PartnerID
		FROM txdDEAESDeclarationData DD2
		JOIN txdDEAESGoodsItemDocument GID2
		ON DD2.PartnerID=GID2.PartnerID  AND DD2.DeclarationDataGUID=GID2.DeclarationDataGUID		
		WHERE   DD2.PartnerID = DD.PartnerID 
		AND DD2.DeclarationGUID = DD.DeclarationGUID
		---AND	DD2.Type = ''E_EXP_IND''		------IND
		AND DD2.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GID2.Type = ''5MMN''
		)
	AND DD.TotalSeals = 0
		
INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalSeals'' AS Location, 
''Total Seals is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS
		(
		SELECT GID2.PartnerID
		FROM txdDEAESDeclarationData DD2
		JOIN txdDEAESGoodsItemDocument GID2
		ON DD2.PartnerID=GID2.PartnerID  AND DD2.DeclarationDataGUID=GID2.DeclarationDataGUID		
		WHERE   DD2.PartnerID = DD.PartnerID 
		AND DD2.DeclarationGUID = DD.DeclarationGUID
		---AND	DD2.Type = ''E_EXP_IND''		------IND
		AND DD2.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GID2.Type = ''5MMN''
		)
	AND DD.TotalSeals <> 0
		
INSERT INTO #ValidationWarning

SELECT 
''Seals/Identifier'' AS Location, 
''Seals/Identifier is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
		SELECT GID2.PartnerID
		FROM txdDEAESDeclarationData DD2
		JOIN txdDEAESGoodsItemDocument GID2
		ON DD2.PartnerID=GID2.PartnerID  AND DD2.DeclarationDataGUID=GID2.DeclarationDataGUID		
		WHERE   DD2.PartnerID = DD.PartnerID 
		AND DD2.DeclarationGUID = DD.DeclarationGUID
		---AND	DD2.Type = ''E_EXP_IND''		------IND
		AND DD2.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GID2.Type = ''5MMN''
		)
	AND NOT EXISTS	
		( 
		SELECT S.PartnerID
		FROM txdDEAESSeal S
		WHERE   S.PartnerID = @PartnerID 
		AND S.DeclarationDataGUID = @DeclarationDataGUID
		)

	
INSERT INTO #ValidationWarning

SELECT 
''Seals/Identifier'' AS Location, 
''Seals/Identifier is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS
		(
		SELECT GID2.PartnerID
		FROM txdDEAESDeclarationData DD2
		JOIN txdDEAESGoodsItemDocument GID2
		ON DD2.PartnerID=GID2.PartnerID  AND DD2.DeclarationDataGUID=GID2.DeclarationDataGUID		
		WHERE   DD2.PartnerID = DD.PartnerID 
		AND DD2.DeclarationGUID = DD.DeclarationGUID
		---AND	DD2.Type = ''E_EXP_IND''
		AND DD2.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GID2.Type = ''5MMN''
		)
	AND EXISTS	
		( 
		SELECT S.PartnerID
		FROM txdDEAESSeal S
		WHERE   S.PartnerID = @PartnerID 
		AND S.DeclarationDataGUID = @DeclarationDataGUID
		)
		
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/StartLoadingDate'' AS Location, 
	''Start Loading Date is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''c'', ''d'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''c'', ''d'', ''o'', ''p'', ''u'', ''v'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''o'', ''p'', ''u'', ''v'')
			)
			AND StartLoadingDate = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/StartLoadingDate'' AS Location, 
	''Start Loading Date is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''c'', ''d'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''c'', ''d'', ''o'', ''p'', ''u'', ''v'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''o'', ''p'', ''u'', ''v'')
				)
				AND StartLoadingDate <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/StartLoadingDate'' AS Location, 		
''Start Loading Date cannot be in the past'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''c'', ''d'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''c'', ''d'', ''o'', ''p'', ''u'', ''v'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''o'', ''p'', ''u'', ''v'')
			)
		AND StartLoadingDate <> ''''
		AND StartLoadingDate < @EffectiveValidationDate
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/StartLoadingDate'' AS Location, 
	''Start Loading Date should be earlier than End Loading Date'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''c'', ''d'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''c'', ''d'', ''o'', ''p'', ''u'', ''v'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''o'', ''p'', ''u'', ''v'')
			)
		AND StartLoadingDate <> ''''
		AND EndLoadingDate <> ''''
		AND StartLoadingDate >= EndLoadingDate
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/EndLoadingDate'' AS Location, 
	''End Loading Date is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''c'', ''d'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''c'', ''d'', ''o'', ''p'', ''u'', ''v'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''o'', ''p'', ''u'', ''v'')
			)
			AND EndLoadingDate = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/EndLoadingDate'' AS Location, 
	''End Loading Date is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''c'', ''d'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''c'', ''d'', ''o'', ''p'', ''u'', ''v'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''o'', ''p'', ''u'', ''v'')
				)
				AND EndLoadingDate <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/EndLoadingDate'' AS Location,
	''End Loading Date cannot be more than 7 days in the future'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''c'', ''d'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''c'', ''d'', ''o'', ''p'', ''u'', ''v'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''o'', ''p'', ''u'', ''v'')
			)
			AND EndLoadingDate <> ''''
			AND EndLoadingDate > dateadd(day, 7, @EffectiveValidationDate)								
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterIDType'' AS Location, 
	''Exporter ID Type is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterIDType'' AS Location, 
	''Exporter ID Type is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				)
			AND ExporterIDType <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterIDType'' AS Location, 
	''Only "0", "2" and "4" values are allowed to be specified for Exporter ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType <> ''''
			AND ExporterIDType NOT IN (''0'',''2'',''4'')
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterIDType'' AS Location, 
	''"2" or "4" should be specified as the value for Exporter ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			and DD.SpecialCircumstances = ''E''
			AND DD.ExporterIDType <> ''''
			AND DD.ExporterIDType NOT IN (''2'',''4'')
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterIDType'' AS Location, 
	''"0" or "2" should be specified as the value for Exporter ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1__2''
		AND (
			DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''s'', ''t'', ''u'', ''v'')
			OR DD.DeclarationType2 IN (''nB'', ''nK'',''nN'') 
			AND	DD.DeclarationType3 = ''d''
			)
		AND DD.ExporterIDType <> ''''
		AND DD.ExporterIDType NOT IN (''0'',''2'')
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterIDType'' AS Location, 
	''"2" should be specified as the value for Exporter ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''1___''
		AND (
				PartiesStatus LIKE ''1__2''
				AND 
				(
				DeclarationType2 = ''zP'' 
				AND	DD.DeclarationType3 IN (''a'', ''b'', ''c'', ''d'', ''e'', ''f'', ''m'', ''n'', ''o'', ''p'', ''q'', ''r'')
				OR DD.DeclarationType2 IN (''nB'', ''nK'',''nN'')  
				AND	DD.DeclarationType3 IN (''b'', ''c'')
				)
			OR EXISTS
				(
				SELECT GI2.PartnerID
				FROM txdDEAESGoodsItem GI2	
				WHERE   GI2.PartnerID = @PartnerID 
				AND GI2.DeclarationDataGUID = @DeclarationDataGUID
				AND GI2.CommodityCode IN 
					(
					SELECT Code 
					FROM tmgGlobalCodes 
					WHERE FieldName=''DE-AES-I0139''
					)
				)
			OR EXISTS
				(
				SELECT GID3.PartnerID
				FROM txdDEAESDeclarationData DD4
				JOIN txdDEAESGoodsItemDocument GID3
				ON DD4.PartnerID=GID3.PartnerID  AND DD4.DeclarationDataGUID=GID3.DeclarationDataGUID		
				WHERE   DD4.PartnerID = DD.PartnerID 
				AND DD4.DeclarationDataGUID = DD.DeclarationDataGUID
				AND 
					(
					GID3.Type = ''3LLD''
					AND GID3.Qualifier = ''NB''
					AND GID3.IssueDate <> ''''
					)
				)
			OR EXISTS
				(
				SELECT GID2.PartnerID
				FROM txdDEAESDeclarationData DD3
				JOIN txdDEAESGoodsItemDocument GID2
				ON DD3.PartnerID=GID2.PartnerID  AND DD3.DeclarationDataGUID=GID2.DeclarationDataGUID		
				WHERE   DD3.PartnerID = DD.PartnerID 
				AND DD3.DeclarationDataGUID = DD.DeclarationDataGUID
				AND 
					(
					GID2.Type = ''3LLA''
					AND	GID2.Qualifier IN (''82'', ''231'')
					OR GID2.Type = ''3LLB''
					AND	GID2.Qualifier IN (''81E'', ''81K'', ''81S'', ''231'')
					OR GID2.Type = ''3LLC''
					AND	GID2.Qualifier IN (''81E'', ''81S'', ''231'')
					OR GID2.Type = ''C064''
					AND GID2.Qualifier = ''DE''
					OR GID2.Type = ''E990''
					AND GID2.Qualifier IN (''DEE'', ''DES'')
					OR GID2.Type = ''C052''
					AND	GID2.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
					OR GID2.Type = ''C070''
					AND GID2.Qualifier = ''LY''
					OR GID2.Type = ''X002''
					AND	GID2.Qualifier IN (''DEE'', ''DES'', ''231'')
					OR GID2.Type = ''E020''
					AND	GID2.Qualifier IN (''FWE'', ''FWS'', ''231'')
					OR GID2.Type = ''X002''
					AND	GID2.Qualifier IN (''E01'', ''E02'', ''E03'', ''E04'', ''E05'', ''E06'', ''A09'', ''A10'', ''A12'', ''A13'', ''A14'', ''A16'', ''A17'')
					OR GID2.Type = ''3LLC''
					AND	GID2.Qualifier IN (''A18'', ''A19'', ''A20'', ''A21'', ''A22'', ''A23'', ''A24'', ''A25'', ''A26'', ''A27'')
					)
				)
			)
		AND DD.ExporterIDType <> ''''
		AND DD.ExporterIDType <> ''2''
		)
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterID'' AS Location, 
	''Exporter ID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				AND ExporterIDType IN (''2'', ''4'')
				)
			AND ExporterIDType <> ''''
			AND ExporterID <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterID'' AS Location, 
	''Exporter ID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType IN (''2'', ''4'')
			AND ExporterID = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterID'' AS Location, 
	''Exporter ID and Declarant ID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''1___''
		AND ExporterID <> ''''
		AND ExporterID = DeclarantID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterBranch'' AS Location, 
	''Exporter Branch is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				AND ExporterIDType = ''2''
				)
			AND ExporterIDType <> ''''
			AND ExporterBranch <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterName'' AS Location, 
	''Exporter Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				AND ExporterIDType = ''0''
				)
			AND ExporterIDType <> ''''
			AND ExporterName <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterName'' AS Location, 
	''Exporter Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType = ''0''
			AND ExporterName = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterAddress'' AS Location, 
	''Exporter Address is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				AND ExporterIDType = ''0''
				)
			AND ExporterIDType <> ''''
			AND ExporterAddress <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterAddress'' AS Location, 
	''Exporter Address is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType = ''0''
			AND ExporterAddress = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterCity'' AS Location, 
	''Exporter City is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				AND ExporterIDType = ''0''
				)
			AND ExporterIDType <> ''''
			AND ExporterCity <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterCity'' AS Location, 
	''Exporter City is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType = ''0''
			AND ExporterCity = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterPostCode'' AS Location, 
	''Exporter Post Code is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				AND ExporterIDType = ''0''
				)
			AND ExporterIDType <> ''''
			AND ExporterPostCode <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterPostCode'' AS Location, 
	''Exporter Post Code is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType = ''0''
			AND ExporterPostCode = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterPostCode'' AS Location, 
	''Format for Exporter Post Code should be 5 digits'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType = ''0''
			AND ExporterCountry = ''DE''
			AND ExporterPostCode <> ''''
			AND (
				LEN (ExporterPostCode) <> 5
				OR ISNUMERIC (ExporterPostCode) = 0
				)
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterCountry'' AS Location, 
	''Exporter Country is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				AND ExporterIDType = ''0''
				)
			AND ExporterIDType <> ''''
			AND ExporterCountry <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterCountry'' AS Location, 
	''Exporter Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType = ''0''
			AND ExporterCountry = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterCountry'' AS Location, 
	''Not valid value for Exporter Country'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1__2''
			AND ExporterIDType = ''0''
			AND ExporterCountry <> ''''
			AND ExporterCountry NOT IN
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-C0019''
				)
        )
			
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactPosition'' AS Location, 
	''Exporter Contact Position is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				)
			AND ExporterIDType <> ''''
			AND ExporterContactPosition <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactName'' AS Location, 
	''Exporter Contact Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				)
			AND ExporterIDType <> ''''
			AND ExporterContactName <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactTel'' AS Location, 
	''Exporter Contact Tel is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				)
			AND ExporterIDType <> ''''
			AND ExporterContactTel <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactFax'' AS Location, 
	''Exporter Contact Fax is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				)
			AND ExporterIDType <> ''''
			AND ExporterContactFax <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactEmail'' AS Location, 
	''Exporter Contact Email is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				)
			AND ExporterIDType <> ''''
			AND ExporterContactEmail <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactName'' AS Location, 
	''Exporter Contact Name should be specified'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''1___''
		AND ExporterIDType <> ''''
		AND
			(
			ExporterContactPosition <> ''''
			OR ExporterContactTel <> ''''
			OR ExporterContactFax <> ''''
			OR ExporterContactEmail <> ''''
			)
		AND ExporterContactName = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactTel'' AS Location, 
	''Exporter Contact Tel should be specified'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''1___''
		AND ExporterIDType <> ''''
		AND
			(
			ExporterContactPosition <> ''''
			OR ExporterContactName <> ''''
			OR ExporterContactFax <> ''''
			OR ExporterContactEmail <> ''''
			)
		AND ExporterContactTel = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactTel'' AS Location, 
	''Exporter ID Type should be specified when any other information for Exporter is given'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			ExporterID <> ''''
			OR ExporterBranch <>''''
			OR ExporterName <> ''''
			OR ExporterAddress <> ''''
			OR ExporterCity <> ''''
			OR ExporterPostCode <> ''''
			OR ExporterCountry <> ''''
			OR ExporterContactPosition <> ''''
			OR ExporterContactName <> ''''
			OR ExporterContactTel <>''''
			OR ExporterContactFax <> ''''
			OR ExporterContactEmail <> ''''
			)
		AND ExporterIDType = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantIDType'' AS Location, 
	''Declarant ID Type is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			DeclarationType2 <> ''AE''
			OR DeclarationType2 = ''AE''
			AND	PartiesStatus LIKE ''_0__''
        )
		AND DeclarantIDType = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantIDType'' AS Location, 
	''Declarant ID Type is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		AND DeclarantIDType <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantIDType'' AS Location, 
	''Declarant ID Type should be specified when any other information for Declarant is given'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND DeclarantID + DeclarantBranch + DeclarantName + DeclarantAddress + DeclarantCity + DeclarantPostCode + DeclarantCountry + DeclarantContactPosition + DeclarantContactName + DeclarantContactTel + DeclarantContactFax + DeclarantContactEmail <> ''''
		AND DeclarantIDType = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantIDType'' AS Location, 
	''Only "0" and "2" values are allowed to be specified for Declarant ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
			( 
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
		AND DeclarantIDType <> ''''
		AND DeclarantIDType NOT IN (''0'',''2'')
       
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantIDType'' AS Location, 
	''"2" should be specified as the value for Declarant ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
			( 
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
    AND ( 
			DD.SpecialCircumstances = ''E''
		OR (
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''e'', ''f'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			OR DeclarationType2 = ''mS'' 
			AND	DeclarationType3 = ''a''
			)
			AND PartiesStatus LIKE ''_00_'' 
		OR 	
			DeclarationType2 = ''AE''
			AND	PartiesStatus NOT LIKE ''_1__''
		OR	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''k'', ''l'')
		OR (
			DeclarationType2 = ''zP''
			AND DeclarationType3 IN (''a'', ''b'', ''c'', ''d'', ''e'', ''f'', ''m'', ''n'', ''o'', ''p'', ''q'', ''r'')
			OR DeclarationType2 IN (''nB'', ''nK'', ''nN'')
			AND DeclarationType3 IN (''b'', ''c'')
			)
			AND	PartiesStatus LIKE ''___1''
		OR	
			DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')	
		OR 
			DD.PartiesStatus LIKE ''0___''
			AND EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESGoodsItem GI2	
			WHERE   GI2.PartnerID = @PartnerID 
			AND GI2.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.CommodityCode IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=''DE-AES-I0139''
				)
			)
		OR 
			DD.PartiesStatus LIKE ''0___''
			AND EXISTS
			(
			SELECT GID2.PartnerID
			FROM txdDEAESGoodsItemDocument GID2	
			WHERE   GID2.PartnerID = @PartnerID 
			AND GID2.DeclarationDataGUID = @DeclarationDataGUID
			AND 
				(
				GID2.Type = ''3LLA''
				AND	GID2.Qualifier IN (''82'', ''231'')
				OR GID2.Type = ''3LLB''
				AND	GID2.Qualifier IN (''81E'', ''81K'', ''81S'', ''231'')
				OR GID2.Type = ''3LLC''
				AND	GID2.Qualifier IN (''81E'', ''81S'', ''231'')
				OR GID2.Type = ''C064''
				AND	GID2.Qualifier = ''DE''
				OR GID2.Type = ''E990''
				AND GID2.Qualifier IN (''DEE'', ''DES'')
				OR GID2.Type = ''C052''
				AND	GID2.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
				OR GID2.Type = ''C070''
				AND GID2.Qualifier = ''LY''
				OR GID2.Type = ''X002''
				AND	GID2.Qualifier IN (''DEE'', ''DES'', ''231'')
				OR GID2.Type = ''E020''
				AND	GID2.Qualifier IN (''FWE'', ''FWS'', ''231'')
				OR GID2.Type = ''C068''
				AND GID2.Qualifier IN (''E01'', ''E02'', ''E03'', ''E04'', ''E05'', ''E06'')
				OR GID2.Type = ''X002''
				AND	GID2.Qualifier IN (''E01'', ''E02'', ''E03'', ''E04'', ''E05'', ''E06'', ''A09'', ''A10'', ''A12'', ''A13'', ''A14'', ''A16'', ''A17'')
				OR GID2.Type = ''3LLC''
				AND	GID2.Qualifier IN (''A18'', ''A19'', ''A20'', ''A21'', ''A22'', ''A23'', ''A24'', ''A25'', ''A26'', ''A27'')
				)
			)
        )
		AND DD.DeclarantIDType <> ''''
		AND DD.DeclarantIDType <> ''2''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantID'' AS Location, 
	''Declarant ID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		OR DeclarantIDType <> ''2''
        )
		AND DeclarantIDType <> ''''
		AND DeclarantID <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantID'' AS Location, 
	''Declarant ID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		NOT(
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
		AND DeclarantIDType = ''2''
		AND DeclarantID = ''''
        )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantID'' AS Location, 
''The values of DeclarantID in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND	DD.PartiesStatus NOT LIKE ''_1__''
		AND DD.DeclarantIDType <> ''''
		AND DD.DeclarantID <> DD1.DeclarantID								

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantBranch'' AS Location, 
	''Declarant Branch is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		OR DeclarantIDType <> ''2''
		)
		AND DeclarantIDType <> ''''
		AND DeclarantBranch <> ''''

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantBranch'' AS Location, 
''Declarant Branch is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND	DD.PartiesStatus NOT LIKE ''_1__''
		AND DD.DeclarantIDType <> ''''
		AND DD1.DeclarantBranch <> ''''
		AND DD1.DeclarantBranch <> ''0000''
		AND DD.DeclarantBranch = ''''
			
INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantBranch'' AS Location, 
''The values of DeclarantBranch in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND	DD.PartiesStatus NOT LIKE ''_1__''
		AND DD.DeclarantIDType <> ''''
		AND DD.DeclarantBranch <> DD1.DeclarantBranch								

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantName'' AS Location, 
	''Declarant Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		OR DeclarantIDType <> ''0''
		)
		AND DeclarantIDType <> ''''
		AND DeclarantName <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantName'' AS Location, 
	''Declarant Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
			(
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
		AND DeclarantIDType = ''0''
		AND DeclarantName = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantAddress'' AS Location, 
	''Declarant Address is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		OR DeclarantIDType <> ''0''
		)
		AND DeclarantIDType <> ''''
		AND DeclarantAddress <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantAddress'' AS Location, 
	''Declarant Address is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
			(
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
		AND DeclarantIDType = ''0''
		AND DeclarantAddress = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantCity'' AS Location, 
	''Declarant City is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		OR DeclarantIDType <> ''0''
		)
		AND DeclarantIDType <> ''''
		AND DeclarantCity <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantCity'' AS Location, 
	''Declarant City is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
			(
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
		AND DeclarantIDType = ''0''
		AND DeclarantCity = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantPostCode'' AS Location, 
	''Declarant Post Code is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		OR DeclarantIDType <> ''0''
		)
		AND DeclarantIDType <> ''''
		AND DeclarantPostCode <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantPostCode'' AS Location, 
	''Declarant Post Code is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
			(
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
		AND DeclarantIDType = ''0''
		AND DeclarantPostCode = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantPostCode'' AS Location, 
	''Format for Declarant Post Code should be 5 digits'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	NOT
				(
				DeclarationType2 = ''AE'' 
				AND	PartiesStatus LIKE ''_1__''
				)
			AND DeclarantIDType = ''0''
			AND DeclarantCountry = ''DE''
			AND DeclarantPostCode <> ''''
			AND (
				LEN (DeclarantPostCode) <> 5
				OR ISNUMERIC (DeclarantPostCode) = 0
				)
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantCountry'' AS Location, 
	''Declarant Country is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		OR DeclarantIDType <> ''0''
		)
		AND DeclarantIDType <> ''''
		AND DeclarantCountry <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantCountry'' AS Location, 
	''Declarant Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
			(
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
		AND DeclarantIDType = ''0''
		AND DeclarantCountry = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactPosition'' AS Location, 
	''Declarant Contact Position is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND DeclarantIDType <> ''''
		AND DeclarantContactPosition <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactName'' AS Location, 
	''Declarant Contact Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND DeclarantIDType <> ''''
		AND DeclarantContactName <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactName'' AS Location, 
	''Declarant Contact Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''_0__''
		AND DeclarantIDType <> ''''
		AND DeclarantContactName = ''''
		)
		
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactTel'' AS Location, 
	''Declarant Contact Tel is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND DeclarantIDType <> ''''
		AND DeclarantContactTel <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactTel'' AS Location, 
	''Declarant Contact Tel is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''_0__''
		AND DeclarantIDType <> ''''
		AND DeclarantContactTel = ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactFax'' AS Location, 
	''Declarant Contact Fax is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		AND DeclarantIDType <> ''''		
		AND DeclarantContactFax <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactEmail'' AS Location, 
	''Declarant Contact Email is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND DeclarantIDType <> ''''
		AND DeclarantContactEmail <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactName'' AS Location, 
	''Declarant Contact Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
		( 	
		DeclarationType2 <> ''AE'' 
		AND DeclarantIDType <> ''''
		AND	DeclarantContactPosition + DeclarantContactTel + DeclarantContactFax + DeclarantContactEmail <> ''''
		AND DeclarantContactName = ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactTel'' AS Location, 
	''Declarant Contact Tel is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
		( 	
		DeclarationType2 <> ''AE'' 
		AND DeclarantIDType <> ''''
		AND	DeclarantContactPosition + DeclarantContactName + DeclarantContactFax + DeclarantContactEmail <> ''''
		AND DeclarantContactTel = ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentIDType'' AS Location, 
	''Agent ID Type is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			PartiesStatus LIKE ''_1__''
			AND AgentIDType = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentIDType'' AS Location, 
	''Agent ID Type is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			PartiesStatus NOT LIKE ''_1__''
			AND AgentIDType <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentIDType'' AS Location, 
	''Only "0" and "2" values are allowed to be specified for Agent ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
		(
		PartiesStatus LIKE ''_1__''
		AND AgentIDType <> ''''
		AND AgentIDType NOT IN (''0'',''2'')
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentIDType'' AS Location, 
	''"2" should be specified as the value for Agent ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND PartiesStatus LIKE ''_1__''
		AND 
		(
		DD.SpecialCircumstances = ''E''
		OR (
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''e'', ''f'', ''k'', ''l'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			OR DeclarationType2 = ''AE'' 
			)
        )
		AND AgentIDType <> ''''
		AND AgentIDType <> ''2''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentID'' AS Location, 
	''Agent ID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''_1__''
		OR AgentIDType <> ''2''
		)
		AND AgentIDType <> ''''
		AND AgentID <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentID'' AS Location, 
	''Agent ID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			PartiesStatus LIKE ''_1__''
			AND AgentIDType = ''2''
			AND AgentID = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentID'' AS Location, 
	''Agent ID and Declarant ID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			PartiesStatus LIKE ''_1__''
			AND AgentIDType = ''2''
			AND AgentID = DeclarantID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentID'' AS Location, 
	''Agent ID and SubContractor ID must be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			(
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''e'', ''f'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			)
			
			and PartiesStatus LIKE ''_11_''
			AND AgentIDType = ''2''
			AND SubContractorIDType = ''2''
			AND AgentID <> ''''
			AND AgentID <> SubContractorID
        )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentID'' AS Location, 
''The values of AgentID in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND DD.PartiesStatus LIKE ''_1__''
		AND DD.AgentIDType <> ''''
		AND DD.AgentID <> DD1.AgentID								

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentBranch'' AS Location, 
	''Agent Branch is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''_1__''
		OR AgentIDType <> ''2''
		)
		AND AgentIDType <> ''''
		AND AgentBranch <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentBranch'' AS Location, 
	''Agent Branch is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			AgentIDType = ''2''
			AND
				(
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
				)
			AND PartiesStatus LIKE ''_11_''
			AND SubContractorBranch = ''0000''
			AND AgentBranch = ''''
        )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentBranch'' AS Location, 
''Agent Branch is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND	DD.PartiesStatus LIKE ''_1__''
		AND DD.AgentIDType = ''2''
		AND DD1.AgentBranch <> ''''
		AND DD1.AgentBranch <> ''0000''
		AND DD.AgentBranch = ''''
			
INSERT INTO #ValidationWarning


SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentBranch'' AS Location, 
	''Agent Branch and SubContractor Branch must be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DeclarationType2 = ''AM'' 
		AND	DeclarationType3 IN (''e'', ''f'')
		OR DeclarationType2 = ''wP'' 
		AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
		)
		AND PartiesStatus LIKE ''_11_''
		AND AgentIDType = ''2''
		AND SubcontractorIDType = ''2''
		AND AgentBranch <> SubContractorBranch

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentName'' AS Location, 
	''Agent Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		PartiesStatus NOT LIKE ''_1__''
		OR AgentIDType <> ''0''
        )
		AND AgentIDType <> ''''
		AND AgentName <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentName'' AS Location, 
	''Agent Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		PartiesStatus LIKE ''_1__''
		AND AgentIDType = ''0''
		AND AgentName = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentAddress'' AS Location, 
	''Agent Address is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		PartiesStatus NOT LIKE ''_1__''
		OR AgentIDType <> ''0''
        )
		AND AgentIDType <> ''''
		AND AgentAddress <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentAddress'' AS Location, 
	''Agent Address is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		PartiesStatus LIKE ''_1__''
		AND AgentIDType = ''0''
		AND AgentAddress = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentCity'' AS Location, 
	''Agent City is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		PartiesStatus NOT LIKE ''_1__''
		OR AgentIDType <> ''0''
        )
		AND AgentIDType <> ''''
		AND AgentCity <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentCity'' AS Location, 
	''Agent City is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		PartiesStatus LIKE ''_1__''
		AND AgentIDType = ''0''
		AND AgentCity = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentPostCode'' AS Location, 
	''Agent Post Code is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		PartiesStatus NOT LIKE ''_1__''
		OR AgentIDType <> ''0''
        )
		AND AgentIDType <> ''''
		AND AgentPostCode <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentPostCode'' AS Location, 
	''Agent Post Code is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		PartiesStatus LIKE ''_1__''
		AND AgentIDType = ''0''
		AND AgentPostCode = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentPostCode'' AS Location, 
	''Format for Agent Post Code should be 5 digits'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			PartiesStatus LIKE ''_1__''
			AND AgentIDType = ''0''
			AND AgentCountry = ''DE''
			AND (
				LEN (AgentPostCode) <> 5
				OR ISNUMERIC (AgentPostCode) = 0
				)
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentCountry'' AS Location, 
	''Agent Country is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		PartiesStatus NOT LIKE ''_1__''
		OR AgentIDType <> ''0''
        )
		AND AgentIDType <> ''''
		AND AgentCountry <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentCountry'' AS Location, 
	''Agent Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		PartiesStatus LIKE ''_1__''
		AND AgentIDType = ''0''
		AND AgentCountry = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactPosition'' AS Location, 
	''Agent Contact Position is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''_1__''
		OR DeclarationType2 = ''AE'' 
		)
		AND AgentIDType <> ''''
		AND AgentContactPosition <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactName'' AS Location, 
	''Agent Contact Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''_1__''
		OR DeclarationType2 = ''AE'' 
		)
		AND AgentIDType <> ''''
		AND AgentContactName <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactName'' AS Location, 
	''Agent Contact Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		PartiesStatus LIKE ''_1__''
		AND DeclarationType2 <> ''AE'' 
		)
		AND AgentIDType <> ''''
		AND AgentContactName = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactTel'' AS Location, 
	''Agent Contact Tel is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''_1__''
		OR DeclarationType2 = ''AE'' 
		)
		AND AgentIDType <> ''''
		AND AgentContactTel <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactTel'' AS Location, 
	''Agent Contact Tel is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		PartiesStatus LIKE ''_1__''
		AND DeclarationType2 <> ''AE'' 
		)
		AND AgentIDType <> ''''
		AND AgentContactTel = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactFax'' AS Location, 
	''Agent Contact Fax is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''_1__''
		OR DeclarationType2 = ''AE'' 
		)
		AND AgentIDType <> ''''
		AND AgentContactFax <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactEmail'' AS Location, 
	''Agent Contact Email is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''_1__''
		OR DeclarationType2 = ''AE'' 
		)
		AND AgentIDType <> ''''
		AND AgentContactEmail <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactName'' AS Location, 
	''Agent ID Type is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
		( 	
		DeclarationType2 <> ''AE'' 
		AND PartiesStatus LIKE ''_1__''
		AND AgentIDType <> ''''
		AND	AgentContactPosition + AgentContactTel + AgentContactFax + AgentContactEmail <> ''''
		AND AgentContactName = ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactTel'' AS Location, 
	''Agent ID Type is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
		( 	
		DeclarationType2 <> ''AE'' 
		AND PartiesStatus LIKE ''_1__''
		AND AgentIDType <> ''''
		AND	AgentContactPosition + AgentContactName + AgentContactFax + AgentContactEmail <> ''''
		AND AgentContactTel = ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentIDType'' AS Location, 
	''Declarant ID Type should be specified when any other information for Agent is given'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND	
		(
		AgentID + AgentBranch + AgentName + AgentAddress + AgentCity + AgentPostCode + AgentCountry + AgentContactPosition + AgentContactName + AgentContactTel + AgentContactFax + AgentContactEmail <> ''''
		AND AgentIDType = ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorIDType'' AS Location, 
	''SubContractor ID Type is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			DeclarationType2 <> ''AE''
			AND PartiesStatus LIKE ''__1_''
			AND SubContractorIDType = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorIDType'' AS Location, 
	''SubContractor ID Type is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		)
		AND SubContractorIDType <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorIDType'' AS Location, 
	''Only "0" and "2" values are allowed to be specified for SubContractor ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
		(
		DeclarationType2 <> ''AE''
		AND PartiesStatus LIKE ''__1_''
		AND SubContractorIDType <> ''''
		AND SubContractorIDType NOT IN (''0'',''2'')
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorIDType'' AS Location, 
	''"2" should be specified as the value for SubContractor ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		PartiesStatus LIKE ''__1_''
		AND (
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''e'', ''f'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			)
		)
		AND SubContractorIDType <> ''''
		AND SubContractorIDType <> ''2''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorID'' AS Location, 
	''SubContractor ID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		OR SubContractorIDType <> ''2''
		)
		AND SubContractorIDType <> ''''
		AND SubContractorID <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorID'' AS Location, 
	''SubContractor ID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE''
			AND PartiesStatus LIKE ''__1_''
			AND SubContractorIDType = ''2''
			AND SubContractorID = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorID'' AS Location, 
	''SubContractor ID and Exporter ID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE''
			AND PartiesStatus LIKE ''1_1_''
			AND SubContractorIDType = ''2''
			AND SubContractorID = ExporterID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorID'' AS Location, 
	''SubContractor ID and Declarant ID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE''
			AND PartiesStatus LIKE ''0_1_''
			AND SubContractorIDType = ''2''
			AND SubContractorID = DeclarantID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorID'' AS Location, 
	''SubContractor ID and Agent ID should be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE''
			AND PartiesStatus LIKE ''_11_''
			AND SubContractorIDType = ''2''
			AND 
			(
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''e'', ''f'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			)
			AND SubContractorID <> AgentID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorBranch'' AS Location, 
	''SubContractor Branch is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		OR SubContractorIDType <> ''2''
		)
		AND SubContractorIDType <> ''''
		AND SubContractorBranch <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorBranch'' AS Location, 
	''SubContractor Branch is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			SubContractorIDType = ''2''
			AND
				(
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
				)
			AND PartiesStatus LIKE ''_11_''
			AND AgentBranch <> ''0000''
			AND SubContractorBranch = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorName'' AS Location, 
	''SubContractor Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		OR SubContractorIDType <> ''0''
        )
		AND SubContractorIDType <> ''''
		AND SubContractorName <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorName'' AS Location, 
	''SubContractor Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DeclarationType2 <> ''AE''
		AND PartiesStatus LIKE ''__1_''
		AND SubContractorIDType = ''0''
		AND SubContractorName = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorAddress'' AS Location, 
	''SubContractor Address is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		OR SubContractorIDType <> ''0''
        )
		AND SubContractorIDType <> ''''
		AND SubContractorAddress <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorAddress'' AS Location, 
	''SubContractor Address is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DeclarationType2 <> ''AE''
		AND PartiesStatus LIKE ''__1_''
		AND SubContractorIDType = ''0''
		AND SubContractorAddress = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorCity'' AS Location, 
	''SubContractor City is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		OR SubContractorIDType <> ''0''
        )
		AND SubContractorIDType <> ''''
		AND SubContractorCity <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorCity'' AS Location, 
	''SubContractor City is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DeclarationType2 <> ''AE''
		AND PartiesStatus LIKE ''__1_''
		AND SubContractorIDType = ''0''
		AND SubContractorCity = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorPostCode'' AS Location, 
	''SubContractor Post Code is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		OR SubContractorIDType <> ''0''
        )
		AND SubContractorIDType <> ''''
		AND SubContractorPostCode <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorPostCode'' AS Location, 
	''SubContractor Post Code is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DeclarationType2 <> ''AE''
		AND PartiesStatus LIKE ''__1_''
		AND SubContractorIDType = ''0''
		AND SubContractorPostCode = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorPostCode'' AS Location, 
	''Format for Agent Post Code should be 5 digits'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE''
			AND PartiesStatus LIKE ''__1_''
			AND SubContractorIDType = ''0''
			AND SubContractorCountry = ''DE''
			AND (
				LEN (SubContractorPostCode) <> 5
				OR ISNUMERIC (SubContractorPostCode) = 0
				)
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorCountry'' AS Location, 
	''SubContractor Country is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		OR SubContractorIDType <> ''0''
        )
		AND SubContractorIDType <> ''''
		AND SubContractorCountry <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorCountry'' AS Location, 
	''SubContractor Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DeclarationType2 <> ''AE''
		AND PartiesStatus LIKE ''__1_''
		AND SubContractorIDType = ''0''
		AND SubContractorCountry = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorContactPosition'' AS Location, 
	''SubContractor Contact Position is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		)
		AND SubContractorIDType <> ''''
		AND SubContractorContactPosition <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorContactName'' AS Location, 
	''SubContractor Contact Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		)
		AND SubContractorIDType <> ''''
		AND SubContractorContactName <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorContactTel'' AS Location, 
	''SubContractor Contact Tel is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		)
		AND SubContractorIDType <> ''''
		AND SubContractorContactTel <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorContactFax'' AS Location, 
	''SubContractor Contact Fax is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		)
		AND SubContractorIDType <> ''''
		AND SubContractorContactFax <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorContactEmail'' AS Location, 
	''SubContractor Contact Email is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		)
		AND SubContractorIDType <> ''''
		AND SubContractorContactEmail <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorContactName'' AS Location, 
	''SubContractor Contact Name should be specified'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''__1_''
		AND
			(
			SubContractorContactPosition <> ''''
			OR SubContractorContactTel <> ''''
			OR SubContractorContactFax <> ''''
			OR SubContractorContactEmail <> ''''
			)
		AND SubContractorIDType <> ''''
		AND SubContractorContactName = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorContactTel'' AS Location, 
	''SubContractor Contact Tel should be specified'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''__1_''
		AND
			(
			SubContractorContactPosition <> ''''
			OR SubContractorContactName <> ''''
			OR SubContractorContactFax <> ''''
			OR SubContractorContactEmail <> ''''
			)
		AND SubContractorIDType <> ''''
		AND SubContractorContactTel = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorIDType'' AS Location, 
	''SubContractor ID Type should be specified when any other information for SubContractor is given'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND	
		(
		SubContractorID + SubContractorBranch + SubContractorName + SubContractorAddress + SubContractorCity + SubContractorPostCode + SubContractorCountry + SubContractorContactPosition + SubContractorContactName + SubContractorContactTel + SubContractorContactFax + SubContractorContactEmail <> ''''
		AND SubContractorIDType = ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeIDType'' AS Location, 
	''Consignee information should be specified either on Header level or on Goods Items level'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationType2 <> ''AE'' 
	AND DD.ConsigneeIDType = ''''
	AND EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID=GI2.PartnerID  AND DD2.DeclarationDataGUID=GI2.DeclarationDataGUID		
			WHERE   DD2.PartnerID = DD.PartnerID 
			AND DD2.DeclarationDataGUID = DD.DeclarationDataGUID
			AND GI2.ConsigneeIDType = ''''
			)
	AND 
		(
			DD.DestinationCountry IN 
			(
			SELECT Code 
			FROM tmgGlobalCodes 
			WHERE FieldName=''DE-AES-I0810''
			)
		OR 
			(
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'') 
			OR DD.DeclarationType2 = ''nA'' 
			OR DD.DeclarationType2 = ''nB''
			OR DD.DeclarationType2 = ''nK''
			OR DD.DeclarationType2 = ''nN''
			OR DD.DeclarationType2 = ''mS''
			)
		OR
			(
			DD.PartiesStatus LIKE ''_0__'' OR DD.PartiesStatus LIKE ''__0_''
			)
		OR EXISTS 
			(
			SELECT GID2.PartnerID
			FROM txdDEAESGoodsItemDocument GID2
			WHERE GID2.PartnerID=DD.PartnerID AND GID2.DeclarationDataGUID=DD.DeclarationDataGUID
			AND 
				(
					GID2.Type = ''3LLA''
					AND	GID2.Qualifier IN (''82'', ''231'')
					OR GID2.Type = ''3LLB''
					AND	GID2.Qualifier IN (''81E'', ''81K'', ''81S'', ''231'')
					OR GID2.Type = ''3LLC''
					AND	GID2.Qualifier IN (''81E'', ''81S'', ''231'')
					OR GID2.Type = ''C064''
					AND	GID2.Qualifier = ''DE''
					OR GID2.Type = ''E990''
					AND GID2.Qualifier IN (''DEE'', ''DES'')
					OR GID2.Type = ''C052''
					AND	GID2.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
					OR GID2.Type = ''C070''
					AND	GID2.Qualifier = ''LY''
					OR GID2.Type = ''X002''
					AND	GID2.Qualifier IN (''DEE'', ''DES'', ''231'')
					OR GID2.Type = ''E020''
					AND	GID2.Qualifier IN (''FWE'', ''FWS'', ''231'')
					OR GID2.Type = ''C068''
					AND	GID2.Qualifier IN (''E01'', ''E02'', ''E03'', ''E04'', ''E05'', ''E06'')
					OR GID2.Type = ''X002''
					AND	GID2.Qualifier IN (''E01'', ''E02'', ''E03'', ''E04'', ''E05'', ''E06'', ''A09'', ''A10'', ''A12'', ''A13'', ''A14'', ''A16'', ''A17'')
					OR GID2.Type = ''3LLC''
					AND	GID2.Qualifier IN (''A18'', ''A19'', ''A20'', ''A21'', ''A22'', ''A23'', ''A24'', ''A25'', ''A26'', ''A27'')
				)
			)
		)
			
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeIDType'' AS Location, 
	''Consignee ID Type should be specified if any other information of Consignee is given'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DeclarationType2 <> ''AE'' 
	AND DD.ConsigneeID + DD.ConsigneeBranch + DD.ConsigneeName + DD.ConsigneeAddress + DD.ConsigneeCity + DD.ConsigneePostCode + DD.ConsigneeCountry <> ''''	
	AND DD.ConsigneeIDType = ''''
			
INSERT INTO #ValidationWarning

SELECT ''Goods Item [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeIDType'' AS Location, 
	''Consignee ID Type should be specified if any other information of Consignee is given'' AS Warning
FROM    txdDEAESDeclarationData DD  
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID                             
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationType2 <> ''AE'' 
	AND GI.ConsigneeID + GI.ConsigneeBranch + GI.ConsigneeName + GI.ConsigneeAddress + GI.ConsigneeCity + GI.ConsigneePostCode + GI.ConsigneeCountry <> ''''
		
	AND GI.ConsigneeIDType = ''''
			
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/Consignee, Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Consignee'' AS Location, 
	''Consignee information is not allowed to be specified'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
		DD.DeclarationType2 = ''AE'' 
		and
		(
	    GI.ConsigneeIDType <> ''''
			OR 
		DD.ConsigneeIDType <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/Consignee, Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Consignee'' AS Location,  
	''Consignee information should be specified either on Header level or on Goods Items level'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 <> ''AE''
		AND DD.ConsigneeIDType <> ''''
		AND GI.ConsigneeIDType <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeIDType'' AS Location, 
	''Only "0", "2" and "4" values are allowed to be specified for Consignee ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
		(
		DD.DeclarationType2 <> ''AE''
		AND DD.ConsigneeIDType <> ''''
		AND NOT EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESGoodsItem GI2	
			WHERE   GI2.PartnerID = @PartnerID 
			AND GI2.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.ConsigneeIDType <> ''''
			)
		AND DD.ConsigneeIDType NOT IN (''0'',''2'',''4'')
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeIDType'' AS Location, 
	''Only "0", "2" and "4" values are allowed to be specified for Consignee ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD  
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID                             
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
		(
		DD.DeclarationType2 <> ''AE''
		AND DD.ConsigneeIDType = ''''
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneeIDType NOT IN (''0'',''2'',''4'')
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeID'' AS Location, 
	''Consignee ID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType NOT IN (''2'', ''4'')
		)
		AND DD.ConsigneeIDType <> ''''
		AND DD.ConsigneeID <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeID'' AS Location, 
	''Consignee ID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID=GI2.PartnerID  AND DD2.DeclarationDataGUID=GI2.DeclarationDataGUID		
			WHERE   DD2.PartnerID = DD.PartnerID 
			AND DD2.DeclarationDataGUID = DD.DeclarationDataGUID
			AND GI2.ConsigneeIDType <> ''''
			)
		)
		AND DD.ConsigneeIDType IN (''2'', ''4'')
		AND DD.ConsigneeID = ''''
		

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeBranch'' AS Location, 
	''Consignee Branch is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''2''
		)
		AND DD.ConsigneeIDType <> ''''
		AND DD.ConsigneeBranch <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeName'' AS Location, 
	''Consignee Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''0''
		)
		AND DD.ConsigneeIDType <> ''''
		AND DD.ConsigneeName <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeName'' AS Location, 
	''Consignee Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID=GI2.PartnerID  AND DD2.DeclarationDataGUID=GI2.DeclarationDataGUID		
			WHERE   DD2.PartnerID = DD.PartnerID 
			AND DD2.DeclarationDataGUID = DD.DeclarationDataGUID
			AND GI2.ConsigneeIDType <> ''''
			)
		)
		AND DD.ConsigneeIDType = ''0''
		AND DD.ConsigneeName = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeAddress'' AS Location, 
	''Consignee Address is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''0''
		)
		AND DD.ConsigneeIDType <> ''''
		AND DD.ConsigneeAddress <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeAddress'' AS Location, 
	''Consignee Address is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID=GI2.PartnerID  AND DD2.DeclarationDataGUID=GI2.DeclarationDataGUID		
			WHERE   DD2.PartnerID = DD.PartnerID 
			AND DD2.DeclarationDataGUID = DD.DeclarationDataGUID
			AND GI2.ConsigneeIDType <> ''''
			)
		)
		AND DD.ConsigneeIDType = ''0''
		AND DD.ConsigneeAddress = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeCity'' AS Location, 
	''Consignee City is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''0''
		)
		AND DD.ConsigneeIDType <> ''''
		AND DD.ConsigneeCity <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeCity'' AS Location, 
	''Consignee City is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID=GI2.PartnerID  AND DD2.DeclarationDataGUID=GI2.DeclarationDataGUID		
			WHERE   DD2.PartnerID = DD.PartnerID 
			AND DD2.DeclarationDataGUID = DD.DeclarationDataGUID
			AND GI2.ConsigneeIDType <> ''''
			)
		)
		AND DD.ConsigneeIDType = ''0''
		AND DD.ConsigneeCity = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneePostCode'' AS Location, 
	''Consignee Post Code is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''0''
		)
		AND DD.ConsigneeIDType <> ''''
		AND DD.ConsigneePostCode <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneePostCode'' AS Location, 
	''Consignee Post Code is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID=GI2.PartnerID  AND DD2.DeclarationDataGUID=GI2.DeclarationDataGUID		
			WHERE   DD2.PartnerID = DD.PartnerID 
			AND DD2.DeclarationDataGUID = DD.DeclarationDataGUID
			AND GI2.ConsigneeIDType <> ''''
			)
		)
		AND DD.ConsigneeIDType = ''0''
		AND DD.ConsigneePostCode = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneePostCode'' AS Location, 
	''Format for Consignee Post Code should be 5 digits'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
		(	
		DD.DeclarationType2 <> ''AE'' 
		OR DD.ConsigneeIDType = ''0''
		)
		AND DD.ConsigneeCountry = ''DE''
		AND DD.ConsigneePostCode <> ''''
		AND (
			LEN (DD.ConsigneePostCode) <> 5
			OR ISNUMERIC (DD.ConsigneePostCode) = 0
			)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeCountry'' AS Location, 
	''Consignee Country is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''0''
		)
		AND DD.ConsigneeIDType <> ''''
		AND DD.ConsigneeCountry <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeCountry'' AS Location, 
	''Consignee Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID=GI2.PartnerID  AND DD2.DeclarationDataGUID=GI2.DeclarationDataGUID		
			WHERE   DD2.PartnerID = DD.PartnerID 
			AND DD2.DeclarationDataGUID = DD.DeclarationDataGUID
			AND GI2.ConsigneeIDType <> ''''
			)
		)
		AND DD.ConsigneeIDType = ''0''
		AND DD.ConsigneeCountry = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeID'' AS Location, 
	''Consignee ID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		OR GI.ConsigneeIDType NOT IN (''2'', ''4'')
		)
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneeID <> ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeID'' AS Location, 
	''Consignee ID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		)
		AND GI.ConsigneeIDType IN (''2'', ''4'')
		AND GI.ConsigneeID = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeBranch'' AS Location, 
	''Consignee Branch is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		OR GI.ConsigneeIDType <> ''2''
		)
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneeBranch <> ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeName'' AS Location, 
	''Consignee Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		OR GI.ConsigneeIDType <> ''0''
		)
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneeName <> ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeName'' AS Location, 
	''Consignee Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		)
		AND GI.ConsigneeIDType = ''0''
		AND GI.ConsigneeName = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeAddress'' AS Location, 
	''Consignee Address is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		OR GI.ConsigneeIDType <> ''0''
		)
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneeAddress <> ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeAddress'' AS Location, 
	''Consignee Address is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		)
		AND GI.ConsigneeIDType = ''0''
		AND GI.ConsigneeAddress = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeCity'' AS Location, 
	''Consignee City is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		OR GI.ConsigneeIDType <> ''0''
		)
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneeCity <> ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeCity'' AS Location, 
	''Consignee City is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		)
		AND GI.ConsigneeIDType = ''0''
		AND GI.ConsigneeCity = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneePostCode'' AS Location, 
	''Consignee Post Code is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		OR GI.ConsigneeIDType <> ''0''
		)
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneePostCode <> ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneePostCode'' AS Location, 
	''Consignee Post Code is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		)
		AND GI.ConsigneeIDType = ''0''
		AND GI.ConsigneePostCode = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneePostCode'' AS Location, 
	''Format for Consignee Post Code should be 5 digits'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(	
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		)
		AND GI.ConsigneeCountry = ''DE''
		AND GI.ConsigneePostCode <> ''''
		AND (
			LEN (GI.ConsigneePostCode) <> 5
			OR ISNUMERIC (GI.ConsigneePostCode) = 0
			)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeCountry'' AS Location, 
	''Consignee Country is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		OR GI.ConsigneeIDType <> ''0''
		)
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneeCountry <> ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeCountry'' AS Location, 
	''Consignee Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		)
		AND GI.ConsigneeIDType = ''0''
		AND GI.ConsigneeCountry = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items/Consignee'' AS Location,  								
	''The same information for Consignee is not allowed to be used for all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.ConsigneeIDType = ''''
		AND 
			(
			SELECT COUNT (DISTINCT GI1.ConsigneeIDType + GI1.ConsigneeID + GI1.ConsigneeBranch + GI1.ConsigneeName + GI1.ConsigneeAddress + GI1.ConsigneeCity + GI1.ConsigneePostCode + GI1.ConsigneeCountry)
			FROM txdDEAESGoodsItem GI1
			WHERE   GI1.PartnerID = @PartnerID 
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI1.ConsigneeIDType <> ''''
			) = 1
		AND 
			(
			SELECT COUNT (*)
			FROM txdDEAESGoodsItem GI2
			WHERE   GI2.PartnerID = @PartnerID 
			AND GI2.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.ConsigneeIDType + GI2.ConsigneeID + GI2.ConsigneeBranch + GI2.ConsigneeName + GI2.ConsigneeAddress + GI2.ConsigneeCity + GI2.ConsigneePostCode + GI2.ConsigneeCountry = ''''
			) = 0
		)

INSERT INTO #ValidationWarning

SELECT  
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/IncotermCode----Goods Items/IncotermCode'' AS Location, 
''Incoterm information should be specified either on Header level or on Goods Items level'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(SELECT COUNT (*) 																				
				FROM txdDEAESGoodsItem GI1
				JOIN txdDEAESDeclarationData DD1
				ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID
				WHERE   DD1.PartnerID = @PartnerID 
				AND DD1.DeclarationDataGUID = @DeclarationDataGUID
				AND GI1.IncotermCode <> ''''
			) > 0
		AND DD.IncotermCode <> ''''
		)
		
INSERT INTO #ValidationWarning

SELECT  
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/IncotermCode----Goods Items/IncotermCode'' AS Location, 
''Incoterm Code is required either on Header or on Goods Item level for all of the items'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		EXISTS
			(SELECT GI1.PartnerID 																			
				FROM txdDEAESGoodsItem GI1
				WHERE   GI1.PartnerID = @PartnerID 
				AND GI1.DeclarationDataGUID = @DeclarationDataGUID
				AND GI1.IncotermCode = ''''
			)
		AND (	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DeclarationType2 = ''AE'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'')
			OR DeclarationType2 = ''nA'' 
			OR DeclarationType2 = ''nB''
			OR DeclarationType2 = ''nK''
			OR DeclarationType2 = ''nN''
			OR DeclarationType2 = ''mS''
			)
		AND DD.IncotermCode = ''''
		)

INSERT INTO #ValidationWarning

SELECT  
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/IncotermText'' AS Location, 
''Incoterm Text is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD 
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			DD.IncotermCode <> ''''
			AND DD.IncotermCode <> ''XXX''
		)
		AND DD.IncotermText <> ''''
		
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/IncotermText'' AS Location, 
	''Incoterm Text is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		(SELECT COUNT (*) 																				
				FROM txdDEAESGoodsItem GI1
				WHERE   GI1.PartnerID = @PartnerID 
				AND GI1.DeclarationDataGUID = @DeclarationDataGUID
				AND GI1.IncotermCode <> ''''
			) = 0
		AND IncotermCode = ''XXX'' 
		AND IncotermText = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/IncotermLocation'' AS Location, 
	''Incoterm Location is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.IncotermCode = ''XXX''
		AND DD.IncotermLocation <> ''''
		)
        
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/IncotermLocation'' AS Location, 
	''Incoterm Location is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		(SELECT COUNT (*) 																				
				FROM txdDEAESGoodsItem GI1
				WHERE   GI1.PartnerID = @PartnerID 
				AND GI1.DeclarationDataGUID = @DeclarationDataGUID
				AND GI1.IncotermCode <> ''''
			) = 0
		AND DD.IncotermCode <> ''''
		AND DD.IncotermCode <> ''XXX'' 
		AND DD.IncotermLocation = ''''
        )

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IncotermText'' AS Location, 
''Incoterm Text is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			GI.IncotermText <> ''''
			AND GI.IncotermCode <> ''XXX''
			AND GI.IncotermCode <> ''''
			AND DD.IncotermCode = ''''
		)

		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IncotermText'' AS Location, 
	''Incoterm Text is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD  
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID                             
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		DD.IncotermCode = ''''
		AND GI.IncotermCode = ''XXX'' 
		AND GI.IncotermText = ''''
        )

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IncotermLocation'' AS Location, 
	''Incoterm Location is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DD.IncotermCode = ''''
			AND GI.IncotermCode = ''XXX''
		 )
		AND GI.IncotermLocation <> ''''
        
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IncotermLocation'' AS Location, 
	''Incoterm Location is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD      
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID                         
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		DD.IncotermCode = ''''
		AND GI.IncotermCode <> ''XXX'' 
		AND GI.IncotermCode <> '''' 
		AND GI.IncotermLocation = ''''
        )

INSERT INTO #ValidationWarning

SELECT ''Goods Items/IncotermText'' AS Location,  
	''The same value for Incoterm Text is not allowed to be used for all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.IncotermCode = ''''
		AND 
			(
			SELECT COUNT (DISTINCT GI1.IncotermText)
			FROM txdDEAESGoodsItem GI1
			WHERE   GI1.PartnerID = @PartnerID 
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI1.IncotermText <> ''''
			) = 1
		AND 
			(
			SELECT COUNT (*)
			FROM txdDEAESGoodsItem GI2
			WHERE   GI2.PartnerID = @PartnerID 
			AND GI2.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.IncotermText = ''''
			) = 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items/Incoterm'' AS Location,  								
	''The same information for Incoterms is not allowed to be used for all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.IncotermCode = ''''
		AND 
			(
			SELECT COUNT (DISTINCT GI1.IncotermCode + GI1.IncotermText + GI1.IncotermLocation)
			FROM txdDEAESGoodsItem GI1
			WHERE   GI1.PartnerID = @PartnerID 
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI1.IncotermCode <> ''''
			) = 1
		AND 
			(
			SELECT COUNT (*)
			FROM txdDEAESGoodsItem GI2
			WHERE   GI2.PartnerID = @PartnerID 
			AND GI2.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.IncotermCode + GI2.IncotermText + GI2.IncotermLocation = ''''
			) = 0
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/IncotermCode'' AS Location, 
	''Incoterm Code should be specified if any other information for Incoterm is given'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID 
	AND DD.IncotermText + DD.IncotermLocation <> ''''	
	AND DD.IncotermCode = ''''
			
INSERT INTO #ValidationWarning

SELECT ''Goods Item [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IncotermCode'' AS Location, 
	''Incoterm Code should be specified if any other information for Incoterm is given'' AS Warning
FROM    txdDEAESDeclarationData DD  
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID                             
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.IncotermText + GI.IncotermLocation <> ''''		
	AND GI.IncotermCode = ''''
			
INSERT INTO #ValidationWarning
		
							
--Goods items or other sub-details:

SELECT ''Goods Item'' AS Location, 
	''At least one Goods Item is mandatory to be provided'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
		 NOT EXISTS
			(
			SELECT GI.GoodsItemGUID
			FROM txdDEAESGoodsItem GI	
			WHERE   GI.PartnerID = @PartnerID 
			AND GI.DeclarationDataGUID = @DeclarationDataGUID
			)
			
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ItemNumber'' AS Location,  
	''Item Number is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		GI.ItemNumber = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Description'' AS Location,  
	''Description is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 <> ''AE''
		AND GI.Description = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Description'' AS Location,  
	''Description is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''AE''
		AND GI.Description <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RegionOfOrigin'' AS Location,  
	''Region Of Origin is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DD.DeclarationType2 = ''AE'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'') 
			OR DD.DeclarationType2 = ''nA'' 
			OR DD.DeclarationType2 = ''nB''
			OR DD.DeclarationType2 = ''nK''
			OR DD.DeclarationType2 = ''nN''
			OR DD.DeclarationType2 = ''mS''
			)
		AND GI.RegionOfOrigin = ''''
		)

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RegionOfOrigin'' AS Location,  
''"99" is not valid value for RegionOfOrigin'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
		SELECT GI1.PartnerID
		FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESGoodsItem GI1
		ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
		WHERE   DD1.PartnerID = DD.PartnerID 
		AND DD1.DeclarationGUID = DD.DeclarationGUID
		---AND	DD1.Type = ''E_EXP_IND''			-----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GI1.SequenceNum = GI.SequenceNum
		AND GI1.ExportRefundProcedure = ''DE''
		)
	AND GI.RegionOfOrigin = ''99''
	
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RegionOfOrigin'' AS Location, 
''only "99" is valid value for RegionOfOrigin'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
		SELECT GI1.PartnerID
		FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESGoodsItem GI1
		ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
		WHERE   DD1.PartnerID = DD.PartnerID 
		AND DD1.DeclarationGUID = DD.DeclarationGUID
		---AND	DD1.Type = ''E_EXP_IND''			-----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GI1.SequenceNum = GI.SequenceNum
		AND GI1.ExportRefundProcedure <> ''DE''
		)
	AND GI.RegionOfOrigin <> ''99''
	
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NetWeight'' AS Location,  
	''Net Weight is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		GI.NetWeight = 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NetWeight'' AS Location,  
	''"0" is not valid value for Net Weight'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.BorderModeOfTransport NOT IN (''7'', ''70'')
		AND GI.NetWeight = 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/CommodityCode'' AS Location,  
	''Commodity Code is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GI.CommodityCode = ''''
		)
		
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/CommodityCode'' AS Location, 
''The values of CommodityCode in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
	WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		AND DD.DeclarationType2 = ''AE'' 
		AND EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			---AND	DD1.Type = ''E_EXP_IND''			-----IND
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
			AND GI1.SequenceNum = GI.SequenceNum
			AND GI1.CommodityCode <> GI.CommodityCode
			)
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/CommodityCode'' AS Location,  
	''Not valid value for Commodity Code'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DestinationCountry NOT IN (''QQ'', ''QR'', ''QS'')
			OR GI.NationalProcedure IN (''F62'', ''F63'')
			)
			AND GI.CommodityCode IN (''99302400'', ''99302700'', ''99309900'')
		OR
			(
			DD.DestinationCountry NOT IN (''QU'', ''QV'')
			OR GI.NationalProcedure IN (''F62'', ''6F0'')
			)
			AND GI.CommodityCode IN (''99312400'', ''99312700'', ''99319900'')
		)
		
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/SecondAdditionalCommodityCode'' AS Location, 
''SecondAdditionalCommodityCode is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
	WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		AND DD.DeclarationType2 = ''AE'' 
		AND GI.SecondAdditionalCommodityCode = ''''
		
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/SecondAdditionalCommodityCode'' AS Location, 
''The values of SecondAdditionalCommodityCode in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
	WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		AND DD.DeclarationType2 = ''AE'' 
		AND EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			---AND	DD1.Type = ''E_EXP_IND''			-----IND
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
			AND GI1.SequenceNum = GI.SequenceNum
			AND GI1.SecondAdditionalCommodityCode <> GI.SecondAdditionalCommodityCode
			)
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''Requested Procedure is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GI.RequestedProcedure = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''"10" should be indicated as the value for Requested Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''AE''
		AND GI.RequestedProcedure <> ''10''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''"21" should be indicated as the value for Requested Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 = ''zP'' 
			OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'')
			AND	DD.DeclarationType3 IN (''b'', ''c'', ''d'')
			)
		AND GI.RequestedProcedure <> ''21''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''"21" is not valid value for Requested Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			NOT
			(
			DD.DeclarationType2 = ''zP'' 
			OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'')
			AND	DD.DeclarationType3 IN (''b'', ''c'', ''d'')
			)
		AND GI.RequestedProcedure = ''21''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''"22" should be indicated as the value for Requested Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 = ''wP'' 
			OR DD.DeclarationType2 IN (''nA'', ''nK'', ''nN'') 
			AND	DD.DeclarationType3 IN (''e'', ''f'') 
			)
		AND GI.RequestedProcedure <> ''22''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''"22" is not valid value for Requested Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			NOT
			(
			DD.DeclarationType2 = ''wP'' 
			OR DD.DeclarationType2 IN (''nA'', ''nK'', ''nN'')  
			AND	DD.DeclarationType3 IN (''e'', ''f'')  
			)
		AND GI.RequestedProcedure = ''22''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''"10", "11" or "23" should be indicated as the value for Requested Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''nA'' 
		AND	DD.DeclarationType3 = ''a''
		AND GI.RequestedProcedure NOT IN (''10'', ''11'', ''23'')
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''"10" or "31" should be indicated as the value for Requested Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''mS'' 
		AND GI.RequestedProcedure NOT IN (''10'', ''31'')
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/PreviousProcedure'' AS Location,  
	''Previous Procedure is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GI.PreviousProcedure = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/PreviousProcedure'' AS Location,  
	''Not valid value for Previous Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''AE''
		AND GI.PreviousProcedure NOT IN (''00'',''02'', ''40'', ''41'', ''51'', ''61'', ''76'', ''78'', ''91'')
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/PreviousProcedure'' AS Location,  
	''Not valid value for Previous Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType1 = ''CO''
		AND GI.PreviousProcedure IN (''02'', ''41'', ''51'', ''71'', ''91'')
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NationalProcedure'' AS Location,  
	''National Procedure is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''AE'' 
		AND	DD.DeclarationType3 IN (''q'', ''s'')
		AND GI.NationalProcedure = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NationalProcedure'' AS Location,  
	''If "F61", "F62", "F63", "F64" or "6F0" is specified as the value for National Procedure, the same value should be indicated in all other Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		SELECT COUNT (DISTINCT NationalProcedure) 
		FROM txdDEAESGoodsItem GI1
		JOIN txdDEAESDeclarationData DD1
		ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID
		WHERE   DD1.PartnerID = @PartnerID 
			AND DD1.DeclarationDataGUID = @DeclarationDataGUID
		) > 1
		AND GI.NationalProcedure IN (''F61'', ''F62'', ''F63'', ''F64'', ''6F0'')
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NationalProcedure'' AS Location,  
	''Not valid value for National Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (NOT
			(
			DD.DeclarationType2 = ''AM'' 
			OR DD.DeclarationType2 IN (''nA'', ''nK'', ''nN'')
			AND	DD.DeclarationType3 = ''a''
			OR DD.DeclarationType2 = ''mS''
			)
		AND GI.NationalProcedure IN (''F61'', ''F64'', ''6F0'')
		)
		
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NationalProcedure'' AS Location,  
	''"F62" is not valid value for National Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (NOT
			(
			DD.DeclarationType2 = ''AE'' 
			AND	DD.DeclarationType3 IN (''m'', ''n'', ''o'', ''p'')
			)
		AND GI.NationalProcedure = ''F62''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NationalProcedure'' AS Location,  
	''"F63" is not valid value for National Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (NOT
			(
			DD.DeclarationType2 = ''AE'' 
			AND	DD.DeclarationType3 IN (''q'', ''s'')
			)
		AND GI.NationalProcedure = ''F63''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NationalProcedure'' AS Location,  
	''"F63" should be indicated as the value for National Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''AE'' 
		AND	DD.DeclarationType3 IN (''q'', ''s'')
		AND GI.NationalProcedure <> ''F63''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ExportRefundProcedure'' AS Location,  
	''Export Refund Procedure is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''AE''
		AND GI.ExportRefundProcedure = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ExportRefundProcedure'' AS Location,  
	''Export Refund Procedure is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 <> ''AE''
		AND GI.ExportRefundProcedure <> ''''
		)

INSERT INTO #ValidationWarning

/*SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/SupplementaryQuantity'' AS Location,  		--------as far as we do not implement the rule for this field, the rule for the data group becomes not relevant for the field	
	''Supplementary Quantity is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DD.DeclarationType2 = ''AE'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'') 
			OR DD.DeclarationType2 = ''nA'' 
			OR DD.DeclarationType2 = ''nB''
			OR DD.DeclarationType2 = ''nK''
			OR DD.DeclarationType2 = ''nN''
			OR DD.DeclarationType2 = ''mS''
			)
		AND GI.SupplementaryQuantity = 0
		)

INSERT INTO #ValidationWarning	*/

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/StatisticalValue'' AS Location,  
	''Statistical Value is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DD.DeclarationType2 = ''AE'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'') 
			OR DD.DeclarationType2 = ''nA'' 
			OR DD.DeclarationType2 = ''nB''
			OR DD.DeclarationType2 = ''nK''
			OR DD.DeclarationType2 = ''nN''
			OR DD.DeclarationType2 = ''mS''
			)
		AND GI.StatisticalValue = 0
		)
		
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages'' AS Location,
''At least one Package is mandatory to be provided for each Goods Item'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND NOT EXISTS 
			(
			SELECT GIP.PartnerID
			FROM txdDEAESGoodsItemPackage GIP
			WHERE GIP.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID 			
			AND GIP.GoodsItemGUID = GI.GoodsItemGUID
			AND GIP.GoodsItemPackageGUID IS NOT NULL
			)
	
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/Number'' AS Location,
''Packages/Number is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GIP.Number = ''''   
	
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages  [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/Number'' AS Location,  
	''"1" should be specified as the value for Packages/Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.Type IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'')
		AND GIP.Number <> 1
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/Number'' AS Location,  
	''"0" is not allowed to be specified as the value for Packages/Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.Type IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
		AND GIP.Number = 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages/Number'' AS Location,  	
	''If "0" is specified as the value for Packages/Number, all the rest values of Packages/Number for the same Goods Item should be "0" either'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
		SELECT GIP1.PartnerID
		FROM txdDEAESGoodsItemPackage GIP1
		WHERE   GIP1.PartnerID = @PartnerID 
		AND GIP1.GoodsItemGUID = GI.GoodsItemGUID
		AND GIP1.Number = 0
		)
		AND 
			(
			SELECT COUNT(*)
			FROM txdDEAESGoodsItemPackage GIP2
			WHERE   GIP2.PartnerID = @PartnerID 
			AND GIP2.GoodsItemGUID = GI.GoodsItemGUID
			AND GIP2.Number <> 0
			)
			<>0

/*	Removed in 2.4.2
INSERT INTO #ValidationWarning 

SELECT 
--''Goods Items/Packages [''+GIP1.SequenceNum+'']/Number'' AS Location,
''Goods Items/Packages/Number'' AS Location,
''If "0" is specified as the value for Packages/Number, there should exist record in other Goods Item with the same Packages/MarksAndNumbers value and the value other than "0" for Packages/Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND EXISTS 
		(
        SELECT GIP1.PartnerID
        FROM txdDEAESGoodsItemPackage GIP1
        WHERE GIP1.PartnerID = @PartnerID
        AND GIP1.GoodsItemGUID = GI.GoodsItemGUID
        AND GIP1.Number = 0
                                               
        AND NOT EXISTS
            (                                                      
            SELECT GIP2.PartnerID
            FROM txdDEAESGoodsItemPackage GIP2                                         
            WHERE GIP2.PartnerID = @PartnerID
            AND GIP2.DeclarationDataGUID = GI.DeclarationDataGUID
			AND GIP2.GoodsItemGUID <> GIP1.GoodsItemGUID
			AND GIP2.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
            AND GIP2.MarksAndNumbers=GIP1.MarksAndNumbers
            AND GIP2.Number <> 0                                                                                                                    
            )
        )
*/

INSERT INTO #ValidationWarning 

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/SequenceNumber'' AS Location,  
	''Packages/SequenceNumber is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.SequenceNumber = 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/Type'' AS Location,  
	''Packages/Type is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.Type = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/MarksAndNumbers'' AS Location,  
	''Packages/MarksAndNumbers is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
		AND GIP.MarksAndNumbers = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/MainItemNumber'' AS Location,  
	''Packages/MainItemNumber is required and permitted only if Packages/Number is 0'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.MainItemNumber <> 0 
		AND GIP.Number <> 0
		)


INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/MainItemNumber'' AS Location,  
	''Packages/MainItemNumber in range from 1 to Header/TotalItems'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.MainItemNumber < 0 
		OR GIP.MainItemNumber > DD.TotalItems
		)


INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/MainItemNumber'' AS Location,  
	''Packages/MainItemNumber is not valid'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.MainItemNumber <> 0 
		AND NOT EXISTS
            (                                                      
            SELECT GIP1.PartnerID
            FROM txdDEAESGoodsItemPackage GIP1                                         
            WHERE GIP1.PartnerID = @PartnerID
            AND GIP1.DeclarationDataGUID = GI.DeclarationDataGUID
			AND GIP1.GoodsItemGUID <> GIP.GoodsItemGUID
			AND GIP1.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
            AND GIP1.MarksAndNumbers=GIP.MarksAndNumbers
            AND GIP1.Number <> 0                                                                                                                    
            )
		
		)


INSERT INTO #ValidationWarning

SELECT ''Goods Items/Containers/Number'' AS Location,  
	''Containers/Number must be specified at least in one Goods Item'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.ContainerFlag = ''1'' 
		AND NOT EXISTS
			(
			SELECT GIC1.Number  
			FROM txdDEAESGoodsItemContainer GIC1 
			WHERE   GIC1.PartnerID = @PartnerID 
				AND GIC1.DeclarationDataGUID = @DeclarationDataGUID
				AND GIC1.Number <> ''''
			)
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Containers [''+CONVERT(VARCHAR(3),GIC.SequenceNum)+'']/Number'' AS Location,  
	''Containers/Number is not allowed to be specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemContainer GIC
ON DD.PartnerID = GIC.PartnerID  AND DD.DeclarationDataGUID = GIC.DeclarationDataGUID AND GI.GoodsItemGUID = GIC.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.ContainerFlag = ''0'' 
		AND GIC.Number <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,		-------make sure whether the rule is connected to one Goods Item or contrary on different ones, or maybe we shuold not pay attention to the Goods Items at all
''There should exist the record with the value "8GGX" for Document/Type'' AS Warning		---clarified with Rowan
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND EXISTS 
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID
		AND GID1.Type = ''3LLB''
		AND GID1.Qualifier IN (''81E'', ''81K'', ''81S'', ''231'') 
                                               
        AND NOT EXISTS
            (                                                      
            SELECT GID2.PartnerID
            FROM txdDEAESGoodsItemDocument GID2                                         
            WHERE GID2.PartnerID = @PartnerID
           -- AND GID2.DeclarationDataGUID = GI.DeclarationDataGUID
			AND GID2.GoodsItemGUID = GID1.GoodsItemGUID						--------here we check records in the same Goods Items, should change if understanding is not correct
			AND GID2.GoodsItemDocumentGUID <> GID1.GoodsItemDocumentGUID
			AND GID2.Type = ''8GGX''                                                                                                                  
            )
        )

INSERT INTO #ValidationWarning 

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document'' AS Location,							-------make sure whether the rule is connected to one Goods Item or contrary on different ones, or maybe we shuold not pay attention to the Goods Items at all
''One of the values "3LLB+81E/81K/81S/231" should be provided as the values for Document/Type + Document/Qualifier'' AS Warning	---clarified with Rowan
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND EXISTS 
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID
		AND GID1.Type = ''8GGX'' 
		                                               
        AND NOT EXISTS
            (                                                      
            SELECT GID2.PartnerID
            FROM txdDEAESGoodsItemDocument GID2                                         
            WHERE GID2.PartnerID = @PartnerID
            --AND GID2.DeclarationDataGUID = GI.DeclarationDataGUID
			AND GID2.GoodsItemGUID = GID1.GoodsItemGUID						--------here we check records in the same Goods Items, should change if understanding is not correct
			AND GID2.GoodsItemDocumentGUID <> GID1.GoodsItemDocumentGUID
			AND GID2.Type = ''3LLB''
			AND GID2.Qualifier IN (''81E'', ''81K'', ''81S'', ''231'')                                                                                                                   
            )
        )

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document'' AS Location,							-------make sure whether the rule is connected to one Goods Item or contrary on different ones, or maybe we shuold not pay attention to the Goods Items at all
''One of the values "3LLC+81E/81S/231" should be provided as the values for Document/Type + Document/Qualifier'' AS Warning	---clarified with Rowan
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND EXISTS 
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID
		AND GID1.Type IN (''E020'', ''Y934'') 
		AND GID1.Qualifier =''AWV''
		                                               
        AND NOT EXISTS
            (                                                      
            SELECT GID2.PartnerID
            FROM txdDEAESGoodsItemDocument GID2                                         
            WHERE GID2.PartnerID = @PartnerID
            --AND GID2.DeclarationDataGUID = GI.DeclarationDataGUID
			AND GID2.GoodsItemGUID = GID1.GoodsItemGUID						--------here we check records in the same Goods Items, should change if understanding is not correct
			AND GID2.GoodsItemDocumentGUID <> GID1.GoodsItemDocumentGUID
			AND GID2.Type = ''3LLC''
			AND GID2.Qualifier IN (''81E'', ''81S'', ''231'')                                                                                                                   
            )
        )

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type,Qualifier'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document'' AS Location,	
''Not valid value for Document/Type and Document/Qualifier'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND  
			(
			GID1.Type = ''3LLA''
			AND	GID1.Qualifier IN (''82'', ''231'')
			OR GID1.Type = ''3LLB''
			AND	GID1.Qualifier IN (''81E'', ''231'')
			OR GID1.Type = ''3LLC''
			AND	GID1.Qualifier IN (''81E'', ''231'')
			OR GID1.Type = ''X002''
			AND	GID1.Qualifier IN (''DEE'', ''231'')
			OR GID1.Type = ''E020''
			AND	GID1.Qualifier IN (''FWE'', ''231'')
			OR GID1.Type = ''3LLB''
			AND	GID1.Qualifier = ''81K''
			OR GID1.Type = ''C064''
			AND	GID1.Qualifier = ''DE''
			OR GID1.Type = ''E990''
			AND GID1.Qualifier = ''DEE''
			OR GID1.Type = ''C052''
			AND	GID1.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
			OR GID1.Type = ''C070''
			AND GID1.Qualifier = ''LY''
			
			)                                            
        AND 
			(
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''e'', ''f'', ''k'', ''l'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
			)



INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type,Qualifier'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document'' AS Location,							
''Not valid value for Document/Type and Document/Qualifier'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
			(
			GID1.Type = ''X002''
			AND	GID1.Qualifier IN (''E01'', ''E02'', ''E03'', ''E04'', ''E05'', ''E06'', ''A09'', ''A10'', ''A12'', ''A13'', ''A14'', ''A16'', ''A17'')
			OR GID1.Type = ''3LLC''
			AND	GID1.Qualifier IN (''A18'', ''A19'', ''A20'', ''A21'', ''A22'', ''A23'', ''A24'', ''A25'', ''A26'', ''A27'', ''81E'', ''81S'', ''231'')
			OR GID1.Type = ''3LLA''
			AND	GID1.Qualifier IN (''82'', ''231'')
			OR GID1.Type = ''3LLB''
			AND	GID1.Qualifier IN (''81E'', ''81S'', ''231'', ''81K'')
			OR GID1.Type = ''X002''
			AND	GID1.Qualifier IN (''DEE'', ''DES'', ''231'')
			OR GID1.Type = ''C064''
			AND	GID1.Qualifier = ''DE''
			OR GID1.Type = ''E990''
			AND GID1.Qualifier IN (''DEE'', ''DES'')
			OR GID1.Type = ''C052''
			AND	GID1.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
			OR GID1.Type = ''C070''
			AND GID1.Qualifier = ''LY''
			)                                            
        AND 
			(
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 = ''g''
			)



INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type,Qualifier'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document'' AS Location,					
''Not valid value for Document/Type and Document/Qualifier'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
			(
			GID1.Type = ''3LLA''
			AND	GID1.Qualifier IN (''82'', ''231'')
			OR GID1.Type = ''3LLB''
			AND	GID1.Qualifier IN (''81E'', ''81S'', ''231'', ''81K'')
			OR GID1.Type = ''3LLC''
			AND	GID1.Qualifier IN (''81E'', ''81S'', ''231'')
			OR GID1.Type = ''C064''
			AND	GID1.Qualifier = ''DE''
			OR GID1.Type = ''E990''
			AND GID1.Qualifier IN (''DEE'', ''DES'')
			OR GID1.Type = ''C052''
			AND	GID1.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
			OR GID1.Type = ''C070''
			AND GID1.Qualifier = ''LY''
			OR GID1.Type = ''X002''
			AND	GID1.Qualifier IN (''DEE'', ''DES'', ''231'')
			OR GID1.Type = ''E020''
			AND	GID1.Qualifier IN (''FWE'', ''FWS'', ''231'')
			)                                            
        AND DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 


INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document'' AS Location,							
''"3LLG+CO" is permissible for Document/Type and Document/Qualifier only when DeclarationType1 is "CO"'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GID1.Type = ''3LLG''
	AND	GID1.Qualifier = ''CO''
	AND DD.DeclarationType1 <> ''CO''


INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type'' AS Location,	
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,						
''"2AAF" is not permitted value for Document/Type'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GID1.Type = ''2AAF''
		AND NOT	
			(
			GI.ItemNumber = 1
			AND
				(
				DD.DeclarationType2 IN (''zP'', ''wP'') 
				AND	DD.DeclarationType3 IN (''m'', ''n'', ''o'', ''p'', ''q'', ''r'')
				OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'')
				AND	DD.DeclarationType3 = ''c''
				OR DD.DeclarationType2 IN (''nA'', ''nK'', ''nN'') 
				AND	DD.DeclarationType3 = ''e''
				)
			
			)
		                                            

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"2AAF" is required to be indicated as Document/Type for the Goods Item with the field ItemNumber, which equals to 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber = 1
	AND
		(
		DD.DeclarationType2 = ''zP'' 
		AND	DD.DeclarationType3 IN (''m'', ''n'', ''o'', ''p'', ''q'', ''r'')
		OR DD.DeclarationType2 = ''wP'' 
		AND	DD.DeclarationType3 IN (''m'', ''n'', ''o'', ''p'', ''q'', ''r'')
		OR DD.DeclarationType2 IN (''nB'', ''nK'')
		AND	DD.DeclarationType3 = ''c''
		OR DD.DeclarationType2 = ''nN'' 
		AND	DD.DeclarationType3 IN (''c'', ''e'')
		)

    AND NOT EXISTS 
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID
		AND GID1.Type = ''2AAF''
		)                                            

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"Nzzz" is required to be indicated as Document/Type for the Goods Item with the field ItemNumber, which equals to 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber = 1
	AND DD.DeclarationType2 = ''nA'' 
	AND	DD.DeclarationType3 = ''a''

    AND NOT EXISTS 
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID
		AND GID1.Type = ''Nzzz''
		)                                            

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"N955" is required to be indicated only once as Document/Type for the Goods Item with the field ItemNumber, which equals to 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber = 1
	AND DD.DeclarationType2 = ''nA'' 
	AND	DD.DeclarationType3 = ''z''

    AND
		(
        SELECT COUNT (*)
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID
		AND GID1.Type = ''N955''
		) <> 1                                           

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,			
''"N955" is not permitted to be indicated as the value for Document/Type, for the Goods Item with the field ItemNumber other than 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber <> 1
	AND DD.DeclarationType2 = ''nA'' 
	AND	DD.DeclarationType3 = ''z''
    AND GID1.Type = ''N955''
                                          

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"N830" is required to be indicated only once for Document/Type'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationType2 = ''nB'' 
    AND
		(
        SELECT COUNT (*)
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID					----------------we check here if there is one record with N830 for each goods item, if there should be one record for the whole declaration, it should be changed
		AND GID1.Type = ''N830''										---clarified with Rowan
		) <> 1                                           

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"N830" is required to be indicated only once for Document/Type, for the Goods Item with the field ItemNumber, which equals to 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber = 1
	AND DD.DeclarationType2 = ''nK'' 
    AND
		(
        SELECT COUNT (*)
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID					
		AND GID1.Type = ''N830''
		) <> 1                                           

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type'' AS Location,
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,						
''"N830" is not permitted to be indicated for Document/Type, for the Goods Item with the field ItemNumber other than 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber <> 1
	AND DD.DeclarationType2 = ''nK'' 
    AND GID1.Type = ''N830''                                           

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"N830" is required to be indicated only once for Document/Type, for the Goods Item with the field ItemNumber, which equals to 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber = 1
	AND DD.DeclarationType2 = ''nN'' 
    AND
		(
        SELECT COUNT (*)
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID					
		AND GID1.Type = ''N830''
		) <> 1                                           

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,					
''"N830" is not permitted to be indicated for Document/Type, for the Goods Item with the field ItemNumber other than 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber <> 1
	AND DD.DeclarationType2 = ''nN'' 
    AND GID1.Type = ''N830''                                           

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document'' AS Location,					
''"X001+MB" is not permitted to be indicated for Document/Type and Document/Qualifier'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 = ''AM'' 
		AND	DD.DeclarationType3 IN (''a'', ''b'', ''c'', ''d'', ''e'', ''f'')
		OR DD.DeclarationType2 = ''nA'' 
		AND	DD.DeclarationType3 IN (''a'', ''z'')
		OR DD.DeclarationType2 = ''nN'' 
		AND	DD.DeclarationType3 = ''a''
		)
    AND GID1.Type = ''X001''
	AND GID1.Qualifier = ''MB''                                          

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"9DEE" is required to be indicated for Document/Type, for the Goods Item with the field CommodityCode starting with "98"'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND SUBSTRING (GI.CommodityCode, 1, 2) = ''98''
    AND NOT EXISTS
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID					
		AND GID1.Type = ''9DEE''
		)                                           

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"Y015" is required to be indicated as Document/Type, for the Goods Item which contains "C034" as the value for Document/Type'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID					-----we check here if the record exists in the same goods item, if we should check in whole declaration, than it should be changed
		AND GID1.Type = ''C034''
		
		AND NOT EXISTS
			(
			SELECT GID2.PartnerID
			FROM txdDEAESGoodsItemDocument GID2
			WHERE GID2.PartnerID = @PartnerID
			AND GID2.GoodsItemGUID = GID1.GoodsItemGUID					-----we check here if the record exists in the same goods item, if we should check in whole declaration, than it should be changed
			AND GID2.Type = ''Y015''										---clarified with Rowan
			)  
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"C034" is required to be indicated as Document/Type, for the Goods Item which contains "Y015" as the value for Document/Type'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID					-----we check here if the record exists in the same goods item, if we should check in whole declaration, than it should be changed
		AND GID1.Type = ''Y015''
		
		AND NOT EXISTS
			(
			SELECT GID2.PartnerID
			FROM txdDEAESGoodsItemDocument GID2
			WHERE GID2.PartnerID = @PartnerID
			AND GID2.GoodsItemGUID = GID1.GoodsItemGUID					-----we check here if the record exists in the same goods item, if we should check in whole declaration, than it should be changed
			AND GID2.Type = ''C034''										---clarified with Rowan
			)  
		)   

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''Document/Type is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GID1.Qualifier + GID1.Reference + GID1.AdditionalInformation + GID1.ReferenceDetail + cast(GID1.IssueDate as varchar) + cast(GID1.ExpiryDate as varchar) + cast(GID1.Value as varchar) + GID1.QuantityUOM +cast(GID1.Quantity as varchar) <> '''' 
	AND GID1.Type = '''' 		

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Reference'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Reference'' AS Location,						
''Not valid format for Document/Reference'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND  (
			(
			GID1.Type = ''3LLA''
			AND	GID1.Qualifier IN (''82'', ''231'')
			OR GID1.Type = ''3LLB''
			AND	GID1.Qualifier IN (''81E'', ''81S'', ''231'', ''81K'')
			OR GID1.Type = ''3LLC''
			AND	GID1.Qualifier IN (''81E'', ''81S'', ''231'')
			OR GID1.Type = ''C064''
			AND	GID1.Qualifier = ''DE''
			OR GID1.Type = ''E990''
			AND GID1.Qualifier IN (''DEE'', ''DES'')
			OR GID1.Type = ''C052''
			AND	GID1.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
			OR GID1.Type = ''C070''
			AND	GID1.Qualifier = ''LY''
			OR GID1.Type = ''X002''
			AND	GID1.Qualifier IN (''DEE'', ''DES'', ''231'')
			OR GID1.Type = ''E020''
			AND	GID1.Qualifier IN (''FWE'', ''FWS'', ''231'')
			OR GID1.Type IN (''E020'', ''Y934'')
			AND	GID1.Qualifier = ''AWV''
			) 
			AND LEN (GID1.Reference) NOT IN (12, 13)
		OR
			(
			GID1.Type = ''XOO1''
			AND LEN (GID1.Reference) > 18
			)
		OR
			(
			GID1.Type = ''N830''
			AND DD.DeclarationType2 IN (''nB'', ''nK'')
			AND LEN (GID1.Reference) <> 18
			)
		OR
			(
			(GID1.Type = ''3LLD'' 
			AND GID1.Qualifier = ''NB''
			AND GID1.IssueDate <> '''')
			AND LEN (GID1.Reference) NOT IN (12, 13)
			)
		)                                            

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Reference'' AS Location,											
''Reference should match with the Reference value of the document of the same goods item, with "3LLC+81E/81S/231" values indicated for Document/Type and Document/Qualifier'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GID1.Type IN (''E020'', ''Y934'')
	AND GID1.Qualifier = ''AWV'' 
	AND EXISTS
		(
        SELECT GID2.PartnerID
        FROM txdDEAESGoodsItemDocument GID2
        WHERE GID2.PartnerID = @PartnerID
        AND GID2.GoodsItemGUID = GID1.GoodsItemGUID	
		AND GID2.Type = ''3LLC''
		AND GID2.Qualifier IN (''81E'', ''81S'', ''231'')
		AND GID1.Reference <> GID1.Reference
		)

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/ReferenceDetail'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/ReferenceDetail'' AS Location,	
''Not valid value for Document/ReferenceDetail'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
		(
		GID1.ReferenceDetail <> ''''
		AND GID1.Type = ''8GGX''
		AND GID1.ReferenceDetail NOT IN
			(
			SELECT Code 
			FROM tmgGlobalCodes 
			WHERE FieldName=''DE-AES-A0135''
			)		
		OR
		GID1.Type = ''X002''
		AND GID1.Qualifier = ''A14''
		AND GID1.ReferenceDetail NOT IN (''2B350g'', ''2B350i'')
		)
	
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/ReferenceDetail'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/ReferenceDetail'' AS Location,	
''Please provide "AL-Position" for Document/ReferenceDetail'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
			(
			GID1.Type = ''3LLA''
			AND	GID1.Qualifier IN (''82'', ''231'')
			OR GID1.Type = ''3LLB''
			AND	GID1.Qualifier IN (''81E'', ''231'', ''81K'')
			OR GID1.Type = ''3LLC'' 
			AND	GID1.Qualifier IN (''81E'', ''231'')
			OR GID1.Type = ''C064''
			AND	GID1.Qualifier = ''DE''
			OR GID1.Type = ''E990''
			AND GID1.Qualifier = ''DEE''
			OR GID1.Type = ''C052''
			AND	GID1.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
			OR GID1.Type = ''C070''
			AND	GID1.Qualifier = ''LY''
			OR GID1.Type = ''X002''
			AND	GID1.Qualifier IN (''DEE'', ''231'')
			) 
		AND GID1.ReferenceDetail = ''''	
		
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/ReferenceDetail'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/ReferenceDetail'' AS Location,	
''Please provide "NULL" for Document/ReferenceDetail'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
			(
			GID1.Type = ''3LLD''
			AND	GID1.Qualifier = ''NB''
			) 
		AND GID1.ReferenceDetail <> ''NULL''	 


INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/ReferenceDetail'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/ReferenceDetail'' AS Location,	
''Document/ReferenceDetail must include prefix "IR-AN" if Document/Type = C052 and Document/Qualifier = IR'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
			(
			GID1.Type = ''C052''
			AND	GID1.Qualifier = ''IR''
			) 
		AND GID1.ReferenceDetail NOT LIKE ''IR-AN%''	

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/ReferenceDetail'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/ReferenceDetail'' AS Location,	
''Please provide "Goods Indicator" for Document/ReferenceDetail'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
			(
			GID1.Type = ''E020''
			AND	GID1.Qualifier IN (''FWE'', ''231'')
			) 
		AND GID1.ReferenceDetail = ''''	 

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/IssueDate'' AS Location,	
''Document/IssueDate is not allowed to be in the furure'' AS Warning						
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GID1.IssueDate > @EffectiveValidationDate
   		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/IssueDate'' AS Location,							
''Document/IssueDate is not allowed to be after Document/ExpiryDate'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GID1.IssueDate > GID1.ExpiryDate
	
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/ExpiryDate'' AS Location,							
''Document/ExpiryDate is not allowed to be before '' + @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ApplicableDate'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GID1.Type = ''2AAF''
    AND GID1.ExpiryDate < DD.ApplicableDate

/*	Removed in 2.4.2
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Value'' AS Location,							
''Document/Value is not allowed to exceed EUR 5,000'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GID1.Type = ''X002''
	AND	GID1.Qualifier = ''A12''
    AND GID1.Value > 5000
*/	

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/QuantityUOM'' AS Location,							
''Not valid value for Document/QuantityUOM'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GID1.Type = ''X001''
    AND GID1.QuantityUOM NOT IN (''l'', ''St'')
	
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Quantity'' AS Location,							
''Document/Quantity is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GID1.QuantityUOM NOT IN (''div'', ''ItAnlage'')
	AND GID1.Quantity IS NULL

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Quantity'' AS Location,							
''Document/Quantity is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GID1.QuantityUOM IN (''div'', ''ItAnlage'')
	AND GID1.Quantity IS NOT NULL	
	
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Quantity'' AS Location,							
''Integer should be provided for Document/Quantity'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GID1.Type = ''X001''
    AND GID1.Quantity <> ROUND (GID1.Quantity, 0)

INSERT INTO #ValidationWarning		

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/PreviousDocument [''+CONVERT(VARCHAR(3),GIPD.SequenceNum)+'']/Type'' AS Location,  
	''PreviousDocument/Type is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPreviousDocument GIPD
ON DD.PartnerID = GIPD.PartnerID  AND DD.DeclarationDataGUID = GIPD.DeclarationDataGUID AND GI.GoodsItemGUID = GIPD.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (GIPD.Reference <> ''''
		OR GIPD.AdditionalInformation <> ''''
		)
		AND GIPD.Type = ''''
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/PreviousDocument/Type'' AS Location,  	
	''"AAD" can be specified only once as the value for PreviousDocument/Type for each Goods Item'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		SELECT COUNT (*)
		FROM txdDEAESGoodsItemPreviousDocument GIPD1
		WHERE   GIPD1.PartnerID = @PartnerID 
		AND GIPD1.GoodsItemGUID = GI.GoodsItemGUID
		AND GIPD1.Type = ''AAD''
		) > 1

INSERT INTO #ValidationWarning   

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/PreviousDocument [''+CONVERT(VARCHAR(3),GIPD.SequenceNum)+'']/Reference'' AS Location,  
	''PreviousDocument/Reference is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPreviousDocument GIPD
ON DD.PartnerID = GIPD.PartnerID  AND DD.DeclarationDataGUID = GIPD.DeclarationDataGUID AND GI.GoodsItemGUID = GIPD.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (GIPD.Type <> ''''
		OR GIPD.AdditionalInformation <> ''''
		)
		AND GIPD.Reference = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/PreviousDocument [''+CONVERT(VARCHAR(3),GIPD.SequenceNum)+'']/Reference'' AS Location,  
	''Format for PreviousDocument/Reference should be an24'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPreviousDocument GIPD
ON DD.PartnerID = GIPD.PartnerID  AND DD.DeclarationDataGUID = GIPD.DeclarationDataGUID AND GI.GoodsItemGUID = GIPD.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (GIPD.Type = ''AAD''
		AND GIPD.Reference <> ''''
		AND LEN(GIPD.Reference) <> 24
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/CWNumberOfPositions'' AS Location,  
	''CW Number Of Positions is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GI.CWNumberOfPositions <> 0
		)

INSERT INTO #ValidationWarning		

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/CWAuthorizationNumber'' AS Location,  
	''CW Authorization Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GI.CWAuthorizationNumber <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/CWOperatorRegistrationNumber'' AS Location,  
	''CW Authorization Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GI.CWOperatorRegistrationNumber <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/SequenceNumber'' AS Location,  
	''Customs Warehouse/Sequence Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.SequenceNumber <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/PositionNumber'' AS Location,  
	''Customs Warehouse/Position Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.PositionNumber <> 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/RegistrationNumber'' AS Location,  
	''Customs Warehouse/Registration Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.RegistrationNumber <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/RegistrationNumber'' AS Location,  
	''Format for Customs Warehouse/Registration Number should be an21'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GICW.ATLASFilingFlag = ''1''
		AND GICW.RegistrationNumber <> ''''
		AND LEN(GICW.RegistrationNumber) <> 21
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/CommodityCode'' AS Location,  
	''Customs Warehouse/Commodity Code is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.CommodityCode <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/ATLASFilingFlag'' AS Location,  
	''Customs Warehouse/ATLAS Filing Flag is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.ATLASFilingFlag <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/NormalProcessingFlag'' AS Location,  
	''Customs Warehouse/Normal Processing Flag is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.NormalProcessingFlag <> ''''
		)

INSERT INTO #ValidationWarning
	
	SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/AdditionalInformation'' AS Location,  
	''Customs Warehouse/Additional Information is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.AdditionalInformation <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/IssuedQuantityUOMQualifier'' AS Location,  
	''Customs Warehouse/Issued Quantity UOM Qualifier is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.IssuedQuantityUOMQualifier <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/IssuedQuantityUOM'' AS Location,  
	''Customs Warehouse/Issued Quantity UOM is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.IssuedQuantityUOM <> ''''
		)

INSERT INTO #ValidationWarning
	
SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/IssuedQuantity'' AS Location,  
	''Customs Warehouse/Issued Quantity is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.IssuedQuantity <> 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/IssuedQuantity'' AS Location,  
	''Customs Warehouse/Issued Quantity should be integer'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 NOT IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		AND	GI.PreviousProcedure = ''71''
		AND GICW.IssuedQuantityUOM IN (''NAR'', ''NCL'', ''NPR'')
		---AND ISNUMERIC (GICW.IssuedQuantity + ''.00'') = 0
		AND GICW.IssuedQuantity <> ROUND (GICW.IssuedQuantity, 0)
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/TradeQuantityUOMQualifier'' AS Location,  
	''Customs Warehouse/Trade Quantity UOM Qualifier is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			OR  GICW.NormalProcessingFlag <> ''1''
			)
		AND GICW.TradeQuantityUOMQualifier <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/TradeQuantityUOM'' AS Location,  
	''Customs Warehouse/Trade Quantity UOM is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			OR  GICW.NormalProcessingFlag <> ''1''
			)
		AND GICW.TradeQuantityUOM <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/TradeQuantity'' AS Location,  
	''Customs Warehouse/Trade Quantity is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			OR  GICW.NormalProcessingFlag <> ''1''
			)
		AND GICW.TradeQuantity <> 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/TradeQuantity'' AS Location,  
	''Customs Warehouse/Trade Quantity should be integer'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 NOT IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		AND	GI.PreviousProcedure = ''71''
		AND GICW.NormalProcessingFlag = ''1''
		AND GICW.TradeQuantityUOM IN (''NAR'', ''NCL'', ''NPR'')
		---AND ISNUMERIC (GICW.TradeQuantity + ''.00'') = 0
		AND GICW.TradeQuantity <> ROUND (GICW.TradeQuantity, 0)
		
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IPNumberOfPositions'' AS Location,  
	''IP Number Of Positions is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
			)
		AND GI.IPNumberOfPositions <> 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IPAuthorizationNumber'' AS Location,  
	''IP Authorization Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
			)
		AND GI.IPAuthorizationNumber <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IPAuthorizationNumber'' AS Location,  
	''"AV" should be specified for the 7th and 8th symbols of IP Authorization Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		DD.DeclarationType2 NOT IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		AND	GI.PreviousProcedure  IN (''02'', ''41'', ''51'', ''91'')
		)
		AND GI.PreviousProcedure IN (''02'', ''41'', ''51'')
		AND GI.IPAuthorizationNumber <> ''''
		AND SUBSTRING (GI.IPAuthorizationNumber, 7, 2) <> ''AV''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IPAuthorizationNumber'' AS Location,  
	''"UV" should be specified for the 7th and 8th symbols of IP Authorization Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		DD.DeclarationType2 NOT IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		AND	GI.PreviousProcedure  IN (''02'', ''41'', ''51'', ''91'')
		)
		AND GI.PreviousProcedure = ''91''
		AND GI.IPAuthorizationNumber <> ''''
		AND SUBSTRING (GI.IPAuthorizationNumber, 7, 2) <> ''UV''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/SequenceNumber'' AS Location,  
	''Inward Processing/Sequence Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
			)
		AND GIIP.SequenceNumber <> 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/PositionNumber'' AS Location,  
	''Inward Processing/Position Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
			)
		AND GIIP.PositionNumber <> 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/RegistrationNumber'' AS Location,  
	''Inward Processing/Registration Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
			)
		AND GIIP.RegistrationNumber <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/RegistrationNumber'' AS Location,  
	''Format for Inward Processing/Registration Number should be an21'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
		AND GIIP.ATLASFilingFlag = 1
		AND GIIP.RegistrationNumber <> ''''
		AND LEN (GIIP.RegistrationNumber) <> 21

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/RegistrationNumber'' AS Location,  
	''"P" should be specified for the 3rd symbol of Inward Processing/Registration Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
		AND GIIP.ATLASFilingFlag = 1
		AND LEN (GIIP.RegistrationNumber) = 21
		AND GI.PreviousProcedure IN (''02'', ''41'', ''51'')
		AND SUBSTRING (GIIP.RegistrationNumber, 3, 1) <> ''P''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/RegistrationNumber'' AS Location,  
	''"R" should be specified for the 3rd symbol of Inward Processing/Registration Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
		AND GIIP.ATLASFilingFlag = 1
		AND LEN (GIIP.RegistrationNumber) = 21
		AND GI.PreviousProcedure = ''91''
		AND SUBSTRING (GIIP.RegistrationNumber, 3, 1) <> ''R''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/RegistrationNumber'' AS Location,  
	''Previous Procedure should match with the 4th and 5th symbols of Inward Processing/Registration Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
		AND GIIP.ATLASFilingFlag = 1
		AND LEN (GIIP.RegistrationNumber) = 21
		AND GI.PreviousProcedure <> SUBSTRING (GIIP.RegistrationNumber, 4, 2)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/ATLASFilingFlag'' AS Location,  
	''Inward Processing/ATLAS Filing Flag is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
			)
		AND GIIP.ATLASFilingFlag <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/DescriptionOfGoods'' AS Location,  
	''Inward Processing/Description Of Goods is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
			)
		AND GIIP.DescriptionOfGoods <> ''''
		)

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IPNumberOfPositions'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''InwardProcessing/IPNumberOfPositions is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
    AND GI.IPAuthorizationNumber + GIIP.RegistrationNumber + GIIP.ATLASFilingFlag + GIIP.DescriptionOfGoods <> '''' 
	AND GIIP.SequenceNumber + GIIP.PositionNumber <> 0
	AND GI.IPNumberOfPositions = '''' 	

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IPAuthorizationNumber'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''InwardProcessing/IPAuthorizationNumber is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
    AND GIIP.RegistrationNumber + GIIP.ATLASFilingFlag + GIIP.DescriptionOfGoods <> '''' 
	AND GI.IPNumberOfPositions + GIIP.SequenceNumber + GIIP.PositionNumber <> 0 
	AND GI.IPAuthorizationNumber = '''' 		

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/SequenceNumber'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''InwardProcessing/SequenceNumber is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
    AND GI.IPAuthorizationNumber + GIIP.RegistrationNumber + GIIP.ATLASFilingFlag + GIIP.DescriptionOfGoods <> '''' 
	AND GI.IPNumberOfPositions + GIIP.PositionNumber <> 0
	AND GIIP.SequenceNumber = '''' 		

INSERT INTO #ValidationWarning	

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/PositionNumber'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''InwardProcessing/PositionNumber is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
    AND GI.IPAuthorizationNumber + GIIP.RegistrationNumber + GIIP.ATLASFilingFlag + GIIP.DescriptionOfGoods <> ''''
	AND GI.IPNumberOfPositions + GIIP.SequenceNumber <> 0 
	AND GIIP.PositionNumber = '''' 		

INSERT INTO #ValidationWarning	

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/RegistrationNumber'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''InwardProcessing/RegistrationNumber is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
    AND GI.IPAuthorizationNumber + GIIP.ATLASFilingFlag + GIIP.DescriptionOfGoods <> '''' 
	AND GI.IPNumberOfPositions + GIIP.SequenceNumber + GIIP.PositionNumber <> 0
	AND GIIP.RegistrationNumber = '''' 		

INSERT INTO #ValidationWarning	

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/ATLASFilingFlag'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''InwardProcessing/ATLASFilingFlag is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
    AND GI.IPAuthorizationNumber + GIIP.RegistrationNumber + GIIP.DescriptionOfGoods <> ''''
	AND GI.IPNumberOfPositions + GIIP.SequenceNumber + GIIP.PositionNumber <> 0 
	AND GIIP.ATLASFilingFlag = '''' 		

INSERT INTO #ValidationWarning	
	
SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/DescriptionOfGoods'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''InwardProcessing/DescriptionOfGoods is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
    AND GI.IPAuthorizationNumber + GIIP.RegistrationNumber + GIIP.ATLASFilingFlag <> '''' 
	AND GI.IPNumberOfPositions + GIIP.SequenceNumber + GIIP.PositionNumber <> 0
	AND GIIP.DescriptionOfGoods = '''' 		

INSERT INTO #ValidationWarning			

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerIDType'' AS Location, 
	''OutwardProcessingOwnerIDType is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		    DD.PartiesStatus LIKE ''___3''
			AND DD.OutwardProcessingOwnerIDType = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerIDType'' AS Location, 
	''OutwardProcessingOwnerIDType is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.PartiesStatus NOT LIKE ''___3''
		AND DD.OutwardProcessingOwnerIDType <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerID'' AS Location, 
	''OutwardProcessingOwnerID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		    PartiesStatus LIKE ''___3''
			AND OutwardProcessingOwnerID = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerID'' AS Location, 
	''OutwardProcessingOwnerID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''___3''
		AND OutwardProcessingOwnerID <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerID'' AS Location, 
	''OutwardProcessingOwnerID and Exporter ID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			PartiesStatus LIKE ''___3''
			AND OutwardProcessingOwnerID = ExporterID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerID'' AS Location, 
	''OutwardProcessingOwnerID and DeclarantID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			PartiesStatus LIKE ''___3''
			AND OutwardProcessingOwnerID = DeclarantID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerID'' AS Location, 
	''OutwardProcessingOwnerID and AgentID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			PartiesStatus LIKE ''___3''
			AND OutwardProcessingOwnerID = AgentID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerID'' AS Location, 
	''OutwardProcessingOwnerID and SubContractorID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			PartiesStatus LIKE ''___3''
			AND OutwardProcessingOwnerID = SubContractorID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerBranch'' AS Location, 
	''OutwardProcessingOwnerBranch is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''___3''
		AND OutwardProcessingOwnerBranch <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerContactPosition'' AS Location, 
	''OutwardProcessingOwnerContactPosition is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''___3''
		AND OutwardProcessingOwnerContactPosition <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerContactName'' AS Location, 
	''OutwardProcessingOwnerContactName is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		    PartiesStatus LIKE ''___3''
			AND OutwardProcessingOwnerContactName = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerContactName'' AS Location, 
	''OutwardProcessingOwnerContactName is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''___3''
		AND OutwardProcessingOwnerContactName <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerContactTel'' AS Location, 
	''OutwardProcessingOwnerContactTel is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		    PartiesStatus LIKE ''___3''
			AND OutwardProcessingOwnerContactTel = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerContactTel'' AS Location, 
	''OutwardProcessingOwnerContactTel is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''___3''
		AND OutwardProcessingOwnerContactTel <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerContactFax'' AS Location, 
	''OutwardProcessingOwnerContactFax is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''___3''
		AND OutwardProcessingOwnerContactFax <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerContactEmail'' AS Location, 
	''OutwardProcessingOwnerContactEmail is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''___3''
		AND OutwardProcessingOwnerContactEmail <> ''''
		)

INSERT INTO #ValidationWarning

SELECT 
''SpecialStatement/StatementCode'' AS Location, 						
''SpecialStatement/StatementCode is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS
		(
		SELECT SS.PartnerID
		FROM txdDEAESSpecialStatement SS	
		WHERE   SS.PartnerID = DD.PartnerID 
		AND SS.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	SS.StatementCode <> ''''
		)
					
INSERT INTO #ValidationWarning
		
SELECT ''SpecialStatement [''+CONVERT(VARCHAR(3),SS.SequenceNum)+'']/StatementCode'' AS Location,  	
''0 is not allowed to be specified when we have more than one SpecialStatement/StatementCode'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESSpecialStatement SS
ON DD.PartnerID = SS.PartnerID  AND DD.DeclarationDataGUID = SS.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		SELECT COUNT (*)
		FROM txdDEAESSpecialStatement SS1
		WHERE   SS1.PartnerID = @PartnerID 
		AND SS1.DeclarationDataGUID = @DeclarationDataGUID
		AND SS1.StatementCode <> ''''
		) > 1
	AND SS.StatementCode = ''0''

INSERT INTO #ValidationWarning   		
		
SELECT ''SpecialStatement [''+CONVERT(VARCHAR(3),SS.SequenceNum)+'']/StatementCode'' AS Location,  	
''Not valid value for SpecialStatement/StatementCode'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESSpecialStatement SS
ON DD.PartnerID = SS.PartnerID  AND DD.DeclarationDataGUID = SS.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		PartiesStatus LIKE ''_1__''
		AND DeclarantIDType <> ''2''
		AND SS.StatementCode = ''1''
	OR
		DD.DeclarationType2 <> ''nN''
		AND SS.StatementCode = ''3''
	OR
		DD.DestinationCountry <> ''QQ''
		AND SS.StatementCode = ''4''
	OR
		PartiesStatus LIKE ''01__''
		AND DeclarantIDType <> ''2''
		AND SS.StatementCode = ''5''
	OR
		PartiesStatus LIKE ''1___''
		AND ExporterIDType <> ''2''
		AND SS.StatementCode = ''5''
		)
INSERT INTO #ValidationWarning   

SELECT ''SpecialStatement [''+CONVERT(VARCHAR(3),SS.SequenceNum)+'']/StatementCode'' AS Location,  	
''Each value for SpecialStatement/StatementCode should be used only once'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESSpecialStatement SS
ON DD.PartnerID = SS.PartnerID  AND DD.DeclarationDataGUID = SS.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND EXISTS
		(
		SELECT SS1.PartnerID
		FROM txdDEAESSpecialStatement SS1
		WHERE   SS1.PartnerID = @PartnerID 
		AND SS1.DeclarationDataGUID = @DeclarationDataGUID
		AND SS1.SpecialStatementGUID <> SS.SpecialStatementGUID
		AND SS1.StatementCode = SS.StatementCode
		)
	
INSERT INTO #ValidationWarning   

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RefundAmount'' AS Location,  
	''RefundAmount is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''AE''
		AND GI.RefundAmount = 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RefundAmount'' AS Location,  
	''RefundAmount is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 <> ''AE''
		AND GI.RefundAmount <> 0
		)

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RefundAmount'' AS Location, 
''RefundAmount should be integer'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationType2 = ''AE'' 
	--AND ISNUMERIC (GI.RefundAmount + ''.00'') = 0
	AND GI.RefundAmount <> ROUND (GI.RefundAmount, 0)
	AND EXISTS
		(
		SELECT DD1.PartnerID FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESGoodsItem GI1
		ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID
		
		WHERE   DD1.PartnerID = @PartnerID AND DD1.DeclarationGUID = DD.DeclarationGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GI1.RefundQuantityUOM IN (''NAR'', ''CEN'', ''MIL'')								
		)
		
INSERT INTO #ValidationWarning
	
SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ReImportDate'' AS Location, 
''ReImportDate is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                              
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND DD.ReImportDate = ''''

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ReImportDate'' AS Location, 
''ReImportDate is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD                              
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND DD.ReImportDate <> ''''

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ReImportDate'' AS Location, 
''ReImportDate is not allowed to be in the past'' AS Warning
FROM    txdDEAESDeclarationData DD                              
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
		)
		AND DD.StandardExchange <> ''1''
		AND DD.ReImportDate <> ''''
		AND DD.ReImportDate < @EffectiveValidationDate

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ReImportDate'' AS Location, 
''ReImportDate can be maximum 3 years in the future'' AS Warning
FROM    txdDEAESDeclarationData DD                              
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
		)
		AND DD.ReImportDate <> ''''
		AND DD.ReImportDate > DATEADD(YEAR, 3, @EffectiveValidationDate)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/StandardExchange'' AS Location, 
''StandardExchange is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                              
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND DD.StandardExchange = ''''

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/StandardExchange'' AS Location, 
''StandardExchange is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD                              
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND DD.StandardExchange <> ''''

INSERT INTO #ValidationWarning

SELECT 
''OPReImportCountry/Code'' AS Location, 						
''OPReImportCountry/Code is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND NOT EXISTS
		(
		SELECT OPRIC.PartnerID
		FROM txdDEAESOutwardProcessingReImportCountry OPRIC	
		WHERE   OPRIC.PartnerID = DD.PartnerID 
		AND OPRIC.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPRIC.Code <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT 
''OPReImportCountry/Code'' AS Location, 						
''OPReImportCountry/Code is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND EXISTS
		(
		SELECT OPRIC.PartnerID
		FROM txdDEAESOutwardProcessingReImportCountry OPRIC	
		WHERE   OPRIC.PartnerID = DD.PartnerID 
		AND OPRIC.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPRIC.Code <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT 
''OPReImportCountry/Code'' AS Location, 						
''Each value for OPReImportCountry/Code should be used only once'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND EXISTS
		(
		SELECT OPRIC.PartnerID
		FROM txdDEAESOutwardProcessingReImportCountry OPRIC	
		WHERE   OPRIC.PartnerID = DD.PartnerID 
		AND OPRIC.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPRIC.Code <> ''''
		AND EXISTS
			(
			SELECT OPRIC1.PartnerID
			FROM txdDEAESOutwardProcessingReImportCountry OPRIC1	
			WHERE   OPRIC1.PartnerID = DD.PartnerID 
			AND OPRIC1.DeclarationDataGUID = DD.DeclarationDataGUID
			AND OPRIC1.OutwardProcessingReImportCountryGUID <> OPRIC.OutwardProcessingReImportCountryGUID
			AND	OPRIC1.Code = OPRIC.Code
			)
		)
					
INSERT INTO #ValidationWarning
/*
SELECT 													?????????????????????????????????????????????????????????
''OPReImportCountry/Code'' AS Location, 		
''The data field must be a country called, but that name matches either in the first two letters (country code) with a Directory or with one of the 
countries that reported each in box 11 of the referenced by the data field "HEAD / GRANT / Outward processing" authorization are, if the data fields 
"HEAD / type of application (process)" and "HEAD / type of application (transfer)" with the values "z P + a / b / c / d / e / f / m / n / o / p / q / r ",
" nB / nK / nN + b / c "(customs outward processing using a PV-authorization) must be specified.''				

INSERT INTO #ValidationWarning*/

SELECT 
''OPReImportCountry/Code'' AS Location, 						
''Only "DE" is allowed to be specified for OPReImportCountry/Code'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		AND DD.DeclarationType3 IN (''s'', ''t'', ''u'', ''v'')
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 = ''d''
        )
	AND EXISTS
		(
		SELECT OPRIC.PartnerID
		FROM txdDEAESOutwardProcessingReImportCountry OPRIC	
		WHERE   OPRIC.PartnerID = DD.PartnerID 
		AND OPRIC.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPRIC.Code <> ''''
		AND	OPRIC.Code <> ''DE''
		)
					
INSERT INTO #ValidationWarning

SELECT 											------[Type] or Type????????????????????????????????????????????
''OPIdentification/[Type]'' AS Location, 						
''OPIdentification/[Type] is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND NOT EXISTS
		(
		SELECT OPI.PartnerID
		FROM txdDEAESOutwardProcessingIdentification OPI	
		WHERE   OPI.PartnerID = DD.PartnerID 
		AND OPI.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPI.[Type] <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT  											------[Type] or Type????????????????????????????????????????????
''OPIdentification/[Type]'' AS Location, 						
''OPIdentification/[Type] is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND EXISTS
		(
		SELECT OPI.PartnerID
		FROM txdDEAESOutwardProcessingIdentification OPI	
		WHERE   OPI.PartnerID = DD.PartnerID 
		AND OPI.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPI.[Type] <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT   											------[Type] or Type????????????????????????????????????????????
''OPIdentification/[Type]'' AS Location, 						
''Each value for OPIdentification/[Type] should be used only once'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND EXISTS
		(
		SELECT OPI.PartnerID
		FROM txdDEAESOutwardProcessingIdentification OPI	
		WHERE   OPI.PartnerID = DD.PartnerID 
		AND OPI.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPI.[Type] <> ''''
		AND EXISTS
			(
			SELECT OPI1.PartnerID
			FROM txdDEAESOutwardProcessingIdentification OPI1	
			WHERE   OPI1.PartnerID = DD.PartnerID 
			AND OPI1.DeclarationDataGUID = DD.DeclarationDataGUID
			AND OPI1.OutwardProcessingIdentificationGUID <> OPI.OutwardProcessingIdentificationGUID
			AND	OPI1.[Type] = OPI.[Type]
			)
		)
					
INSERT INTO #ValidationWarning

SELECT 	
''OPIdentification [''+CONVERT(VARCHAR(3),OPI.SequenceNum)+'']/[Type]''	AS Location,						------[Type] or Type????????????????????????????????????????????					
''"O" is not permitted value for OPIdentification/[Type]'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESOutwardProcessingIdentification OPI
ON DD.PartnerID = OPI.PartnerID AND DD.DeclarationDataGUID = OPI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND 
		(DD.StandardExchange = ''0''
		OR (
			SELECT COUNT (*)
			FROM txdDEAESOutwardProcessingIdentification OPI1
			WHERE   OPI1.PartnerID = @PartnerID 
			AND OPI1.DeclarationDataGUID = @DeclarationDataGUID
			AND OPI1.OutwardProcessingIdentificationGUID <> ''''
			) > 1
		)
	AND OPI.[Type] = ''O''
					
INSERT INTO #ValidationWarning

SELECT
''OPIdentification [''+CONVERT(VARCHAR(3),OPI.SequenceNum)+'']/Description'' AS Location, 						
''OPIdentification/Description is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESOutwardProcessingIdentification OPI
ON DD.PartnerID = OPI.PartnerID AND DD.DeclarationDataGUID = OPI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND OPI.[Type] = ''S''											------[Type] or Type????????????????????
	AND OPI.Description = ''''
					
INSERT INTO #ValidationWarning

SELECT
''OPIdentification/Description'' AS Location, 						
''OPIdentification/Description is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND EXISTS
		(
		SELECT OPI.PartnerID
		FROM txdDEAESOutwardProcessingIdentification OPI	
		WHERE   OPI.PartnerID = DD.PartnerID 
		AND OPI.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPI.Description <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT
''OPProduct/CommodityCode'' AS Location, 						
''OPProduct/CommodityCode is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND NOT EXISTS
		(
		SELECT OPP.PartnerID
		FROM txdDEAESOutwardProcessingProduct OPP	
		WHERE   OPP.PartnerID = DD.PartnerID 
		AND OPP.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPP.CommodityCode <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT 
''OPProduct/CommodityCode'' AS Location, 						
''OPProduct/CommodityCode is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND EXISTS
		(
		SELECT OPP.PartnerID
		FROM txdDEAESOutwardProcessingProduct OPP	
		WHERE   OPP.PartnerID = DD.PartnerID 
		AND OPP.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPP.CommodityCode <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT
''OPProduct [''+CONVERT(VARCHAR(3),OPP.SequenceNum)+'']/CommodityCode'' AS Location, 						
''Format for OPProduct/CommodityCode should be n8'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESOutwardProcessingProduct OPP
ON DD.PartnerID = OPP.PartnerID AND DD.DeclarationDataGUID = OPP.DeclarationDataGUID 
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND DD.StandardExchange = ''1''
	AND OPP.CommodityCode <>''''
	AND 
		(
		LEN (OPP.CommodityCode) <> 8
		OR ISNUMERIC (OPP.CommodityCode) = 0
		)
					
INSERT INTO #ValidationWarning

/*
SELECT 													?????????????????????????????????????????????????????????
''OPReImportCountry/Code'' AS Location, 		
''The commodity code must in the referenced by the data field "HEAD / GRANT / Outward processing" license listed his, if the data fields 
"HEAD / type of application (process)" and "HEAD / type of application (transfer)" with the values " zP + a / b / c / d / e / f / m / n / o / p / q / r "
or" nB / nK / nN + b / c "(Outward processing using a PV-authorization) are given ''				

INSERT INTO #ValidationWarning*/

SELECT
''OPProduct/Description'' AS Location, 						
''OPProduct/Description is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND NOT EXISTS
		(
		SELECT OPP.PartnerID
		FROM txdDEAESOutwardProcessingProduct OPP	
		WHERE   OPP.PartnerID = DD.PartnerID 
		AND OPP.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPP.Description <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT 
''OPProduct/Description'' AS Location, 						
''OPProduct/Description is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND EXISTS
		(
		SELECT OPP.PartnerID
		FROM txdDEAESOutwardProcessingProduct OPP	
		WHERE   OPP.PartnerID = DD.PartnerID 
		AND OPP.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPP.Description <> ''''
		)




INSERT INTO #ValidationWarning
SELECT ''HEADER/OPLocalClearanceAuthorizationNumber'' AS Location,
	''Format is not valid'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.OPLocalClearanceAuthorizationNumber <> ''''
	AND (
			(
				DD.OPLocalClearanceAuthorizationNumber NOT like ''[a-z][a-z][0-9][0-9][0-9][0-9]A7[0-9][0-9][0-9][0-9]''
				AND
				DD.OPLocalClearanceAuthorizationNumber NOT like ''DESDE[0-9][0-9][0-9][0-9]A7[0-9][0-9][0-9][0-9][0-9][0-9]''
				AND
				(DD.OPLocalClearanceAuthorizationNumber NOT like ''%SDE_____________________________'' 
				AND DD.OPLocalClearanceAuthorizationNumber not like ''DE%'')
			)
				OR LEFT(DD.OPLocalClearanceAuthorizationNumber, 2) NOT IN
				(SELECT Code FROM tmgGlobalCodes WHERE FieldName = ''DE-AES-C0010'')
	)


INSERT INTO #ValidationWarning
SELECT ''HEADER/OPAuthorizationNumber'' AS Location,
	''Format is not valid'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.OPAuthorizationNumber <> ''''
	AND (
			(
				DD.OPAuthorizationNumber NOT like ''[a-z][a-z][0-9][0-9][0-9][0-9]PV[0-9][0-9][0-9][0-9]''
				AND
				DD.OPAuthorizationNumber NOT like ''DEOPO[0-9][0-9][0-9][0-9]PV[0-9][0-9][0-9][0-9][0-9][0-9]''
				AND
				(DD.OPAuthorizationNumber NOT like ''%OPO_____________________________'' 
				AND DD.OPAuthorizationNumber not like ''DE%'')
			)
				OR LEFT(DD.OPAuthorizationNumber, 2) NOT IN 
				(SELECT Code FROM tmgGlobalCodes WHERE FieldName = ''DE-AES-C0010'')
	)

	
INSERT INTO #ValidationWarning
SELECT ''HEADER/AuthorizedExporterNumber'' AS Location,
	''Format is not valid'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.AuthorizedExporterNumber <> ''''
	AND (
			(
			DD.AuthorizedExporterNumber NOT like ''[a-z][a-z][0-9][0-9][0-9][0-9]ZA[0-9][0-9][0-9][0-9]''
			AND
			DD.AuthorizedExporterNumber NOT like ''DESDE[0-9][0-9][0-9][0-9]ZA[0-9][0-9][0-9][0-9][0-9][0-9]''
			AND
			(DD.AuthorizedExporterNumber NOT like ''%SDE_____________________________'' 
			AND DD.AuthorizedExporterNumber not like ''DE%'')
			)
			OR LEFT(DD.AuthorizedExporterNumber, 2) NOT IN 
			(SELECT Code FROM tmgGlobalCodes WHERE FieldName = ''DE-AES-C0010'')
	)

INSERT INTO #ValidationWarning
SELECT ''HEADER/TrustedExporterNumber'' AS Location,
	''Format is not valid'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		DD.TrustedExporterNumber <> '''' AND
		DD.TrustedExporterNumber NOT like ''DE[0-9][0-9][0-9][0-9]VA[0-9][0-9][0-9][0-9]''
	)


INSERT INTO txdDEAESValidationWarning
SELECT @PartnerID AS PartnerID,
	GETDATE() AS EffDate,
	@DeclarationGUID AS DeclarationGUID,
	@DeclarationDataGUID AS DeclarationDataGUID,
	NEWID() AS WarningGUID,
	Location,
	Warning,
	''N'',
	''N''
FROM #ValidationWarning
', CAST(N'2018-02-19T11:07:10.437' AS DateTime), N'DE-AES-2.4.2 E_EXP_DAT validation query', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-02-19T11:07:10.517' AS DateTime), N'DE-AES-2.4.2 E_EXP_ENT', N'DE-AES-2.4.2 E_EXP_ENT', N'
	
DECLARE @EffectiveValidationDate DATETIME = GETDATE()

DELETE
FROM txdDEAESValidationWarning
WHERE PartnerID = @PartnerID
	AND DeclarationGUID = @DeclarationGUID
	AND DeclarationDataGUID = @DeclarationDataGUID

CREATE TABLE #ValidationWarning (
	Location VARCHAR(1000) NOT NULL,
	Warning VARCHAR(2000) NOT NULL
	)



INSERT INTO #ValidationWarning

SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/BorderTypeOfTransport)'' AS Location,
	''The data field is required if ''''BorderTypeOfTransport'''' In the message E_EXP_REL is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_REL''
                                   ORDER BY M.SequenceNum DESC
                              )
	AND DD.BorderTypeOfTransport = '''' 
	AND
	DD1.BorderTypeOfTransport = ''''
		
	INSERT INTO #ValidationWarning 
	
SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/BorderTransportMeansID)'' AS Location,
	''The field is allowed if the data field ''''BorderTransportMeansID'''' is not specified in the message E_EXP_REL'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_REL''
                                   ORDER BY M.SequenceNum DESC
                              )
					AND DD.BorderTransportMeansID <> ''''
					AND DD1.BorderTransportMeansID <> ''''
	
	INSERT INTO #ValidationWarning 
	
SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/BorderTransportMeansNationality)'' AS Location,
	''The data field is required if ''''BorderTransportMeansNationality'''' In the message E_EXP_REL is not specified and BorderModeOfTransport in the E_EXP_REL has a value "2" or "20"; "5" or "50"; "9" or "90" '' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_REL''
                                   ORDER BY M.SequenceNum DESC
                              )
								AND DD.BorderTransportMeansNationality =''''
								AND DD1.BorderTransportMeansNationality =''''
								AND DD1.BorderModeOfTransport NOT IN (''2'', ''20'', ''5'', ''50'', ''9'', ''90'')
	
		
	INSERT INTO #ValidationWarning 
	SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/DeclarationOffice)'' AS Location,
	''Field is required;'' as warning
	FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
		AND DD.DeclarationOffice = ''''
				   
				   
		INSERT INTO #ValidationWarning 
	SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/DeclarationOffice)'' AS Location,
	''Field is required; Data field must match with ''''DeclarationOffice'''' in the E_EXP_REL'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_REL''
                                   ORDER BY M.SequenceNum DESC
                              )
				AND DD.DeclarationOffice <> DD1.DeclarationOffice
			
	
	INSERT INTO #ValidationWarning 
	
	 
	SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/SupplementaryDeclarationOffice)'' AS Location,
	''Field is required;'' as warning
	FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
		AND DD.SupplementaryDeclarationOffice = ''''
		
		INSERT INTO #ValidationWarning
		
	SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/SupplementaryDeclarationOffice)'' AS Location,
	''Field is required; The data must match with ''''SupplementaryDeclarationOffice'''' in the E_EXP_REL'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_REL''
                                   ORDER BY M.SequenceNum DESC
                              )
				AND DD.SupplementaryDeclarationOffice <> DD1.SupplementaryDeclarationOffice
				

	
INSERT INTO #ValidationWarning
SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/DeclarantID)'' AS Location,
	''Field is required;'' as warning
	FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
		AND DD.DeclarantID = ''''
		
		INSERT INTO #ValidationWarning
SELECT @E_EXP_ENT_NAME+''(E_EXP_ENT/Header/DeclarantID)'' AS Location,
	'' The data field must match the data field ''''DeclarantID'''' in the message E_EXP_REL'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_REL''
                                   ORDER BY M.SequenceNum DESC
                              )
							  AND DD.DeclarantID <> DD1.DeclarantID
							
	
	INSERT INTO #ValidationWarning
	
SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/DeclarantIDType)'' AS Location,
	''Feild is required; It is only the value ''''2'''' (EORI) allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((DD.DeclarantIDType <> ''2'')
	OR (DD.DeclarantIDType = ''''))
	
INSERT INTO #ValidationWarning
	
SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/DeclarantBranch)'' AS Location,
	''The data field is required if the DeclarantBranch in the E_EXP_REL is specified with the value ''''0000'''''' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_REL''
                                   ORDER BY M.SequenceNum DESC
                              )
							AND DD.DeclarantBranch = ''''
							AND DD1.DeclarantBranch  = ''0000''
										
INSERT INTO #ValidationWarning
	SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/ConsigneeIDType)'' AS Location,
	''Field is required. Only the values ??''''0'''' (address data), ''''2'''' (EORI number) and ''''4'''' (TCUI number) allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID =@DeclarationDataGUID
	
	AND DD.ConsigneeIDType NOT IN ( ''0'', ''2'',''4'')
	
	INSERT INTO #ValidationWarning
	
SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/ConsigneeID)'' AS Location,
	''Field is required and permissible only if ''''consigneeIDType'''' is specified with the value ''''2'''' or ''''4'''''' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID =@DeclarationDataGUID
	AND 
	(ConsigneeIDType <> ''2''	AND ConsigneeID <> ''''		
	OR ConsigneeIDType = ''2'' AND ConsigneeID = ''''
	OR
	ConsigneeIDType <> ''4''	AND ConsigneeID <> ''''		
	OR ConsigneeIDType = ''4'' AND ConsigneeID = '''')
			
	

INSERT INTO #ValidationWarning

SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/ConsigneeBranch)'' AS Location,
	'' The specification of the data field is allowed only if the data field ''''ConsigneeIDType'''' with the value ''''2''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
	ConsigneeIDType <> ''2''	AND ConsigneeBranch <> '''' )
	
INSERT INTO #ValidationWarning

SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/ConsigneeName)'' AS Location,
	''The specification of the data field is required and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''0'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (ConsigneeIDType <> ''0''	AND ConsigneeName <> ''''			
	OR ConsigneeIDType= ''0'' AND ConsigneeName = '''')

INSERT INTO #ValidationWarning

SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/ConsigneeAddress)'' AS Location,
	''The specification of the data field is required and permissible  only if the data field ''''ConsigneeIDType'''' with the value ''''0'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
		AND (ConsigneeIDType <> ''0''	AND ConsigneeAddress <> ''''	
	OR ConsigneeIDType = ''0'' AND ConsigneeAddress = '''')
	
INSERT INTO #ValidationWarning

SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/ConsigneeCity)'' AS Location,
	''The specification of the data field is required and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''0'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
		AND (ConsigneeIDType <> ''0''	AND ConsigneeCity <> ''''			
	OR ConsigneeIDType= ''0'' AND ConsigneeCity = '''')

INSERT INTO #ValidationWarning

SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/ConsigneePostCode)'' AS Location,
	''The specification of the data field is required and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''0'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (ConsigneeIDType <> ''0''	AND ConsigneePostCode <> ''''		
	OR ConsigneeIDType= ''0'' AND ConsigneePostCode = '''')

INSERT INTO #ValidationWarning

SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/ConsigneePostCode)'' AS Location,
	''If the ConsigneeCountry value is ''''DE'''' then ConsigneePostCode should be exactly 5 digits'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		ConsigneeCountry = ''DE''
		AND LEN(ConsigneePostCode) <> ''5''
		)
INSERT INTO #ValidationWarning

SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/ConsigneeCountry)'' AS Location,
	'' The specification of the data field is required and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''0'''' is specified '' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (ConsigneeIDType <> ''0''	AND ConsigneeCountry <> ''''		
	OR ConsigneeIDType= ''0'' AND ConsigneeCountry = '''')
	
INSERT INTO #ValidationWarning


SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/IncotermText)'' AS Location,
	''The specification of the data field is required and permissible only if the data field ''''IncotermCode'''' with  the value ''''XXX'''' is specified  '' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (IncotermCode <> ''XXX''	AND IncotermText <> ''''	
	OR IncotermCode = ''XXX'' AND IncotermText = '''')
	
	
	
INSERT INTO #ValidationWarning
	SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/IncotermText)'' AS Location,
	''The specification of the data field is NOT permitted if at least one data group from GoodsItem/Incoterms is specified   '' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND(
		DD.IncotermText <>''''
		and
		(  SELECT TOP 1 GI1.IncotermText 
			 FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID
			WHERE   DD1.PartnerID = @PartnerID AND DD1.DeclarationDataGUID = @DeclarationDataGUID
		) <>''''
		
		OR
		
		(  SELECT TOP 1 GI1.IncotermLocation
		 FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID
			WHERE   DD1.PartnerID = @PartnerID AND DD1.DeclarationDataGUID = @DeclarationDataGUID
		) <>''''
	)
	INSERT INTO #ValidationWarning
	
SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/Header/IncotermLocation)'' AS Location,
	''The specification of the data field is required and permissible only if the data field ''''Incotermscode'''' other than the value ''''XXX'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (IncotermCode = ''XXX''	AND IncotermLocation <> ''''	
	OR IncotermCode <> ''XXX'' AND IncotermLocation = '''')
	
	


--GoodsItem

INSERT INTO #ValidationWarning

SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/RegionOfOrigin)'' AS Location,
	''The field is required if data field ''''RegionOfOrigin'''' is not specified in the message E_EXP_REL'' AS Warning
FROM txdDEAESDeclarationData DD 
JOIN txdDEAESGoodsItem GI 
on DD.DeclarationDataGUID =GI.DeclarationDataGUID and DD.PartnerID=GI.PartnerID 
WHERE DD.PartnerID = @PartnerID	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_REL''
                                   ORDER BY M.SequenceNum DESC
                              )	
				 AND GI1.SequenceNum = GI.SequenceNum
				 AND 
				 GI.RegionOfOrigin = ''''
				 AND
				 GI1.RegionOfOrigin = '''' )
				 
INSERT INTO #ValidationWarning

SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/RegionOfOrigin)'' AS Location,
	''The value ''''99'''' is not permitted if the value ''''DE'''' in the ''''RefundCountryOfOrigin'''' is specified in the message E_EXP_REL'' AS Warning
FROM txdDEAESDeclarationData DD 
JOIN txdDEAESGoodsItem GI 
on DD.DeclarationDataGUID =GI.DeclarationDataGUID and DD.PartnerID=GI.PartnerID 
WHERE DD.PartnerID = @PartnerID	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_REL''
                                   ORDER BY M.SequenceNum DESC
                              )	
				 AND GI1.SequenceNum = GI.SequenceNum
				 AND 
				 GI.RegionOfOrigin =''99''
				 and GI1.RefundCountryOfOrigin = ''DE''   -- o.k edit
			)
INSERT INTO #ValidationWarning

SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/SupplementaryQuantity)'' AS Location,
	''Data field is required if CommodityCode; TARICCode; SupplementaryQuantity in the message E_EXP_REL are not specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
on DD.DeclarationDataGUID =GI.DeclarationDataGUID and DD.PartnerID=GI.PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_REL''
                                   ORDER BY M.SequenceNum DESC
                              )	
				 AND GI1.SequenceNum = GI.SequenceNum
				 AND GI.SupplementaryQuantity IS NULL
				 AND GI1.CommodityCode IS NULL
			)	 
		AND  EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_REL''
                                   ORDER BY M.SequenceNum DESC
                              )	
				 AND GI1.SequenceNum = GI.SequenceNum
				  AND GI.SupplementaryQuantity IS NULL
				 AND GI1.TARICCode IS NULL
				) 
		AND EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_REL''
                                   ORDER BY M.SequenceNum DESC
                              )	
				 AND GI1.SequenceNum = GI.SequenceNum
				 AND GI.SupplementaryQuantity IS NULL
				 AND GI1.SupplementaryQuantity IS NULL
			)

INSERT INTO #ValidationWarning

SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/StatisticalValue)'' AS Location,
	''field is required if StatisticalValue is not specified in the message E_EXP_REL'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
on DD.DeclarationDataGUID =GI.DeclarationDataGUID and DD.PartnerID=GI.PartnerID 
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_REL''
                                   ORDER BY M.SequenceNum DESC
                              )	
				 AND GI1.SequenceNum = GI.SequenceNum
				 AND GI.StatisticalValue = 0
				 AND GI1.StatisticalValue = 0
)
INSERT INTO #ValidationWarning

	SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/ConsigneeIDType)'' AS Location,
	''Only the values ??''''0'''' (address data), ''''2'''' (EORI number) and ''''4'''' (TCUI number) allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI. PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ConsigneeIDType NOT IN (''0'', ''2'', ''4'')
	
	INSERT INTO #ValidationWarning
	
	SELECT @E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/ConsigneeID)'' AS Location,
	''Field is required and permissible only if ''''consigneeIDType'''' is specified with the value ''''2'''' or ''''4'''''' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI. PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
	
	AND (
	GI.ConsigneeIDType <> ''2''	AND GI.ConsigneeID <> ''''		
	OR GI.ConsigneeIDType = ''2'' AND GI.ConsigneeID = ''''
	OR
	GI.ConsigneeIDType <> ''4''	AND GI.ConsigneeID <> ''''			
	OR GI.ConsigneeIDType = ''4'' AND GI.ConsigneeID = '''')
	
	
INSERT INTO #ValidationWarning

SELECT  
@E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/ConsigneeBranch)'' AS Location,
''The specification of the data field is required and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''2''''(EORI number) is specified , If not specified, the default value ''''0000'''' is used'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI. PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND   		
									(GI.ConsigneeIDType = ''2'' AND GI.ConsigneeBranch = '''')
									
									         
									 
INSERT INTO #ValidationWarning
									 
SELECT  
@E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/ConsigneeName)'' AS Location,
''The specification of the data field is required and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''0'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI. PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND (GI.ConsigneeIDType <> ''0''	AND GI.ConsigneeName <> ''''		
									OR GI.ConsigneeIDType= ''0'' AND GI.ConsigneeName = '''')           
									 
								
INSERT INTO #ValidationWarning								
												
SELECT  
@E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/ConsigneeAddress)'' AS Location,
''The specification of the data field is required and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''0'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI. PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND (GI.ConsigneeIDType <> ''0''	AND GI.ConsigneeAddress <> ''''		
									OR GI.ConsigneeIDType= ''0'' AND GI.ConsigneeAddress = '''')  
INSERT INTO #ValidationWarning
								
SELECT  
@E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/ConsigneeCity)'' AS Location,
''The specification of the data field is required and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''0'''' is specified '' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI. PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                               AND (GI.ConsigneeIDType <> ''0''	AND GI.ConsigneeCity <> ''''		
									OR GI.ConsigneeIDType= ''0'' AND GI.ConsigneeCity = '''')  

								

INSERT INTO #ValidationWarning	
							
SELECT  
@E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/ConsigneePostCode)'' AS Location,
''The specification of the data field is required and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''0'''' is specified and the value for this field should be exactly 5 digits if the data field ConsigneeCountry has a value "DE";'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI. PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
									 AND (
											(GI.ConsigneeIDType <> ''0''	AND GI.ConsigneePostCode <> '''')			
											OR (GI.ConsigneeIDType= ''0'' AND GI.ConsigneePostCode = '''')
												AND (GI.ConsigneeCountry = ''DE''
												AND
												LEN(GI.ConsigneePostCode) <> ''5'')
										)
													
													
INSERT INTO #ValidationWarning
													
SELECT  
@E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/ConsigneeCountry)'' AS Location,
''The specification of the data field is required and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''0'''' is specified '' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI. PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                              AND (GI.ConsigneeIDType <> ''0''	AND GI.ConsigneeCountry <> ''''		
									OR GI.ConsigneeIDType= ''0'' AND GI.ConsigneeCountry = '''')
	

		
INSERT INTO #ValidationWarning
	
	
SELECT  
@E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/IncotermText)'' AS Location,
''The specification of the data field is required and permissible only if the data field ''''IncotermCode'''' with the value ''''XXX'''' is specified '' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI. PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( GI.IncotermCode <> ''XXX'' and GI.IncotermText <> ''''
								OR  GI.IncotermCode = ''XXX'' and GI.IncotermText = '''')
								
INSERT INTO #ValidationWarning
	
SELECT  
@E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/IncotermLocation)'' AS Location,
''The specification of the data field is required and permissible only if the data field ''''IncotermCode'''' other than the value ''''XXX'''' is specified '' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI. PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( GI.IncotermCode = ''XXX'' and GI.IncotermLocation <> ''''
								OR  GI.IncotermCode <> ''XXX'' and GI.IncotermLocation = '''')
								
INSERT INTO #ValidationWarning
SELECT  
@E_EXP_ENT_NAME + ''(E_EXP_ENT/GoodsItem/Transaction Nature)'' AS Location,
'' The specification of the data group is required '' as warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
on DD.DeclarationDataGUID =GI.DeclarationDataGUID and DD.PartnerID=GI.PartnerID 
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_REL''
                                   ORDER BY M.SequenceNum DESC
                              )	
								 AND GI1.SequenceNum = GI.SequenceNum
								 AND GI.TransactionNature	=''''
								 AND GI1.TransactionNature	=''''	 
							)							  

INSERT INTO txdDEAESValidationWarning
SELECT @PartnerID AS PartnerID,
	GETDATE() AS EffDate,
	@DeclarationGUID AS DeclarationGUID,
	@DeclarationDataGUID AS DeclarationDataGUID,
	NEWID() AS WarningGUID,
	Location,
	Warning,
	''N'',
	''N''
FROM #ValidationWarning
', CAST(N'2018-02-19T11:07:10.517' AS DateTime), N'DE-AES-2.4.2 E_EXP_ENT validation query', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-02-19T11:07:10.540' AS DateTime), N'BCK DE-AES-2.4.2 E_EXP_IND 20180219115004', N'DE-AES-2.4.2 E_EXP_IND', N'
	
DECLARE @EffectiveValidationDate DATETIME = GETDATE()

DELETE
FROM txdDEAESValidationWarning
WHERE PartnerID = @PartnerID
	AND DeclarationGUID = @DeclarationGUID
	AND DeclarationDataGUID = @DeclarationDataGUID

CREATE TABLE #ValidationWarning (
	Location VARCHAR(1000) NOT NULL,
	Warning VARCHAR(2000) NOT NULL
	)
/*
INSERT INTO #ValidationWarning
select @E_EXP_IND_NAME + ''(E_EXP_IND/Header/RefundDestinationCountry)'' as Location,
''The values ''''XE'''' or ''''XF'''' are permissible only if the data field ''''DestinationCountry'''' in the export declaration (E_EXP_DAT/Header) with one of the values ''''QQ'''',''''QR'''' or ''''QS'''' are specified'' as Warning
from txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
      AND ( DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationDataGUID
                                    AND M.Type = ''E_EXP_DAT''
                                   ORDER BY M.SequenceNum DESC
                              )
                              AND
            DD.RefundDestinationCountry = ''XE''
or 
DD.RefundDestinationCountry = ''XF''                            
 AND DD1.DestinationCountry NOT IN (''QQ'', ''QR'', ''QS'') 
)

 INSERT INTO #ValidationWarning
 
select @E_EXP_IND_NAME + ''(E_EXP_IND/Header/RefundDestinationCountry)'' as Location,
''The values ''''XE'''' or ''''XF'''' are permissible only if the data field ''''NationalProcedure'''' in the export declaration (E_EXP_DAT/GoodsItem) with the value ''''F62'''' is specified'' as Warning
 from txdDEAESDeclarationData DD 
WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
AND (
	DD.RefundDestinationCountry = ''XE''
or 
DD.RefundDestinationCountry = ''XF''
	AND EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_DAT''
                                   ORDER BY M.SequenceNum DESC
                              )	
 	
and
  GI1.NationalProcedure <> ''F62''	
 ))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/RefundDestinationCountry)'' AS Location,
	''The values ''''XG'''', ''''XN'''', ''''XQ'''', ''''XR'''' and ''''XY'''' are allowed only if all the data field	''''NationalProcedure'''' in the export declaration (E_EXP_DAT/GoodsItem) with the value ''''F62'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
AND (DD.RefundDestinationCountry = ''XG''
	OR DD.RefundDestinationCountry = ''XN''
	OR DD.RefundDestinationCountry = ''XQ''
	OR DD.RefundDestinationCountry = ''XR''
	OR DD.RefundDestinationCountry = ''XY''
	AND EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_DAT''
                                   ORDER BY M.SequenceNum DESC
                              )	
AND GI1.NationalProcedure <> ''F62''

))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/RefundDestinationCountry)'' AS Location,
	''The values ''''XN'''', ''''XR'''' or ''''XY'''' are permissible only if the data field ''''destinationCountry'''' in the export declaration (E_EXP_DAT/Header) with one of the values from the code lists C0063 or I0801 (third countries) indicated becomes'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND( DD.RefundDestinationCountry IN (''XR'', ''XN'', ''XY'')
	AND NOT EXISTS (
		SELECT TOP 1 DD.DestinationCountry
		FROM txdDEAESDeclarationData DD
		INNER JOIN tmgGlobalCodes GC
			ON DD.DestinationCountry = GC.CODE
				AND DD.PartnerID = GC.PartnerID
				AND GC.FieldName = ''DE-AES-I0811''
		WHERE DD.PartnerID = @PartnerID
			AND DD.DeclarationGUID = @DeclarationGUID
			AND DD.TYPE = ''E_EXP_DAT''
		)
	OR NOT EXISTS (
		SELECT TOP 1 DD.DestinationCountry
		FROM txdDEAESDeclarationData DD
		INNER JOIN tmgGlobalCodes GC
			ON DD.DestinationCountry = GC.CODE
				AND DD.PartnerID = GC.PartnerID
				AND GC.FieldName = ''DE-AES-I0801''
		WHERE DD.PartnerID = @PartnerID
			AND DD.DeclarationGUID = @DeclarationGUID
			AND DD.TYPE = ''E_EXP_DAT''
		))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/RefundDestinationCountry)'' AS Location,
	''The values ''''XQ'''' are permissible only if the data field ''''destinationCountry'''' in the export declaration (E_EXP_DAT/Header) with one of the values from the code lists C0063 or I0801 (third countries), ''''QQ'''' or ''''QR''''  indicated becomes'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.RefundDestinationCountry = ''XQ''
	AND NOT EXISTS (
		SELECT TOP 1 DD.DestinationCountry
		FROM txdDEAESDeclarationData DD
		INNER JOIN tmgGlobalCodes GC
			ON DD.DestinationCountry = GC.CODE
				AND DD.PartnerID = GC.PartnerID
				AND GC.FieldName = ''DE-AES-I0801''
		WHERE DD.PartnerID = @PartnerID
			AND DD.DeclarationGUID = @DeclarationGUID
			AND DD.TYPE = ''E_EXP_DAT''
		)
	OR NOT EXISTS (
		SELECT TOP 1 DD.DestinationCountry
		FROM txdDEAESDeclarationData DD
		INNER JOIN tmgGlobalCodes GC
			ON DD.DestinationCountry = GC.CODE
				AND DD.PartnerID = GC.PartnerID
				AND GC.FieldName = ''DE-AES-I0811''
		WHERE DD.PartnerID = @PartnerID
			AND DD.DeclarationGUID = @DeclarationGUID
			AND DD.TYPE = ''E_EXP_DAT''
		)
*/

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterIDType)'' AS Location,
	'' Field is required. There are only the values ''''0'''' (address data), ''''2'''' (EORI number) and ''''4'''' (TCUI number) allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( DD.ExporterIDType NOT IN (''0'', ''2'', ''4''))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterID)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''ExporterIDType'''' with one of the values ''''2'''' or ''''4'''' (EORI or TCUI number) is specified '' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
			(
				ExporterID <> ''''
				AND ExporterIDType <> ''2''
				OR ExporterID = ''''
				AND ExporterIDType = ''2''
				)
			OR (
				ExporterID <> ''''
				AND ExporterIDType <> ''4''
				OR ExporterID = ''''
				AND ExporterIDType = ''4''
			)
	)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterBranch)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ExporterIDType'''' with the value ''''2''''(EORI number) is specified.
If not specified, the default is ''''0000'''' used.'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ExporterBranch = ''''
	AND ExporterIDType = ''2''

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterName)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ExporterIDType'''' with the value ''''0''''(EORI number) is specified.
If not specified, the default is ''''0000'''' used.'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ExporterName = ''''
	AND ExporterIDType = ''0''

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterAddress)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ExporterIDType'''' with the value ''''0''''(EORI number) is specified.
If not specified, the default is ''''0000'''' used.'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ExporterAddress = ''''
	AND ExporterIDType = ''0''

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterCity)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ExporterIDType'''' with the value ''''0''''(EORI number) is specified.
If not specified, the default is ''''0000'''' used.'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ExporterCity = ''''
	AND ExporterIDType = ''0''

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterPostCode)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ExporterIDType'''' with the value ''''0''''(EORI number) is specified.
If not specified, the default is ''''0000'''' used.'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((ExporterPostCode = ''''	AND ExporterIDType = ''0'')
	OR (ExporterPostCode <> ''000'' AND ExporterIDType <> ''''))

INSERT INTO #ValidationWarning
--#2
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterPostCode)'' AS Location,
	''The data field must be exactly five digits specified numerically, if the data field ''''ExporterCountry'''' with the value ''''DE'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		ExporterCountry = ''DE''
		AND LEN(ExporterPostCode) <> ''5''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterCountry)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ExporterIDType'''' with the value ''''0''''(EORI number) is specified.
If not specified, the default is ''''0000'''' used.'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		ExporterCountry <> ''''
		AND ExporterIDType <> ''0''
		OR ExporterCountry = ''''
		AND ExporterIDType = ''0''
		)
	AND ExporterCountry = ''''
	AND ExporterIDType <> ''0''

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/PlaceOfLoading)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''ExportAuthorizationNumber'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		PlaceOfLoading <> ''''
		AND ExportAuthorizationNumber = ''''
		OR PlaceOfLoading = ''''
		AND ExportAuthorizationNumber <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/PlaceOfLoadingAddress)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''PlaceOfLoading'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND PlaceOfLoadingAddress <> ''''
	AND PlaceOfLoading <> ''''
	AND PlaceOfLoadingAddress = ''''
	AND PlaceOfLoading = ''''

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/PlaceOfLoadingPostCode)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''PlaceOfLoading'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		PlaceOfLoadingPostCode <> ''''
		AND PlaceOfLoading <> ''''
		)
	AND (
		PlaceOfLoadingPostCode = ''''
		AND PlaceOfLoading = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/PlaceOfLoadingCity)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''PlaceOfLoading'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		PlaceOfLoadingCity <> ''''
		AND PlaceOfLoading <> ''''
		)
	AND (
		PlaceOfLoadingCity = ''''
		AND PlaceOfLoading = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/PlaceOfLoadingAdditionalInformation)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''PlaceOfLoading'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		PlaceOfLoadingAdditionalInformation <> ''''
		AND PlaceOfLoading <> ''''
		)
	AND (
		PlaceOfLoadingAdditionalInformation = ''''
		AND PlaceOfLoading = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantIDType)'' AS Location,
	''	Field is required. There are only the values ''''0'''' (address data), ''''2'''' (EORI number)'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (DD.DeclarantIDType NOT IN (''0'', ''2''))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantID)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''DeclarantIDType'''' with the value ''''2''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		DeclarantID <> ''''
		AND DeclarantIDType <> ''2''
		OR DeclarantID = ''''
		AND DeclarantIDType = ''2''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantBranch)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''DeclarantIDType'''' with the value'''' 2 ''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (DeclarantBranch = ''''
	AND DeclarantIDType = ''2'')

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantName)'' AS Location,
	''Dependency:  The specification of the data field is permitted only if the data field ''''DeclarantIDType'''' with the value ''''0''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (DeclarantName = ''''
	AND DeclarantIDType = ''0'')

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantAddress)'' AS Location,
	''Dependency:  The specification of the data field is permitted only if the data field ''''DeclarantIDType'''' with the value'''' 0 ''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (DeclarantAddress = ''''
	AND DeclarantIDType = ''0'')

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantCity)'' AS Location,
	''Dependency:  The specification of the data field is permitted only if the data field ''''DeclarantIDType'''' with the value'''' 0 ''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (DeclarantCity = ''''
	AND DeclarantIDType = ''0'')

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantPostCode)'' AS Location,
	''Dependency:  The specification of the data field is permitted only if the data field ''''DeclarantIDType'''' with the value'''' 0 ''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (DeclarantPostCode = ''''
	AND DeclarantIDType = ''0'')

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantPostCode)'' AS Location,
	'' The data field must be exactly five digits specified numerically, if the data field ''''DeclarantCountry'''' with the value ''''DE'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		DeclarantCountry = ''DE''
		AND LEN(DeclarantPostCode) <> ''5''
		) --second condition for this field

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantCountry)'' AS Location,
	''Dependency:  The specification of the data field is permitted only if the data field ''''DeclarantIDType'''' with the value'''' 0''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DeclarantCountry = ''''
	AND DeclarantIDType = ''0''

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorIDType)'' AS Location,
	'''' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		SubContractorIDType = ''2''
		AND SubContractorID = ''''
		) 

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorID)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''SubContractorIDType'''' with the value ''''2'''' (EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(SubContractorID <> ''''
		AND SubContractorIDType <> ''2'')
		OR( SubContractorID = ''''
		AND SubContractorIDType = ''2'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorBranch)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''SUBCONTRACTORS /SubContractorIDType'''' with the value ''''2'''' (EORI number) is specified. If not specified, the default is ''''0000'''' used'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(SubContractorBranch <> ''''
		AND SubContractorIDType <> ''2'')
		OR (SubContractorBranch = ''''
		AND SubContractorIDType = ''2'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorName)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''SUBCONTRACTORS /SubContractorIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(SubContractorName <> ''''
		AND SubContractorIDType <> ''0'')
		OR (SubContractorName = ''''
		AND SubContractorIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorAddress)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''SUBCONTRACTORS /SubContractorIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(SubContractorAddress <> ''''
		AND SubContractorIDType <> ''0'')
		OR (SubContractorAddress = ''''
		AND SubContractorIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorCity)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''SUBCONTRACTORS /SubContractorIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(SubContractorCity <> ''''
		AND SubContractorIDType <> ''0'')
		OR (SubContractorCity = ''''
		AND SubContractorIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorPostCode)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''SUBCONTRACTORS /SubContractorIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(SubContractorPostCode <> ''''
		AND SubContractorIDType <> ''0'')
		OR (SubContractorPostCode = ''''
		AND SubContractorIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorPostCode)'' AS Location,
	''  The data field must be exactly five digits specified numerically, if the data field ''''SubContractorCountry'''' with the value ''''DE'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		SubContractorCountry = ''DE''
		AND LEN(SubContractorPostCode) <> ''5''
		) --second condition

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorCountry)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''SUBCONTRACTORS /SubContractorIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(SubContractorCountry <> ''''
		AND SubContractorIDType <> ''0'')
		OR (SubContractorCountry = ''''
		AND SubContractorIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneeIDType)'' AS Location,
	'' Field is required. There are only the values ''''0'''' (address data), ''''2'''' (EORI number) and ''''4'''' (TCUI number) allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (ConsigneeIDType Not in (''0'', ''2'', ''4'')
	OR ConsigneeIDType = '''')

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneeID)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with one of the values ''''2'''' or ''''4'''' (EORI or TCUI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		(ConsigneeID <> ''''
		AND ConsigneeIDType <> ''2'')
		OR (ConsigneeID = ''''
		AND ConsigneeIDType = ''2'')
		)
	OR (
		ConsigneeID <> ''''
		AND ConsigneeIDType <> ''4''
		OR ConsigneeID = ''''
		AND ConsigneeIDType = ''4''
		)
)
INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneeBranch)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''2'''' (EORI number) is specified,
 If not specified, the default is ''''0000'''' used.'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		ConsigneeBranch <> ''''
		AND ConsigneeIDType <> ''2''
		OR ConsigneeBranch = ''''
		AND ConsigneeIDType = ''2''
		OR ConsigneeBranch <> ''0000''
		AND ConsigneeIDType = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneeName)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(ConsigneeName <> ''''
		AND ConsigneeIDType <> ''0'')
		OR (ConsigneeName = ''''
		AND ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneeAddress)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(ConsigneeAddress <> ''''
		AND ConsigneeIDType <> ''0'')
		OR (ConsigneeAddress = ''''
		AND ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneeCity)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(ConsigneeCity <> ''''
		AND ConsigneeIDType <> ''0'')
		OR (ConsigneeCity = ''''
		AND ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneePostCode)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(ConsigneePostCode <> ''''
		AND ConsigneeIDType <> ''0'')
		OR (ConsigneePostCode = ''''
		AND ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneePostCode)'' AS Location,
	''The data field must be exactly five digits specified numerically, if the data field ''''ConsigneeCountry'''' with the value ''''DE'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		ConsigneeCountry = ''DE''
		AND LEN(ConsigneePostCode) <> ''5''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneeCountry)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value'''' 0 ''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(ConsigneeCountry <> ''''
		AND ConsigneeIDType <> ''0'')
		OR (ConsigneeCountry = ''''
		AND ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning

--GOOds ITEM
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundPaymentCaseNAI)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data fields ''''CommodityCode'''' and ''''SecondAdditionalCommodityCode'''' is specified'' AS warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
on DD.DeclarationDataGUID =GI.DeclarationDataGUID and DD.PartnerID=GI.PartnerID 
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		RefundPaymentCaseNAI <> ''''
		AND CommodityCode = ''''
		)
	OR (
		RefundPaymentCaseNAI = ''''
		AND CommodityCode <> ''''
		)
	AND (
		RefundPaymentCaseNAI <> ''''
		AND SecondAdditionalCommodityCode = ''''
		)
	OR (
		RefundPaymentCaseNAI = ''''
		AND SecondAdditionalCommodityCode <> ''''
		)
)
INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundAdjustmentCoefficient)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data fields ''''CommodityCode'''' and ''''SecondAdditionalCommodityCode'''' is specified'' AS warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		RefundAdjustmentCoefficient <> 0
		AND CommodityCode = ''''
		)
	OR (
		RefundAdjustmentCoefficient = 0
		AND CommodityCode <> ''''
		)
	OR (
		RefundAdjustmentCoefficient <> 0
		AND SecondAdditionalCommodityCode = ''''
		)
	OR (
		RefundAdjustmentCoefficient = 0
		AND SecondAdditionalCommodityCode <> ''''
		) )

INSERT INTO #ValidationWarning
--#2
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundAdjustmentCoefficient)'' AS Location,
	''The data field must be greater than a value ''''0'''' indicated'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND (DD.DeclarationDataGUID = @DeclarationDataGUID
	AND RefundAdjustmentCoefficient = 0)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundComponentValueA)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data fields ''''CommodityCode'''' and ''''SecondAdditionalCommodityCode'''' is specified'' AS warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
(
	(
		RefundComponentValueA <> 0
		AND CommodityCode = ''''
		)
	OR (
		RefundComponentValueA = 0
		AND CommodityCode <> ''''
		)
	AND (
		RefundComponentValueA <> 0
		AND SecondAdditionalCommodityCode = ''''
		)
	OR (
		RefundComponentValueA = 0
		AND SecondAdditionalCommodityCode <> ''''
		)
)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundComponentValueB)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data fields ''''CommodityCode'''' and ''''SecondAdditionalCommodityCode'''' is specified'' AS warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
(
	(
		RefundComponentValueB <> 0
		AND CommodityCode = ''''
		)
	OR (
		RefundComponentValueB = 0
		AND CommodityCode <> ''''
		)
	OR (
		RefundComponentValueB <> 0
		AND SecondAdditionalCommodityCode = ''''
		)
	OR (
		RefundComponentValueB = 0
		AND SecondAdditionalCommodityCode <> ''''
		) 
)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundComponentValueC)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data fields ''''CommodityCode'''' and ''''SecondAdditionalCommodityCode'''' is specified'' AS warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
	(
	(
		RefundComponentValueC <> 0
		AND CommodityCode = ''''
		)
	OR (
		RefundComponentValueC = 0
		AND CommodityCode <> ''''
		)
	AND (
		RefundComponentValueC <> 0
		AND SecondAdditionalCommodityCode = ''''
		)
	OR (
		RefundComponentValueC = 0
		AND SecondAdditionalCommodityCode <> ''''
		) 
)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundComponentValueD)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data fields ''''CommodityCode'''' and ''''SecondAdditionalCommodityCode'''' is specified'' AS warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
(
	(
		GI.RefundComponentValueD <> 0
		AND GI.CommodityCode = ''''
		)
	OR (
		RefundComponentValueD = 0
		AND CommodityCode <> ''''
		)
	AND (
		RefundComponentValueC <> 0
		AND SecondAdditionalCommodityCode = ''''
		)
	OR (
		RefundComponentValueC = 0
		AND SecondAdditionalCommodityCode <> ''''
		)
)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConversionFactor1)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''SequenceNumber'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.ConversionFactor1 <> 0
		AND GII.SequenceNumber = 0
		)

INSERT INTO #ValidationWarning
--#2 statement for ConversionFactor1
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConversionFactor1)'' AS Location,
	''The specification of the data field is necessary and permitted only if the data field ''''ConversionFactor1Type'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.ConversionFactor1 <> 0
		AND GII.ConversionFactor1Type = ''''
		)
	OR (
		GII.ConversionFactor1 = 0
		AND GII.ConversionFactor1Type <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConversionFactor1Type)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''SequenceNumber'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.ConversionFactor1Type <> ''''
		AND GII.SequenceNumber = 0
		)

INSERT INTO #ValidationWarning
--#2 statement for ConversionFactor1Type
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConversionFactor1Type)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ConversionFactor1'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		GII.ConversionFactor1Type <> ''''
		AND GII.ConversionFactor1 = 0
		)
	OR (
		GII.ConversionFactor1Type = ''''
		AND GII.ConversionFactor1 <> 0
		))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConversionFactor2)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''SequenceNumber'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.ConversionFactor2 <> 0
		AND GII.SequenceNumber = 0
		) 

INSERT INTO #ValidationWarning
--#2 statement for ConversionFactor2
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConversionFactor2)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ConversionFactor1'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.ConversionFactor2 <> 0
		AND GII.ConversionFactor1 = 0
		) 

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConversionFactorRate)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''SequenceNumber'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.ConversionFactorRate <> 0
		AND GII.SequenceNumber = 0
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/WeightPercentage)'' AS Location,
	''The specification of the data field is necessary and permitted only if the data field ''''QuantityPerKG'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		GII.WeightPercentage <> 0
		AND GII.QuantityPerKG <> 0
		)
	OR (
		GII.WeightPercentage = 0
		AND GII.QuantityPerKG = 0
		))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/WeightPercentage)'' AS Location,
	''The data field must be greater than a value ''''0'''' indicated'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (GII.WeightPercentage = 0)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/QuantityPerKG)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''WeightPercentage'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND( (
		GII.QuantityPerKG <> 0
		AND GII.WeightPercentage <> 0
		)
	OR (
		GII.QuantityPerKG = 0
		AND GII.WeightPercentage = 0
		))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ManufacturerStatementNumber)'' AS Location,
	''The specification of the data field is not permitted if the data fields ''''CommodityCode'''' and ''''FirstAdditionalCommodityCode'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
		AND GI.GoodsItemGUID = GII.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.QuantityPerKG <> 0
		AND GI.CommodityCode <> ''''
		AND GI.FirstAdditionalCommodityCode <> ''''
		)

INSERT INTO #ValidationWarning
--#2 statement for ManufacturerStatementNumber 		
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ManufacturerStatementNumber)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''KeyNumber'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		GII.ManufacturerStatementNumber <> ''''
		AND GII.KeyNumber <> ''''
		)
	OR (
		GII.ManufacturerStatementNumber = ''''
		AND GII.KeyNumber = ''''
		))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/KeyNumber)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''ManufacturerStatementNumber'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		GII.KeyNumber <> ''''
		AND GII.ManufacturerStatementNumber <> ''''
		)
	OR (
		GII.KeyNumber = ''''
		AND GII.ManufacturerStatementNumber = ''''
		))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/LicenseNumber)'' AS Location,
	''The specification of the data field is permissible only if the data field ''''RefundPaymentCaseNAI'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
		AND GII.GoodsItemGUID = GI.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.LicenseNumber <> ''''
		AND GI.RefundPaymentCaseNAI <> ''''
		)


INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneeIDType)'' AS Location,
	'' Field is required. There are only the values ''''0'''' (address data), ''''2'''' (EORI number) and ''''4'''' (TCUI number) allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
	(GI.ConsigneeIDType NOT IN (''0'', ''2'', ''4'')
	OR GI.ConsigneeIDType = '''')

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneeID)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with one of the values ''''2'''' or ''''4'''' (EORI or TCUI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		(GI.ConsigneeID <> ''''
		AND GI.ConsigneeIDType <> ''2'')
		OR (GI.ConsigneeID = ''''
		AND GI.ConsigneeIDType = ''2'')
		)
	OR (
		(GI.ConsigneeID <> ''''
		AND GI.ConsigneeIDType <> ''4'')
		OR (GI.ConsigneeID = ''''
		AND GI.ConsigneeIDType = ''4'')
		))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneeBranch)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ConsigneeIDType'''' with the value ''''2''''(EORI number) is specified,If not specified, 
If not specified, the default is ''''0000'''' used.'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(GI.ConsigneeBranch = ''''
		AND GI.ConsigneeIDType = ''2'')
		OR (GI.ConsigneeBranch <> ''0000''
		AND GI.ConsigneeIDType = '''')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneeName)'' AS Location,
	''The specification of the data field is  necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''0''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(GI.ConsigneeName <> ''''
		AND GI.ConsigneeIDType <> ''0'')
		OR (GI.ConsigneeName = ''''
		AND GI.ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneeAddress)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''0''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(GI.ConsigneeAddress <> ''''
		AND GI.ConsigneeIDType <> ''0'')
		OR (GI.ConsigneeAddress = ''''
		AND GI.ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneeCity)'' AS Location,
	''The specification of the data field is  necessary and permitted only if the data field ''''ConsigneeIDType'''' with the value ''''0''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(GI.ConsigneeCity <> ''''
		AND GI.ConsigneeIDType <> ''0'')
		OR (GI.ConsigneeCity = ''''
		AND GI.ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneePostCode)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ConsigneeIDType'''' with the value ''''0''''(EORI number) is specified.
If not specified, the default is ''''0000'''' used'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((GI.ConsigneePostCode = ''''
	AND GI.ConsigneeIDType = ''0'')
	OR (GI.ConsigneePostCode <> ''0000''
	AND GI.ConsigneeIDType = ''''))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneePostCode)'' AS Location,
	''The data field must be exactly five digits specified numerically, if the data field ''''ConsigneeCountry'''' with the value ''''DE'''' is specified.'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GI.ConsigneeCountry = ''DE''
		AND LEN(GI.ConsigneePostCode) <> ''5''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/Quantity)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''QuantityUOM'''' with a value other than ''''div'''' or  ''''ltAnlage'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemDocument GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(GI.QuantityUOM <> ''div'')
		OR (GI.QuantityUOM <> ''ltAnlage''
		AND GI.Quantity = 0)
		)


INSERT INTO txdDEAESValidationWarning
SELECT @PartnerID AS PartnerID,
	GETDATE() AS EffDate,
	@DeclarationGUID AS DeclarationGUID,
	@DeclarationDataGUID AS DeclarationDataGUID,
	NEWID() AS WarningGUID,
	Location,
	Warning,
	''N'',
	''N''
FROM #ValidationWarning
', CAST(N'2018-02-19T11:07:10.540' AS DateTime), N'DE-AES-2.4.2 E_EXP_IND validation query', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:07:32.253' AS DateTime), N'96225379-d07a-4f8a-8539-aad4221deb69', N'FTZ Transition: Is client saving balances each week', N'Declare @StartDate AS Datetime
set @StartDate = (select top 1 txnDate from txdFTZBal WITH (NOLOCK) order by txnDate desc)
Select 
CASE WHEN (Select count (*) from txdFTZBal WITH (NOLOCK)
where txnDate between DATEADD(d, -10, @StartDate) and @StartDate) <> 0
Then ''Balances are being saved weekly.''
ELSE ''Balances are NOT being saved weekly.''
END AS Message', CAST(N'2017-08-16T15:07:32.253' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.027' AS DateTime), N'98d20633-3259-49ab-95ba-6d7e24fd7cfd', N'DSPedimentosTransport502', N'SELECT '''' AS [ViewTransport502],PedimentoNum,Patente,Pedimento,SeccionAduanera,RfcTransportista,CurpTransportista,
NombreTransportista,PaisTransporte,IdentificadorTransporte,FechaPagoReal
FROM txdMXDataStageTransport502 WITH (nolock) 
WHERE PartnerID = ''' + cast(@Partnerid as varchar(30)) + ''' 
ORDER BY pedimentonum DESC
--ORDER BY', CAST(N'2018-07-05T18:51:30.027' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.157' AS DateTime), N'6b076063-c742-413f-9f2b-e5427ab7a190', N'MXPedimentosLookup', N'SELECT
				'' AS [VIEW DETAILS],
				PedimentoNum,
				SUBSTRING(PedimentoNum,1,2) AS [Year],
				SUBSTRING(PedimentoNum,4,2) AS [PortCode],
				SUBSTRING(PedimentoNum,7,4) AS [Patente],
				SUBSTRING(PedimentoNum,12,7) AS [Sequence],
				PedimentoCategory,
				PedimentoCode,
				PedimentoRegimen
				FROM txdMXPedimentoheader PH WITH (nolock)
				WHERE EXISTS (SELECT TOP 1 1 FROM tmfDefaults TD (nolock) WHERE PH.partnerid = TD.partnerid)
				ORDER BY pedimentonum DESC
				--GROUP BY
				--ORDER BY', CAST(N'2018-07-05T18:51:30.157' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.157' AS DateTime), N'2bff8472-8392-4bd4-8004-96f06b68dec0', N'MXPedimentosLookup', N'SELECT
				'' AS [VIEW PEDIMENTO],
				PedimentoNum,
				SUBSTRING(PedimentoNum,1,2) AS [Year],
				SUBSTRING(PedimentoNum,4,2) AS [PortCode],
				SUBSTRING(PedimentoNum,7,4) AS [Patente],
				SUBSTRING(PedimentoNum,12,7) AS [Sequence],
				PedimentoCategory,
				PedimentoCode,
				PedimentoRegimen,
				ArrivalMOT,
				DepartureMOT,
				ImportExportMOT,
				CustomsImportExportLocation,
				CustomsFilingLocation,
				AuthorizationCode,
				ClosingAuthorizationCode,
				PedimentoBeginDate,
				PedimentoEndDate,
				LastProcessedDate,
				SubmissionDate,
				PedimentoPaymentDate,
				ManifestQty,
				ManifestQtyUom,
				ManifestWeight,
				ManifestWeightUom,
				FileSequenceNum,
				MXExchangeRate,
				InvoiceCount,
				ContainerCount
				FROM txdMXPedimentoheader PH WITH (nolock)
				WHERE EXISTS (SELECT TOP 1 1 FROM tmfDefaults TD (nolock) WHERE PH.partnerid = TD.partnerid)
				ORDER BY pedimentonum DESC', CAST(N'2018-07-05T18:51:30.157' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.163' AS DateTime), N'0c243a3d-6a64-42e3-af14-f8894810d28c', N'MXPedimentosParties', N'SELECT '''' AS [ViewParties],PH.pedimentonum,	PP.CompanyID,PP.CompanyName,PP.CompanyAddress1,PP.CompanyAddress2,PP.CompanyCity,PP.CompanyState,PP.CompanyPostalCode,PP.CompanyCountry
				FROM txdMXPedimentoParties PP wITH (nolock)
				JOIN txdMXPedimentoHeader PH (nolock)
				ON PP.pedimentoheaderguid = PH.pedimentoheaderguid AND PH.partnerid = PP.partnerid
				WHERE PP.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
				ORDER BY 1 DESC
				--order by', CAST(N'2018-07-05T18:51:30.163' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.167' AS DateTime), N'c0789355-6075-415c-924f-bc3eca0aed75', N'MXPedimentosInvoice', N'SELECT '''' AS [ViewInvoice],PH.pedimentonum,	InvoiceNum,InvoiceDate,Incoterm,InvoiceValue,InvoiceValueCurrencyCode,InvoiceValueUSD,BuyerSellerCompanyID,BuyerSellerName,BuyerSellerFederalID,
				BuyerSellerAddress1,BuyerSellerAddress2,BuyerSellerCity,BuyerSellerState,BuyerSellerPostalCode,BuyerSellerCountry
				FROM txdMXPedimentoInvoice PP wITH (nolock)
				JOIN txdMXPedimentoHeader PH (nolock)
				ON PP.pedimentoheaderguid = PH.pedimentoheaderguid AND PH.partnerid = PP.partnerid
				WHERE PP.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
				ORDER BY 1 DESC
				--order by', CAST(N'2018-07-05T18:51:30.167' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.167' AS DateTime), N'946e3808-bc5d-41df-b9f7-767aa0b6ce60', N'MXPedimentosRules', N'SELECT '''' AS [ViewRules],PH.pedimentonum,PP.SectionNum,PP.MXHSNum,PP.RuleType,PP.RuleType2,PP.RuleNum,PP.RuleNum2,PP.TxnQty,PP.Value
				FROM txdMXPedimentoRules PP wITH (nolock)
				JOIN txdMXPedimentoHeader PH (nolock)
				ON PP.pedimentoheaderguid = PH.pedimentoheaderguid AND PH.partnerid = PP.partnerid
				WHERE PP.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
				ORDER BY 1 DESC
				--order by', CAST(N'2018-07-05T18:51:30.167' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.170' AS DateTime), N'dc6e7aff-cacc-46ca-835e-8e1049079696', N'MXPedimentosTransportation', N'SELECT '''' AS [ViewTransportation],PH.pedimentonum,CarrierFederalID,CarrierCURP,CarrierName,CountryofTransport,TransportID,PP.ManifestQty,CarrierAddress,SealNum
				FROM txdMXPedimentoTransportation PP (nolock)
				JOIN txdMXPedimentoHEader PH (nolock)
				ON PP.pedimentoheaderguid = PH.pedimentoheaderguid AND PH.partnerid = PP.partnerid
				WHERE PP.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
				ORDER BY 1 DESC
				--order by', CAST(N'2018-07-05T18:51:30.170' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.170' AS DateTime), N'd8ab606f-c15f-4f7d-847f-e2c0a2686a05', N'MXPedimentosObservations', N'SELECT '''' AS [ViewObservations],PH.pedimentonum,PP.LineNum,PP.ObservationText
				FROM txdMXPedimentoObservations PP (nolock)
				JOIN txdMXPedimentoHEader PH (nolock)
				ON PP.pedimentoheaderguid = PH.pedimentoheaderguid AND PH.partnerid = PP.partnerid
				WHERE PP.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
				ORDER BY 1 DESC
				--order by', CAST(N'2018-07-05T18:51:30.170' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.170' AS DateTime), N'6f3ea7e3-a4dc-4adc-985f-1adb31f1dacf', N'MXPedimentosBillOfLading', N'SELECT '''' AS [VIEWBILLOFLADING],PH.pedimentonum,PP.BillOfLadingGUID,PP.MasterBillOfLading,PP.HouseBillOfLading
				FROM txdMXPedimentoBillofLading PP (nolock)
				JOIN txdMXPedimentoHEader PH (nolock)
				ON PP.pedimentoheaderguid = PH.pedimentoheaderguid AND PH.partnerid = PP.partnerid
				WHERE PP.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
				ORDER BY 1 DESC
				--order by', CAST(N'2018-07-05T18:51:30.170' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.170' AS DateTime), N'7006ca67-8e9e-4aec-bdb1-7557146c9ac7', N'MXPedimentosCompliments', N'SELECT '''' AS [VIEWCompliments],PH.pedimentonum,PP.IdentificationType,PP.Identification1,PP.Identification2,PP.Identification3
				FROM txdMXPedimentoCompliments PP (nolock)
				JOIN txdMXPedimentoHEader PH (nolock)
				ON PP.pedimentoheaderguid = PH.pedimentoheaderguid AND PH.partnerid = PP.partnerid
				WHERE PP.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
				ORDER BY 1 DESC
				--order by', CAST(N'2018-07-05T18:51:30.170' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.177' AS DateTime), N'63f4f491-8c26-4cc2-816a-ec1daac1053f', N'MXPedimentosContainer', N'SELECT '''' AS [VIEWContainer],PH.pedimentonum,PP.ContainerNum,PP.ContainerType
				FROM txdMXPedimentoContainer PP (nolock)
				JOIN txdMXPedimentoHEader PH (nolock)
				ON PP.pedimentoheaderguid = PH.pedimentoheaderguid AND PH.partnerid = PP.partnerid
				WHERE PP.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
				ORDER BY 1 DESC
				--order by', CAST(N'2018-07-05T18:51:30.177' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.177' AS DateTime), N'099c1284-e177-42df-9dc9-9cd3dfe4b59f', N'MXPedimentosDetails', N'SELECT '''' AS [VIEWDetail],PH.pedimentonum,AltHtsIndex,MXHSNum,AddlMXHSNum,SectionNum,ValueFactor,ValueType,ValueMethod,TxnQtyUOM,TxnQty,
				RptQtyUOM,RptQty,CountryBuySell,CountryOfOriginOrDestination,ProductNum,Make,Model,MXProductDesc,DeclaredValue,TotalValue,TotalValueUSD,
				TotalCustomsValue,ValueMXN,AddedValue,ProgramType,Program1,Program2,Program3,DutyType,DutyRate,DutyRateType,PaymentType,DutyAmount,StateCodeOrigin,
				StateCodeDestination,StateCodeBuyer,StateCodeSeller,ObservationText
				FROM txdMXPedimentoDetail PP (nolock)
				JOIN txdMXPedimentoHEader PH (nolock)
				ON PP.pedimentoheaderguid = PH.pedimentoheaderguid AND PH.partnerid = PP.partnerid
				WHERE PP.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
				ORDER BY 1 DESC
				--order by', CAST(N'2018-07-05T18:51:30.177' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.177' AS DateTime), N'b4d85ae2-db1b-4988-89e1-f1f179de0447', N'MXPedimentosRectificaciones', N'SELECT '''' AS [ViewRectificaciones],PH.pedimentonum,PP.RectifiedPedimentoNum,PP.OriginalPedimentoNum
				FROM txdMXPedimentoRectificaciones PP (nolock)
				JOIN txdMXPedimentoHEader PH (nolock)
				ON PP.pedimentoheaderguid = PH.pedimentoheaderguid AND PH.partnerid = PP.partnerid
				WHERE PP.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
				ORDER BY 1 DESC
				--order by', CAST(N'2018-07-05T18:51:30.177' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.180' AS DateTime), N'bdbf794b-6e32-41f3-86ac-4958f429b584', N'MXPedimentosFees', N'SELECT '''' AS [ViewFees],PH.pedimentonum,PP.FeeType,PP.FeeAmount,FeeRateType,FeeTotal,FeeFormOfPayment
				FROM txdMXPedimentoFees PP (nolock)
				JOIN txdMXPedimentoHEader PH (nolock)
				ON PP.pedimentoheaderguid = PH.pedimentoheaderguid AND PH.partnerid = PP.partnerid
				WHERE PP.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
				ORDER BY 1 DESC
				--order by', CAST(N'2018-07-05T18:51:30.180' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.180' AS DateTime), N'279532bf-30f4-4da5-8865-34b45ebb6ecf', N'MXPedimentosRectificacionesFees', N'SELECT '''' AS [ViewRectificacionesFees],PH.pedimentonum,PP.FeeType,PP.PaymentType,FeeAmount
				FROM txdMXPedimentoRectificacionesFees PP (nolock)
				JOIN txdMXPedimentoHEader PH (nolock)
				ON PP.pedimentoheaderguid = PH.pedimentoheaderguid AND PH.partnerid = PP.partnerid
				WHERE PP.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
				ORDER BY 1 DESC
				--order by', CAST(N'2018-07-05T18:51:30.180' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.180' AS DateTime), N'd9661767-c286-44e8-be7e-a926ac395200', N'MXPedimentosHSLineArticle303', N'SELECT '''' AS [ViewHSLineArticle303],PH.pedimentonum,PP.SectionNum,PP.AltHtsNum,TotalValueNonOriginating,Duty
				FROM txdMXPedimentoHSLineArticle303 PP (nolock)
				JOIN txdMXPedimentoHEader PH (nolock)
				ON PP.pedimentoheaderguid = PH.pedimentoheaderguid AND PH.partnerid = PP.partnerid
				WHERE PP.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
				ORDER BY 1 DESC
				--order by', CAST(N'2018-07-05T18:51:30.180' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-07-05T18:51:30.180' AS DateTime), N'f414b244-6eb3-49fa-9e68-5b1a25105907', N'MXPedimentosHSLineArticle303', N'SELECT PH.pedimentonum,PP.SectionNum,PP.AltHtsNum,TaxType,TaxTotal
					FROM txdMXPedimentoHSLineItemFees PP (nolock)
					JOIN txdMXPedimentoHEader PH (nolock)
					ON PP.pedimentoheaderguid = PH.pedimentoheaderguid AND PH.partnerid = PP.partnerid
					WHERE PP.PartnerID = ''' + cast(@Partnerid as varchar(30)) + '''
					ORDER BY 1 DESC
					--order by', CAST(N'2018-07-05T18:51:30.180' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-08-20T10:35:49.413' AS DateTime), N'DBA3D979-802B-4FC3-BD2F-B20F0209E3E5', N'Classification Lookup: CI - BE Retaliatory Tariffs', N'
SELECT *, ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum ASC) AS [RowNum]
FROM (
 SELECT
  ''[Edit](/Maintenance/Edit.aspx?ID=''+CAST(BEpc.ProductGuid AS char(36))+''&TYPE=1&COUNTRY=''+CIRetaliatory.ControlCountry+'')'' AS Edit,
  BEpc.ProductNum,
  BEpc.ProductDesc,
  ''[''+BEpc.HsNum+''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+BEpc.HsNum+''&Country=''+CIRetaliatory.ControlCountry+'')'' AS HsNum,
  CIRetaliatory.ControlDesc,
  CIRetaliatory.TranslationValue,
  1 AS NoOrder
 FROM dbo.tmdBEProductClassification BEpc WITH (NOLOCK)
 INNER JOIN dbo.vid_CI_BE_RetaliatoryTariffs CIRetaliatory WITH (NOLOCK)
  ON BEpc.PartnerID = CIRetaliatory.PartnerID
  AND BEpc.ProductGuid = CIRetaliatory.ProductGuid
 WHERE BEpc.PartnerID = @PartnerID
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-08-20T10:35:49.413' AS DateTime), N'Displays the BE retaliatory tariffs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-08-20T10:35:49.413' AS DateTime), N'F71C420F-90E7-4D15-9658-E350771364E5', N'Classification Lookup: CI - NL Retaliatory Tariffs', N'
SELECT *, ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum ASC) AS [RowNum]
FROM (
 SELECT
  ''[Edit](/Maintenance/Edit.aspx?ID=''+CAST(NLpc.ProductGuid AS char(36))+''&TYPE=1&COUNTRY=''+CIRetaliatory.ControlCountry+'')'' AS Edit,
  NLpc.ProductNum,
  NLpc.ProductDesc,
  ''[''+NLpc.HsNum+''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+NLpc.HsNum+''&Country=''+CIRetaliatory.ControlCountry+'')'' AS HsNum,
  CIRetaliatory.ControlDesc,
  CIRetaliatory.TranslationValue,
  1 AS NoOrder
 FROM dbo.tmdNLProductClassification NLpc WITH (NOLOCK)
 INNER JOIN dbo.vid_CI_NL_RetaliatoryTariffs CIRetaliatory WITH (NOLOCK)
  ON NLpc.PartnerID = CIRetaliatory.PartnerID
  AND NLpc.ProductGuid = CIRetaliatory.ProductGuid
 WHERE NLpc.PartnerID = @PartnerID
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-08-20T10:35:49.413' AS DateTime), N'Displays the NL retaliatory tariffs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-08-20T10:35:49.413' AS DateTime), N'E69D4DE2-BAAE-4C80-86F5-BE525115DE7A', N'Classification Lookup: CI - DE Retaliatory Tariffs', N'
SELECT *, ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum ASC) AS [RowNum]
FROM (
 SELECT
  ''[Edit](/Maintenance/Edit.aspx?ID=''+CAST(DEpc.ProductGuid AS char(36))+''&TYPE=1&COUNTRY=''+CIRetaliatory.ControlCountry+'')'' AS Edit,
  DEpc.ProductNum,
  DEpc.ProductDesc,
  ''[''+DEpc.HsNum+''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+DEpc.HsNum+''&Country=''+CIRetaliatory.ControlCountry+'')'' AS HsNum,
  CIRetaliatory.ControlDesc,
  CIRetaliatory.TranslationValue,
  1 AS NoOrder
 FROM dbo.tmdDEProductClassification DEpc WITH (NOLOCK)
 INNER JOIN dbo.vid_CI_DE_RetaliatoryTariffs CIRetaliatory WITH (NOLOCK)
  ON DEpc.PartnerID = CIRetaliatory.PartnerID
  AND DEpc.ProductGuid = CIRetaliatory.ProductGuid
 WHERE DEpc.PartnerID = @PartnerID
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-08-20T10:35:49.413' AS DateTime), N'Displays the DE retaliatory tariffs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-08-20T10:35:49.413' AS DateTime), N'A565D241-8E54-4164-A7D9-40C1B570FCA9', N'Classification Lookup: CI - GB Retaliatory Tariffs', N'
SELECT *, ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum ASC) AS [RowNum]
FROM (
 SELECT
  ''[Edit](/Maintenance/Edit.aspx?ID=''+CAST(GBpc.ProductGuid AS char(36))+''&TYPE=1&COUNTRY=''+CIRetaliatory.ControlCountry+'')'' AS Edit,
  GBpc.ProductNum,
  GBpc.ProductDesc,
  ''[''+GBpc.HsNum+''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+GBpc.HsNum+''&Country=''+CIRetaliatory.ControlCountry+'')'' AS HsNum,
  CIRetaliatory.ControlDesc,
  CIRetaliatory.TranslationValue,
  1 AS NoOrder
 FROM dbo.tmdGBProductClassification GBpc WITH (NOLOCK)
 INNER JOIN dbo.vid_CI_GB_RetaliatoryTariffs CIRetaliatory WITH (NOLOCK)
  ON GBpc.PartnerID = CIRetaliatory.PartnerID
  AND GBpc.ProductGuid = CIRetaliatory.ProductGuid
 WHERE GBpc.PartnerID = @PartnerID
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-08-20T10:35:49.413' AS DateTime), N'Displays the GB retaliatory tariffs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-08-20T10:35:49.413' AS DateTime), N'CA5101CE-CF5C-4119-A69E-88E841F84924', N'Classification Lookup: CI - FR Retaliatory Tariffs', N'
SELECT *, ROW_NUMBER() OVER (ORDER BY @orderby@, ProductNum ASC) AS [RowNum]
FROM (
 SELECT
  ''[Edit](/Maintenance/Edit.aspx?ID=''+CAST(FRpc.ProductGuid AS char(36))+''&TYPE=1&COUNTRY=''+CIRetaliatory.ControlCountry+'')'' AS Edit,
  FRpc.ProductNum,
  FRpc.ProductDesc,
  ''[''+FRpc.HsNum+''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+FRpc.HsNum+''&Country=''+CIRetaliatory.ControlCountry+'')'' AS HsNum,
  CIRetaliatory.ControlDesc,
  CIRetaliatory.TranslationValue,
  1 AS NoOrder
 FROM dbo.tmdFRProductClassification FRpc WITH (NOLOCK)
 INNER JOIN dbo.vid_CI_FR_RetaliatoryTariffs CIRetaliatory WITH (NOLOCK)
  ON FRpc.PartnerID = CIRetaliatory.PartnerID
  AND FRpc.ProductGuid = CIRetaliatory.ProductGuid
 WHERE FRpc.PartnerID = @PartnerID
) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-08-20T10:35:49.413' AS DateTime), N'Displays the FR retaliatory tariffs', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-08-23T08:28:52.513' AS DateTime), N'd07346ec-727a-42b5-a88b-4fba98b3f28f', N'GLOBAL CLASSIFICATION - SPREADSHEET', N'INSERT INTO tlgworkflowschedule ( PartnerID , EffDate , WorkFlowGUID , Description , Recurring , Time , Date , WorkFlow , LastUpdated , Interval , DeletedFlag , KeepDuringRollback )
SELECT PartnerID
                ,GETDATE()
                ,NEWID()
                ,''LOAD GLOBAL CLASSIFICATION - SPREADSHEET''
                ,''N''
                ,CONVERT(VARCHAR(5), DATEADD(second, - 5, GETDATE()), 108)
                ,CAST(GETDATE() AS DATE)
                ,''LOAD GLOBAL CLASSIFICATION - SPREADSHEET''
                ,''1900-01-01 00:00:00.000''
                ,''0''
                ,''N''
                ,''N''
FROM dbo.tmfDefaults WITH (NOLOCK)', CAST(N'2018-08-23T08:28:52.513' AS DateTime), N'GLOBAL CLASSIFICATION - SPREADSHEET', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-09-05T14:01:54.380' AS DateTime), N'5C5135B6-154A-459B-99BF-0FD74421277B', N'Content Integration Lookup:  ADD / CVD Applies', N'SELECT *

 ,ROW_NUMBER() OVER (

  ORDER BY @orderby@

   ,ProductNum ASC

  ) AS [RowNum]

FROM (

 SELECT ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' AS Edit

  ,xxpc.ProductNum

  ,xxpc.ProductDesc

  ,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum

  ,CIControls.ADDCVDApplies

  ,1 AS NoOrder

 FROM tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK)

 JOIN vid_CI_@COUNTRY_CODE@_ADDCVDApplies CIControls WITH (NOLOCK) ON xxpc.ProductGuid = CIControls.ProductGuid

  AND xxpc.PartnerID = CIControls.PartnerID

 WHERE xxpc.PartnerID = @PartnerID@

 ) AS LookupViewInner

WHERE @whereclause@

', CAST(N'2018-09-05T14:01:54.380' AS DateTime), N'Content Integration Lookup:  ADD / CVD Applies', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-09-06T13:19:02.560' AS DateTime), N'5370C71C-FA75-4D75-8970-71CA143CFC0A', N'CI Lookup: Retaliatory Tariffs for FTZ 3461', N'SELECT DISTINCT  wed.PartnerID

            ,wed.ExitDocID

            ,wed.HtsNum

            ,wed.HtsNum2

            ,wed.CountryOfOrigin

            ,wed.ManufacturerID

            ,ci.ControlCountry

            ,ci.CONTROL

            ,ci.ControlType

            ,ci.EffectivityDate

            ,ci.ExpirationDate

            ,ci.TranslationValue

            ,ci.AgencyCode

            ,RptQty

            ,RptQtyUom

            ,StatusCode

            ,Value

            ,Value2

            ,LineNum

            ,PrivilegeDate

            ,SellerID

            ,EntryBeginDate

            ,EntryEndDate

            ,isnull(CargoLineItemNum,'''') as CargoLineItemNum

      FROM txdWeeklyEstDetail wed with (nolock)

      join txdWeeklyEstHeader weh with (nolock)

      on wed.ExitDocID = wed.ExitDocID

      and wed.PartnerID = weh.PartnerID

      left join txdUSPGAMap map with (nolock)

      on map.EntryNumber = weh.ExitDocID

      left join txdUSEntityMap entity with (nolock)

      on entity.PGAProductGUID = map.PGAProductGUID

      join vid_CI_FTZ_US_3461 ci with (nolock)

      on ci.HtsNum = wed.HtsNum

      and ci.CountryOfOrigin = wed.CountryOfOrigin

      and ci.ExitDocID = weh.ExitDocID

      and ci.PartnerID = weh.PartnerID

      where ci.PartnerID = (select partnerID from tmfdefaults)

      order by ExitDocID, EntryBeginDate', CAST(N'2018-09-06T13:19:02.560' AS DateTime), N'This query will return any lines on a weekly estimate with an HS and Country of Origin flagged by a retaliatory tariff', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-09-21T13:55:14.013' AS DateTime), N'F0FF7A5D-D2C7-4EE8-86AE-01AF9CBFDEA5', N'Classification Lookup: CI Descriptions', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum ASC
		) AS [RowNum]
FROM (
	SELECT ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' AS Edit
		,xxpc.ProductNum
		,xxpc.ProductDesc
		,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum
		,CIDescriptions.LongDescription
		,CIDescriptions.ShortDescription
		,1 AS NoOrder
	FROM tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK)
	JOIN vid_CI_@COUNTRY_CODE@_Descriptions CIDescriptions WITH (NOLOCK) ON xxpc.ProductGuid = CIDescriptions.ProductGuid
		AND xxpc.PartnerID = CIDescriptions.PartnerID
	WHERE xxpc.PartnerID = @PartnerID
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-09-21T13:55:14.013' AS DateTime), N'Displays the HS Long and Short descriptions associated with the products in the Global Classification', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-09-21T13:55:14.090' AS DateTime), N'3243A46D-54C2-4919-9067-ADEEB50D8C65', N'Classification Lookup: CI RptQtyUOM', N'SELECT *
       ,
ROW_NUMBER() OVER (
              ORDER BY @orderby@
                     ,ProductNum ASC
              ) AS [RowNum]
FROM (
       SELECT ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' AS Edit
              ,xxpc.ProductNum
              ,xxpc.ProductDesc
              ,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum
              ,xxpc.txnqtyuom
              ,xxpc.HSUOMConvFactor
               ,CIUOM.UOM1 AS RptQtyUOM1
                    ,xxpc.AddlHSUOMConvFactor
              ,CIUOM.UOM2 AS RptQtyUOM2
              ,1 AS NoOrder
       FROM tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK)
       JOIN vid_CI_@COUNTRY_CODE@_GC_UOM CIUOM WITH (NOLOCK) 
       ON xxpc.ProductGuid = CIUOM.ProductGuid
              AND xxpc.PartnerID = CIUOM.PartnerID
       WHERE xxpc.PartnerID = @PartnerID
       ) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-09-21T13:55:14.090' AS DateTime), N'Displays the RptQtyUOMs associated with the products in the Global Classification', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-10-02T12:47:21.117' AS DateTime), N'67D74CE7-194C-4506-B6C8-08C9E54AA970', N'Classification Lookup: CI Retaliatory Tarriffs (Non-EU)', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum ASC
		) AS [RowNum]
FROM (
	SELECT ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' AS Edit
		,xxpc.ProductNum
		,xxpc.ProductDesc
		,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum
		,xxpc.CountryOfOrigin
		,CIRetaliatoryTariffs.EffectivityDate
		,CIRetaliatoryTariffs.TranslationValue
		,1 AS NoOrder
	FROM tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK)
	JOIN vid_CI_@COUNTRY_CODE@_RetaliatoryTariffs_COO CIRetaliatoryTariffs WITH (NOLOCK) ON xxpc.ProductGuid = CIRetaliatoryTariffs.ProductGuid
		AND xxpc.PartnerID = CIRetaliatoryTariffs.PartnerID
	WHERE xxpc.PartnerID = @PartnerID
		AND ''@COUNTRY_CODE@'' NOT IN (
			''AT''
			,''BE''
			,''BG''
			,''CY''
			,''CZ''
			,''DE''
			,''DK''
			,''EE''
			,''ES''
			,''FI''
			,''FR''
			,''GB''
			,''GF''
			,''GG''
			,''GP''
			,''GR''
			,''HR''
			,''HU''
			,''IE''
			,''IM''
			,''IT''
			,''JE''
			,''LT''
			,''LU''
			,''LV''
			,''MC''
			,''MQ''
			,''MT''
			,''NL''
			,''PL''
			,''PT''
			,''RE''
			,''RO''
			,''SE''
			,''SI''
			,''SK''
			,''XN''
			,''YT''
			)
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-10-02T12:47:21.117' AS DateTime), N'Displays Retaliatory Tarriffs from Non-EU contries for products in the Global Classification', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-10-02T12:47:21.227' AS DateTime), N'ACEB46BC-0A7B-4C54-8DF9-D5A7088CDC16', N'Classification Lookup: CI Retaliatory Tarriffs (EU)', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum ASC
		) AS [RowNum]
FROM (
	SELECT ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' AS Edit
		,xxpc.ProductNum
		,xxpc.ProductDesc
		,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum
		,xxpc.CountryOfOrigin
		,CIRetaliatoryTariffs.EffectivityDate
		,CIRetaliatoryTariffs.TranslationValue
		,1 AS NoOrder
	FROM tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK)
	JOIN vid_CI_@COUNTRY_CODE@_RetaliatoryTariffs_COO CIRetaliatoryTariffs WITH (NOLOCK) ON xxpc.ProductGuid = CIRetaliatoryTariffs.ProductGuid
		AND xxpc.PartnerID = CIRetaliatoryTariffs.PartnerID
	WHERE xxpc.PartnerID = @PartnerID
		AND ''@COUNTRY_CODE@''  IN (
			''AT''
			,''BE''
			,''BG''
			,''CY''
			,''CZ''
			,''DE''
			,''DK''
			,''EE''
			,''ES''
			,''FI''
			,''FR''
			,''GB''
			,''GF''
			,''GG''
			,''GP''
			,''GR''
			,''HR''
			,''HU''
			,''IE''
			,''IM''
			,''IT''
			,''JE''
			,''LT''
			,''LU''
			,''LV''
			,''MC''
			,''MQ''
			,''MT''
			,''NL''
			,''PL''
			,''PT''
			,''RE''
			,''RO''
			,''SE''
			,''SI''
			,''SK''
			,''XN''
			,''YT''
			)
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-10-02T12:47:21.227' AS DateTime), N'Displays Retaliatory Tarriffs from EU contries for products in the Global Classification', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-10-30T12:11:14.167' AS DateTime), N'5531126C-61DD-4AED-8527-5ADC81561954', N'Classification Lookup: CI PrefRates', N'SELECT *

 ,ROW_NUMBER() OVER (

  ORDER BY @orderby@

   ,ProductNum ASC

  ) AS [RowNum]

FROM (

 SELECT ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' AS Edit

  ,xxpc.ProductNum

  ,xxpc.ProductDesc

  ,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum

  ,CIRates.CountryOfOrigin

  ,CIRates.PreferentialRate

  ,CIRates.PreferEffdate

  ,CIRates.PreferExpDate 

  ,1 AS NoOrder

 FROM tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK)

 JOIN vid_CI_@COUNTRY_CODE@_PrefRates CIRates WITH (NOLOCK) ON xxpc.ProductGuid = CIRates.ProductGuid

  AND xxpc.PartnerID = CIRates.PartnerID

 WHERE xxpc.PartnerID = @PartnerID@

 ) AS LookupViewInner

WHERE @whereclause@', CAST(N'2018-10-30T12:11:14.167' AS DateTime), N'Displays the PrefRate associated with the products in the Global Classification', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-09-21T09:49:14.983' AS DateTime), N'63B4659F-36BA-4306-9D52-98C10959F63D', N'8B9EC38A-7287-45C4-B390-DD2D8A49AEFE', N'SELECT ''1'' AS [Skip]  FROM tmdDecisionTreeSessionResult WITH (NOLOCK)  WHERE PartnerID=@partner AND TreeGuid=@tree AND SessionGuid=@session AND Name=''CBPRequestDatePresent'' AND Value=''No''', CAST(N'2015-09-21T09:47:16.437' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2020-08-04T11:14:55.140' AS DateTime), N'D6C32453-7212-4E59-8DEB-D759D3A3FBB7', N'PTR1ExcelDownload', N'--sheetnames::RM,FG,BOM
					SELECT
					ROW_NUMBER() OVER (ORDER BY CNHandbookPCDetailGUID) AS 序号
					,ProductNum AS 料号
					,HSNum AS 商品编码
					,ProductName AS 商品名称
					,ProductSDE AS 规格型号
					,TxnQtyUOM AS 申报计量单位代码
					,RptQtyUOM AS 法定计量单位代码
					,AddlRptQtyUOM AS 法定第二计量单位代码
					,TxnQty AS 申报数量
					,Value AS 申报单价
					,CurrencyCode AS 币制
					,DutyMode AS 征免方式
					,SubMaterialMarkCode AS 主料标志
					,EnterpriseExecuteMarkCode AS 企业执行标志
					,ModifyMarkCode AS 修改标志
					,ApprovedMaxRemainQty AS 批准最大余数量
					,Remark AS 备注
					FROM txdCNHandbookPCDetail WHERE CNHandbookHeaderGUID = ''CNHandbookHeaderGUIDVariable'' AND PartnerID = (select top 1 PartnerId from tmfDefaults)
					SELECT
					ROW_NUMBER() over (order by CNHandbookIMDetailGUID) AS 序号
					,ProductNum AS 料号
					,HSNum AS 商品编码
					,ProductName AS 商品名称
					,ProductSDE AS 规格型号
					,TxnQtyUOM AS 申报计量单位代码
					,RptQtyUOM AS 法定计量单位代码
					,AddlRptQtyUOM AS 法定第二计量单位代码
					,TxnQty AS 申报数量
					,Value AS 申报单价
					,CurrencyCode AS 币制
					,DutyMode AS 征免方式
					,EnterpriseExecuteMarkCode AS 企业执行标志
					,ModifyMarkCode AS 修改标志
					,Remark AS 备注
					FROM txdCNHandbookIMDetail WHERE CNHandbookHeaderGUID = ''CNHandbookHeaderGUIDVariable'' AND PartnerID = (select top 1 PartnerId from tmfDefaults)
					SELECT					   
					ROW_NUMBER() over (order by PC.CNHandbookConsDetailGUID) AS 序号       
					,BOM.FGSeqID AS 成品序号       
					,PC.PCProductSeqNum AS 料件序号       
					,BOM.BOMVersion AS 单耗版本号       
					,PC.NetConsumptionQty AS 净耗       
					,PC.NetConsumptionRate AS "有形损耗率(%)"       
					,PC.AttritionRate AS "无形损耗率(%)"       
					,BOM.ConsumptionDeclareStatus AS 单耗申报状态代码       
					,PC.BondedMaterialRatio AS "保税料件比例(%)"       
					,BOM.ModifyMarkCode AS 修改标志       
					,BOM.BOMValidDate AS 单耗有效期       
					,BOM.Remark AS 备注       
					FROM txdCNHandbookConsDetail BOM WITH (NOLOCK)	 
					LEFT JOIN txdCNHandbookConsDetailPC PC ON BOM.CNHandbookConsDetailGUID = PC.CNHandbookConsDetailGUID 
					AND BOM.PartnerID=PC.PartnerID
					WHERE BOM.CNHandbookHeaderGUID = ''CNHandbookHeaderGUIDVariable'' AND BOM.PartnerID = (select top 1 PartnerId from tmfDefaults)', CAST(N'2020-08-04T11:14:55.140' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-02-11T16:48:56.670' AS DateTime), N'dcced1dc-71d3-4519-81e7-95ea136b7966', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'select    cast(sum(bsc.TotalLineCount) as numeric(38,0)) from tmgBrokerScoreCardrange range with (nolock) join  tmgBrokerScoreCard bsc with (nolock) on bsc.PartnerID = range.PartnerID and bsc.RangeGUID = range.RangeGUID join tmdBrokerRelationship reg WITH (NOLOCK) on bsc.PartnerID = reg.PartnerID and bsc.BrokerID = reg.BrokerID and bsc.CountryCode = reg.CountryCode  where bsc.PartnerID =  @PartnerID and @TargetString ', CAST(N'2019-02-11T16:48:56.670' AS DateTime), N'Volume of Lines', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.673' AS DateTime), N'de168d28-77d9-402a-90b3-031c4cc688ed', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'SELECT m.MeasurementName  ,bsc.CountryCode  ,isnull(gc.Decode, 1) AS WeightFactor  ,SUM(m.TotalCorrect) as TotalCorrect  ,SUM(m.TotalIncorrect) as TotalIncorrect  ,(SUM(m.TotalCorrect) + SUM(m.TotalIncorrect)) as TotalLines  ,CAST(0 as numeric(38,20)) AS ScoreInPercent INTO #tmpCalculation_Auto FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGuid JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID  AND reg.CountryCode = bsc.CountryCode  AND reg.BrokerID = bsc.BrokerID LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY m.MeasurementName  ,gc.Decode  ,bsc.CountryCode   UPDATE tmp  SET ScoreInPercent = cast((cast(tmp.TotalCorrect as numeric(38,20))/cast(tmp.TotalLines as numeric(38,20))) as numeric(38,20)) FROM #tmpCalculation_Auto tmp WITH (NOLOCK)   SELECT * INTO #tmp_ALL FROM (  SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,CAST(''Auto1'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Classification''    UNION ALL    SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,CAST(''Auto2'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Origin''    UNION ALL     SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,CAST(''Auto3'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Value''   ) query    INSERT INTO #tmp_ALL SELECT ''Weighted Score'' AS MeasurementName  ,tmp.CountryCode  ,''1'' AS WeightFactor  ,0 AS ScoreInPercent  ,sum(tmp.ScoreInPercentWeighted)/SUM(cast(tmp.WeightFactor as numeric(38,20))) AS ScoreInPercentWeighted  ,''Total1'' AS Type FROM #tmp_ALL tmp GROUP BY tmp.CountryCode  INSERT INTO #tmp_ALL SELECT ''Max Possible'' AS MeasurementName  ,tmp.CountryCode  ,''1'' AS WeightFactor  ,0 AS ScoreInPercent  ,sum(tmp.ScoreInPercentWeighted)/SUM(cast(tmp.WeightFactor as numeric(38,20))) AS ScoreInPercentWeighted  ,''Total3'' AS Type FROM #tmp_ALL tmp WHERE MeasurementName NOT IN (''Weighted Score'',''Max Possible'') GROUP BY tmp.CountryCode  SELECT cast(cast((ScoreInPercentWeighted * 100) AS NUMERIC(10, 2)) AS VARCHAR(15)) + '' %'' AS ScoreInPercent FROM #tmp_ALL WHERE MeasurementName = ''Weighted Score'' ', CAST(N'2019-02-11T16:48:56.673' AS DateTime), N'Overall Score %', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.673' AS DateTime), N'48106dd7-3e35-419c-bf5c-458cefa07637', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'SELECT m.MeasurementName  ,ISNULL(gc.Decode, ''1'') AS WeightFactor  ,sum(m.TotalCorrect) AS TotalCorrect  ,sum(m.TotalInCorrect) AS TotalIncorrect  ,cast(Sum(cast(m.TotalCorrect AS DECIMAL(38, 3))) / sum(cast(bsc.TotalLineCount AS DECIMAL(38, 3))) * 100 AS NUMERIC(38, 2)) AS TotalScore  ,sum(bsc.TotalLineCount) AS TotalLineCount INTO #tmpPoints FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY m.MeasurementName  ,gc.Decode  SELECT tmp.MeasurementName  ,cast(tmp.TotalScore AS NUMERIC(38, 2)) AS Percentage FROM #tmpPoints tmp WITH (NOLOCK) WHERE tmp.MeasurementName = ''Classification''   UNION ALL  SELECT tmp.MeasurementName  ,cast(tmp.TotalScore AS NUMERIC(38, 2)) AS Percentage FROM #tmpPoints tmp WITH (NOLOCK) WHERE tmp.MeasurementName = ''Origin''   UNION ALL  SELECT tmp.MeasurementName  ,cast(tmp.TotalScore AS NUMERIC(38, 2)) AS Percentage FROM #tmpPoints tmp WITH (NOLOCK) WHERE tmp.MeasurementName = ''Value''   ', CAST(N'2019-02-11T16:48:56.673' AS DateTime), N'KPIs', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.673' AS DateTime), N'486c2086-77e8-4f95-a0ba-41ef11fcf378', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'SELECT DISTINCT isnull(STUFF((     SELECT '', '' + reg.BrokerShortName     FROM tmdBrokerRelationship reg WITH (NOLOCK)                 JOIN tmgBrokerScoreCard bsc WITH (NOLOCK)                     ON reg.BrokerID = bsc.BrokerID                     AND reg.CountryCode = bsc.CountryCode                     AND reg.PartnerID = bsc.PartnerID     WHERE @TargetString      AND NOT EXISTS (SELECT 1          FROM tmgBrokerScoreCard bsc WITH (NOLOCK)          JOIN tmgBrokerScoreCardRange Range WITH (NOLOCK)            ON range.partnerid = bsc.partnerid           AND range.RangeGUID = bsc.RangeGUID          WHERE bsc.PartnerID = reg.PartnerID           AND bsc.BrokerID = reg.BrokerID           AND bsc.CountryCode = reg.CountryCode           AND range.partnerID = @PartnerID           AND @TargetString)       AND reg.BrokerActiveFlag = ''Y''     GROUP BY reg.PartnerID      ,reg.BrokerShortName     FOR XML path('''')     ), 1, 2, ''''), ''NONE'') AS BrokersMissing    ,isnull(STUFF((     SELECT '', '' + reg.BrokerShortName     FROM tmdBrokerRelationship reg WITH (NOLOCK)                 JOIN tmgBrokerScoreCard bsc WITH (NOLOCK)                     ON reg.BrokerID = bsc.BrokerID                     AND reg.CountryCode = bsc.CountryCode                     AND reg.PartnerID = bsc.PartnerID     WHERE @TargetString      AND EXISTS (SELECT 1          FROM tmgBrokerScoreCard bsc WITH (NOLOCK)          JOIN tmgBrokerScoreCardRange Range WITH (NOLOCK)            ON range.partnerid = bsc.partnerid           AND range.RangeGUID = bsc.RangeGUID          WHERE bsc.PartnerID = reg.PartnerID           AND bsc.BrokerID = reg.BrokerID           AND bsc.CountryCode = reg.CountryCode           AND range.partnerID = @PartnerID           AND @TargetString)       AND reg.BrokerActiveFlag = ''Y''     GROUP BY reg.PartnerID      ,reg.BrokerShortName     FOR XML path('''')     ), 1, 2, ''''), ''NONE'') AS BrokersReceived INTO #tmpBrokersNoEntry FROM tmdBrokerRelationship reg WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK)  ON reg.BrokerID = bsc.BrokerID  AND reg.CountryCode = bsc.CountryCode  AND reg.PartnerID = bsc.PartnerID JOIN tmgBrokerScoreCardRange Range WITH (NOLOCK)   ON range.partnerid = bsc.partnerid  AND range.RangeGUID = bsc.RangeGUID WHERE @TargetString  AND reg.BrokerActiveFlag = ''Y''  SELECT ''X'' as Indicator  ,BrokersMissing as BrokerList FROM #tmpBrokersNoEntry  UNION ALL  SELECT ''O'' as Indicator  ,BrokersReceived as BrokerList FROM #tmpBrokersNoEntry', CAST(N'2019-02-11T16:48:56.673' AS DateTime), N'Brokers Received', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.673' AS DateTime), N'1d17902d-d724-4960-a5bc-850ddc9dc055', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'SELECT m.MeasurementName  ,bsc.CountryCode  ,reg.BrokerID  ,isnull(gc.Decode, 1) AS WeightFactor  ,SUM(m.TotalCorrect) as TotalCorrect  ,SUM(m.TotalIncorrect) as TotalIncorrect  ,(SUM(m.TotalCorrect) + SUM(m.TotalIncorrect)) as TotalLines  ,CAST(0 as numeric(38,20)) AS ScoreInPercent INTO #tmpCalculation_Auto FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID  AND reg.CountryCode = bsc.CountryCode  AND reg.BrokerID = bsc.BrokerID LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY m.MeasurementName  ,gc.Decode  ,bsc.CountryCode  ,reg.BrokerID   UPDATE tmp  SET ScoreInPercent = cast((cast(tmp.TotalCorrect as numeric(38,20))/cast(tmp.TotalLines as numeric(38,20))) as numeric(38,20)) FROM #tmpCalculation_Auto tmp WITH (NOLOCK)    SELECT * INTO #tmp_ALL FROM (  SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.BrokerID   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,CAST(''Auto1'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Classification''    UNION ALL    SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.BrokerID   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,cast(''Auto2'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Origin''    UNION ALL     SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.BrokerID   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,cast(''Auto3'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Value''     ) query    INSERT INTO #tmp_ALL SELECT ''Weighted Score'' AS MeasurementName  ,tmp.CountryCode  ,tmp.BrokerID  ,''1'' AS WeightFactor  ,0 AS ScoreInPercent  ,sum(tmp.ScoreInPercentWeighted)/SUM(cast(tmp.WeightFactor as numeric(38,20))) AS ScoreInPercentWeighted  ,''Total1'' AS Type FROM #tmp_ALL tmp GROUP BY tmp.CountryCode  ,tmp.BrokerID  INSERT INTO #tmp_ALL SELECT ''Max Possible'' AS MeasurementName  ,tmp.CountryCode  ,tmp.BrokerID  ,''1'' AS WeightFactor  ,0 AS ScoreInPercent  ,sum(tmp.ScoreInPercentWeighted)/SUM(cast(tmp.WeightFactor as numeric(38,20))) AS ScoreInPercentWeighted  ,''Total3'' AS Type FROM #tmp_ALL tmp WHERE MeasurementName NOT IN (''Weighted Score'',''Max Possible'') GROUP BY tmp.CountryCode  ,tmp.BrokerID  SELECT DISTINCT reg.BrokerShortName,  CAST(ScoreInPercentWeighted * 100 as numeric(10,2)) AS Score  ,''/GV/fxdScoreCard.aspx?GUID=CBF4FC3A-B678-4CFF-934E-90528CABA038&0=@value&1='' + reg.CountryCode + ''&2='' + range.rangename AS [Link] FROM #tmp_ALL tmp JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON tmp.BrokerID = reg.BrokerID  AND tmp.CountryCode = reg.CountryCode JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = reg.PartnerID  AND bsc.CountryCode = tmp.CountryCode JOIN tmgBrokerScoreCardrange range WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID WHERE MeasurementName = ''Weighted Score''  AND @TargetString', CAST(N'2019-02-11T16:48:56.673' AS DateTime), N'Score by Broker', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.677' AS DateTime), N'7bb1ad15-b1ea-4ab2-85f9-40b3672fbb17', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'SELECT left(rel.BrokerShortName, 15)  ,cast(avg(m.TotalScore) AS DECIMAL(10, 2)) * 100 AS [Total Classification Score]  ,sum(bsc.TotalLineCount) AS [Total Line Count] FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Classification'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname JOIN tmdBrokerRelationship rel WITH (NOLOCK) ON rel.BrokerID = bsc.BrokerID  AND rel.CountryCode = bsc.CountryCode  AND rel.PartnerId = bsc.PartnerID WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY rel.BrokerShortName ORDER BY rel.BrokerShortName ', CAST(N'2019-02-11T16:48:56.677' AS DateTime), N'Classification by Broker', N'N', N'N')
, (@PartnerID, CAST(N'2020-08-04T11:14:49.540' AS DateTime), N'979CDD52-5C4B-400C-9320-7C78870C4F05', N'GT1ExcelDownload', N'--sheetnames::基本信息,商品信息

					Select IEFlag AS 进出口标识
					,CustomMaster AS 申报地海关 
					,IEPort AS "进/出境关别"
					,ManualNo AS 备案号
					,ContrNo AS 合同号协议号
					,convert(varchar(10), IEDate, 20) AS "进/出口日期"
					,TradeCode AS 境内收发货人代码
					,isnull((
						SELECT DISTINCT COMPL01
						FROM tmgcompany C WITH (NOLOCK) 
						JOIN tmgCompanyAddlFields a WITH (NOLOCK)
						ON c.CompanyID = a.CompanyID 
						AND c.PartnerID = a.PartnerID 
						WHERE C.CustomsID = TradeCode
						), '''') AS "境内收发货人名称"
					,DomesticConsigneeEname AS "境内收发货人名称（英文）"
					,'''' AS 境内收发货人检验检疫编码
					,CASE WHEN IEFlag = ''I'' THEN OverseasConsignorCode WHEN IEFlag = ''E'' THEN OverseasConsigneeCode END AS 境外收发货人代码
					,CASE WHEN IEFlag = ''I'' THEN OverseasConsignorEname WHEN IEFlag = ''E'' THEN OverseasConsigneeEname END AS "境外收发货人名称（英文）"
					,CASE WHEN IEFlag = ''I'' THEN OverseasConsignorAddr WHEN IEFlag = ''E'' THEN '''' END  AS 境外收发货人地址
					,CASE WHEN IEFlag = ''I'' THEN OverseasConsignorCname WHEN IEFlag = ''E'' THEN '''' END  AS "境外收发货人名称（中文）"
					,OwnerCode AS 消费使用单位代码
					,isnull((SELECT DISTINCT COMPL01
						FROM tmgcompany C WITH (NOLOCK) 
						JOIN tmgCompanyAddlFields a WITH (NOLOCK)
						ON c.CompanyID = a.CompanyID 
						AND c.PartnerID = a.PartnerID 
						WHERE C.CustomsID = OwnerCode),'''')
						 AS 消费使用单位名称
					,'''' AS 消费使用单位检验检疫代码
					,AgentCode AS 申报单位代码
					,AgentName AS 申报单位名称
					,DecHeadDeclCiqCode AS 申报单位检验检疫代码
					,TrafMode AS 运输方式 
					,isnull((
							SELECT CNDecodeShort
							FROM tmgCCSCodes WITH (NOLOCK)
							WHERE CCSfieldname = N''运输方式代码''
								AND code = TrafMode
							), '''') AS 运输工具名称
					,VoyNo AS 航次号
					,BillNo AS 提运单号
					,TradeMode AS 监管方式 
					,CutMode AS 征免性质 
					,LicenseNo AS 许可证号
					,TradeCountry AS "启运国/抵运国"
					,DistinatePort AS "经停港/指运港"
					,TransMode AS 成交方式
					,FeeMark AS 运费标识
					,FeeRate AS 运费数值
					,FeeCurr AS 运费币制代码
					,InsurMark AS 保费标识
					,InsurRate AS 保费数值
					,InsurCurr AS 保费币制代码
					,OtherMark AS 杂费标识
					,OtherRate AS 杂费数值
					,OtherCurr AS 杂费币制代码
					,PackNo AS 件数	
					,WrapType AS 包装种类
					,GrossWet AS "毛重（KG）"
					,NetWt AS "净重（KG）"
					,TradeAreaCode AS 贸易国别
					,GoodsPlace AS 存放地点
					,DespPortCode AS 启运港
					,convert(varchar(10), IEDate, 20) AS 启运日期
					,EntryType AS 报关单类型
					,MarkNo AS 标记唛码
					,NoteS AS 备注
					,BillType AS 清单类型
					,OrgCode AS 检验检疫受理机关
					,VsaOrgCode AS 领证机关
					,InspOrgCode AS 口岸检验检疫机构
					,EntyPortCode AS "入境/离境口岸"
					,BLNo AS "B/L号"
					,PurpOrgCode AS 目的地检验检疫机关
					,CorrelationNo AS 关联号码
					,CorrelationReasonFlag AS 关联理由
					,'''' AS 原箱运输
					,CmplDschrgDt AS 卸毕日期
					,''0'' AS "特殊业务标识-特殊进出军工物资"
					,''0'' AS "特殊业务标识-国际援助物资"
					,''0'' AS "特殊业务标识-国际会议"
					,''0'' AS "特殊通过模式-直通放行"
					,''0'' AS "特殊业务标识-国际赛事"
					,''0'' AS "特殊通过模式-外交礼遇"
					,''0'' AS "特殊通过模式-转关"
					,SpecialRelationship AS 特殊关系确认
					,TransactionValueImpact AS 价格影响确认
					,RoyaltyPayment AS 与货物有关的特许权使用费支付确认
					,RelId AS 关联报关单号
					,RelManNo AS 关联备案号
					,BonNo AS "保税/监管场地"
					,CusFie AS 货场代码
					FROM txdCNDeclarationData
					WHERE DECLARATIONDATAGUID = ''DeclarationDataGUIDVariable''
					AND PartnerID = (select top 1 PartnerId from tmfDefaults)
															
					SELECT
					GNo AS 项号
					,ContrItem AS 备案序号
					,CodeTS AS 商品编号
					,CiqCode AS 检验检疫编码
					,GName AS 商品名称
					,GModel AS 规格型号
					,Gqty AS 成交数量
					,GUnit AS 成交计量单位
					,DeclPrice AS 单价
					,DeclTotal AS 总价
					,TradeCurr AS 币制
					,FirstQty AS 法定第一数量
					,FirstUnit AS 法定第一计量单位
					,ExgVersion AS 加工成品版本号
					,ExgNo AS 货号
					,DestinationCountry AS "最终目的国（地区）"
					,SecondQty AS 法定第二数量
					,SecondUnit AS 法定第二计量单位
					,OriginCountry AS "原产国（地区）"
					,OrigPlaceCode AS 原产地区代码
					,DistrictCode AS "境内目的地/境内货源地"
					,DestCode AS "目的地代码/产地代码"
					,DutyMode AS 征免方式
					,GoodsAttr AS 货物属性代码
					,DeclGoodsEname AS 英文名称
					,Purpose AS 用途代码
					,NoDangFlag AS 非危险化学品
					,Uncode AS UN编码
					,DangName AS 危险货物名称
					,DangPackType AS 危包类别
					,DangPackSpec AS 危包规格
					,"Stuff" AS 成分
					,ProdValidDt AS "产品有效期（天）"
					,ProdQgp AS 保质期
					,EngManEntCnm AS 境外生产企业
					,GoodsSpec AS 货物规格
					,GoodsModel AS 货物型号
					,GoodsBrand AS 货物品牌
					,'''' AS 生产日期
					,ProdBatchNo AS 生产批次
					,MnufctrRegNo AS 生产单位代码
					FROM txdCNDecList CCSD
					JOIN txdCNDeclarationData CCSH
					ON CCSD.DeclarationGUID = CCSH.DeclarationGUID
					AND CCSD.DeclarationDataGUID = CCSH.DeclarationDataGUID
					WHERE CCSH.DECLARATIONDATAGUID = ''DeclarationDataGUIDVariable''
					AND CCSH.PartnerID = (select top 1 PartnerId from tmfDefaults)', CAST(N'2020-08-04T11:14:49.540' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2020-08-04T11:14:49.690' AS DateTime), N'2146C2BE-F755-4344-B770-36F41A5954AA', N'PTR1SpreadSheetUploadPCDetail', N'declare @partnerID as int; set @partnerID =(select top 1 partnerid from tmfdefaults); UPDATE tlgworkflowschedule SET LastUpdated = '''' 
WHERE WorkFlow = ''PTR1SpreadSheetUploadPCDetail'' AND partnerID= (select top 1 partnerid from tmfdefaults)', CAST(N'2020-08-04T11:14:49.690' AS DateTime), N'Kick off-PTR1SpreadSheetUploadPCDetail', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-02-11T16:48:56.677' AS DateTime), N'fe6e23be-8afe-49f7-b2ec-c0cfcbc627d9', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'SELECT LEFT(DATENAME(MM, DATEADD(mm, cast(bsc.Month AS INT), ''1900-12-31'')), 3) + '' '' + right(cast(bsc.Year AS VARCHAR(4)), 2) AS Month  ,cast(avg(m.TotalScore) AS DECIMAL(10, 4)) * 100 AS TotalScore FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Origin'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY bsc.year  ,bsc.month ORDER BY bsc.year  ,bsc.month ', CAST(N'2019-02-11T16:48:56.677' AS DateTime), N'Origin Over Time', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.677' AS DateTime), N'6ddc7e27-75cd-47bd-8dde-6f86dbc77f76', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'SELECT left(rel.BrokerShortName, 15)  ,cast(avg(m.TotalScore) AS DECIMAL(10, 2)) * 100 AS [Total Classification Score]  ,sum(bsc.TotalLineCount) AS [Total Line Count] FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Value'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname JOIN tmdBrokerRelationship rel WITH (NOLOCK) ON rel.BrokerID = bsc.BrokerID  AND rel.CountryCode = bsc.CountryCode  AND rel.PartnerId = bsc.PartnerID WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY rel.BrokerShortName ORDER BY rel.BrokerShortName ', CAST(N'2019-02-11T16:48:56.677' AS DateTime), N'Value by Broker', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.677' AS DateTime), N'b4b0b7cb-a974-4e05-a5f4-10cda061fbce', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'select ''''', CAST(N'2019-02-11T16:48:56.677' AS DateTime), N'', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.677' AS DateTime), N'4e830eeb-8593-490b-bda9-85aa2ac67dfd', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'SELECT LEFT(DATENAME(MM, DATEADD(mm, cast(bsc.Month AS INT), ''1900-12-31'')), 3) + '' '' + right(cast(bsc.Year AS VARCHAR(4)), 2) AS Month  ,cast(avg(m.TotalScore) AS DECIMAL(10, 4)) * 100 AS TotalScore FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Origin'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY bsc.year  ,bsc.month ORDER BY bsc.year  ,bsc.month ', CAST(N'2019-02-11T16:48:56.677' AS DateTime), N'Value Over Time', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.680' AS DateTime), N'fdbe5f9e-75d2-479e-9e7c-8053669ae66c', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'SELECT m.PartnerID  ,m.MeasurementName  ,ISNULL(gc.Decode, ''missing'') AS WeightFactor  ,sum(m.TotalCorrect) AS TotalCorrect  ,sum(m.TotalInCorrect) AS TotalIncorrect  ,cast(Sum(cast(m.TotalCorrect AS DECIMAL(38, 3))) / sum(cast(bsc.TotalLineCount AS DECIMAL(38, 3))) * 100 AS NUMERIC(38, 2)) AS TotalScore  ,sum(bsc.TotalLineCount) AS TotalLineCount INTO #tmpPoints FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY m.MeasurementName  ,gc.Decode     ,m.PartnerID  SELECT * from   (SELECT tmp.MeasurementName   ,TotalCorrect   ,TotalIncorrect   ,tmp.TotalLineCount   ,tmp.TotalScore   ,CASE    WHEN tmp.TotalScore >= CAST(yellow.Decode AS NUMERIC(38,20)) THEN ''O''    WHEN tmp.TotalScore <= CAST(yellow.Decode AS NUMERIC(38,20)) AND tmp.TotalScore >= CAST(red.Decode AS NUMERIC(38,20)) THEN ''W''    WHEN tmp.TotalScore < CAST(red.Decode AS NUMERIC(38,20)) THEN ''X''    END AS Indicator  FROM #tmpPoints tmp WITH (NOLOCK)  JOIN tmgGlobalCodes red WITH (NOLOCK)   ON tmp.PartnerID = red.PartnerID   AND red.FieldName = ''EVSCORECARDCOLORCODE''   AND red.Code = ''RED''  JOIN tmgGlobalCodes yellow WITH (NOLOCK)   ON tmp.PartnerID = yellow.PartnerID   AND yellow.FieldName = ''EVSCORECARDCOLORCODE''   AND yellow.Code = ''YELLOW''  WHERE tmp.MeasurementName = ''Classification''     UNION ALL    SELECT tmp.MeasurementName   ,TotalCorrect   ,TotalIncorrect   ,tmp.TotalLineCount   ,tmp.TotalScore   ,CASE    WHEN tmp.TotalScore >= CAST(yellow.Decode AS NUMERIC(38,20)) THEN ''O''    WHEN tmp.TotalScore <= CAST(yellow.Decode AS NUMERIC(38,20)) AND tmp.TotalScore >= CAST(red.Decode AS NUMERIC(38,20)) THEN ''W''    WHEN tmp.TotalScore < CAST(red.Decode AS NUMERIC(38,20)) THEN ''X''    END AS Indicator  FROM #tmpPoints tmp WITH (NOLOCK)  JOIN tmgGlobalCodes red WITH (NOLOCK)   ON tmp.PartnerID = red.PartnerID   AND red.FieldName = ''EVSCORECARDCOLORCODE''   AND red.Code = ''RED''  JOIN tmgGlobalCodes yellow WITH (NOLOCK)   ON tmp.PartnerID = yellow.PartnerID   AND yellow.FieldName = ''EVSCORECARDCOLORCODE''   AND yellow.Code = ''YELLOW''  WHERE tmp.MeasurementName = ''Origin''     UNION ALL    SELECT tmp.MeasurementName   ,TotalCorrect   ,TotalIncorrect   ,tmp.TotalLineCount   ,tmp.TotalScore   ,CASE    WHEN tmp.TotalScore >= CAST(yellow.Decode AS NUMERIC(38,20)) THEN ''O''    WHEN tmp.TotalScore <= CAST(yellow.Decode AS NUMERIC(38,20)) AND tmp.TotalScore >= CAST(red.Decode AS NUMERIC(38,20)) THEN ''W''    WHEN tmp.TotalScore < CAST(red.Decode AS NUMERIC(38,20)) THEN ''X''    END AS Indicator  FROM #tmpPoints tmp WITH (NOLOCK)  JOIN tmgGlobalCodes red WITH (NOLOCK)   ON tmp.PartnerID = red.PartnerID   AND red.FieldName = ''EVSCORECARDCOLORCODE''   AND red.Code = ''RED''  JOIN tmgGlobalCodes yellow WITH (NOLOCK)   ON tmp.PartnerID = yellow.PartnerID   AND yellow.FieldName = ''EVSCORECARDCOLORCODE''   AND yellow.Code = ''YELLOW''  WHERE tmp.MeasurementName = ''Value''       ) q', CAST(N'2019-02-11T16:48:56.680' AS DateTime), N'Metrics', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.680' AS DateTime), N'46f362d1-f02a-46ed-8ce3-6c6d3db5825b', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'SELECT country.CountryName FROM tmgbrokerscorecardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON range.partnerid = bsc.PartnerID  AND range.RangeGUID = bsc.RangeGUID JOIN tmdBrokerRelationship country WITH (NOLOCK) ON country.partnerid = range.partnerid  AND country.CountryCode = bsc.CountryCode and bsc.BrokerID = Country.BrokerID  AND range.PartnerID = @PartnerID  AND @TargetString ', CAST(N'2019-02-11T16:48:56.680' AS DateTime), N'Country', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.680' AS DateTime), N'fa720217-0355-45ae-b2ce-1cafde112d2e', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'SELECT range.RangeName + ''('' + convert(VARCHAR(12), range.BeginDate, 107) + ''-'' + convert(VARCHAR(12), range.EndDate, 107) + '')'' FROM tmgbrokerscorecardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON range.partnerid = bsc.PartnerID  AND range.RangeGUID = bsc.RangeGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.partnerid = range.partnerid  AND reg.countrycode = bsc.CountryCode WHERE range.PartnerID = @PartnerID  AND @TargetString', CAST(N'2019-02-11T16:48:56.680' AS DateTime), N'Range', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.680' AS DateTime), N'bfe6d75d-edf0-48db-b46f-e4a741562766', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT reg.BrokerName FROM tmgBrokerScoreCardRange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON range.PartnerID = bsc.PartnerID  AND range.RangeGUID = bsc.RangeGUID JOIN tmfCountry country WITH (NOLOCK) ON country.partnerid = range.partnerid  AND country.code = bsc.CountryCode JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON bsc.PartnerID = reg.PartnerID  AND bsc.BrokerID = reg.BrokerID  AND bsc.CountryCode = reg.CountryCode WHERE bsc.PartnerID = @PartnerID  AND @TargetString ', CAST(N'2019-02-11T16:48:56.680' AS DateTime), N'Broker', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.680' AS DateTime), N'2d44b074-6eb7-47ca-842b-157b24efcbdd', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT country.NAME + '' ('' + country.Code + '')'' FROM tmgbrokerscorecardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON range.partnerid = bsc.PartnerID  AND range.RangeGUID = bsc.RangeGUID JOIN tmfCountry country WITH (NOLOCK) ON country.partnerid = range.partnerid  AND country.code = bsc.CountryCode JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON bsc.PartnerID = reg.PartnerID  AND bsc.BrokerID = reg.BrokerID  AND bsc.CountryCode = reg.CountryCode  AND range.PartnerID = @PartnerID  AND @TargetString ', CAST(N'2019-02-11T16:48:56.680' AS DateTime), N'Country', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.680' AS DateTime), N'71940b3e-a033-4601-810c-99fb694af2d3', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT range.RangeName + ''('' + convert(VARCHAR(12), range.BeginDate, 107) + ''-'' + convert(VARCHAR(12), range.EndDate, 107) + '')'' FROM tmgbrokerscorecardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON range.partnerid = bsc.PartnerID  AND range.RangeGUID = bsc.RangeGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.partnerid = range.partnerid  AND reg.countrycode = bsc.CountryCode WHERE range.PartnerID = @PartnerID  AND @TargetString ', CAST(N'2019-02-11T16:48:56.680' AS DateTime), N'Range', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.683' AS DateTime), N'dca51fc7-4bb4-4529-af0e-0891373568eb', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT cast(sum(bsc.TotalLineCount) AS NUMERIC(38, 0)) FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON bsc.PartnerID = reg.PartnerID  AND bsc.BrokerID = reg.BrokerID  AND bsc.CountryCode = reg.CountryCode WHERE bsc.PartnerID = @PartnerID  AND @TargetString ', CAST(N'2019-02-11T16:48:56.683' AS DateTime), N'Volume of Lines', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.683' AS DateTime), N'0c43085e-8b3c-4f81-8a79-6d89b2b6a8f2', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT m.MeasurementName  ,bsc.CountryCode  ,isnull(gc.Decode, 1) AS WeightFactor  ,SUM(m.TotalCorrect) as TotalCorrect  ,SUM(m.TotalIncorrect) as TotalIncorrect  ,(SUM(m.TotalCorrect) + SUM(m.TotalIncorrect)) as TotalLines  ,CAST(0 as numeric(38,20)) AS ScoreInPercent INTO #tmpCalculation_Auto FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGuid JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID  AND reg.CountryCode = bsc.CountryCode  AND reg.BrokerID = bsc.BrokerID LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY m.MeasurementName  ,gc.Decode  ,bsc.CountryCode   UPDATE tmp  SET ScoreInPercent = cast((cast(tmp.TotalCorrect as numeric(38,20))/cast(tmp.TotalLines as numeric(38,20))) as numeric(38,20)) FROM #tmpCalculation_Auto tmp WITH (NOLOCK)   SELECT * INTO #tmp_ALL FROM (  SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,CAST(''Auto1'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Classification''    UNION ALL    SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,CAST(''Auto2'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Origin''    UNION ALL     SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,CAST(''Auto3'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Value''   ) query    INSERT INTO #tmp_ALL SELECT ''Weighted Score'' AS MeasurementName  ,tmp.CountryCode  ,''1'' AS WeightFactor  ,0 AS ScoreInPercent  ,sum(tmp.ScoreInPercentWeighted)/SUM(cast(tmp.WeightFactor as numeric(38,20))) AS ScoreInPercentWeighted  ,''Total1'' AS Type FROM #tmp_ALL tmp GROUP BY tmp.CountryCode  INSERT INTO #tmp_ALL SELECT ''Max Possible'' AS MeasurementName  ,tmp.CountryCode  ,''1'' AS WeightFactor  ,0 AS ScoreInPercent  ,sum(tmp.ScoreInPercentWeighted)/SUM(cast(tmp.WeightFactor as numeric(38,20))) AS ScoreInPercentWeighted  ,''Total3'' AS Type FROM #tmp_ALL tmp WHERE MeasurementName NOT IN (''Weighted Score'',''Max Possible'') GROUP BY tmp.CountryCode  SELECT cast(cast((ScoreInPercentWeighted * 100) AS NUMERIC(10, 2)) AS VARCHAR(15)) + '' %'' AS ScoreInPercent FROM #tmp_ALL WHERE MeasurementName = ''Weighted Score'' ', CAST(N'2019-02-11T16:48:56.683' AS DateTime), N'Overall Score %', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.683' AS DateTime), N'483b8edb-afd0-46f6-add2-34d267dd5c51', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT m.MeasurementName  ,bsc.CountryCode  ,isnull(gc.Decode, 1) AS WeightFactor  ,SUM(m.TotalCorrect) as TotalCorrect  ,SUM(m.TotalIncorrect) as TotalIncorrect  ,(SUM(m.TotalCorrect) + SUM(m.TotalIncorrect)) as TotalLines  ,CAST(0 as numeric(38,20)) AS ScoreInPercent INTO #tmpCalculation_Auto FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID  AND reg.CountryCode = bsc.CountryCode  AND reg.BrokerID = bsc.BrokerID LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY m.MeasurementName  ,gc.Decode  ,bsc.CountryCode   UPDATE tmp  SET ScoreInPercent = cast((cast(tmp.TotalCorrect as numeric(38,20))/cast(tmp.TotalLines as numeric(38,20))) as numeric(38,20)) FROM #tmpCalculation_Auto tmp WITH (NOLOCK)   SELECT * INTO #tmp_ALL FROM (  SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,CAST(''Auto1'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Classification''    UNION ALL    SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,CAST(''Auto2'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Origin''    UNION ALL     SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,CAST(''Auto3'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Value''    ) query   INSERT INTO #tmp_ALL SELECT ''Weighted Score'' AS MeasurementName  ,tmp.CountryCode  ,''1'' AS WeightFactor  ,0 AS ScoreInPercent  ,sum(tmp.ScoreInPercentWeighted)/SUM(cast(tmp.WeightFactor as numeric(38,20))) AS ScoreInPercentWeighted  ,''TotalA1'' AS Type FROM #tmp_ALL tmp WHERE tmp.Type like ''Auto%'' GROUP BY tmp.CountryCode  INSERT INTO #tmp_ALL SELECT ''Max Possible'' AS MeasurementName  ,tmp.CountryCode  ,''1'' AS WeightFactor  ,0 AS ScoreInPercent  ,sum(tmp.ScoreInPercentWeighted)/SUM(cast(tmp.WeightFactor as numeric(38,20))) AS ScoreInPercentWeighted  ,''TotalA3'' AS Type FROM #tmp_ALL tmp WHERE MeasurementName NOT IN (''Weighted Score'',''Max Possible'')  AND tmp.Type like ''Auto%'' GROUP BY tmp.CountryCode  SELECT * FROM ( SELECT MeasurementName as Type    ,cast(cast((ScoreInPercentWeighted * 100) AS NUMERIC(10, 2)) AS VARCHAR(15)) + '' %'' as ScoreInPercent  FROM #tmp_ALL  WHERE Type IN (''Auto1'',''Auto2'',''Auto3'')    UNION ALL    select ''Total'' as Type   ,CAST(CAST(CAST(SUM(scoreinpercentweighted) AS NUMERIC(38, 20)) / SUM(CAST(weightfactor AS NUMERIC(10, 2))) * 100 AS NUMERIC(10, 2)) AS VARCHAR(50)) + '' %''  FROM #tmp_ALL  where Type not like ''total%''  ) q', CAST(N'2019-02-11T16:48:56.683' AS DateTime), N'Detailed Score', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.683' AS DateTime), N'95a35446-8c16-4d56-8a34-1644650f2349', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT m.MeasurementName  ,ISNULL(gc.Decode, ''1'') AS WeightFactor  ,sum(m.TotalCorrect) AS TotalCorrect  ,sum(m.TotalInCorrect) AS TotalIncorrect  ,cast(Sum(cast(m.TotalCorrect AS DECIMAL(38, 3))) / sum(cast(bsc.TotalLineCount AS DECIMAL(38, 3))) * 100 AS NUMERIC(38, 2)) AS TotalScore  ,sum(bsc.TotalLineCount) AS TotalLineCount INTO #tmpPoints FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname LEFT JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.BrokerID = bsc.BrokerID  AND reg.PartnerID = bsc.PartnerID WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY m.MeasurementName  ,gc.Decode  SELECT tmp.MeasurementName  ,cast(tmp.TotalScore AS NUMERIC(38, 2)) AS Percentage FROM #tmpPoints tmp WITH (NOLOCK) WHERE tmp.MeasurementName = ''Classification''   UNION ALL  SELECT tmp.MeasurementName  ,cast(tmp.TotalScore AS NUMERIC(38, 2)) AS Percentage FROM #tmpPoints tmp WITH (NOLOCK) WHERE tmp.MeasurementName = ''Origin''   UNION ALL  SELECT tmp.MeasurementName  ,cast(tmp.TotalScore AS NUMERIC(38, 2)) AS Percentage FROM #tmpPoints tmp WITH (NOLOCK) WHERE tmp.MeasurementName = ''Value''   ', CAST(N'2019-02-11T16:48:56.683' AS DateTime), N'KPIs', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.683' AS DateTime), N'c0cea56b-ddac-4833-a690-bfd934e0392f', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT ''Correct'' AS NAME  ,SUM(m.Totalcorrect) AS TotalScore FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Classification'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON bsc.PartnerID = reg.PartnerID  AND bsc.BrokerID = reg.BrokerID  AND bsc.CountryCode = reg.CountryCode WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY bsc.brokerid  ,range.rangename  ,bsc.countrycode  UNION ALL  SELECT ''Incorrect'' AS NAME  ,SUM(m.TotalIncorrect) AS TotalScore FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Classification'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON bsc.PartnerID = reg.PartnerID  AND bsc.BrokerID = reg.BrokerID  AND bsc.CountryCode = reg.CountryCode WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY bsc.brokerid  ,range.rangename  ,bsc.countrycode', CAST(N'2019-02-11T16:48:56.683' AS DateTime), N'Classification', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.687' AS DateTime), N'b0f9edf6-aec6-4f8e-96ab-1ca159685715', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT ''Correct'' AS NAME  ,SUM(m.Totalcorrect) AS TotalScore FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Value'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON bsc.PartnerID = reg.PartnerID  AND bsc.BrokerID = reg.BrokerID  AND bsc.CountryCode = reg.CountryCode WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY bsc.brokerid  ,range.rangename  ,bsc.countrycode  UNION ALL  SELECT ''Incorrect'' AS NAME  ,SUM(m.TotalIncorrect) AS TotalScore FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Value'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON bsc.PartnerID = reg.PartnerID  AND bsc.BrokerID = reg.BrokerID  AND bsc.CountryCode = reg.CountryCode WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY bsc.brokerid  ,range.rangename  ,bsc.countrycode ', CAST(N'2019-02-11T16:48:56.687' AS DateTime), N'Value', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.687' AS DateTime), N'cc0f6aca-7384-40fb-a3d8-81eb5f6662c7', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT ''Correct'' AS NAME  ,SUM(m.Totalcorrect) AS TotalScore FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Origin'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON bsc.PartnerID = reg.PartnerID  AND bsc.BrokerID = reg.BrokerID  AND bsc.CountryCode = reg.CountryCode WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY bsc.brokerid  ,range.rangename  ,bsc.countrycode  UNION ALL  SELECT ''Incorrect'' AS NAME  ,SUM(m.TotalIncorrect) AS TotalScore FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Origin'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON bsc.PartnerID = reg.PartnerID  AND bsc.BrokerID = reg.BrokerID  AND bsc.CountryCode = reg.CountryCode WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY bsc.brokerid  ,range.rangename  ,bsc.countrycode', CAST(N'2019-02-11T16:48:56.687' AS DateTime), N'Origin', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.687' AS DateTime), N'31cfc9f8-e26f-4c54-b7b9-a935c3bd52b8', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'select ''''', CAST(N'2019-02-11T16:48:56.687' AS DateTime), N'', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.687' AS DateTime), N'df012a76-b1ab-4849-92f5-31b9fe95a851', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT LEFT(DATENAME(MM, DATEADD(mm, cast(bsc.Month AS INT), ''1900-12-31'')), 3) + '' '' + right(cast(bsc.Year AS VARCHAR(4)), 2) AS Month  ,cast(avg(m.TotalScore) AS DECIMAL(10, 4)) * 100 AS TotalScore FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Classification'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON bsc.PartnerID = reg.PartnerID  AND bsc.BrokerID = reg.BrokerID  AND bsc.CountryCode = reg.CountryCode WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY bsc.year  ,bsc.month ORDER BY bsc.year  ,bsc.month ', CAST(N'2019-02-11T16:48:56.687' AS DateTime), N'Classification Score', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.690' AS DateTime), N'bdf30643-b5b0-4d63-b628-46197bce6b05', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT LEFT(DATENAME(MM, DATEADD(mm, cast(bsc.Month AS INT), ''1900-12-31'')), 3) + '' '' + right(cast(bsc.Year AS VARCHAR(4)), 2) AS Month  ,cast(avg(m.TotalScore) AS DECIMAL(10, 4)) * 100 AS TotalScore FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Value'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON bsc.PartnerID = reg.PartnerID  AND bsc.BrokerID = reg.BrokerID  AND bsc.CountryCode = reg.CountryCode WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY bsc.year  ,bsc.month ORDER BY bsc.year  ,bsc.month ', CAST(N'2019-02-11T16:48:56.690' AS DateTime), N'Value Score', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.690' AS DateTime), N'b1487d4e-2162-4931-8cf4-0b000a6efa0a', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT LEFT(DATENAME(MM, DATEADD(mm, cast(bsc.Month AS INT), ''1900-12-31'')), 3) + '' '' + right(cast(bsc.Year AS VARCHAR(4)), 2) AS Month  ,cast(avg(m.TotalScore) AS DECIMAL(10, 4)) * 100 AS TotalScore FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Origin'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON bsc.PartnerID = reg.PartnerID  AND bsc.BrokerID = reg.BrokerID  AND bsc.CountryCode = reg.CountryCode WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY bsc.year  ,bsc.month ORDER BY bsc.year  ,bsc.month ', CAST(N'2019-02-11T16:48:56.690' AS DateTime), N'Origin Score', N'N', N'N')
, (@PartnerID, CAST(N'2017-01-31T09:18:49.143' AS DateTime), N'6CE46015-C027-46C1-A1D6-78DD18AB5D05', N'D6DF290B-820A-47AA-A119-A76C137ECE2C', N'', CAST(N'2016-08-08T13:24:00.283' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-01-31T09:18:49.143' AS DateTime), N'ED5F6391-5A0C-4578-B629-962DED185C5D', N'A1678201-EA5D-44B2-93D1-A8E660358DE2', N'', CAST(N'2016-08-08T13:25:57.730' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-01-31T09:18:49.143' AS DateTime), N'F46EF089-23A0-4286-BE9A-109199D1940E', N'ABED652C-8EDA-42D2-95FD-262EE361EC50', N'', CAST(N'2016-08-08T13:27:15.950' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.690' AS DateTime), N'65d87e18-72fd-4aa4-8d2d-f17d1065852b', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT m.MeasurementName  ,bsc.BrokerID  ,isnull(gc.Decode, 1) AS WeightFactor  ,SUM(m.TotalCorrect) AS TotalCorrect  ,SUM(m.TotalIncorrect) AS TotalIncorrect  ,(SUM(m.TotalCorrect) + SUM(m.TotalIncorrect)) AS TotalLines  ,CAST(0 AS NUMERIC(38, 20)) AS ScoreInPercent INTO #tmpCalculation_Auto FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID  AND reg.CountryCode = bsc.CountryCode  AND reg.BrokerID = bsc.BrokerID LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY m.MeasurementName  ,gc.Decode  ,bsc.BrokerID  UPDATE tmp SET ScoreInPercent = cast((cast(tmp.TotalCorrect AS NUMERIC(38, 20)) / cast(tmp.TotalLines AS NUMERIC(38, 20))) AS NUMERIC(38, 20)) FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  SELECT q.MeasurementName  ,q.TotalCorrect  ,q.TotalIncorrect  ,q.TotalLineCount  ,CAST(CAST((q.TotalScorePercent * 100) AS DECIMAL(10, 2)) AS VARCHAR(50)) + '' %'' AS TotalScorePercent FROM (  SELECT tmp.MeasurementName   ,tmp.WeightFactor   ,tmp.TotalCorrect   ,tmp.TotalIncorrect   ,tmp.TotalLines AS TotalLineCount   ,tmp.ScoreInPercent AS TotalScorePercent  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Classification''    UNION ALL    SELECT tmp.MeasurementName   ,tmp.WeightFactor   ,tmp.TotalCorrect   ,tmp.TotalIncorrect   ,tmp.TotalLines AS TotalLineCount   ,tmp.ScoreInPercent AS TotalScorePercent  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Origin''    UNION ALL    SELECT tmp.MeasurementName   ,tmp.WeightFactor   ,tmp.TotalCorrect   ,tmp.TotalIncorrect   ,tmp.TotalLines AS TotalLineCount   ,tmp.ScoreInPercent AS TotalScorePercent  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Value''  ) q ', CAST(N'2019-02-11T16:48:56.690' AS DateTime), N'Broker Metrics Breakdown', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.690' AS DateTime), N'9e15c239-5666-458c-bc69-e54b25789f99', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'SELECT x.Year  ,x.Month  ,x.MeasurementName  ,x.TotalCorrect  ,x.TotalIncorrect  ,x.TotalScore  ,x.TotalLineCount FROM (  SELECT bsc.Year   ,SUBSTRING(DATENAME(MONTH, DATEADD(MONTH, [Month], - 1)), 1, 3) AS Month   ,m.MeasurementName   ,SUM(m.TotalCorrect) AS [TotalCorrect]   ,SUM(m.TotalInCorrect) AS [TotalIncorrect]   ,CAST(CAST(cast(AVG(m.TotalScore) AS NUMERIC(38, 5)) * 100 AS NUMERIC(38, 2)) AS VARCHAR(30)) + '' %'' AS TotalScore   ,SUM(bsc.TotalLineCount) AS [TotalLineCount]   ,1 AS NoOrder  FROM tmgBrokerScoreCardrange range WITH (NOLOCK)  JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID   AND bsc.RangeGUID = range.RangeGUID  JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.partnerid = range.partnerid   AND reg.countrycode = bsc.CountryCode   AND reg.BrokerID = bsc.BrokerID  JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid   AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID   AND m.MeasurementName = ''Classification''  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = m.measurementname  WHERE bsc.PartnerID = @PartnerID   AND @TargetString  GROUP BY bsc.Year   ,bsc.Month   ,bsc.BrokerID   ,range.RangeName   ,m.MeasurementName   ,gc.Decode    UNION ALL    SELECT bsc.Year   ,SUBSTRING(DATENAME(MONTH, DATEADD(MONTH, [Month], - 1)), 1, 3) AS Month   ,m.MeasurementName   ,SUM(m.TotalCorrect) AS [TotalCorrect]   ,SUM(m.TotalInCorrect) AS [TotalIncorrect]   ,CAST(CAST(cast(AVG(m.TotalScore) AS NUMERIC(38, 5)) * 100 AS NUMERIC(38, 2)) AS VARCHAR(30)) + '' %'' AS TotalScore   ,SUM(bsc.TotalLineCount) AS [TotalLineCount]   ,2 AS NoOrder  FROM tmgBrokerScoreCardrange range WITH (NOLOCK)  JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID   AND bsc.RangeGUID = range.RangeGUID  JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.partnerid = range.partnerid   AND reg.countrycode = bsc.CountryCode   AND reg.BrokerID = bsc.BrokerID  JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid   AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID   AND m.MeasurementName = ''Origin''  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = m.measurementname  WHERE bsc.PartnerID = @PartnerID   AND @TargetString  GROUP BY bsc.Year   ,bsc.Month   ,bsc.BrokerID   ,range.RangeName   ,m.MeasurementName   ,gc.Decode    UNION ALL    SELECT bsc.Year   ,SUBSTRING(DATENAME(MONTH, DATEADD(MONTH, [Month], - 1)), 1, 3) AS Month   ,m.MeasurementName   ,SUM(m.TotalCorrect) AS [TotalCorrect]   ,SUM(m.TotalInCorrect) AS [TotalIncorrect]   ,CAST(CAST(cast(AVG(m.TotalScore) AS NUMERIC(38, 5)) * 100 AS NUMERIC(38, 2)) AS VARCHAR(30)) + '' %'' AS TotalScore   ,SUM(bsc.TotalLineCount) AS [TotalLineCount]   ,3 AS NoOrder  FROM tmgBrokerScoreCardrange range WITH (NOLOCK)  JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID   AND bsc.RangeGUID = range.RangeGUID  JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.partnerid = range.partnerid   AND reg.countrycode = bsc.CountryCode   AND reg.BrokerID = bsc.BrokerID  JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid   AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID   AND m.MeasurementName = ''Value''  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = m.measurementname  WHERE bsc.PartnerID = @PartnerID   AND @TargetString  GROUP BY bsc.Year   ,bsc.Month   ,bsc.BrokerID   ,range.RangeName   ,m.MeasurementName   ,gc.Decode  ) x ORDER BY YEAR  ,CASE    WHEN Month = ''Jan''    THEN 1   WHEN Month = ''Feb''    THEN 2   WHEN Month = ''Mar''    THEN 3   WHEN Month = ''Apr''    THEN 4   WHEN Month = ''May''    THEN 5   WHEN Month = ''Jun''    THEN 6   WHEN Month = ''Jul''    THEN 7   WHEN Month = ''Aug''    THEN 8   WHEN Month = ''Sep''    THEN 9   WHEN Month = ''Oct''    THEN 10   WHEN Month = ''Nov''    THEN 11   WHEN Month = ''Dec''    THEN 12   END  ,NoOrder ', CAST(N'2019-02-11T16:48:56.690' AS DateTime), N'Broker Metrics Monthly Breakdown', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.690' AS DateTime), N'b24d5252-6d02-4f6e-a810-4ae6d6f07d0c', N'CBF4FC3A-B678-4CFF-934E-90528CABA038', N'-----Yearly Range----- 
			IF (select distinct range.RangeType FROM tmgBrokerScoreCardrange range WITH (NOLOCK)    JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID     AND bsc.RangeGUID = range.RangeGUID    JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID     AND reg.CountryCode = bsc.CountryCode     AND reg.BrokerID = bsc.BrokerID    where @TargetString     ) = ''Y''  BEGIN   SELECT m.MeasurementName  ,RIGHT(rangeq.RangeName, 2) as Quarter  ,isnull(gc.Decode, 1) AS WeightFactor  ,SUM(m.TotalCorrect) as TotalCorrect  ,SUM(m.TotalIncorrect) as TotalIncorrect  ,(SUM(m.TotalCorrect) + SUM(m.TotalIncorrect)) as TotalLines  ,CAST(0 as numeric(38,20)) AS ScoreInPercent INTO #tmpCalculation_AutoQ FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCardrange rangeq WITH (NOLOCK) ON range.PartnerID = rangeq.PartnerID   AND left(range.rangename, 4) = left(rangeq.rangename, 4)   AND rangeq.rangetype = ''Q'' JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = rangeq.PartnerID  AND bsc.RangeGUID = rangeq.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = rangeq.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID  AND reg.CountryCode = bsc.CountryCode  AND reg.BrokerID = bsc.BrokerID LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID  = @PartnerID  AND @TargetString GROUP BY m.MeasurementName  ,gc.Decode  ,rangeq.RangeName   UPDATE tmp  SET ScoreInPercent = cast((cast(tmp.TotalCorrect as numeric(38,20))/cast(tmp.TotalLines as numeric(38,20))) as numeric(38,20)) FROM #tmpCalculation_AutoQ tmp WITH (NOLOCK)  SELECT * INTO #tmp_ALLQ FROM (  SELECT tmp.MeasurementName   ,tmp.Quarter   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * ISNULL(gc.Decode, 1) AS ScoreInPercentWeighted   ,CAST(''Auto1'' AS VARCHAR(max)) AS Type  FROM #tmpCalculation_AutoQ tmp WITH (NOLOCK)  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = tmp.measurementname  WHERE tmp.MeasurementName = ''Classification''    UNION ALL    SELECT tmp.MeasurementName   ,tmp.Quarter   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * ISNULL(gc.Decode, 1) AS ScoreInPercentWeighted   ,CAST(''Auto2'' AS VARCHAR(max)) AS Type  FROM #tmpCalculation_AutoQ tmp WITH (NOLOCK)  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = tmp.measurementname  WHERE tmp.MeasurementName = ''Value''    UNION ALL     SELECT tmp.MeasurementName   ,tmp.Quarter   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * ISNULL(gc.Decode, 1) AS ScoreInPercentWeighted   ,CAST(''Auto3'' AS VARCHAR(max)) AS Type  FROM #tmpCalculation_AutoQ tmp WITH (NOLOCK)  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = tmp.measurementname  WHERE tmp.MeasurementName = ''Origin''    ) query   INSERT INTO #tmp_ALLQ SELECT ''TotalScore'' AS MeasurementName     ,tmp.Quarter     ,''1'' AS WeightFactor     ,0 AS ScoreInPercent     ,sum(tmp.ScoreInPercentWeighted)/SUM(cast(tmp.WeightFactor as numeric(38,20))) AS ScoreInPercentWeighted     ,''Total1'' AS Type FROM #tmp_ALLQ tmp GROUP BY tmp.Quarter   DECLARE @cols AS NVARCHAR(MAX)  ,@query AS NVARCHAR(MAX);  SET @cols = (   SELECT DISTINCT STUFF((      SELECT DISTINCT '','' + tmp.Quarter      FROM #tmp_ALLQ tmp      FOR XML PATH('''')       ,TYPE      ).value(''.'', ''NVARCHAR(MAX)''), 1, 1, '''')   FROM #tmp_ALLQ tmp WITH (NOLOCK)   )                        set @query = ''  SELECT * INTO #tmpLastOneQ FROM     (SELECT MeasurementName as BSCTotalPercentage   ,Quarter   ,CAST(ScoreInPercentWeighted * 100 AS NUMERIC(38,2)) AS PercentScore   ,Type  FROM #tmp_ALLQ  WHERE MeasurementName = ''''TotalScore'''') AS q PIVOT (     MAX(PercentScore)  FOR Quarter IN ('' + @cols + ''))  as pvt;  SELECT BSCTotalPercentage,'' + @cols + '' FROM #tmpLastOneQ ORDER BY Type  ''  EXEC SP_EXECUTESQL @query  END   -----Quarter Range----- 
			IF (select distinct range.RangeType FROM tmgBrokerScoreCardrange range WITH (NOLOCK)    JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID     AND bsc.RangeGUID = range.RangeGUID    JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID     AND reg.CountryCode = bsc.CountryCode     AND reg.BrokerID = bsc.BrokerID    where @TargetString) = ''Q''  BEGIN  SELECT m.MeasurementName  ,SUBSTRING(range.RangeName,3,2) + RIGHT(range.RangeName, 2) as Quarter  ,isnull(gc.Decode, 1) AS WeightFactor  ,SUM(m.TotalCorrect) as TotalCorrect  ,SUM(m.TotalIncorrect) as TotalIncorrect  ,(SUM(m.TotalCorrect) + SUM(m.TotalIncorrect)) as TotalLines  ,CAST(0 as numeric(38,20)) AS ScoreInPercent INTO #tmpCalculation_AutoX FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID  AND reg.CountryCode = bsc.CountryCode  AND reg.BrokerID = bsc.BrokerID LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID  = @PartnerID  AND @TargetString GROUP BY m.MeasurementName  ,gc.Decode  ,range.RangeName    SELECT DISTINCT range.RangeGuid  ,range.EndDate INTO #tmpRangesX FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID  AND reg.CountryCode = bsc.CountryCode  AND reg.BrokerID = bsc.BrokerID WHERE @TargetString  AND range.RangeType = ''Q''  INSERT INTO #tmpRangesX SELECT TOP 3 range.RangeGuid  ,range.EndDate FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN #tmpRangesX tmp WITH (NOLOCK)   ON range.EndDate < tmp.EndDate WHERE range.RangeType = ''Q'' ORDER BY range.EndDate desc   INSERT INTO #tmpCalculation_AutoX SELECT m.MeasurementName  ,SUBSTRING(range.RangeName,3,2) + RIGHT(range.RangeName, 2) as Quarter  ,isnull(gc.Decode, 1) AS WeightFactor  ,SUM(m.TotalCorrect) as TotalCorrect  ,SUM(m.TotalIncorrect) as TotalIncorrect  ,(SUM(m.TotalCorrect) + SUM(m.TotalIncorrect)) as TotalLines  ,CAST(0 as numeric(38,20)) AS ScoreInPercent FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID  AND reg.CountryCode = bsc.CountryCode  AND reg.BrokerID = bsc.BrokerID JOIN (select DISTINCT range.PartnerID, range.BeginDate, range.EndDate, bsc.BrokerID, bsc.CountryCode    FROM tmgBrokerScoreCardrange range WITH (NOLOCK)    JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID     AND bsc.RangeGUID = range.RangeGUID    JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID     AND reg.CountryCode = bsc.CountryCode     AND reg.BrokerID = bsc.BrokerID    WHERE @TargetString     AND range.RangeType = ''Q'') selection  ON selection.BeginDate > range.BeginDate  AND selection.EndDate > range.EndDate  AND selection.PartnerID = range.PartnerID  AND selection.BrokerID = bsc.BrokerID  AND selection.CountryCode = bsc.CountryCode LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID  = @PartnerID  AND range.RangeType = ''Q''  AND EXISTS (select 1 from #tmpRangesX where range.RangeGuid = RangeGuid) GROUP BY m.MeasurementName  ,gc.Decode  ,range.RangeName      UPDATE tmp  SET ScoreInPercent = cast((cast(tmp.TotalCorrect as numeric(38,20))/cast(tmp.TotalLines as numeric(38,20))) as numeric(38,20)) FROM #tmpCalculation_AutoX tmp WITH (NOLOCK)  SELECT * INTO #tmp_ALLX FROM (  SELECT tmp.MeasurementName   ,tmp.Quarter   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * ISNULL(gc.Decode, 1) AS ScoreInPercentWeighted   ,CAST(''Auto1'' AS VARCHAR(max)) AS Type  FROM #tmpCalculation_AutoX tmp WITH (NOLOCK)  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = tmp.measurementname  WHERE tmp.MeasurementName = ''Classification''    UNION ALL    SELECT tmp.MeasurementName   ,tmp.Quarter   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * ISNULL(gc.Decode, 1) AS ScoreInPercentWeighted   ,CAST(''Auto2'' AS VARCHAR(max)) AS Type  FROM #tmpCalculation_AutoX tmp WITH (NOLOCK)  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = tmp.measurementname  WHERE tmp.MeasurementName = ''Value''    UNION ALL     SELECT tmp.MeasurementName   ,tmp.Quarter   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * ISNULL(gc.Decode, 1) AS ScoreInPercentWeighted   ,CAST(''Auto3'' AS VARCHAR(max)) AS Type  FROM #tmpCalculation_AutoX tmp WITH (NOLOCK)  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = tmp.measurementname  WHERE tmp.MeasurementName = ''Origin''     ) query  INSERT INTO #tmp_ALLX SELECT ''TotalScore'' AS MeasurementName     ,tmp.Quarter     ,''1'' AS WeightFactor     ,0 AS ScoreInPercent     ,sum(tmp.ScoreInPercentWeighted)/SUM(cast(tmp.WeightFactor as numeric(38,20))) AS ScoreInPercentWeighted     ,''Total1'' AS Type FROM #tmp_ALLX tmp GROUP BY tmp.Quarter  UPDATE #tmp_ALLX SET ScoreInPercentWeighted = ScoreInPercent  DECLARE @cols1 AS NVARCHAR(MAX)  ,@query1 AS NVARCHAR(MAX);  SET @cols1 = (   SELECT DISTINCT STUFF((      SELECT '','' + ''['' + tmp.Quarter + '']''      FROM #tmp_ALLX tmp      GROUP BY tmp.Quarter      FOR XML PATH('''')       ,TYPE      ).value(''.'', ''NVARCHAR(MAX)''), 1, 1, '''')   FROM #tmp_ALLX tmp WITH (NOLOCK)   )                        set @query1 = ''  SELECT * INTO #tmpLastOneX FROM     (SELECT MeasurementName   ,Quarter   ,CAST(ScoreInPercentWeighted * 100 AS NUMERIC(38,2)) AS PercentScore   ,Type  FROM #tmp_ALLX  WHERE MeasurementName <> ''''TotalScore'''') AS q PIVOT (     MAX(PercentScore)  FOR Quarter IN ('' + @cols1 + ''))  as pvt;  SELECT MeasurementName,'' + @cols1 + '' FROM #tmpLastOneX ORDER BY Type  ''  EXEC SP_EXECUTESQL @query1       END  -----Monthly Range----- 
			IF (select distinct range.RangeType FROM tmgBrokerScoreCardrange range WITH (NOLOCK)    JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID     AND bsc.RangeGUID = range.RangeGUID    JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID     AND reg.CountryCode = bsc.CountryCode     AND reg.BrokerID = bsc.BrokerID    where @TargetString) = ''X''  BEGIN  SELECT ''Quarter'' AS CannotBeRunForMonthlyRange  ,''0'' AS Score      END ', CAST(N'2019-02-11T16:48:56.690' AS DateTime), N'Broker Metrics Over Time', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-04-04T20:58:26.107' AS DateTime), N'6F675E24-2FB8-49DF-85C6-F20017D6B254', N'000-PGA ACE – FTZ Item Master by Product', N'select * from (

	select
	'''' as [Product Number],
	''HTS Headings and possible PGA code indicator provided in this document are based on the HTSUS modification from March 7, 2017. Please see CSMS# 17-000131 created on March 4, 2017 for more information. This only represents the PGA Agencies that have flagged the HTS numbers they are interested in based on the most recent Harmonized System modifications. As a reminder CBP and the PGA believe, it is the importers responsibility to know what to file, regardless of whether a tariff code has been flagged.'' as [Product Description],
	'''' as [Item HTSIndex],
	'''' as [PGA Agency],
	'''' as [PGA Indicator],
	'''' as [PGA Indicator Description]
	from tmfdefaults (nolock)

	UNION 

	select 
	i.productnum as [Product Number],
	i.productdesc as [Product Description],
	iv.htsindex as [Item HTSIndex],
	pga.agency as [PGA Agency],
	pga.pgaindicator as [PGA Indicator],
	pga.description as [PGA Indicator Description]
	from tmditemmaster i (nolock)
	join tmditemmasterhtsvalues iv (nolock) on iv.partnerid=i.partnerid and iv.productnum=i.productnum
	join tmdHTSPGA pga (nolock) on pga.partnerid=i.partnerid and pga.htscode=replace(iv.htsindex,''.'','''')
	where NOT EXISTS (select 1 from tmdsetbreakdown sb1 where sb1.partnerid=i.partnerid and
						 sb1.productnum=i.productnum and sb1.Active = ''Y'')


	UNION 

	--Sets
	select 
	i.productnum as [Product Number],
	i.productdesc as [Product Description],
	sb.htsindex as [Item HTSIndex],
	pga.agency as [PGA Agency],
	pga.pgaindicator as [PGA Indicator],
	pga.description as [PGA Indicator Description]
	from tmditemmaster i
	join tmditemmasterhtsvalues iv (nolock) on iv.partnerid=i.partnerid and iv.productnum=i.productnum
	join tmdsetbreakdown sb (nolock) on sb.partnerid=i.partnerid and i.productnum = sb.productnum + ''-'' + sb.setnum --and clockwatchflag = ''Y''
	join tmdHTSPGA pga (nolock) on pga.partnerid=i.partnerid and pga.htscode=replace(sb.htsindex,''.'','''')
	where sb.Active = ''Y'' and sb.ClockWatchFlag <> ''Y''

	UNION 

	--Clocks
	select 
	i.productnum as [Product Number],
	i.productdesc as [Product Description],
	sb.htsindex as [Item HTSIndex],
	pga.agency as [PGA Agency],
	pga.pgaindicator as [PGA Indicator],
	pga.description as [PGA Indicator Description]
	from tmditemmaster i
	join tmditemmasterhtsvalues iv (nolock) on iv.partnerid=i.partnerid and iv.productnum=i.productnum
	join tmdsetbreakdown sb (nolock) on sb.partnerid=i.partnerid and i.productnum = sb.productnum --and clockwatchflag = ''Y''
	join tmdHTSPGA pga (nolock) on pga.partnerid=i.partnerid and pga.htscode=replace(sb.htsindex,''.'','''')
	where sb.Active = ''Y'' and sb.ClockWatchFlag = ''Y''

	) as x
	order by [Product Number],[PGA Indicator]
	--group by', CAST(N'2017-04-04T20:58:26.107' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-04-04T20:58:26.143' AS DateTime), N'1D543426-C95D-4A59-BD89-FE5442D4873B', N'000-PGA ACE – FTZ Item Master HTS Level', N'select * from (

	select
	''HTS Headings and possible PGA code indicator provided in this document are based on the HTSUS modification from March 7, 2017. Please see CSMS# 17-000131 created on March 4, 2017 for more information. This only represents the PGA Agencies that have flagged the HTS numbers they are interested in based on the most recent Harmonized System modifications. As a reminder CBP and the PGA believe, it is the importers responsibility to know what to file, regardless of whether a tariff code has been flagged.''
	as [Item HTSIndex],
	'''' as [PGA Agency],
	'''' as [PGA Indicator],
	'''' as [PGA Indicator Description]
	from tmfdefaults (nolock)

	UNION 

	select distinct
	iv.htsindex as [Item HTSIndex],
	pga.agency as [PGA Agency],
	pga.pgaindicator as [PGA Indicator],
	pga.description as [PGA Indicator Description]
	from tmditemmaster i (nolock)
	join tmditemmasterhtsvalues iv (nolock) on iv.partnerid=i.partnerid and iv.productnum=i.productnum
	join tmdHTSPGA pga (nolock) on pga.partnerid=i.partnerid and pga.htscode=replace(iv.htsindex,''.'','''')
	where NOT EXISTS (select 1 from tmdsetbreakdown sb1 where sb1.partnerid=i.partnerid and
						 sb1.productnum=i.productnum and sb1.Active = ''Y'')


	UNION 
	--Sets
	select distinct
	sb.htsindex as [Item HTSIndex],
	pga.agency as [PGA Agency],
	pga.pgaindicator as [PGA Indicator],
	pga.description as [PGA Indicator Description]
	from tmditemmaster i (nolock)
	join tmditemmasterhtsvalues iv (nolock) on iv.partnerid=i.partnerid and iv.productnum=i.productnum
	join tmdsetbreakdown sb (nolock) on sb.partnerid=i.partnerid and i.productnum=sb.productnum + ''-'' + sb.setnum--and clockwatchflag = ''Y''
	join tmdHTSPGA pga (nolock) on pga.partnerid=i.partnerid and pga.htscode=replace(sb.htsindex,''.'','''')
	where sb.Active = ''Y'' and sb.ClockWatchFlag <> ''Y''

	UNION 
	--Clocks
	select distinct
	sb.htsindex as [Item HTSIndex],
	pga.agency as [PGA Agency],
	pga.pgaindicator as [PGA Indicator],
	pga.description as [PGA Indicator Description]
	from tmditemmaster i (nolock)
	join tmditemmasterhtsvalues iv (nolock) on iv.partnerid=i.partnerid and iv.productnum=i.productnum
	join tmdsetbreakdown sb (nolock) on sb.partnerid=i.partnerid and i.productnum=sb.productnum--and clockwatchflag = ''Y''
	join tmdHTSPGA pga (nolock) on pga.partnerid=i.partnerid and pga.htscode=replace(sb.htsindex,''.'','''')
	where sb.Active = ''Y'' and sb.ClockWatchFlag = ''Y''
	) as x
	order by [PGA Indicator],[Item HTSIndex]
	--group by', CAST(N'2017-04-04T20:58:26.143' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-04-04T20:58:26.153' AS DateTime), N'3879E084-4370-47F6-9667-CADD8CD0E465', N'000-PGA ACE – US Global Classification by Product', N'
	select * from (

	select
	'''' as [Product Number],
	''HTS Headings and possible PGA code indicator provided in this document are based on the HTSUS modification from March 7, 2017. Please see CSMS# 17-000131 created on March 4, 2017 for more information. This only represents the PGA Agencies that have flagged the HTS numbers they are interested in based on the most recent Harmonized System modifications. As a reminder CBP and the PGA believe, it is the importers responsibility to know what to file, regardless of whether a tariff code has been flagged.'' as [Product Description],
	'''' as [Item HTSNumber],
	'''' as [PGA Agency],
	'''' as [PGA Indicator],
	'''' as [PGA Indicator Description]
	from tmfdefaults (nolock)

	UNION 

	select 
	i.productnum as [Product Number],
	i.productdesc as [Product Description],
	i.hsnum as [Item HTSNumber],
	pga.agency as [PGA Agency],
	pga.pgaindicator as [PGA Indicator],
	pga.description as [PGA Indicator Description]
	from tmdusproductclassification i (nolock)
	join tmdHTSPGA pga (nolock) on pga.partnerid=i.partnerid and pga.htscode=replace(i.hsnum,''.'','''')
	where NOT EXISTS (select 1 from tmdclassificationsetbreakdown sb1 where sb1.partnerid=i.partnerid and
						 sb1.productnum=i.productnum and sb1.Active = ''Y'')

	UNION 
	--Sets
	select distinct 
	i.productnum as [Product Number],
	i.productdesc as [Product Description],
	sb.hsnum as [Item HTSNumber],
	pga.agency as [PGA Agency],
	pga.pgaindicator as [PGA Indicator],
	pga.description as [PGA Indicator Description]
	from tmdusproductclassification i (nolock)
	join tmdclassificationsetbreakdown sb (nolock) on (i.partnerid = sb.partnerid and i.ProductNum = sb.ProductNum + ''-'' + sb.SetNum)
	join tmdHTSPGA pga (nolock) on pga.partnerid=sb.partnerid and pga.htscode=replace(sb.hsnum,''.'','''')
	where sb.Active = ''Y'' and sb.ClockWatchFlag <> ''Y''

	UNION 

	--Clocks
	select distinct 
	i.productnum as [Product Number],
	i.productdesc as [Product Description],
	sb.hsnum as [Item HTSNumber],
	pga.agency as [PGA Agency],
	pga.pgaindicator as [PGA Indicator],
	pga.description as [PGA Indicator Description]
	from tmdusproductclassification i (nolock)
	join tmdclassificationsetbreakdown sb (nolock) on (i.partnerid = sb.partnerid and i.ProductNum = sb.ProductNum)
	join tmdHTSPGA pga (nolock) on pga.partnerid=sb.partnerid and pga.htscode=replace(sb.hsnum,''.'','''')
	where sb.Active = ''Y'' and sb.ClockWatchFlag = ''Y''
	) as x
	order by [Product Number],[PGA Indicator]
	--group by', CAST(N'2017-04-04T20:58:26.153' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-04-04T20:58:26.160' AS DateTime), N'15B262EC-9911-4832-9DC2-B396AAD5E59F', N'000-PGA ACE - US Global Classification HTS Level', N'
	select * from (

	select
	--'''' as [Product Number],
	''HTS Headings and possible PGA code indicator provided in this document are based on the HTSUS modification from March 7, 2017. Please see CSMS# 17-000131 created on March 4, 2017 for more information. This only represents the PGA Agencies that have flagged the HTS numbers they are interested in based on the most recent Harmonized System modifications. As a reminder CBP and the PGA believe, it is the importers responsibility to know what to file, regardless of whether a tariff code has been flagged.''
	as [Item HTSNumber],
	'''' as [PGA Agency],
	'''' as [PGA Indicator],
	'''' as [PGA Indicator Description]
	from tmfdefaults (nolock)

	UNION 

	select distinct
	--i.productnum as [Product Number],
	--'''' as [Product Description],
	i.hsnum as [Item HTSNumber],
	pga.agency as [PGA Agency],
	pga.pgaindicator as [PGA Indicator],
	pga.description as [PGA Indicator Description]
	from tmdusproductclassification i (nolock)
	join tmdHTSPGA pga (nolock) on pga.partnerid=i.partnerid and pga.htscode=replace(i.hsnum,''.'','''')
	where NOT EXISTS (select 1 from tmdsetbreakdown sb1 where sb1.partnerid=i.partnerid and
						 sb1.productnum=i.productnum and sb1.Active = ''Y'')


	UNION 
	--Sets
	select distinct
	--i.productnum as [Product Number],
	--'''' as [Product Description],
	i.hsnum as [Item HTSNumber],
	pga.agency as [PGA Agency],
	pga.pgaindicator as [PGA Indicator],
	pga.description as [PGA Indicator Description]
	from tmdusproductclassification i (nolock)
	join tmdclassificationsetbreakdown sb (nolock) on sb.partnerid=i.partnerid and i.productnum=sb.productnum + ''-'' + sb.setnum--and clockwatchflag = ''Y''
	join tmdHTSPGA pga (nolock) on pga.partnerid=i.partnerid and pga.htscode=replace(sb.hsnum,''.'','''')
	where sb.Active = ''Y'' and sb.ClockWatchFlag <> ''Y''

	UNION 
	--Clocks
	select distinct
	--i.productnum as [Product Number],
	--'''' as [Product Description],
	i.hsnum as [Item HTSNumber],
	pga.agency as [PGA Agency],
	pga.pgaindicator as [PGA Indicator],
	pga.description as [PGA Indicator Description]
	from tmdusproductclassification i (nolock)
	join tmdclassificationsetbreakdown sb (nolock) on sb.partnerid=i.partnerid and i.productnum=sb.productnum --and clockwatchflag = ''Y''
	join tmdHTSPGA pga (nolock) on pga.partnerid=i.partnerid and pga.htscode=replace(sb.hsnum,''.'','''')
	where sb.Active = ''Y'' and sb.ClockWatchFlag = ''Y''
	) as x
	order by [PGA Indicator],[Item HTSNumber]
	--group by', CAST(N'2017-04-04T20:58:26.160' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-04-14T13:35:45.083' AS DateTime), N'3fb1fec0-fb4d-4007-9979-a82dc0a541a0', N'Orphan Issues - PPIM Fully Consumed', N'SELECT * , ROW_NUMBER() OVER (ORDER BY @Orderby@, EffDate desc) AS [RowNum] FROM
(SELECT DATEDIFF(DAY,EffDate,GETDATE()) AS NumberOfDays, 
CONVERT(VARCHAR, EffDate, 101) AS EffDate 
,TxnCode 
,OrderNumWork 
,ProductNum 
,TxnQty 
,QtyPerIm 
,1 AS NoOrder 
FROM txdIssuedPC pc WITH (NOLOCK) 
WHERE PartnerID = (SELECT PartnerID FROM tmfDefaults WITH (NOLOCK)) 
AND NOT EXISTS (SELECT 1 FROM txdIssuedIM where pc.OrderNumWork = OrderNumWork and pc.PartnerID = PartnerID) 
AND EXISTS (SELECT 1  FROM txdFIFOProcessingHIST where pc.OrderNumWork = OrderNumWork and txncode = ''PPIM'' and pc.PartnerID = PartnerID)
) AS LookupViewInner WHERE @whereclause@', CAST(N'2017-04-14T13:35:45.083' AS DateTime), N'Orphan Issues - PPIM Fully Consumed', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-02-11T16:48:56.693' AS DateTime), N'd870e634-7d87-491d-88d3-ac95dcc56e2b', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'-----Yearly Range----- 
			IF (select distinct range.RangeType FROM tmgBrokerScoreCardrange range WITH (NOLOCK)    JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID     AND bsc.RangeGUID = range.RangeGUID    JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID     AND reg.CountryCode = bsc.CountryCode     AND reg.BrokerID = bsc.BrokerID    where @TargetString     ) = ''Y''  BEGIN   SELECT m.MeasurementName  ,RIGHT(rangeq.RangeName, 2) as Quarter  ,isnull(gc.Decode, 1) AS WeightFactor  ,SUM(m.TotalCorrect) as TotalCorrect  ,SUM(m.TotalIncorrect) as TotalIncorrect  ,(SUM(m.TotalCorrect) + SUM(m.TotalIncorrect)) as TotalLines  ,CAST(0 as numeric(38,20)) AS ScoreInPercent INTO #tmpCalculation_AutoQ FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCardrange rangeq WITH (NOLOCK) ON range.PartnerID = rangeq.PartnerID   AND left(range.rangename, 4) = left(rangeq.rangename, 4)   AND rangeq.rangetype = ''Q'' JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = rangeq.PartnerID  AND bsc.RangeGUID = rangeq.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = rangeq.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID  AND reg.CountryCode = bsc.CountryCode  AND reg.BrokerID = bsc.BrokerID LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID  = @PartnerID  AND @TargetString GROUP BY m.MeasurementName  ,gc.Decode  ,rangeq.RangeName   UPDATE tmp  SET ScoreInPercent = cast((cast(tmp.TotalCorrect as numeric(38,20))/cast(tmp.TotalLines as numeric(38,20))) as numeric(38,20)) FROM #tmpCalculation_AutoQ tmp WITH (NOLOCK)  SELECT * INTO #tmp_ALLQ FROM (  SELECT tmp.MeasurementName   ,tmp.Quarter   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * ISNULL(gc.Decode, 1) AS ScoreInPercentWeighted   ,CAST(''Auto1'' AS VARCHAR(max)) AS Type  FROM #tmpCalculation_AutoQ tmp WITH (NOLOCK)  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = tmp.measurementname  WHERE tmp.MeasurementName = ''Classification''    UNION ALL    SELECT tmp.MeasurementName   ,tmp.Quarter   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * ISNULL(gc.Decode, 1) AS ScoreInPercentWeighted   ,CAST(''Auto2'' AS VARCHAR(max)) AS Type  FROM #tmpCalculation_AutoQ tmp WITH (NOLOCK)  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = tmp.measurementname  WHERE tmp.MeasurementName = ''Value''    UNION ALL     SELECT tmp.MeasurementName   ,tmp.Quarter   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * ISNULL(gc.Decode, 1) AS ScoreInPercentWeighted   ,CAST(''Auto3'' AS VARCHAR(max)) AS Type  FROM #tmpCalculation_AutoQ tmp WITH (NOLOCK)  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = tmp.measurementname  WHERE tmp.MeasurementName = ''Origin''    ) query   INSERT INTO #tmp_ALLQ SELECT ''TotalScore'' AS MeasurementName     ,tmp.Quarter     ,''1'' AS WeightFactor     ,0 AS ScoreInPercent     ,sum(tmp.ScoreInPercentWeighted)/SUM(cast(tmp.WeightFactor as numeric(38,20))) AS ScoreInPercentWeighted     ,''Total1'' AS Type FROM #tmp_ALLQ tmp GROUP BY tmp.Quarter   DECLARE @cols AS NVARCHAR(MAX)  ,@query AS NVARCHAR(MAX);  SET @cols = (   SELECT DISTINCT STUFF((      SELECT DISTINCT '','' + tmp.Quarter      FROM #tmp_ALLQ tmp      FOR XML PATH('''')       ,TYPE      ).value(''.'', ''NVARCHAR(MAX)''), 1, 1, '''')   FROM #tmp_ALLQ tmp WITH (NOLOCK)   )                        set @query = ''  SELECT * INTO #tmpLastOneQ FROM     (SELECT MeasurementName as BSCTotalPercentage   ,Quarter   ,CAST(ScoreInPercentWeighted * 100 AS NUMERIC(38,2)) AS PercentScore   ,Type  FROM #tmp_ALLQ  WHERE MeasurementName = ''''TotalScore'''') AS q PIVOT (     MAX(PercentScore)  FOR Quarter IN ('' + @cols + ''))  as pvt;  SELECT BSCTotalPercentage,'' + @cols + '' FROM #tmpLastOneQ ORDER BY Type  ''  EXEC SP_EXECUTESQL @query  END   -----Quarter Range----- 
			IF (select distinct range.RangeType FROM tmgBrokerScoreCardrange range WITH (NOLOCK)    JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID     AND bsc.RangeGUID = range.RangeGUID    JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID     AND reg.CountryCode = bsc.CountryCode     AND reg.BrokerID = bsc.BrokerID    where @TargetString) = ''Q''  BEGIN  SELECT m.MeasurementName  ,SUBSTRING(range.RangeName,3,2) + RIGHT(range.RangeName, 2) as Quarter  ,isnull(gc.Decode, 1) AS WeightFactor  ,SUM(m.TotalCorrect) as TotalCorrect  ,SUM(m.TotalIncorrect) as TotalIncorrect  ,(SUM(m.TotalCorrect) + SUM(m.TotalIncorrect)) as TotalLines  ,CAST(0 as numeric(38,20)) AS ScoreInPercent INTO #tmpCalculation_AutoX FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID  AND reg.CountryCode = bsc.CountryCode  AND reg.BrokerID = bsc.BrokerID LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID  = @PartnerID  AND @TargetString GROUP BY m.MeasurementName  ,gc.Decode  ,range.RangeName    SELECT DISTINCT range.RangeGuid  ,range.EndDate INTO #tmpRangesX FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID  AND reg.CountryCode = bsc.CountryCode  AND reg.BrokerID = bsc.BrokerID WHERE @TargetString  AND range.RangeType = ''Q''  INSERT INTO #tmpRangesX SELECT TOP 3 range.RangeGuid  ,range.EndDate FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN #tmpRangesX tmp WITH (NOLOCK)   ON range.EndDate < tmp.EndDate WHERE range.RangeType = ''Q'' ORDER BY range.EndDate desc   INSERT INTO #tmpCalculation_AutoX SELECT m.MeasurementName  ,SUBSTRING(range.RangeName,3,2) + RIGHT(range.RangeName, 2) as Quarter  ,isnull(gc.Decode, 1) AS WeightFactor  ,SUM(m.TotalCorrect) as TotalCorrect  ,SUM(m.TotalIncorrect) as TotalIncorrect  ,(SUM(m.TotalCorrect) + SUM(m.TotalIncorrect)) as TotalLines  ,CAST(0 as numeric(38,20)) AS ScoreInPercent FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID  AND reg.CountryCode = bsc.CountryCode  AND reg.BrokerID = bsc.BrokerID JOIN (select DISTINCT range.PartnerID, range.BeginDate, range.EndDate, bsc.BrokerID, bsc.CountryCode    FROM tmgBrokerScoreCardrange range WITH (NOLOCK)    JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID     AND bsc.RangeGUID = range.RangeGUID    JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID     AND reg.CountryCode = bsc.CountryCode     AND reg.BrokerID = bsc.BrokerID    WHERE @TargetString     AND range.RangeType = ''Q'') selection  ON selection.BeginDate > range.BeginDate  AND selection.EndDate > range.EndDate  AND selection.PartnerID = range.PartnerID  AND selection.BrokerID = bsc.BrokerID  AND selection.CountryCode = bsc.CountryCode LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID  = @PartnerID  AND range.RangeType = ''Q''  AND EXISTS (select 1 from #tmpRangesX where range.RangeGuid = RangeGuid) GROUP BY m.MeasurementName  ,gc.Decode  ,range.RangeName      UPDATE tmp  SET ScoreInPercent = cast((cast(tmp.TotalCorrect as numeric(38,20))/cast(tmp.TotalLines as numeric(38,20))) as numeric(38,20)) FROM #tmpCalculation_AutoX tmp WITH (NOLOCK)  SELECT * INTO #tmp_ALLX FROM (  SELECT tmp.MeasurementName   ,tmp.Quarter   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * ISNULL(gc.Decode, 1) AS ScoreInPercentWeighted   ,CAST(''Auto1'' AS VARCHAR(max)) AS Type  FROM #tmpCalculation_AutoX tmp WITH (NOLOCK)  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = tmp.measurementname  WHERE tmp.MeasurementName = ''Classification''    UNION ALL    SELECT tmp.MeasurementName   ,tmp.Quarter   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * ISNULL(gc.Decode, 1) AS ScoreInPercentWeighted   ,CAST(''Auto2'' AS VARCHAR(max)) AS Type  FROM #tmpCalculation_AutoX tmp WITH (NOLOCK)  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = tmp.measurementname  WHERE tmp.MeasurementName = ''Value''    UNION ALL     SELECT tmp.MeasurementName   ,tmp.Quarter   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * ISNULL(gc.Decode, 1) AS ScoreInPercentWeighted   ,CAST(''Auto3'' AS VARCHAR(max)) AS Type  FROM #tmpCalculation_AutoX tmp WITH (NOLOCK)  LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''   AND gc.Code = tmp.measurementname  WHERE tmp.MeasurementName = ''Origin''     ) query  INSERT INTO #tmp_ALLX SELECT ''TotalScore'' AS MeasurementName     ,tmp.Quarter     ,''1'' AS WeightFactor     ,0 AS ScoreInPercent     ,sum(tmp.ScoreInPercentWeighted)/SUM(cast(tmp.WeightFactor as numeric(38,20))) AS ScoreInPercentWeighted     ,''Total1'' AS Type FROM #tmp_ALLX tmp GROUP BY tmp.Quarter  UPDATE #tmp_ALLX SET ScoreInPercentWeighted = ScoreInPercent  DECLARE @cols1 AS NVARCHAR(MAX)  ,@query1 AS NVARCHAR(MAX);  SET @cols1 = (   SELECT DISTINCT STUFF((      SELECT '','' + ''['' + tmp.Quarter + '']''      FROM #tmp_ALLX tmp      GROUP BY tmp.Quarter      FOR XML PATH('''')       ,TYPE      ).value(''.'', ''NVARCHAR(MAX)''), 1, 1, '''')   FROM #tmp_ALLX tmp WITH (NOLOCK)   )                        set @query1 = ''  SELECT * INTO #tmpLastOneX FROM     (SELECT MeasurementName   ,Quarter   ,CAST(ScoreInPercentWeighted * 100 AS NUMERIC(38,2)) AS PercentScore   ,Type  FROM #tmp_ALLX  WHERE MeasurementName <> ''''TotalScore'''') AS q PIVOT (     MAX(PercentScore)  FOR Quarter IN ('' + @cols1 + ''))  as pvt;  SELECT MeasurementName,'' + @cols1 + '' FROM #tmpLastOneX ORDER BY Type  ''  EXEC SP_EXECUTESQL @query1       END  -----Monthly Range----- 
			IF (select distinct range.RangeType FROM tmgBrokerScoreCardrange range WITH (NOLOCK)    JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID     AND bsc.RangeGUID = range.RangeGUID    JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID     AND reg.CountryCode = bsc.CountryCode     AND reg.BrokerID = bsc.BrokerID    where @TargetString) = ''X''  BEGIN  SELECT ''Quarter'' AS CannotBeRunForMonthlyRange  ,''0'' AS Score      END ', CAST(N'2019-02-11T16:48:56.693' AS DateTime), N'Broker Metrics Over Time', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-02-11T16:48:56.693' AS DateTime), N'e9b1db3a-af94-494b-9408-ed8279e617d0', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'SELECT m.MeasurementName  ,bsc.CountryCode  ,isnull(gc.Decode, 1) AS WeightFactor  ,SUM(m.TotalCorrect) as TotalCorrect  ,SUM(m.TotalIncorrect) as TotalIncorrect  ,(SUM(m.TotalCorrect) + SUM(m.TotalIncorrect)) as TotalLines  ,CAST(0 as numeric(38,20)) AS ScoreInPercent INTO #tmpCalculation_Auto FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID JOIN tmdBrokerRelationship reg WITH (NOLOCK) ON reg.PartnerID = bsc.PartnerID  AND reg.CountryCode = bsc.CountryCode  AND reg.BrokerID = bsc.BrokerID LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY m.MeasurementName  ,gc.Decode  ,bsc.CountryCode   UPDATE tmp  SET ScoreInPercent = cast((cast(tmp.TotalCorrect as numeric(38,20))/cast(tmp.TotalLines as numeric(38,20))) as numeric(38,20)) FROM #tmpCalculation_Auto tmp WITH (NOLOCK)   SELECT * INTO #tmp_ALL FROM (  SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,CAST(''Auto1'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Classification''    UNION ALL    SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,CAST(''Auto2'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Origin''    UNION ALL     SELECT CAST(tmp.MeasurementName as varchar(50)) as MeasurementName   ,tmp.CountryCode   ,tmp.WeightFactor   ,tmp.ScoreInPercent   ,tmp.ScoreInPercent * CAST(tmp.WeightFactor AS NUMERIC(10,2)) AS ScoreInPercentWeighted   ,CAST(''Auto3'' as varchar(50)) AS Type  FROM #tmpCalculation_Auto tmp WITH (NOLOCK)  WHERE tmp.MeasurementName = ''Value''    ) query   INSERT INTO #tmp_ALL SELECT ''Weighted Score'' AS MeasurementName  ,tmp.CountryCode  ,''1'' AS WeightFactor  ,0 AS ScoreInPercent  ,sum(tmp.ScoreInPercentWeighted)/SUM(cast(tmp.WeightFactor as numeric(38,20))) AS ScoreInPercentWeighted  ,''TotalA1'' AS Type FROM #tmp_ALL tmp WHERE tmp.Type like ''Auto%'' GROUP BY tmp.CountryCode  INSERT INTO #tmp_ALL SELECT ''Max Possible'' AS MeasurementName  ,tmp.CountryCode  ,''1'' AS WeightFactor  ,0 AS ScoreInPercent  ,sum(tmp.ScoreInPercentWeighted)/SUM(cast(tmp.WeightFactor as numeric(38,20))) AS ScoreInPercentWeighted  ,''TotalA3'' AS Type FROM #tmp_ALL tmp WHERE MeasurementName NOT IN (''Weighted Score'',''Max Possible'')  AND tmp.Type like ''Auto%'' GROUP BY tmp.CountryCode  SELECT * FROM ( SELECT MeasurementName as Type    ,cast(cast((ScoreInPercentWeighted * 100) AS NUMERIC(10, 2)) AS VARCHAR(15)) + '' %'' as ScoreInPercent  FROM #tmp_ALL  WHERE Type IN (''Auto1'',''Auto2'',''Auto3'')    UNION ALL    select ''Total'' as Type   ,CAST(CAST(CAST(SUM(scoreinpercentweighted) AS NUMERIC(38, 20)) / SUM(CAST(weightfactor AS NUMERIC(10, 2))) * 100 AS NUMERIC(10, 2)) AS VARCHAR(50)) + '' %''  FROM #tmp_ALL  where Type not like ''total%''  ) q', CAST(N'2019-02-11T16:48:56.693' AS DateTime), N'Detailed Score', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.693' AS DateTime), N'76a3e5b9-5186-49d8-acdf-24ff0707a141', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'SELECT left(rel.BrokerShortName, 15)  ,cast(avg(m.TotalScore) AS DECIMAL(10, 2)) * 100 AS [Total Classification Score]  ,sum(bsc.TotalLineCount) AS [Total Line Count] FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Origin'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname JOIN tmdBrokerRelationship rel WITH (NOLOCK) ON rel.BrokerID = bsc.BrokerID  AND rel.CountryCode = bsc.CountryCode  AND rel.PartnerId = bsc.PartnerID WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY rel.BrokerShortName ORDER BY rel.BrokerShortName ', CAST(N'2019-02-11T16:48:56.693' AS DateTime), N'Origin by Broker', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-11T16:48:56.693' AS DateTime), N'5d7bfddd-68e7-4d4a-9504-7c9f8831b8b9', N'40E26ADC-D18E-4223-ACD1-630AD06D3D16', N'SELECT LEFT(DATENAME(MM, DATEADD(mm, cast(bsc.Month AS INT), ''1900-12-31'')), 3) + '' '' + right(cast(bsc.Year AS VARCHAR(4)), 2) AS Month  ,cast(avg(m.TotalScore) AS DECIMAL(10, 4)) * 100 AS TotalScore FROM tmgBrokerScoreCardrange range WITH (NOLOCK) JOIN tmgBrokerScoreCard bsc WITH (NOLOCK) ON bsc.PartnerID = range.PartnerID  AND bsc.RangeGUID = range.RangeGUID JOIN tmgBrokerScoreCardMeasurement m WITH (NOLOCK) ON m.partnerid = range.partnerid  AND m.BrokerScoreCardGUID = bsc.BrokerScoreCardGUID  AND m.measurementname = ''Classification'' LEFT JOIN tmgGlobalCodes GC WITH (NOLOCK) ON gc.Fieldname = ''WeightFactor''  AND gc.Code = m.measurementname WHERE bsc.PartnerID = @PartnerID  AND @TargetString GROUP BY bsc.year  ,bsc.month ORDER BY bsc.year  ,bsc.month ', CAST(N'2019-02-11T16:48:56.693' AS DateTime), N'Classification Over Time', N'N', N'N')
, (@PartnerID, CAST(N'2019-01-03T08:10:04.310' AS DateTime), N'6844ff79-1e52-4a2d-ad5f-8051d0fe3c34', N'BOM Lookup: BOMs Without Analysis', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY BOMStartDate, BOMEndDate, ProductNum ) AS [RowNum] FROM (

  select distinct
bim.BillOfMaterials
, bim.ProductNum
, pc.ProductDesc
, bim.BOMStartDate
, bim.BOMEndDate
, bim.Value
, bim.CommercialValue
, bim.Weight
, bim.HTSNum
, bim.CountryOfOrigin
, bim.CountryOfManufacture 
, 1 as NoOrder
from txdBOMIM bim with (nolock)
JOIN tmdProductClassification pc with (NOLOCK) ON
pc.PartnerID = bim.PartnerID AND
pc.ProductNum = bim.ProductNum
where bim.ProcessFlag = ''Y''
and not exists 
	(
	select 
	bh.BOMGUID 
	from txdBOMIMHist bh with (nolock) 
	where bh.PartnerID = ''@PARTNERID@''
	and bh.BOMGUID = bim.BOMGUID
	) 
and bim.PartnerID = ''@PARTNERID@''
)

AS LookupViewInner WHERE @whereclause@', CAST(N'2019-01-09T14:44:29.750' AS DateTime), N'BOMs that have not yet been analyzed', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-01-03T08:22:11.973' AS DateTime), N'e633c2b6-1599-4fb5-8a51-16b05c14f91a', N'Solicitation Response Rate', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@ ,Year desc ) AS [RowNum] FROM ( 
  SELECT
                effdate AS Year
                ,SUM(TotalItems) AS TotalItemsSolicited
                ,SUM(Completed) AS TotalItemsCompleted
                ,(CAST(SUM(Completed) AS NUMERIC(38, 20)) / CAST(SUM(TotalItems) AS NUMERIC(38, 20))) * 100 AS PercentageCompleted
  				,1 as NoOrder
FROM (
                SELECT partnerid
                                ,effdate
                                ,Completed
                                ,TotalItems
                                ,DocReqGUID
                FROM (
                                SELECT dr.PartnerID
                                                ,YEAR(ch.effdate) AS effdate
                                                ,dr.DocReqGuid
                                                ,(
                                                                SELECT (
                                                                                                SELECT COUNT(DISTINCT DocReqDetailGUID)
                                                                                                FROM tmgDocRequestDetailAttachments WITH (NOLOCK)
                                                                                                WHERE PartnerID = dr.PartnerID
                                                                                                                AND DocReqGUID = dr.DocReqGUID
                                                                                                                AND STATUS <> ''Attachment''
                                                                                                                AND Filename NOT LIKE ''%Attachment%''
                                                                                                                AND Filename NOT LIKE ''%NON-FTA%''
                                                                                                                AND Filename NOT LIKE ''%Cont%''
                                                                                                                AND charindex(''_'', Filename) > 0
                                                                                                                AND Filename NOT LIKE ''%CustomReport.pdf''
                                                                                                                AND CertVersionName NOT LIKE ''%Retroactive%''
                                                                                                ) + (
                                                                                                SELECT COUNT(DISTINCT DocReqDetailGUID)
                                                                                                FROM tmgDocRequestDetailAttachments WITH (NOLOCK)
                                                                                                WHERE PartnerID = dr.PartnerID
                                                                                                                AND DocReqGUID = dr.DocReqGUID
                                                                                                                AND Filename LIKE ''%NON-FTA%''
                                                                                                                AND CertVersionName NOT LIKE ''%Retroactive%''
                                                                                                                AND Filename NOT LIKE ''%CustomReport.pdf''
                                                                                                                AND CertVersionName NOT LIKE ''%Retroactive%''
                                                                                                ) + (
                                                                                                SELECT COUNT(DISTINCT DetailGUID)
                                                                                                FROM txdCertDetailStatus WITH (NOLOCK)
                                                                                                WHERE PartnerID = ch.PartnerID
                                                                                                                AND SUBSTRING(HeaderGUID, (CHARINDEX(''~'', HeaderGUID) + 1), 50) = SUBSTRING(ch.HeaderGUID, (CHARINDEX(''~'', ch.HeaderGUID) + 1), 50)
                                                                                                                AND Selected = ''Y''
                                                                                                                AND Generated = ''Y''
                                                                                                                AND Invalid = ''Y''
                                                                                                )
                                                                ) AS Completed
                                                ,(
                                                                SELECT COUNT(DocReqDetailGuid)
                                                                FROM tmgDocRequestDetail drd WITH (NOLOCK)
                                                                WHERE PartnerID = dr.PartnerID
                                                                                AND drd.DocReqGUID = dr.DocReqGUID
                                                                ) AS TotalItems
                                FROM txdCertHeader ch WITH (NOLOCK)
                                JOIN tmgDocRequest dr WITH (NOLOCK) ON ch.PartnerID = dr.PartnerID
                                                AND SUBSTRING(ch.HeaderGUID, (CHARINDEX(''~'', ch.HeaderGUID) + 1), 50) = dr.DocReqGUID
                                WHERE ch.PartnerID = @PARTNERID@
                                               AND dr.STATUS NOT IN (
                                                                ''Archived''
                                                                ,''Final''
                                                                )
                                GROUP BY YEAR(ch.effdate)
                                                ,dr.PartnerID
                                                ,dr.DocReqGuid
                                                ,Title
                                                ,DueDate
                                                ,ch.PartnerID
                                                ,SUBSTRING(ch.HeaderGUID, (CHARINDEX(''~'', ch.HeaderGUID) + 1), 50)
                                ) dashboard
                ) abc
GROUP BY PartnerID
                ,effdate
                ) AS LookupViewInner WHERE @whereclause@', CAST(N'2019-01-09T14:53:55.213' AS DateTime), N'Percentage of solicited products that have received supplier responses per year', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-02-28T10:59:44.247' AS DateTime), N'D73D1952-8011-4DC3-9A03-DBBFF6EC9028', N'FIFO SS Upload Kickoff', N'INSERT  INTO dbo.tlgWorkflowSchedule
      ( PartnerID ,
        EffDate ,
        WorkFlowGUID ,
        Description ,
        Recurring ,
        Time ,
        Date ,
        WorkFlow ,
        LastUpdated ,
        Interval ,
        DeletedFlag ,
        KeepDuringRollback
      )
SELECT  PartnerID ,
      GETDATE() ,
      NEWID() ,
      ''STANDARD_SPREADSHEET_FIFO'' ,
      ''N'' ,
      CONVERT(VARCHAR(5), DATEADD(second, - 5, GETDATE()), 108),
      CAST(GETDATE() AS DATE),
      ''STANDARD_SPREADSHEET_FIFO'' ,
      '''' ,
      0 ,
      ''N'' ,
      ''N''
FROM dbo.tmfDefaults', CAST(N'2019-02-28T10:59:44.247' AS DateTime), N'FIFO SS Kickoff', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-02-28T10:59:47.920' AS DateTime), N'4D7C5FE3-B1B9-4A13-8AD4-E2078A06EB10', N'INVBALRECON SS Upload Kickoff', N'INSERT  INTO dbo.tlgWorkflowSchedule
      ( PartnerID ,
        EffDate ,
        WorkFlowGUID ,
        Description ,
        Recurring ,
        Time ,
        Date ,
        WorkFlow ,
        LastUpdated ,
        Interval ,
        DeletedFlag ,
        KeepDuringRollback
      )
SELECT  PartnerID ,
      GETDATE() ,
      NEWID() ,
      ''STANDARD_SPREADSHEET_INVBALRECON'' ,
      ''N'' ,
      CONVERT(VARCHAR(5), DATEADD(second, - 5, GETDATE()), 108),
      CAST(GETDATE() AS DATE),
      ''STANDARD_SPREADSHEET_INVBALRECON'' ,
      '''' ,
      0 ,
      ''N'' ,
      ''N''
FROM dbo.tmfDefaults', CAST(N'2019-02-28T10:59:47.920' AS DateTime), N'INVBALRECON SS Kickoff', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-02-28T10:59:57.100' AS DateTime), N'E8369E69-BDF4-4681-9A5E-7D31D22218A6', N'ITEMMASTER SS Upload Kickoff', N'INSERT  INTO dbo.tlgWorkflowSchedule
      ( PartnerID ,
        EffDate ,
        WorkFlowGUID ,
        Description ,
        Recurring ,
        Time ,
        Date ,
        WorkFlow ,
        LastUpdated ,
        Interval ,
        DeletedFlag ,
        KeepDuringRollback
      )
SELECT  PartnerID ,
      GETDATE() ,
      NEWID() ,
      ''STANDARD_SPREADSHEET_ITEMMASTER'' ,
      ''N'' ,
      CONVERT(VARCHAR(5), DATEADD(second, - 5, GETDATE()), 108),
      CAST(GETDATE() AS DATE),
      ''STANDARD_SPREADSHEET_ITEMMASTER'' ,
      '''' ,
      0 ,
      ''N'' ,
      ''N''
FROM dbo.tmfDefaults', CAST(N'2019-02-28T10:59:57.100' AS DateTime), N'ITEMMASTER SS Kickoff', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-02-28T10:59:57.103' AS DateTime), N'29ECA4D1-91C1-4BC3-ADE3-094FB1C8D54E', N'MANIFEST SS Upload Kickoff', N'INSERT  INTO dbo.tlgWorkflowSchedule
      ( PartnerID ,
        EffDate ,
        WorkFlowGUID ,
        Description ,
        Recurring ,
        Time ,
        Date ,
        WorkFlow ,
        LastUpdated ,
        Interval ,
        DeletedFlag ,
        KeepDuringRollback
      )
SELECT  PartnerID ,
      GETDATE() ,
      NEWID() ,
      ''STANDARD_SPREADSHEET_MANIFEST'' ,
      ''N'' ,
      CONVERT(VARCHAR(5), DATEADD(second, - 5, GETDATE()), 108),
      CAST(GETDATE() AS DATE),
      ''STANDARD_SPREADSHEET_MANIFEST'' ,
      '''' ,
      0 ,
      ''N'' ,
      ''N''
FROM dbo.tmfDefaults', CAST(N'2019-02-28T10:59:57.103' AS DateTime), N'MANIFEST SS Kickoff', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-04-09T11:10:55.410' AS DateTime), N'A8C4F1E6-4B3C-48FB-8C30-38B57E43CF4D', N'SpreadsheetValidation', N'SELECT Effdate, UploadType, FieldName, FieldValue, ValidationMessage, UserName from txdGenericUploadValidationErrors WITH (NOLOCK)', CAST(N'2019-04-09T11:10:55.410' AS DateTime), N'', N'N', N'N')
, (@PartnerID, CAST(N'2019-07-10T23:15:41.347' AS DateTime), N'30100000-4c7c-4b23-891a-a6cf4749c546', N'Section 301 CH99 Validation Warning', N'DECLARE @PartnerID as int
select top 1 @PartnerID = PartnerID from tmfDefaults
DECLARE @code as varchar(30)

------------------------------------------------------------------
--BELOW VALIDATION ENSURES STATUS CODE IS SET TO P FOR 301 GOODS--
------------------------------------------------------------------
set @code = ''EG-301-99ST''
INSERT INTO txdValidationWarnings
SELECT DISTINCT
  fp.PartnerID
  , GETDATE()
  ,''txdFifoProcessing''
  , fp.TxnNumGUID
  , fp.ProductNum
  , @code + replace(fph.HtsNum, ''.'', '''')
  ,''FIFOProcessing - '' + replace(fph.HtsNum, ''.'', '''') + '' may need to be filed with StatusCode of P if not exempt.''
  ,''StatusCode''
  ,''N''
  ,''N''
FROM txdFifoProcessing fp WITH(NOLOCK)
JOIN txdFifoProcessingHtsValues fph WITH(NOLOCK) ON fp.PartnerID = fph.PartnerID AND fp.TxnNumGUID = fph.TxnNumGUID
JOIN tmdHTS_Section301 h301 WITH (NOLOCK) ON 
  case when h301.htsnum = '''' then replace(fph.HtsNum, ''.'', '''') else h301.htsnum end = replace(fph.HtsNum, ''.'', '''')
  and h301.CountryofOrigin = fph.CountryOfOrigin
  AND getdate() between h301.StartEffDate and h301.EndEffDate
WHERE fp.PartnerID = @PartnerID
  AND fp.TxnCode IN (''RPPC'',''RPIM'',''APPC'',''APIM'')
  AND fph.StatusCode = ''N''
  and fp.FromZoneID = ''''--zone to zone could have a different privilege date so don''t check these
  AND REPLACE(fph.HtsNum2, ''.'','''') NOT IN (SELECT DISTINCT ex.Exclusion FROM tmdHTS_Exclusions ex WITH (NOLOCK)) 

IF @@ROWCOUNT > 0
BEGIN
  UPDATE FP
  SET FP.ValidFlag = ''N''
  FROM txdFifoProcessing fp WITH (NOLOCK)
  JOIN txdValidationWarnings w WITH (NOLOCK) ON fp.PartnerID = w.PartnerID AND fp.TxnNumGUID = w.TxnNumGUID
  WHERE fp.PartnerID = @PartnerID
    AND w.ValidationCode like @code + ''%''

  UPDATE tmfDefaults
  SET ValidFlag = ''N''
END

-----------------------------------------------------------------
--BELOW VALIDATION ENSURES HTSNUM2 IS CORRECT FOR ROUND 1 ITEMS--
-----------------------------------------------------------------
--Non-Clock Version
set @code = ''EG-301-HS2''
INSERT INTO txdValidationWarnings
SELECT  DISTINCT
  fp.PartnerID
  , GETDATE()
  ,''txdFifoProcessing''
    , fp.TxnNumGUID
  , fp.ProductNum
  , @code + replace(fph.HtsNum, ''.'', '''')
    ,''FIFOProcessing - '' + replace(fph.HtsNum, ''.'', '''') + '' may need to be filed with CH99 in HtsNum2 of '' + h301.Chapter99 + '' if not exempt.''
    ,''HtsNum2''
    ,''N''
    ,''N''
FROM txdFifoProcessing fp WITH(NOLOCK)
JOIN txdFifoProcessingHtsValues fph WITH(NOLOCK) ON fp.PartnerID = fph.PartnerID AND fp.TxnNumGUID = fph.TxnNumGUID
JOIN tmdHTS_Section301 h301 WITH (NOLOCK) ON 
  case when h301.htsnum = '''' then replace(fph.HtsNum, ''.'', '''') else h301.htsnum end = replace(fph.HtsNum, ''.'', '''')
  and h301.CountryofOrigin = fph.CountryOfOrigin
  AND getdate() between h301.StartEffDate and h301.EndEffDate
WHERE fp.PartnerID = @PartnerID
  AND fp.TxnCode IN (''RPPC'',''RPIM'',''APPC'',''APIM'')
  AND REPLACE(fph.HtsNum2, ''.'','''') != h301.Chapter99
  AND REPLACE(fph.HtsNum2, ''.'','''') NOT IN(select ex.Exclusion
                      from tmdHTS_Exclusions ex
                      where ex.HTSNum = replace(fph.HtsNum, ''.'', '''')
                      and ex.CountryOfOrigin = fph.CountryOfOrigin
                      and getdate() between ex.StartEffDate and ex.EndEffDate)
  AND StatusCode<> ''D''
  AND 1 = (select count(*) from txdFifoProcessingHtsValues fphh WITH (NOLOCK) where fphh.PartnerID = fp.PartnerID and fphh.TxnNumGUID = fp.TxnNumGUID)
  AND not exists(select top 1 1 from txdFifoProcessingHtsValuesClock cl WITH(NOLOCK) where cl.PartnerID = fp.PartnerID and cl.TxnNumGuid = fp.TxnNumGUID)
  and fp.FromZoneID = '''' --zone to zone could have a different privilege date so don''t check these
  AND fph.HTSNum NOT IN (''8205906000'', ''8206000000'', ''8211100000'', ''8215100000'', ''8215200000'', ''9608500000'')
  AND fph.HTSNum2 NOT IN (''8205906000'', ''8206000000'', ''8211100000'', ''8215100000'', ''8215200000'', ''9608500000'')

IF @@ROWCOUNT > 0
BEGIN
  UPDATE FP
  SET FP.ValidFlag = ''N''
  FROM txdFifoProcessing fp WITH (NOLOCK)
  JOIN txdValidationWarnings w WITH (NOLOCK) ON fp.PartnerID = w.PartnerID AND fp.TxnNumGUID = w.TxnNumGUID
  WHERE fp.PartnerID = @PartnerID
    AND w.ValidationCode like @code + ''%''

  UPDATE tmfDefaults
  SET ValidFlag = ''N''
END

-----------------------------------------------------------------
--BELOW VALIDATION ENSURES CLOCK HAS 301 HTS--
-----------------------------------------------------------------
--Clock Version 
--if records moved to txdFIFOProcessingHTSValuesClock assume this validation passed so only run where there are multiple records in txdFifoProcessingHTSValues
set @code = ''EG-301-HS2C''
INSERT INTO txdValidationWarnings
SELECT  DISTINCT
  fp.PartnerID
  , GETDATE()
  ,''txdFifoProcessing''
    , fp.TxnNumGUID
  , fp.ProductNum
  , @code + replace(fph.HtsNum, ''.'', '''')
    ,''FIFOProcessing - '' + replace(fph.HtsNum, ''.'', '''') + '' may need to be filed with CH99 of '' + h301.Chapter99 + '' if not exempt.''
    ,''HtsNum''
    ,''N''
    ,''N''
FROM txdFifoProcessing fp WITH(NOLOCK)
JOIN txdFifoProcessingHtsValues fph WITH(NOLOCK) ON fp.PartnerID = fph.PartnerID AND fp.TxnNumGUID = fph.TxnNumGUID
JOIN tmdHTS_Section301 h301 WITH (NOLOCK) ON 
  case when h301.htsnum = '''' then replace(fph.HtsNum, ''.'', '''') else h301.htsnum end = replace(fph.HtsNum, ''.'', '''')
  and h301.CountryofOrigin = fph.CountryOfOrigin
  AND getdate() between h301.StartEffDate and h301.EndEffDate
WHERE fp.PartnerID = @PartnerID
  AND fp.TxnCode IN (''RPPC'',''RPIM'',''APPC'',''APIM'')
  AND not exists(select top 1 1 from txdFifoProcessingHtsValues fph301 WITH(NOLOCK)
                  where fph301.PartnerID = fp.PartnerID and fph301.TxnNumGUID = fp.TxnNumGUID
            and(REPLACE(fph301.HtsNum, ''.'', '''') = h301.Chapter99
              or REPLACE(fph301.HtsNum, ''.'', '''') in (select ex.Exclusion
                                  from tmdHTS_Exclusions ex
                                  where ex.HTSNum = replace(fph.HtsNum, ''.'', '''')
                                  and ex.CountryOfOrigin = fph.CountryOfOrigin
                                  and getdate() between ex.StartEffDate and ex.EndEffDate)
            ))
  AND StatusCode<> ''D''
  AND 1 < (select count(*) from txdFifoProcessingHtsValues fphh WITH (NOLOCK) where fphh.PartnerID = fp.PartnerID and fphh.TxnNumGUID = fp.TxnNumGUID)
  and fp.FromZoneID = '''' --zone to zone could have a different privilege date so don''t check these
  AND NOT EXISTS (SELECT 1 FROM txdFifoProcessingHtsValues fph2 WHERE fph.PartnerID = fph2.PartnerID AND fph.TxnNumGUID = fph2.TxnNumGUID
					AND fph2.HtsNum IN (''8205906000'', ''8206000000'', ''8211100000'', ''8215100000'', ''8215200000'', ''9608500000''))

IF @@ROWCOUNT > 0
BEGIN
  UPDATE FP
  SET FP.ValidFlag = ''N''
  FROM txdFifoProcessing fp WITH (NOLOCK)
  JOIN txdValidationWarnings w WITH (NOLOCK) ON fp.PartnerID = w.PartnerID AND fp.TxnNumGUID = w.TxnNumGUID
  WHERE fp.PartnerID = @PartnerID
    AND w.ValidationCode like @code + ''%''

  UPDATE tmfDefaults
  SET ValidFlag = ''N''
END

-----------------------------------------------------------------
--BELOW VALIDATION ENSURES HTSNUM2 IS NOT SET FOR NON 301 ITEMS--
-----------------------------------------------------------------
--Non-Clock Version
set @code = ''EG-301-99''
INSERT INTO txdValidationWarnings
SELECT  DISTINCT
  fp.PartnerID
  , GETDATE()
  ,''txdFifoProcessing''
    , fp.TxnNumGUID
  , fp.ProductNum
  , @code + replace(fph.HtsNum, ''.'', '''')
    ,''FIFOProcessing - '' + replace(fph.HtsNum, ''.'', '''') + '' may not need to be filed with CH99 for COO''
    ,''HtsNum2''
    ,''N''
    ,''N''
FROM txdFifoProcessing fp WITH(NOLOCK)
JOIN txdFifoProcessingHtsValues fph WITH(NOLOCK) ON fp.PartnerID = fph.PartnerID AND fp.TxnNumGUID = fph.TxnNumGUID
WHERE fp.PartnerID = @PartnerID
   AND fp.TxnCode IN (''RPPC'',''RPIM'',''APPC'',''APIM'')
  AND fph.HtsNum2 != ''''
  AND (
    (REPLACE(fph.HtsNum2, ''.'','''') in (select distinct h301.Chapter99 from tmdHTS_Section301 h301 WITH (NOLOCK))
      AND NOT Exists(select top 1 1 from tmdHTS_Section301 h301 WITH(NOLOCK)
                      where case when h301.htsnum = '''' then replace(fph.HtsNum, ''.'', '''') else h301.htsnum end = replace(fph.HtsNum, ''.'', '''')
                and h301.CountryofOrigin = fph.CountryOfOrigin
                and getdate() between h301.StartEffDate and h301.EndEffDate)
    ) OR
    (REPLACE(fph.HtsNum2, ''.'', '''') IN(select distinct ex.Exclusion from tmdHTS_Exclusions ex WITH(NOLOCK))
    AND NOT Exists(select top 1 1 from tmdHTS_Exclusions ex WITH(NOLOCK)
                    where ex.htsnum = replace(fph.HtsNum, ''.'', '''')
              and ex.CountryofOrigin = fph.CountryOfOrigin
              and getdate() between ex.StartEffDate and ex.EndEffDate)
    )
  )
  AND StatusCode<> ''D''
  and fp.FromZoneID = ''''--zone to zone could have a different privilege date so don''t check these
  AND fph.HTSNum NOT IN (''8205906000'', ''8206000000'', ''8211100000'', ''8215100000'', ''8215200000'', ''9608500000'')
  AND fph.HTSNum2 NOT IN (''8205906000'', ''8206000000'', ''8211100000'', ''8215100000'', ''8215200000'', ''9608500000'')

IF @@ROWCOUNT > 0
BEGIN
  UPDATE FP
  SET FP.ValidFlag = ''N''
  FROM txdFifoProcessing fp WITH (NOLOCK)
  JOIN txdValidationWarnings w WITH (NOLOCK) ON fp.PartnerID = w.PartnerID AND fp.TxnNumGUID = w.TxnNumGUID
  WHERE fp.PartnerID = @PartnerID
    AND w.ValidationCode like @code + ''%''

  UPDATE tmfDefaults
  SET ValidFlag = ''N''
END

-----------------------------------------------------------------
--BELOW VALIDATION ENSURES 301/EXCLUSION IS NOT USED FOR NON 301 CLOCK ITEMS--
-----------------------------------------------------------------
--Clock Version
set @code = ''EG-301-99C''
INSERT INTO txdValidationWarnings
SELECT  DISTINCT
  fp.PartnerID
  , GETDATE()
  ,''txdFifoProcessing''
    , fp.TxnNumGUID
  , fp.ProductNum
  , @code + replace(fph301.HtsNum, ''.'', '''')
    ,''FIFOProcessing - '' + replace(fph301.HtsNum, ''.'', '''') + '' may not need to be filed for COO''
    ,''HtsNum''
    ,''N''
    ,''N''
FROM txdFifoProcessing fp WITH(NOLOCK)
JOIN txdFifoProcessingHtsValues fph301 WITH(NOLOCK) ON fp.PartnerID = fph301.PartnerID AND fp.TxnNumGUID = fph301.TxnNumGUID
WHERE fp.PartnerID = @PartnerID
   AND fp.TxnCode IN (''RPPC'',''RPIM'',''APPC'',''APIM'')
  AND(
    (REPLACE(fph301.HtsNum, ''.'', '''') in (select distinct h301.Chapter99 from tmdHTS_Section301 h301 WITH(NOLOCK))
    AND NOT Exists(select top 1 1 from txdFifoProcessingHtsValues fph WITH(NOLOCK)
            JOIN tmdHTS_Section301 h301 WITH(NOLOCK) ON case when h301.htsnum = '''' then replace(fph.HtsNum, ''.'', '''') else h301.htsnum end = replace(fph.HtsNum, ''.'', '''')
                and h301.CountryofOrigin = fph.CountryOfOrigin
                and getdate() between h301.StartEffDate and h301.EndEffDate
            where fph.PartnerID = fp.PartnerID and fph.TxnNumGUID = fp.TxnNumGUID)
    )OR
    (REPLACE(fph301.HtsNum, ''.'', '''') IN(select distinct ex.Exclusion from tmdHTS_Exclusions ex WITH(NOLOCK))
    AND NOT Exists(select top 1 1 from txdFifoProcessingHtsValues fph WITH(NOLOCK)
            JOIN tmdHTS_Exclusions ex WITH(NOLOCK) ON ex.htsnum = replace(fph.HtsNum, ''.'', '''')
                and ex.CountryofOrigin = fph.CountryOfOrigin
                and getdate() between ex.StartEffDate and ex.EndEffDate
            where fph.PartnerID = fp.PartnerID and fph.TxnNumGUID = fp.TxnNumGUID)
    )
  )
  AND StatusCode<> ''D''
  AND 1 < (select count(*) from txdFifoProcessingHtsValues fphh WITH (NOLOCK) where fphh.PartnerID = fp.PartnerID and fphh.TxnNumGUID = fp.TxnNumGUID)
  and fp.FromZoneID = '''' --zone to zone could have a different privilege date so don''t check these
  AND NOT EXISTS (SELECT 1 FROM txdFifoProcessingHtsValues fph2 WHERE fph301.PartnerID = fph2.PartnerID AND fph301.TxnNumGUID = fph2.TxnNumGUID
					AND fph2.HtsNum IN (''8205906000'', ''8206000000'', ''8211100000'', ''8215100000'', ''8215200000'', ''9608500000''))

IF @@ROWCOUNT > 0
BEGIN
  UPDATE FP
  SET FP.ValidFlag = ''N''
  FROM txdFifoProcessing fp WITH (NOLOCK)
  JOIN txdValidationWarnings w WITH (NOLOCK) ON fp.PartnerID = w.PartnerID AND fp.TxnNumGUID = w.TxnNumGUID
  WHERE fp.PartnerID = @PartnerID
    AND w.ValidationCode like @code + ''%''

  UPDATE tmfDefaults
  SET ValidFlag = ''N''
END

-----------------------------------------------------------------------
--BELOW VALIDATION ENSURES CORRECT HTSINDEX IS SELECTED FOR 301 ITEMS--
-----------------------------------------------------------------------
set @code = ''EG-301-992''
INSERT INTO txdValidationWarnings
SELECT  DISTINCT
  fp.PartnerID
  , GETDATE()
  ,''txdFifoProcessing''
    , fp.TxnNumGUID
  , fp.ProductNum
  , @code + replace(fph.HtsNum, ''.'', '''')
    ,''FIFOProcessing - '' + replace(fph.HtsNum, ''.'', '''') + '' may need to have Chapter 99 HTSIndex applied for correct 301 additional duty''
    ,''HtsNum2''
    ,''N''
    ,''N''
FROM txdFifoProcessing fp WITH(NOLOCK)
JOIN txdFifoProcessingHtsValues fph WITH(NOLOCK) ON fp.PartnerID = fph.PartnerID AND fp.TxnNumGUID = fph.TxnNumGUID
JOIN tmdHTS_Section301 h301 WITH (NOLOCK) ON 
  case when h301.htsnum = '''' then replace(fph.HtsNum, ''.'', '''') else h301.htsnum end = replace(fph.HtsNum, ''.'', '''')
  and h301.CountryofOrigin = fph.CountryOfOrigin
  AND getdate() between h301.StartEffDate and h301.EndEffDate
  AND h301.Chapter99 = replace(fph.HTSNum2, ''.'', '''')
WHERE fp.PartnerID = @PartnerID
AND fp.TxnCode IN (''RPPC'',''RPIM'',''APPC'',''APIM'')
AND fph.Advaloremrate<h301.AdvaloremRate
AND fph.StatusCode <> ''D''
and fp.FromZoneID = ''''--zone to zone could have a different privilege date so don''t check these
  AND fph.HTSNum NOT IN (''8205906000'', ''8206000000'', ''8211100000'', ''8215100000'', ''8215200000'', ''9608500000'')
  AND fph.HTSNum2 NOT IN (''8205906000'', ''8206000000'', ''8211100000'', ''8215100000'', ''8215200000'', ''9608500000'')

IF @@ROWCOUNT > 0
BEGIN
  UPDATE FP
  SET FP.ValidFlag = ''N''
  FROM txdFifoProcessing fp WITH (NOLOCK)
  JOIN txdValidationWarnings w WITH (NOLOCK) ON fp.PartnerID = w.PartnerID AND fp.TxnNumGUID = w.TxnNumGUID
  WHERE fp.PartnerID = @PartnerID
    AND w.ValidationCode like @code + ''%''

  UPDATE tmfDefaults
  SET ValidFlag = ''N''
END', CAST(N'2019-07-10T23:15:41.347' AS DateTime), N'Section 301 CH99 Validation Warning', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-09-10T14:43:56.950' AS DateTime), N'44960B19-99F8-4CE8-BD38-B7FFE4F30B13', N'Load Company Partners Spreadsheet', N'INSERT  INTO dbo.tlgWorkflowSchedule
						( PartnerID ,
						  EffDate ,
						  WorkFlowGUID ,
						  Description ,
						  Recurring ,
						  Time ,
						  Date ,
						  WorkFlow ,
						  LastUpdated ,
						  Interval ,
						  DeletedFlag ,
						  KeepDuringRollback
						)
					SELECT  PartnerID ,
						GETDATE() ,
						NEWID() ,
						''LOAD COMPANY PARTNERS - SPREADSHEET'' ,
						''N'' ,
						''00:00'' ,
						CAST(GETDATE() AS DATE),
						''LOAD COMPANY PARTNERS - SPREADSHEET'' ,
						''1900-01-01'' ,
						0 ,
						''N'' ,
						''N''
					FROM dbo.tmfDefaults', CAST(N'2019-09-10T14:43:56.953' AS DateTime), N'Kicks off the workflow to load the company partners spreadsheet', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-09-17T18:02:26.350' AS DateTime), N'C04F81AF-2882-4C63-A6D0-57625FF4FF84', N'Spreadsheet Validations: Company Partners', N'SELECT PartnerID, Effdate, LineNum, FieldName, FieldValue, ValidationMessage, Username
FROM txdGenericUploadValidationErrors gv WITH (NOLOCK)
WHERE gv.UploadType = ''DPS'' AND
	gv.PartnerID = (SELECT PartnerID FROM tmfDefaults WITH (NOLOCK))', CAST(N'2019-09-17T18:02:26.350' AS DateTime), N'Displays the standard spreadsheet validations from the most recent Company Partners spreadsheet upload', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-10-22T14:40:34.913' AS DateTime), N'F3F2B098-380B-4F02-8A44-7CFD4A68692E', N'Classification Lookup: CI - VAT', N'-- Classification Lookup: CI - VAT
SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum ASC
		) AS [RowNum]
FROM (
	SELECT ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' AS Edit
		,xxpc.ProductNum
		,xxpc.ProductDesc
		,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum
		,CIVAT.CountryOfOrigin
		,CIVAT.Rate
		,CIVAT.Chargetype
		,CIVAT.Chargetypedescription
		,CIVAT.Effectivitydate
		,CIVAT.Expirationdate
		,1 AS NoOrder
	FROM tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK)
	JOIN vid_CI_@COUNTRY_CODE@_VAT CIVAT WITH (NOLOCK) ON xxpc.ProductGuid = CIVAT.ProductGuid
		AND xxpc.PartnerID = CIVAT.PartnerID
	WHERE xxpc.PartnerID = @PartnerID@
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2019-10-22T14:40:34.913' AS DateTime), N'Classification Lookup: CI - VAT', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-10-22T14:46:38.537' AS DateTime), N'CDFBD66B-EC2D-4662-AC01-2E5BB08E037A', N'Classification Lookup: CI - ADDCVD Applies', N'-- Classification Lookup: CI - ADDCVD Applies
SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum ASC
		) AS [RowNum]
FROM (
	SELECT ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' AS Edit
		,xxpc.ProductNum
		,xxpc.ProductDesc
		,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum
		,CIADDCVDApplies.ADDCVDApplies
		,CIADDCVDApplies.CountryOfOrigin
		,1 AS NoOrder
	FROM tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK)
	JOIN vid_CI_@COUNTRY_CODE@_ADDCVDApplies CIADDCVDApplies WITH (NOLOCK) ON xxpc.ProductGuid = CIADDCVDApplies.ProductGuid
		AND xxpc.PartnerID = CIADDCVDApplies.PartnerID
	WHERE xxpc.PartnerID = @PartnerID@
		AND CIADDCVDApplies.ADDCVDApplies = ''Y''
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2019-10-22T14:46:38.537' AS DateTime), N'Classification Lookup: CI - ADDCVD Applies', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2019-10-22T14:48:26.107' AS DateTime), N'DD246629-7166-4E90-A656-61ADDF9F5665', N'Classification Lookup: CI - ADDCVD Rates', N'-- Classification Lookup: CI - ADDCVD Rates
SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum ASC
		) AS [RowNum]
FROM (
	SELECT ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' AS Edit
		,xxpc.ProductNum
		,xxpc.ProductDesc
		,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum
		,CIADDCVDRates.CountryOfOrigin
		,CIADDCVDRates.Rate
		,CIADDCVDRates.Description
		,CIADDCVDRates.RestrictedCode
		,CIADDCVDRates.AdditionalCode
		,CIADDCVDRates.CompanyName
		,CIADDCVDRates.Restriction
		,1 AS NoOrder
	FROM tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK)
	JOIN vid_CI_@COUNTRY_CODE@_ADDCVDRates CIADDCVDRates WITH (NOLOCK) ON xxpc.ProductGuid = CIADDCVDRates.ProductGuid
		AND xxpc.PartnerID = CIADDCVDRates.PartnerID
	WHERE xxpc.PartnerID = @PartnerID@
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2019-10-22T14:48:26.107' AS DateTime), N'Classification Lookup: CI - ADDCVD Rates', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2020-02-07T14:21:27.203' AS DateTime), N'892184BF-39F5-46BC-A64E-38C2066902E0', N'EVGovtValidation', N'INSERT INTO 
			txdEVGovtValidationErrors 
		select ''@partnerid@'' as [PartnerID], 
			getdate() as [EffDate], 
			gov.GovtHeaderGUID as [GovtHeaderGUID], 
			gov.GovtDetailGUID as [GovtDetailGUID], 
			''@validationguid@'' as [ValidationGuid], 
			''@type@'' as [ValidationType], 
			''@governmenttable@'' as [ComparisonTable], 
			''Government Data'' as [ComparisonFieldName], 
			'''' as [ComparisonFieldValue], 
			''@validationtable@'' as [SourceTable], 
			''Broker Data'' as [SourceFieldName], 
			'''' as [SourceFieldValue], 
			''@message@'' as [Message], 
			''N'' as [KeepDuringRollback], 
			''N'' as [DeletedFlag] 
			FROM @governmenttable@ gov WITH (NOLOCK)
			JOIN txdEVGovtValidationSummaryStatus gvss
				on gov.GovtHeaderGUID = gvss.GovtHeaderGUID
				and gov.PartnerID = gvss.PartnerID
			LEFT JOIN txdUSEntryVisibility entry 
				on gov.EntryNum = entry.EntryNum
				and gov.PartnerID = entry.PartnerID
			WHERE
				entry.PartnerID IS NULL
				and gov.partnerid = @partnerid@ 
				and gov.closedflag <> ''Y'' 
				and gvss.StatusCode in (''N'',''D'')', CAST(N'2020-02-07T14:21:27.203' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-12-20T10:07:48.273' AS DateTime), N'E098691E-3249-4F20-BDAC-D3F8DE6CE886', N'C8A4E2D4-AD96-4E68-A989-DBACFBC64F08', N'SELECT ''This document should only be submitted to DIS to prove that goods went into a foreign trade zone (FTZ) for drawback claim filing purposes. This document should not be submitted to DIS if filing an application to put goods into an FTZ.'' AS [WarningMessage]', CAST(N'2017-12-20T10:07:48.270' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2018-10-30T09:59:01.387' AS DateTime), N'BB4FE271-637B-4998-813A-A845CF69D3C5', N'8AF81F9B-02F5-4585-8F6D-FED3AEBBD2C9', N'SELECT TOP 1 ''Importer Of Record Number is required for CBMA submissions'' AS [ErrorMessage] FROM tmdDecisionTreeSessionResult WITH (NOLOCK)  WHERE PartnerID=@partner AND TreeGuid=@tree AND SessionGuid=@session AND @userResponse = '''' AND EXISTS (SELECT TOP 1 1 FROM tmdDecisionTreeResult WITH (NOLOCK) WHERE PartnerID=@partner aND TreeGuid=@tree AND SessionGuid=@session AND Name=''Required'' AND Value=''IORNbr'')', CAST(N'2018-10-26T09:13:10.377' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2020-08-04T11:14:49.693' AS DateTime), N'B5B70A7F-F123-4689-9D61-864E8058499D', N'PTR1SpreadSheetUploadIMDetail', N'declare @partnerID as int; set @partnerID = (select top 1 partnerid from tmfdefaults); UPDATE tlgworkflowschedule SET LastUpdated = ''''
 WHERE WorkFlow = ''PTR1SpreadSheetUploadIMDetail'' AND partnerID= (select top 1 partnerid from tmfdefaults)', CAST(N'2020-08-04T11:14:49.693' AS DateTime), N'Kick off-PTR1SpreadSheetUploadIMDetail', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2020-08-04T11:14:49.693' AS DateTime), N'672695CC-74FC-432B-BE8A-E74ABBBA98BA', N'PTR1SpreadSheetUploadBOMDetail', N'declare @partnerID as int; set @partnerID = (select top 1 partnerid from tmfdefaults); UPDATE tlgworkflowschedule SET LastUpdated = ''''
 WHERE WorkFlow = ''PTR1SpreadSheetUploadBOMDetail'' AND partnerID= (select top 1 partnerid from tmfdefaults)', CAST(N'2020-08-04T11:14:49.693' AS DateTime), N'Kick off-PTR1SpreadSheetUploadBOMDetail', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-05-24T00:00:00.000' AS DateTime), N'eb03b679-21dd-41ba-8225-b1dd5641b74f', N'FTZ PreReceipt Staging', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY TransportID desc)  AS [RowNum] FROM (

SELECT 
EffDate,
ProductNum,
TxnQty,
Value,
CountryOfOrigin,
CountryOfExport,
GrossWeight,
ManufacturerID,
StatusCode,
TransportID,
MasterBillOfLading,
HouseBillOfLading,
PO,
ManifestQty
FROM ttdStagingPreReceiptInvoice WITH (NOLOCK)
WHERE PartnerID = (SELECT TOP 1 PartnerID From tmfDefaults) 


  ) AS LookupViewInner WHERE @WhereClause@
', CAST(N'2017-05-24T00:00:00.000' AS DateTime), N'''''', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-05-24T00:00:00.000' AS DateTime), N'ed20e307-b61e-4b76-bc81-38e055f986aa', N'FTZ PreReceipt Missing', N'SELECT *
 ,ROW_NUMBER() OVER (
  ORDER BY TxnDate
   ,ERPDate ASC
  ) AS [RowNum]
FROM (
  SELECT 
   ''Missing PreReceipt'' as MatchReason
   ,CONVERT(DATE, fp.TxnDate, 101) AS TxnDate
   ,CONVERT(DATE, fp.ERPDate, 101) AS ERPDate
   ,fp.TxnCode
   ,fp.TransportID
   ,'''' as ReceiptDocID
   ,fp.OrderNumReceipt
   ,fp.ProductNum
   ,CAST(fp.TxnQty AS NUMERIC(38, 4)) AS TxnQty
   ,CAST(fp.Weight AS NUMERIC(38, 4)) AS Weight
   ,CAST(fph.Value AS NUMERIC(38, 4)) AS Value
   ,CAST(fph.Value2 AS NUMERIC(38, 4)) AS Value2
   ,fph.CountryOfOrigin
   ,fph.ManufacturerID
   ,fph.HTSIndex
   ,fph.HtsNum
   ,fph.HtsNum2
   ,fph.StatusCode
  FROM txdFifoProcessing fp
  JOIN txdFifoProcessingHTSValues fph ON
   fp.TxnNumGUID = fph.TxnNumGUID AND
   fp.PartnerID = fph.PartnerID
  JOIN txdPreReceiptMatch m ON 
   fp.TxnNumGUID = m.TxnNumGUID
  WHERE m.MatchReason = ''missing pre''
   AND fp.TxnCode= ''RPPC''
   AND fp.PartnerID = @PartnerID
 ) AS LookupViewInner
WHERE @whereclause@', CAST(N'2017-05-24T00:00:00.000' AS DateTime), N'''''', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-05-24T00:00:00.000' AS DateTime), N'4073b0ab-1ece-4239-938f-78e4430efeb7', N'FTZ PreReceipt Match', N'SELECT *
 ,ROW_NUMBER() OVER (
  ORDER BY TxnDate
   ,ERPDate ASC
  ) AS [RowNum]
FROM (
  SELECT 
   m.MatchReason
   ,CONVERT(DATE, fp.TxnDate, 101) AS TxnDate
   ,CONVERT(DATE, fp.ERPDate, 101) AS ERPDate
   ,fp.TxnCode
   ,fp.TransportID
   ,p.ReceiptDocID
   ,fp.OrderNumReceipt
                                                    ,replace(fp.billoflading,''/'','''') as BillOfLading
   ,fp.ProductNum
   ,CAST(fp.TxnQty AS NUMERIC(38, 4)) AS TxnQty
   ,CAST(fp.Weight AS NUMERIC(38, 4)) AS Weight
   ,CAST(fph.Value AS NUMERIC(38, 4)) AS Value
   ,CAST(fph.Value2 AS NUMERIC(38, 4)) AS Value2
   ,fph.CountryOfOrigin
   ,fph.ManufacturerID
   ,fph.HTSIndex
   ,fph.HtsNum
   ,fph.HtsNum2
   ,p.StatusCode
  FROM txdFifoProcessing fp
  JOIN txdFifoProcessingHTSValues fph ON
   fp.TxnNumGUID = fph.TxnNumGUID AND
   fp.PartnerID = fph.PartnerID
  JOIN txdPreReceiptMatch m ON 
   fp.TxnNumGUID = m.TxnNumGUID
  JOIN txdPreReceiptInvoice p ON 
   m.InvoiceLineGuid = p.InvoiceLineGuid
   AND p.PartnerID = m.PartnerID
  WHERE m.MatchReason = ''match''
   AND fp.TxnCode = ''RPPC''
   AND fp.PartnerID = @PartnerID
 ) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2017-05-24T00:00:00.000' AS DateTime), N'''''', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-05-24T00:00:00.000' AS DateTime), N'ad9c810c-0691-45d9-836d-4912a371a303', N'Match Data Discrepancies', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY invoicelineguid desc)  AS [RowNum] FROM (

select 
fp.productnum, 
fp.OrderNumReceipt,
prm.txnnumguid, 
prm.invoicelineguid, 
fp.txnqty as FP_TxnQty, 
pri.txnqty as PR_TxnQty, 
fph.statuscode as FP_StatusCode, 
pri.statuscode as PR_StatusCode,
fph.CountryOfOrigin as FP_CountryOfOrigin,
pri.CountryOfOrigin as PR_CountryOfOrigin,
fph.ManufacturerID as FP_ManufacturerID,
pri.ManufacturerID as PR_ManufacturerID,
fph.Value as FP_Value, 
pri.Value as PR_Value, 
fph.HTSIndex as FP_HTSIndex, 
pri.HTSIndex as PR_HTSIndex, 
fph.HTSUomConvFactor as FP_HTSUomConvFactor, 
pri.HTSUomConvFactor as PR_HTSUomConvFactor, 
fph.AddlHTSUomConvFactor as FP_AddlHTSUomConvFactor, 
pri.AddlHTSUomConvFactor as PR_AddlHTSUomConvFactor, 
fp.Weight as FP_Weight,  
pri.grossWeight as PR_GrossWeight 

from txdPrereceiptMatch PRM with (NOLOCK)
Join txdFifoProcessing FP with (NOLOCK)
On prm.PartnerID = fp.PartnerID
and prm.TxnNumGuid = fp.TxnNumGuid
Join txdFifoProcessinghtsvalues FPH with (NOLOCK)
On fph.PartnerID = fp.PartnerID
and fph.TxnNumGuid = fp.TxnNumGuid
Join txdprereceiptinvoice PRI with (NOLOCK)
On PRI.PartnerID = PRM.PartnerID
and pri.InvoiceLineGuid = prm.InvoiceLineGuid
Where fp.TxnCode = ''RPPC''
And MatchReason = ''Match''

and 
(fph.StatusCode <> pri.statusCode
Or fph.CountryOfOrigin <> pri.CountryOfOrigin
Or fph.ManufacturerID <> pri.ManufacturerID
Or fph.Value <> pri.Value
Or fph.HTSIndex <> pri.HTSIndex
Or fph.HTSUomConvFactor <> pri.HTSUomConvFactor
Or fph.AddlHTSUomConvFactor <> pri.AddlHTSUomConvFactor
Or fp.Weight <> pri.grossWeight
)


  ) AS LookupViewInner WHERE @WhereClause@', CAST(N'2017-05-24T00:00:00.000' AS DateTime), N'''''', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-05-24T00:00:00.000' AS DateTime), N'cf22d62a-9095-45af-8faf-5c2563b24e46', N'PreReceipt - Missing Manifest Records', N'SELECT *
 ,ROW_NUMBER() OVER (
  ORDER BY TxnDate
   ,ERPDate ASC
  ) AS [RowNum]
FROM (
  SELECT 
   ''Missing PreReceipt'' as MatchReason
   ,CONVERT(DATE, fp.TxnDate, 101) AS TxnDate
   ,CONVERT(DATE, fp.ERPDate, 101) AS ERPDate
   ,fp.TxnCode
   ,fp.TransportID
   ,'''' as ReceiptDocID
   ,fp.OrderNumReceipt
   ,fp.ProductNum
   ,CAST(fp.TxnQty AS NUMERIC(38, 4)) AS TxnQty
   ,CAST(fp.Weight AS NUMERIC(38, 4)) AS Weight
   ,CAST(fph.Value AS NUMERIC(38, 4)) AS Value
   ,CAST(fph.Value2 AS NUMERIC(38, 4)) AS Value2
   ,fph.CountryOfOrigin
   ,fph.ManufacturerID
   ,fph.HTSIndex
   ,fph.HtsNum
   ,fph.HtsNum2
   ,fph.StatusCode
  FROM txdFifoProcessing fp
  JOIN txdFifoProcessingHTSValues fph ON
   fp.TxnNumGUID = fph.TxnNumGUID AND
   fp.PartnerID = fph.PartnerID
  JOIN txdPreReceiptMatch m ON 
   fp.TxnNumGUID = m.TxnNumGUID
  WHERE m.MatchReason = ''missing pre''
   AND fp.TxnCode= ''RPPC''
   AND fp.PartnerID = @PartnerID
 ) AS LookupViewInner
WHERE @whereclause@', CAST(N'2017-05-24T00:00:00.000' AS DateTime), N'''''', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-05-24T00:00:00.000' AS DateTime), N'ad235fbd-1cc7-4651-a0bd-4886e7349e3c', N'PreReceipt - Valid Transactions Not Assigned To A 214', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY LEFT (ETADate, 11)   asc)  AS [RowNum] FROM (

SELECT DISTINCT 
MasterBillOfLading,
TransportID,
ProductNum,
LEFT (ETADate, 11) AS ETADate,
1 AS NoOrder  
FROM txdPreReceiptInvoice 
WHERE ValidFlag = ''Y''
AND AssignmentFlag = ''N''
AND PartnerID = (SELECT TOP 1 PartnerID FROM tmfDefaults)

  ) AS LookupViewInner WHERE @WhereClause@ ', CAST(N'2017-05-24T00:00:00.000' AS DateTime), N'''''', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-07-06T12:10:34.320' AS DateTime), N'CF681855-E6E4-4A77-81BF-42A29ACA351C', N'Classification Lookup: CI - HK Countervailing', N'SELECT * ,           ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]          FROM               (  select    ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,                          xxpc.ProductNum,              xxpc.ProductDesc,   ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,            CIControls.ControlType,            CIControls.TranslationValue,            1 AS NoOrder           from tmdHKProductClassification xxpc WITH (NOLOCK)            JOIN vid_CI_HK_Controls CIControls  WITH (NOLOCK) on            CIControls.ControlType = ''COUNTER'' and            xxpc.ProductGuid = CIControls.ProductGuid and            xxpc.PartnerID = CIControls.PartnerID           WHERE            xxpc.PartnerID = @PartnerID@  ) AS LookupViewInner          WHERE                                          @whereclause@', CAST(N'2017-06-29T05:13:20.357' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-06T12:10:34.323' AS DateTime), N'40F2B9FE-AA01-4D30-9F5C-6AE225C6CAA9', N'Classification Lookup: CI - MY HS Rates', N'SELECT *   ,ROW_NUMBER() OVER (    ORDER BY @orderby@     ,ProductNum ASC    ) AS [RowNum]  FROM (   SELECT ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' AS Edit    ,xxpc.ProductNum    ,xxpc.ProductDesc    ,''['' + xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + xxpc.HsNum + ''&Country=@COUNTRY_CODE@)'' AS HsNum    ,CIRates.Rate    ,CIRates.CountryOfOrigin    ,1 AS NoOrder   FROM tmdMYProductClassification xxpc WITH (NOLOCK)   JOIN vid_CI_MY_Rates CIRates WITH (NOLOCK) ON xxpc.ProductGuid = CIRates.ProductGuid    AND xxpc.PartnerID = CIRates.PartnerID   WHERE xxpc.PartnerID = @PartnerID@   ) AS LookupViewInner  WHERE @whereclause@', CAST(N'2017-06-29T05:13:20.357' AS DateTime), N'Displays the tariff rates associated with the products in the Malaysia Classification table', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-06T12:10:34.323' AS DateTime), N'D42EFDE0-AE8B-4046-BA32-5F1C1A52CE86', N'Classification Lookup: CI - MY HS Descriptions', N'SELECT * ,           ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]          FROM               (              select    ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,                          xxpc.ProductNum,               xxpc.ProductDesc,   ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,             CIDesc.LongDescription,             CIDesc.ShortDescription,             1 AS NoOrder            from tmdMYProductClassification xxpc WITH (NOLOCK)             join vid_CI_MY_Descriptions CIDesc  WITH (NOLOCK) on               xxpc.ProductGuid = CIDesc.ProductGuid and             xxpc.PartnerID = CIDesc.PartnerID            WHERE             xxpc.PartnerID = @PartnerID@           ) AS LookupViewInner          WHERE                                          @whereclause@', CAST(N'2017-06-29T05:13:20.357' AS DateTime), N'Displays the Malaysia description for products in the Malaysia Classification table', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-06T12:10:34.323' AS DateTime), N'8673C6A1-97FE-49CA-BFCE-22B1CAB3C4BD', N'Classification Lookup: CI - MY Antidumping', N'SELECT * ,           ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]          FROM               (  select    ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,                          xxpc.ProductNum,              xxpc.ProductDesc,   ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,            CIControls.ControlType,            CIControls.TranslationValue,            1 AS NoOrder           from tmdMYProductClassification xxpc WITH (NOLOCK)            JOIN vid_CI_MY_Controls CIControls  WITH (NOLOCK) on            CIControls.ControlType = ''ANTIDUMP'' and            xxpc.ProductGuid = CIControls.ProductGuid and            xxpc.PartnerID = CIControls.PartnerID           WHERE            xxpc.PartnerID = @PartnerID@  ) AS LookupViewInner          WHERE                                          @whereclause@', CAST(N'2017-06-29T05:13:20.357' AS DateTime), N'Displays product information for MY products  where the ADCaseNumber is not blank', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-06T12:10:34.327' AS DateTime), N'CC7A383C-B536-4277-BC6F-BF211B85A129', N'Classification Lookup: CI - MY Countervailing', N'SELECT * ,           ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]          FROM               (  select    ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(xxpc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' As Edit,                          xxpc.ProductNum,              xxpc.ProductDesc,   ''['' +xxpc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+xxpc.HsNum+''&Country=@COUNTRY_CODE@)'' as HsNum,            CIControls.ControlType,            CIControls.TranslationValue,            1 AS NoOrder           from tmdMYProductClassification xxpc WITH (NOLOCK)            JOIN vid_CI_MY_Controls CIControls  WITH (NOLOCK) on            CIControls.ControlType = ''COUNTER'' and            xxpc.ProductGuid = CIControls.ProductGuid and            xxpc.PartnerID = CIControls.PartnerID           WHERE            xxpc.PartnerID = @PartnerID@  ) AS LookupViewInner          WHERE                                          @whereclause@', CAST(N'2017-06-29T05:13:20.357' AS DateTime), N'Displays product information for products from a specified country table where the CVCaseNumber is not blank', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-10T15:13:19.197' AS DateTime), N'11925600-3939-4A6F-8001-E7A43E0902D5', N'Entry Declaration Correction Selected Entry', N'SELECT entry.EntryGUID, entry.LineGUID, CAST(entry.LineNum AS Integer) AS LineNum,
				Max(Case When error.ValidationGroup IS NULL Then ''O'' Else ''X'' End) AS ''Errors'',
				entry.ProductNum, entry.ProductDesc, entry.InvoiceNum, entry.PurchaseOrderNum
			FROM @VALIDATIONTABLE@ entry WITH (NOLOCK)
			LEFT JOIN txdEntryValidationErrorsLatest error WITH (NOLOCK)
				ON entry.lineguid = error.lineguid AND entry.entryguid = error.entryguid
				AND error.SourceFieldName NOT IN @INVALIDFIELDS@
			WHERE entry.PartnerID = @PARTNERID@ AND entry.EntryGUID = @ENTRYGUID@
			GROUP BY entry.EntryGUID, entry.LineGUID, entry.LineNum, entry.ProductNum, entry.ProductDesc,
				entry.InvoiceNum, entry.PurchaseOrderNum
			ORDER BY CAST(entry.LineNum AS Integer) ASC', CAST(N'2017-07-10T15:13:19.197' AS DateTime), N'Displays all lines for the selected entry that have corrections or could have corrections created.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-10-26T09:32:11.690' AS DateTime), N'A2536467-D068-4060-952D-9D8E0493F052', N'8DB03B94-E3D6-409A-AF4F-B55777963476', N'SELECT ''2'' AS [Skip]  FROM tmdDecisionTreeSessionResult WITH (NOLOCK)  WHERE PartnerID=@partner AND TreeGuid=@tree AND SessionGuid=@session AND Name=''PackageInfoPresent'' AND Value=''No''', CAST(N'2018-10-26T09:29:54.450' AS DateTime), N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.883' AS DateTime), N'3339c5ea-c842-4bf3-a0bf-5051ea52a180', N'808504E2-2221-4B89-A8EF-4E3758619387', N'declare @dt as date 
set   @TargetString

select r.ActionDate, r.DispositionCode, case dispositioncode when ''1R'' then ''Pending Eligible General Order'' else ''Ordered to General Order'' end DispositionDescription, r.ReferenceID
    from txdABICF214Replies r with (nolock)
    where dispositioncode in (''1R'',''1S'')
    and r.Actiondate >= @dt and r.ActionDate < DATEADD(month, 1, @dt)
    and r.PartnerID = @PartnerID
order by r.ActionDate, r.DispositionCode', CAST(N'2018-01-12T09:44:36.883' AS DateTime), N'GO Status Messages', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-02-19T11:50:04.130' AS DateTime), N'DE-AES-2.4.2 E_EXP_AMD', N'DE-AES-2.4.2 E_EXP_AMD', N'

	

	

	
DECLARE @EffectiveValidationDate DATETIME = GETDATE()

DELETE
FROM txdDEAESValidationWarning
WHERE PartnerID = @PartnerID
	AND DeclarationGUID = @DeclarationGUID
	AND DeclarationDataGUID = @DeclarationDataGUID

CREATE TABLE #ValidationWarning (
	Location VARCHAR(1000) NOT NULL,
	Warning VARCHAR(2000) NOT NULL
	)

--Header:
INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/MRN'' AS Location,
	''MRN is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.MRN = ''''

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/CountainerFlag'' AS Location,
	''CountainerFlag is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.ContainerFlag <> ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/CountainerFlag'' AS Location,
	''CountainerFlag is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 <> ''AE''
		AND DD.ContainerFlag = ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/TotalGrossWeight'' AS Location,
	''TotalGrossWeight should be greater than zero'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.TotalGrossWeight IS NOT NULL
	AND DD.TotalGrossWeight <= 0

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/TotalGrossWeight'' AS Location,
	''TotalGrossWeight is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		OR DD1.SpecialCircumstances <> ''E''
		OR EXISTS (
			SELECT *
			FROM txdDEAESGoodsItem GI1
			WHERE GI1.DeclarationDATAGUID = DD1.DeclarationDATAGUID
				AND GI1.PreviousProcedure IN (''71'', ''78'')
				AND (
					EXISTS (
						SELECT *
						FROM txdDEAESGoodsItem GI
						WHERE GI.DeclarationDATAGUID = DD.DeclarationDATAGUID
							AND GI.ItemNumber = GI1.ItemNumber
							AND GI.GrossWeight <> 0
						)
					OR (
						NOT EXISTS (
							SELECT *
							FROM txdDEAESGoodsItem GI2
							WHERE GI2.DeclarationDATAGUID = DD.DeclarationDATAGUID
								AND GI2.ItemNumber = GI1.ItemNumber
							)
						AND GI1.GrossWeight <> 0
						)
					)
			)
		)
	AND DD.TotalGrossWeight IS NULL

	

/*
INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/TotalGrossWeight'' AS Location,
	''TotalGrossWeight should not be less than the sum of changed GoodsItems/GrossWeight plus the unchanged GoodsItems/GrossWeight given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		SELECT SUM(GI.GrossWeight)
		FROM txdDEAESGoodsItem GI
		WHERE GI.PartnerID = @PartnerID
			AND GI.DeclarationDataGUID = @DeclarationDataGUID
		) + (
		SELECT SUM(GI2.GrossWeight)
		FROM txdDEAESGoodsItem GI1
		JOIN txdDEAESGoodsItem GI2
			ON GI1.PartnerID = GI2.PartnerID
				AND GI1.DeclarationGUID = GI2.DeclarationGUID
		WHERE GI1.PartnerID = @PartnerID
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.DeclarationDataGUID = DD1.DeclarationDataGUID
			AND GI2.ItemNumber <> GI1.ItemNumber
		) > DD.TotalGrossWeight
*/	

	
INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/TotalGrossWeight'' AS Location,
	''TotalGrossWeight should not be less than the sum of changed GoodsItems/GrossWeight plus the unchanged GoodsItems/GrossWeight given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.TotalGrossWeight < (SELECT SUM(GI.GrossWeight) FROM txdDEAESGoodsItem GI WHERE GI.PartnerID = @PartnerID AND GI.DeclarationDataGUID=@DeclarationDataGUID)
	+(
		SELECT SUM(GI2.GrossWeight) FROM txdDEAESGoodsItem GI2 WHERE GI2.PartnerID = @PartnerID AND 
		GI2.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
		
		AND GI2.ItemNumber NOT IN (SELECT GI3.ItemNumber FROM txdDEAESGoodsItem GI3 WHERE GI3.PartnerID = @PartnerID AND GI3.DeclarationDataGUID=@DeclarationDataGUID)
		
	)
	



INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/TotalGrossWeight'' AS Location,
	''TotalGrossWeight should not be less than the sum of changed GoodsItems/NetWeight plus the unchanged GoodsItems/NetWeight given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		SELECT SUM(GI.NetWeight)
		FROM txdDEAESGoodsItem GI
		WHERE GI.PartnerID = @PartnerID
			AND GI.DeclarationDataGUID = @DeclarationDataGUID
		) + (
		SELECT SUM(GI2.NetWeight)
		FROM txdDEAESGoodsItem GI1
		JOIN txdDEAESGoodsItem GI2
			ON GI1.PartnerID = GI2.PartnerID
				AND GI1.DeclarationGUID = GI2.DeclarationGUID
		WHERE GI1.PartnerID = @PartnerID
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.DeclarationDataGUID = DD1.DeclarationDataGUID
			AND GI2.ItemNumber <> GI1.ItemNumber
		) > DD.TotalGrossWeight

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/TotalGrossWeight'' AS Location,
	''TotalGrossWeight should be same as TotalGrossWeight given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
			(SELECT COUNT(PartnerID) 
			FROM tmgGlobalCodes GC WHERE GC.PartnerID = @PartnerID AND GC.FieldName=@CODELIST_PREFIX+''-I0251''
			AND GC.Code IN 
				(SELECT GID.Type + ''      '' + GID.Qualifier FROM txdDEAESGoodsItemDocument GID 
				WHERE GID.PartnerID = @PartnerID AND  GID.DeclarationDataGUID = DD1.DeclarationDataGUID)) > 0
		)
	AND DD.TotalGrossWeight <> DD1.TotalGrossWeight

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/GrossWeight'' AS Location,
	''GrossWeight is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GI.GrossWeight IS NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID = GI1.PartnerID
				AND DD1.DeclarationDataGUID = GI1.DeclarationDataGUID
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND GI1.ItemNumber = GI.ItemNumber
			AND (
				DD1.DeclarationType2 = ''AE''
				OR DD1.SpecialCircumstances <> ''E''
				OR GI1.PreviousProcedure IN (''71'', ''78'')
				AND DD1.TotalGrossWeight = ''''
				)
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/GrossWeight'' AS Location,
	''"0" is not valid value for GrossWeight'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (GI.GrossWeight = 0)
	AND (
		(
			SELECT COUNT(*)
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
				ON DD1.PartnerID = GI1.PartnerID
					AND DD1.DeclarationDataGUID = GI1.DeclarationDataGUID
			WHERE DD1.PartnerID = @PartnerID
				AND DD1.DeclarationDataGUID = @DeclarationDataGUID
				AND GI1.GrossWeight <> 0
			) = 0
		OR NOT EXISTS (
			SELECT *
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
				ON DD2.PartnerID = GI2.PartnerID
					AND DD2.DeclarationDataGUID = GI2.DeclarationDataGUID
			WHERE DD2.PartnerID = DD.PartnerID
				AND DD2.DeclarationGUID = DD.DeclarationGUID
				AND DD2.DeclarationDataGUID = (
					SELECT TOP 1 M.DeclarationDataGUID
					FROM txdDEAESMessage M
					WHERE M.PartnerID = @PartnerID
						AND M.DeclarationGUID = @DeclarationGUID
						AND M.Type = ''E_EXP_DAT''
					----AND M.STATUS = ''TRANSMITTED''
					ORDER BY M.SequenceNum DESC
					)
				AND DD2.DeclarationType2 = ''AE''
				AND GI2.ItemNumber <> GI.ItemNumber
				AND GI2.GrossWeight <> 0
			)
		OR NOT EXISTS (
			SELECT *
			FROM txdDEAESDeclarationData DD3
			JOIN txdDEAESGoodsItem GI3
				ON DD3.PartnerID = GI3.PartnerID
					AND DD3.DeclarationDataGUID = GI3.DeclarationDataGUID
			WHERE DD3.PartnerID = DD.PartnerID
				AND DD3.DeclarationGUID = DD.DeclarationGUID
				AND DD3.DeclarationDataGUID = (
					SELECT TOP 1 M.DeclarationDataGUID
					FROM txdDEAESMessage M
					WHERE M.PartnerID = @PartnerID
						AND M.DeclarationGUID = @DeclarationGUID
						AND M.Type = ''E_EXP_DAT''
					----AND M.STATUS = ''TRANSMITTED''
					ORDER BY M.SequenceNum DESC
					)
				AND DD3.DeclarationType2 = ''AE''
				AND GI3.ItemNumber <> GI.ItemNumber
				AND GI3.GrossWeight <> 0
				AND EXISTS (
					SELECT *
					FROM txdDEAESDeclarationData DD4
					JOIN txdDEAESGoodsItem GI4
						ON DD4.PartnerID = GI4.PartnerID
							AND DD4.DeclarationDataGUID = GI4.DeclarationDataGUID
					WHERE DD4.PartnerID = DD.PartnerID
						AND DD4.DeclarationGUID = DD.DeclarationGUID
						AND DD4.DeclarationDataGUID = (
							SELECT TOP 1 M.DeclarationDataGUID
							FROM txdDEAESMessage M
							WHERE M.PartnerID = @PartnerID
								AND M.DeclarationGUID = @DeclarationGUID
								AND M.Type = ''E_EXP_IND''
							----AND M.STATUS = ''TRANSMITTED''
							ORDER BY M.SequenceNum DESC
							)
						AND GI4.ItemNumber = GI3.ItemNumber
						AND GI4.RefundEstimatedQuantityFlag = 0
					)
			)
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/GrossWeight'' AS Location,
	''""0"" should be indicated as the value for GrossWeight'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GrossWeight <> 0
	AND (
		GIP.Number = 0
		OR EXISTS (
			SELECT *
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItemPackage GIP1
				ON DD1.PartnerID = GIP1.PartnerID
					AND DD1.DeclarationDataGUID = GIP1.DeclarationDataGUID
			WHERE DD1.PartnerID = DD.PartnerID
				AND DD1.DeclarationGUID = DD.DeclarationGUID
				AND DD1.DeclarationDataGUID = (
					SELECT TOP 1 M.DeclarationDataGUID
					FROM txdDEAESMessage M
					WHERE M.PartnerID = @PartnerID
						AND M.DeclarationGUID = @DeclarationGUID
						AND M.Type = ''E_EXP_DAT''
					----AND M.STATUS = ''TRANSMITTED''
					ORDER BY M.SequenceNum DESC
					)
				AND GIP1.GoodsItemGUID = GI.GoodsItemGUID
				AND GIP1.Number = 0
			)
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/GrossWeight'' AS Location,
	''Gross Weight should be greater than or equal to the Net Weight unless it is ""0""'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GI.GrossWeight <> 0
		AND GI.GrossWeight < GI.NetWeight
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/GrossWeight'' AS Location,
	''GrossWeight should be greater than ""0""'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GrossWeight IS NOT NULL
	AND GI.GrossWeight <= 0
	AND DD.TotalGrossWeight IS NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID = GI1.PartnerID
				AND DD1.DeclarationDataGUID = GI1.DeclarationDataGUID
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND GI1.ItemNumber = GI.ItemNumber
			AND GI1.PreviousProcedure IN (''71'', ''78'')
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items/GrossWeight'' AS Location,
	''The sum of changed GoodsItems/GrossWeight plus the unchanged GoodsItems/GrossWeight given in DAT message should not be less than the sum of changed GoodsItems/NetWeight plus the unchanged GoodsItems/NetWeight given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		SELECT SUM(GI.GrossWeight)
		FROM txdDEAESGoodsItem GI
		WHERE GI.PartnerID = @PartnerID
			AND GI.DeclarationDataGUID = @DeclarationDataGUID
		) + (
		SELECT SUM(GI2.GrossWeight)
		FROM txdDEAESGoodsItem GI1
		JOIN txdDEAESGoodsItem GI2
			ON GI1.PartnerID = GI2.PartnerID
				AND GI1.DeclarationGUID = GI2.DeclarationGUID
		WHERE GI1.PartnerID = @PartnerID
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.DeclarationDataGUID = DD1.DeclarationDataGUID
			AND GI2.ItemNumber <> GI1.ItemNumber
		) < (
		SELECT SUM(GI3.NetWeight)
		FROM txdDEAESGoodsItem GI3
		WHERE GI3.PartnerID = @PartnerID
			AND GI3.DeclarationDataGUID = @DeclarationDataGUID
		) + (
		SELECT SUM(GI5.GrossWeight)
		FROM txdDEAESGoodsItem GI4
		JOIN txdDEAESGoodsItem GI5
			ON GI4.PartnerID = GI5.PartnerID
				AND GI4.DeclarationGUID = GI5.DeclarationGUID
		WHERE GI4.PartnerID = @PartnerID
			AND GI4.DeclarationDataGUID = @DeclarationDataGUID
			AND GI5.DeclarationDataGUID = DD1.DeclarationDataGUID
			AND GI5.ItemNumber <> GI4.ItemNumber
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/Goods Items/GrossWeight'' AS Location,
	''Goods Item/GrossWeight should be same as Goods Item/GrossWeight given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID 
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
			(SELECT COUNT(PartnerID) 
			FROM tmgGlobalCodes GC WHERE GC.PartnerID = @PartnerID AND GC.FieldName=@CODELIST_PREFIX+''-I0251''
			AND GC.Code IN 
				(SELECT GID.Type + ''      '' + GID.Qualifier FROM txdDEAESGoodsItemDocument GID 
				WHERE GID.PartnerID = @PartnerID AND  GID.DeclarationDataGUID = DD1.DeclarationDataGUID)) > 0
		)
	AND GI.GrossWeight <> 
	(SELECT GI1.GrossWeight FROM txdDEAESGoodsItem GI1 WHERE GI1.PartnerID = @PartnerID AND GI1.DeclarationDataGUID = DD1.DeclarationDataGUID)

	
INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/UCR; '' + (
		SELECT CASE 
				WHEN GI.ItemNumber IS NULL
					THEN ''''
				ELSE ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/UCR''
				END
		) AS Location,
	''UCR is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
LEFT JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)
	AND (		
		GI.UCR <> ''''
		OR DD.UCR <> ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/UCR;'' + (
		SELECT CASE 
				WHEN GI.ItemNumber IS NULL
					THEN ''''
				ELSE '' Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/UCR''
				END
		) AS Location,
	''UCR is not allowed to be specified both on Header level and on Goods Item level'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)
	AND DD.UCR <> ''''
	AND GI.UCR <> ''''

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/UCR; '' + (
		SELECT CASE 
				WHEN GI.ItemNumber IS NULL
					THEN ''''
				ELSE ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/UCR''
				END
		) AS Location,
	''UCR should be provided either on Header level or on Goods Item level'' AS Warning
FROM txdDEAESDeclarationData DD
LEFT JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND (
				DD1.DeclarationType2 <> ''AE''
				AND DD1.SpecialCircumstances <> ''A''
				)
		)
	AND DD.UCR = ''''
	AND (
		GI.UCR IS NULL
		OR GI.UCR = ''''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items/UCR'' AS Location,
	''The same UCR is not allowed to be used for all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		DD.UCR = ''''
		AND (
			SELECT COUNT(DISTINCT GI1.UCR)
			FROM txdDEAESGoodsItem GI1
			WHERE GI1.PartnerID = @PartnerID
				AND GI1.DeclarationDataGUID = @DeclarationDataGUID
				AND GI1.UCR <> ''''
			) = 1
		AND (
			SELECT COUNT(GI2.GoodsItemGUID)
			FROM txdDEAESGoodsItem GI2
			WHERE GI2.PartnerID = @PartnerID
				AND GI2.DeclarationDataGUID = @DeclarationDataGUID					
			) > 1		
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/BIN'' AS Location,
	''BIN is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.BIN = ''''

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/InlandModeOfTransport'' AS Location,
	''InlandModeOfTransport is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.InlandModeOfTransport <> ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/InlandModeOfTransport'' AS Location,
	''InlandModeOfTransport is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 <> ''AE''
		AND (
			DD1.DeclarationType2 = ''AM''
			AND DD1.DeclarationType3 = ''c''
			OR DD1.DeclarationType2 = ''zP''
			AND DD1.DeclarationType3 IN (''c'', ''o'', ''u'')
			OR DD1.DeclarationType2 = ''wP''
			AND DD1.DeclarationType3 IN (''o'', ''u'')
			)
		AND DD.InlandModeOfTransport = ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/InlandModeOfTransport'' AS Location,
	''"5" and "50" are not permissible values for InlandModeOfTransport'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.SpecialCircumstances <> ''A''
		AND DD.InlandModeOfTransport IN (''5'', ''50'')
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/InlandModeOfTransport'' AS Location,
	''"7" and "70" are not permissible values for InlandModeOfTransport'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.InlandModeOfTransport IN (''7'', ''70'')

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/BorderModeOfTransport'' AS Location,
	''BorderModeOfTransport is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.BorderModeOfTransport <> ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/BorderModeOfTransport'' AS Location,
	''BorderModeOfTransport is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 <> ''AE''
		AND DD.BorderModeOfTransport = ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/BorderModeOfTransport'' AS Location,
	''"5" and "50" are not permissible values for BorderModeOfTransport'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD1.DeclarationType2 <> ''AE''
	AND DD1.SpecialCircumstances <> ''A''
	AND DD.BorderModeOfTransport IN (''5'', ''50'')

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/BorderModeOfTransport'' AS Location,
	''"7" and "70" are not permissible values for BorderModeOfTransport'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD1.DeclarationType2 <> ''AE''
	AND DD.BorderModeOfTransport IN (''7'', ''70'')

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/BorderTypeOfTransport'' AS Location,
	''BorderTypeOfTransport is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.BorderTypeOfTransport <> ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/BorderTypeOfTransport'' AS Location,
	''BorderTypeOfTransport is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD1.DeclarationType2 <> ''AE''
	AND (
		DD1.DeclarationType2 = ''AM''
		AND DD1.DeclarationType3 = ''c''
		OR DD1.DeclarationType2 = ''zP''
		AND DD1.DeclarationType3 IN (''c'', ''o'', ''u'')
		OR DD1.DeclarationType2 = ''wP''
		AND DD1.DeclarationType3 IN (''o'', ''u'')
		)
	AND DD.BorderTypeOfTransport = ''''

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/BorderTransportMeansID'' AS Location,
	''BorderTransportMeansID is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.BorderTransportMeansID <> ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/BorderTransportMeansNationality'' AS Location,
	''BorderTransportMeansNationality is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.BorderTransportMeansNationality <> ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/BorderTransportMeansNationality'' AS Location,
	''BorderTransportMeansNationality is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD1.DeclarationType2 <> ''AE''
	AND (
		DD1.DeclarationType2 = ''AM''
		AND DD1.DeclarationType3 = ''c''
		OR DD1.DeclarationType2 = ''zP''
		AND DD1.DeclarationType3 IN (''c'', ''o'', ''u'')
		OR DD1.DeclarationType2 = ''wP''
		AND DD1.DeclarationType3 IN (''o'', ''u'')
		)
	AND DD.BorderModeOfTransport NOT IN (''2'', ''20'', ''5'', ''50'', ''9'', ''90'')
	AND DD.BorderTransportMeansNationality = ''''

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/DeclarationOffice'' AS Location,
	''DeclarationOffice is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationOffice = ''''

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/DeclarationOffice'' AS Location,
	''The values for DeclarationOffice in E_EXP_AMD and E_EXP_DAT declarations should match'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD.DeclarationOffice <> ''''
	AND DD.DeclarationOffice <> DD1.DeclarationOffice

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/DeclarantIDType'' AS Location,
	''DeclarantIDType is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus NOT LIKE ''_0__''
		AND DD.DeclarantIDType <> ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/DeclarantIDType'' AS Location,
	''DeclarantIDType is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_0__''
		AND DD.DeclarantIDType = ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/DeclarantIDType'' AS Location,
	''"2" should be specified as the value for DeclarantIDType'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_0__''
		AND DD.DeclarantIDType <> ''''
		AND DD.DeclarantIDType <> ''2''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/DeclarantID'' AS Location,
	''DeclarantID is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus NOT LIKE ''_0__''
		AND DD.DeclarantID <> ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/DeclarantID'' AS Location,
	''DeclarantID is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_0__''
		AND DD.DeclarantID = ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/DeclarantID'' AS Location,
	''The values for DeclarantID in E_EXP_AMD and E_EXP_DAT declarations should match'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD.DeclarantID <> ''''
	AND DD.DeclarantID <> DD1.DeclarantID

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/DeclarantBranch'' AS Location,
	''DeclarantBranch is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus NOT LIKE ''_0__''
		AND DD.DeclarantBranch <> ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/DeclarantBranch'' AS Location,
	''DeclarantBranch is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_0__''
		AND DD1.DeclarantBranch <> ''0000''
		AND DD.DeclarantBranch = ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/DeclarantBranch'' AS Location,
	''The values for DeclarantBranch in E_EXP_AMD and E_EXP_DAT declarations should match'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD.DeclarantBranch <> ''''
	AND DD.DeclarantBranch <> DD1.DeclarantBranch

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/AgentIDType'' AS Location,
	''AgentIDType is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus NOT LIKE ''_1__''
		AND DD.AgentIDType <> ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/AgentIDType'' AS Location,
	''AgentIDType is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_1__''
		AND DD.AgentIDType = ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/AgentIDType'' AS Location,
	''"2" should be specified as the value for AgentIDType'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_0__''
		AND DD.AgentIDType <> ''''
		AND DD.AgentIDType <> ''2''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/AgentID'' AS Location,
	''AgentID is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus NOT LIKE ''_1__''
		AND DD.AgentID <> ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/AgentID'' AS Location,
	''AgentID is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_1__''
		AND DD.AgentID = ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/AgentID'' AS Location,
	''The values for AgentID in E_EXP_AMD and E_EXP_DAT declarations should match'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD.AgentID <> ''''
	AND DD.AgentID <> DD1.AgentID

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/AgentBranch'' AS Location,
	''AgentBranch is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus NOT LIKE ''_1__''
		AND DD.AgentBranch <> ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/AgentBranch'' AS Location,
	''AgentBranch is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.PartiesStatus LIKE ''_1__''
		AND DD1.AgentBranch <> ''0000''
		AND DD.AgentBranch = ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/AgentBranch'' AS Location,
	''The values for AgentBranch in E_EXP_AMD and E_EXP_DAT declarations should match'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND DD.AgentBranch <> ''''
	AND DD.AgentBranch <> DD1.AgentBranch

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/TotalInvoice'' AS Location,
	''TotalInvoice is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.TotalInvoice >=0
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/TotalInvoice'' AS Location,
	''TotalInvoice is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 <> ''AE''
		AND (
			DD1.DeclarationType2 = ''AM''
			AND DD1.DeclarationType3 = ''c''
			OR DD1.DeclarationType2 = ''zP''
			AND DD1.DeclarationType3 IN (''c'', ''o'', ''u'')
			OR DD1.DeclarationType2 = ''wP''
			AND DD1.DeclarationType3 IN (''o'', ''u'')
			)
		AND DD.TotalInvoice <0
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/TotalInvoice'' AS Location,
	''TotalInvoice should be same as TotalInvoice given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
			(SELECT COUNT(PartnerID) 
			FROM tmgGlobalCodes GC WHERE GC.PartnerID = @PartnerID AND GC.FieldName=@CODELIST_PREFIX+''-I0251''
			AND GC.Code IN 
				(SELECT GID.Type + ''      '' + GID.Qualifier FROM txdDEAESGoodsItemDocument GID 
				WHERE GID.PartnerID = @PartnerID AND  GID.DeclarationDataGUID = DD1.DeclarationDataGUID)) > 0
		)
	AND DD.TotalInvoice <> DD1.TotalInvoice

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/TotalInvoiceCurrency'' AS Location,
	''TotalInvoiceCurrency is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 = ''AE''
		AND DD.TotalInvoiceCurrency <> ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/TotalInvoiceCurrency'' AS Location,
	''TotalInvoiceCurrency is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
		DD1.DeclarationType2 <> ''AE''
		AND (
			DD1.DeclarationType2 = ''AM''
			AND DD1.DeclarationType3 = ''c''
			OR DD1.DeclarationType2 = ''zP''
			AND DD1.DeclarationType3 IN (''c'', ''o'', ''u'')
			OR DD1.DeclarationType2 = ''wP''
			AND DD1.DeclarationType3 IN (''o'', ''u'')
			)
		AND DD.TotalInvoiceCurrency = ''''
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/TotalInvoiceCurrency'' AS Location,
	''TotalInvoiceCurrency should be same as TotalInvoiceCurrency given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
			(SELECT COUNT(PartnerID) 
			FROM tmgGlobalCodes GC WHERE GC.PartnerID = @PartnerID AND GC.FieldName=@CODELIST_PREFIX+''-I0251''
			AND GC.Code IN 
				(SELECT GID.Type + ''      '' + GID.Qualifier FROM txdDEAESGoodsItemDocument GID 
				WHERE GID.PartnerID = @PartnerID AND  GID.DeclarationDataGUID = DD1.DeclarationDataGUID)) > 0
		)
	AND DD.TotalInvoiceCurrency <> DD1.TotalInvoiceCurrency

--Goods Item	
INSERT INTO #ValidationWarning
SELECT ''Goods Item'' AS Location,
	''At least one Goods Item is mandatory to be provided'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND (
				DD1.DeclarationType2 = ''AE''
				OR DD1.DeclarationType2 <> ''AE''
				AND DD1.SpecialCircumstances <> ''A''
				AND DD1.UCR <> ''''
				AND DD.UCR = ''''
				)
		)
	AND NOT EXISTS (
		SELECT GI.GoodsItemGUID
		FROM txdDEAESGoodsItem GI
		WHERE GI.PartnerID = @PartnerID
			AND GI.DeclarationDataGUID = @DeclarationDataGUID
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/ItemNumber'' AS Location,
	''ItemNumber is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GI.ItemNumber = ''''
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESDeclarationData DD2
			ON DD1.PartnerID = DD2.PartnerID
				AND DD1.DeclarationGUID = DD2.DeclarationGUID
		JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID = GI2.PartnerID
				AND DD2.DeclarationDataGUID = GI2.DeclarationDataGUID
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD2.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_IND''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND (
				DD1.DeclarationType2 = ''AE''
				AND GI.ItemNumber = GI2.ItemNumber
				AND GI2.RefundEstimatedQuantityFlag = 1 ----the name for AUSFUHRERSTATTUNG / Schätzwert in IND message was not specified
				OR DD1.DeclarationType2 <> ''AE''
				AND DD1.SpecialCircumstances <> ''A''
				AND DD1.UCR <> ''''
				AND DD.UCR = ''''
				)
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/ItemNumber'' AS Location,
	''ItemNumber is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber <> ''''
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESDeclarationData DD2
			ON DD1.PartnerID = DD2.PartnerID
				AND DD1.DeclarationGUID = DD2.DeclarationGUID
		JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID = GI2.PartnerID
				AND DD2.DeclarationDataGUID = GI2.DeclarationDataGUID
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD2.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_IND''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND (
				DD1.DeclarationType2 = ''AE''
				AND GI.ItemNumber = GI2.ItemNumber
				AND GI2.RefundEstimatedQuantityFlag <> 1 ----the name for AUSFUHRERSTATTUNG / Schätzwert in IND message was not specified		
				)
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items/NetWeight'' AS Location,
	''NetWeight should be greater than zero'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.NetWeight IS NOT NULL
	AND GI.NetWeight <= 0

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/NetWeight'' AS Location,
	''NetWeight is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GI.NetWeight IS NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND (
				DD1.DeclarationType2 = ''AE''
				OR DD1.SpecialCircumstances <> ''A''
				AND DD1.UCR <> ''''
				AND DD.UCR = ''''
				)
		)

INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/Goods Items/NetWeight'' AS Location,
	''Goods Item/NetWeight should be same as Goods Item/NetWeight given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID 
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
			(SELECT COUNT(PartnerID) 
			FROM tmgGlobalCodes GC WHERE GC.PartnerID = @PartnerID AND GC.FieldName=@CODELIST_PREFIX+''-I0251''
			AND GC.Code IN 
				(SELECT GID.Type + ''      '' + GID.Qualifier FROM txdDEAESGoodsItemDocument GID 
				WHERE GID.PartnerID = @PartnerID AND  GID.DeclarationDataGUID = DD1.DeclarationDataGUID)) > 0
		)
	AND GI.NetWeight <> 
	(SELECT GI1.NetWeight FROM txdDEAESGoodsItem GI1 WHERE GI1.PartnerID = @PartnerID AND GI1.DeclarationDataGUID = DD1.DeclarationDataGUID)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/RefundAmount'' AS Location,
	''RefundAmount is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.RefundAmount <> 0
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/RefundAmount'' AS Location,
	''RefundAmount is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GI.RefundAmount IS NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items/RefundAmount'' AS Location,
	''RefundAmount should be greater than zero'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.RefundAmount < 0

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/SupplementaryQuantity'' AS Location,
	''SupplementaryQuantity is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.SupplementaryQuantity >0
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/SupplementaryQuantity'' AS Location,
	''SupplementaryQuantity should be greater than ""0""'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.SupplementaryQuantity < 0


INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/Goods Items/SupplementaryQuantity'' AS Location,
	''Goods Item/SupplementaryQuantity should be same as Goods Item/SupplementaryQuantity given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID 
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
			(SELECT COUNT(PartnerID) 
			FROM tmgGlobalCodes GC WHERE GC.PartnerID = @PartnerID AND GC.FieldName=@CODELIST_PREFIX+''-I0251''
			AND GC.Code IN 
				(SELECT GID.Type + ''      '' + GID.Qualifier FROM txdDEAESGoodsItemDocument GID 
				WHERE GID.PartnerID = @PartnerID AND  GID.DeclarationDataGUID = DD1.DeclarationDataGUID)) > 0
		)
	AND GI.SupplementaryQuantity <> 
	(SELECT GI1.SupplementaryQuantity FROM txdDEAESGoodsItem GI1 WHERE GI1.PartnerID = @PartnerID AND GI1.DeclarationDataGUID = DD1.DeclarationDataGUID)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/StatisticalValue'' AS Location,
	''StatisticalValue is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GI.StatisticalValue IS NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND (
				DD1.DeclarationType2 = ''AE''
				AND DD1.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
				OR (
					DD1.DeclarationType2 = ''AM''
					AND DD1.DeclarationType3 = ''c''
					OR DD1.DeclarationType2 = ''zP''
					AND DD1.DeclarationType3 IN (''c'', ''o'', ''u'')
					OR DD1.DeclarationType2 = ''wP''
					AND DD1.DeclarationType3 IN (''o'', ''u'')
					)
				)
		)


INSERT INTO #ValidationWarning
SELECT ''DEXPAC (E_EXP_AMD)/Goods Items/StatisticalValue'' AS Location,
	''Goods Item/StatisticalValue should be same as Goods Item/StatisticalValue given in DAT message'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
	ON DD.PartnerID = DD1.PartnerID
		AND DD.DeclarationGUID = DD1.DeclarationGUID
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID 
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD1.DeclarationDataGUID = (
		SELECT TOP 1 M.DeclarationDataGUID
		FROM txdDEAESMessage M
		WHERE M.PartnerID = @PartnerID
			AND M.DeclarationGUID = @DeclarationGUID
			AND M.Type = ''E_EXP_DAT''
		----AND M.STATUS = ''TRANSMITTED''
		ORDER BY M.SequenceNum DESC
		)
	AND (
			(SELECT COUNT(PartnerID) 
			FROM tmgGlobalCodes GC WHERE GC.PartnerID = @PartnerID AND GC.FieldName=@CODELIST_PREFIX+''-I0251''
			AND GC.Code IN 
				(SELECT GID.Type + ''      '' + GID.Qualifier FROM txdDEAESGoodsItemDocument GID 
				WHERE GID.PartnerID = @PartnerID AND  GID.DeclarationDataGUID = DD1.DeclarationDataGUID)) > 0
		)
	AND GI.StatisticalValue <> 
	(SELECT GI1.StatisticalValue FROM txdDEAESGoodsItem GI1 WHERE GI1.PartnerID = @PartnerID AND GI1.DeclarationDataGUID = DD1.DeclarationDataGUID)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/Number'' AS Location,
	''Packages/Number is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
LEFT JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GIP.PartnerID IS NOT NULL
	AND GIP.DeclarationGUID IS NOT NULL
	AND GIP.Number IS NULL
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/Number'' AS Location,
	''Packages/Number is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GIP.Number IS NOT NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages  ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/Number'' AS Location,
	''""1"" should be specified as the value for Packages/Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GIP.Type IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'')
		AND GIP.Number IS NOT NULL
		AND GIP.Number <> 1
		AND NOT EXISTS (
			SELECT *
			FROM txdDEAESDeclarationData DD1
			WHERE DD1.PartnerID = DD.PartnerID
				AND DD1.DeclarationGUID = DD.DeclarationGUID
				AND DD1.DeclarationDataGUID = (
					SELECT TOP 1 M.DeclarationDataGUID
					FROM txdDEAESMessage M
					WHERE M.PartnerID = @PartnerID
						AND M.DeclarationGUID = @DeclarationGUID
						AND M.Type = ''E_EXP_DAT''
					----AND M.STATUS = ''TRANSMITTED''
					ORDER BY M.SequenceNum DESC
					)
				AND DD1.DeclarationType2 = ''AE''
			)
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/Number'' AS Location,
	''""0"" is not allowed to be specified as the value for Packages/Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GIP.Type IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
		AND GIP.Number = 0
		)
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages/Number'' AS Location,
	''If ""0"" is specified as the value for Packages/Number, all the rest values of Packages/Number for the same Goods Item should be ""0"" either'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)
	AND EXISTS (
		SELECT GIP1.PartnerID
		FROM txdDEAESGoodsItemPackage GIP1
		WHERE GIP1.PartnerID = @PartnerID
			AND GIP1.GoodsItemGUID = GI.GoodsItemGUID
			AND GIP1.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
			AND GIP1.Number = 0
		)
	AND EXISTS (
		SELECT GIP2.PartnerID
		FROM txdDEAESGoodsItemPackage GIP2
		WHERE GIP2.PartnerID = @PartnerID
			AND GIP2.GoodsItemGUID = GI.GoodsItemGUID
			AND GIP2.Number <> 0
		)

/* Removed in 2.4.2
INSERT INTO #ValidationWarning
SELECT ''Goods Item('' + CAST(GI.ItemNumber AS VARCHAR) + '')/Packages('' + CAST(GIP.SequenceNum AS VARCHAR) + '')/Number'' AS Location,
	''If ""0"" is specified as the value for Packages/Number, there should exist record in other Goods Item with the same Packages/MarksAndNumbers value and the value other than ""0"" for Packages/Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON GI.PartnerID = GIP.PartnerID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)
	AND GIP.Number = 0
	AND NOT EXISTS (
		SELECT GIP2.PartnerID
		FROM txdDEAESGoodsItemPackage GIP2
		WHERE GIP2.PartnerID = @PartnerID
			AND GIP2.GoodsItemGUID = GIP.GoodsItemGUID
			AND GIP2.GoodsItemPackageGUID <> GIP.GoodsItemPackageGUID
			AND GIP2.Number <> 0
		)
	AND NOT (
		EXISTS (
			SELECT GIP3.PartnerID
			FROM txdDEAESGoodsItemPackage GIP3
			WHERE GIP3.PartnerID = @PartnerID
				AND GIP3.DeclarationDataGUID = @DeclarationDataGUID
				AND GIP3.GoodsItemGUID <> GIP.GoodsItemGUID
				AND GIP3.MarksAndNumbers = GIP.MarksAndNumbers
				AND GIP3.Number <> 0
				AND GIP3.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
			)
		OR EXISTS (
			SELECT GIP4.PartnerID
			FROM txdDEAESGoodsItemPackage GIP4
			JOIN txdDEAESGoodsItem GI2
				ON GIP4.PartnerID = GI2.PartnerID
					AND GIP4.GoodsItemGUID = GI2.GoodsItemGUID
			WHERE GIP4.PartnerID = @PartnerID
				AND GIP4.DeclarationDataGUID = (
					SELECT TOP 1 M1.DeclarationDataGUID
					FROM txdDEAESMessage M1
					WHERE M1.PartnerID = @PartnerID
						AND M1.DeclarationGUID = @DeclarationGUID
						AND M1.Type = ''E_EXP_DAT''
					----AND M1.STATUS = ''TRANSMITTED''
					ORDER BY M1.SequenceNum DESC
					)
				AND GI2.ItemNumber NOT IN (
					SELECT GI1.ItemNumber
					FROM txdDEAESGoodsItem GI1
					WHERE GI1.PartnerID = @PartnerID
						AND GI1.DeclarationDataGUID = @DeclarationDataGUID
					)
				AND GIP4.Number <> 0
				AND GIP4.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
			)
		)
*/

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/SequenceNumber'' AS Location,
	''Packages/SequenceNumber is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GIP.PartnerID IS NOT NULL
	AND GIP.DeclarationGUID IS NOT NULL
	AND GIP.SequenceNumber IS NULL
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/SequenceNumber'' AS Location,
	''Packages/SequenceNumber is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GIP.SequenceNumber IS NOT NULL
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/Type'' AS Location,
	''Packages/Type is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GIP.PartnerID IS NOT NULL
	AND GIP.DeclarationGUID IS NOT NULL
	AND GIP.Type = ''''
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/Type'' AS Location,
	''Packages/Type is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GIP.Type <> ''''
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/MarksAndNumbers'' AS Location,
	''Packages/MarksAndNumbers is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GIP.PartnerID IS NOT NULL
	AND GIP.DeclarationGUID IS NOT NULL
	AND GIP.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
	AND GIP.MarksAndNumbers = ''''
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages ['' + CONVERT(VARCHAR(3), GIP.SequenceNum) + '']/MarksAndNumbers'' AS Location,
	''Packages/MarksAndNumbers is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
	ON DD.PartnerID = GIP.PartnerID
		AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GIP.MarksAndNumbers <> ''''
	AND EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/MainItemNumber'' AS Location,  
	''Packages/MainItemNumber is required and permitted only if Packages/Number is 0'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.MainItemNumber <> 0 
		AND GIP.Number <> 0
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/MainItemNumber'' AS Location,  
	''Packages/MainItemNumber in range from 1 to Header/TotalItems'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.MainItemNumber < 0 
		OR GIP.MainItemNumber > DD.TotalItems
		)


INSERT INTO #ValidationWarning
SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/MainItemNumber'' AS Location,  
	''Packages/MainItemNumber is not valid'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.MainItemNumber <> 0 
		AND NOT EXISTS
            (                                                      
            SELECT GIP1.PartnerID
            FROM txdDEAESGoodsItemPackage GIP1                                         
            WHERE GIP1.PartnerID = @PartnerID
            AND GIP1.DeclarationDataGUID = GI.DeclarationDataGUID
			AND GIP1.GoodsItemGUID <> GIP.GoodsItemGUID
			AND GIP1.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
            AND GIP1.MarksAndNumbers=GIP.MarksAndNumbers
            AND GIP1.Number <> 0                                                                                                                    
            )
		
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Packages'' AS Location,
	''At least one Package is mandatory to be provided'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND NOT EXISTS (
		SELECT GIP.PartnerID
		FROM txdDEAESGoodsItemPackage GIP
		WHERE GIP.PartnerID = @PartnerID
			AND DD.DeclarationDataGUID = @DeclarationDataGUID
			AND GIP.GoodsItemGUID = GI.GoodsItemGUID
			AND GIP.GoodsItemPackageGUID IS NOT NULL
		)
	AND NOT EXISTS (
		SELECT *
		FROM txdDEAESDeclarationData DD1
		WHERE DD1.PartnerID = DD.PartnerID
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
				SELECT TOP 1 M.DeclarationDataGUID
				FROM txdDEAESMessage M
				WHERE M.PartnerID = @PartnerID
					AND M.DeclarationGUID = @DeclarationGUID
					AND M.Type = ''E_EXP_DAT''
				----AND M.STATUS = ''TRANSMITTED''
				ORDER BY M.SequenceNum DESC
				)
			AND DD1.DeclarationType2 = ''AE''
		)

INSERT INTO #ValidationWarning
SELECT ''Goods Items ['' + CONVERT(VARCHAR(3), GI.ItemNumber) + '']/Container ['' + CONVERT(VARCHAR(3), GIC.SequenceNum) + '']/Number'' AS Location,
	''Container/Number is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemContainer GIC
	ON DD.PartnerID = GIC.PartnerID
		AND DD.DeclarationDataGUID = GIC.DeclarationDataGUID
		AND GI.GoodsItemGUID = GIC.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GIC.Number <> ''''
	AND (
		DD.ContainerFlag = ''0''
		OR EXISTS (
			SELECT *
			FROM txdDEAESDeclarationData DD1
			WHERE DD1.PartnerID = DD.PartnerID
				AND DD1.DeclarationGUID = DD.DeclarationGUID
				AND DD1.DeclarationDataGUID = (
					SELECT TOP 1 M.DeclarationDataGUID
					FROM txdDEAESMessage M
					WHERE M.PartnerID = @PartnerID
						AND M.DeclarationGUID = @DeclarationGUID
						AND M.Type = ''E_EXP_DAT''
					----AND M.STATUS = ''TRANSMITTED''
					ORDER BY M.SequenceNum DESC
					)
				AND DD1.DeclarationType2 = ''AE''
			)
		)
	/*	
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Container [''+CONVERT(VARCHAR(3),GIC.SequenceNum)+'']/Number'' AS Location, 
''Container/Number is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemContainer GIC
ON DD.PartnerID = GIC.PartnerID  AND DD.DeclarationDataGUID = GIC.DeclarationDataGUID AND GI.GoodsItemGUID = GIC.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND GIC.Number = ''''
	AND DD.ContainerFlag = ''1''
	AND 
		NOT EXISTS
		(SELECT (*)
		FROM txdDEAESGoodsItem GI1
		WHERE GI1.DeclarationDataGUID=GI.DeclarationDataGUID
		AND GI1.ItemNumber <> GI.ItemNumber
		AND GI1.Number <> '''' 
		AND 
			EXISTS
			(SELECT (*)
			FROM txdDEAESGoodsItem GI2
			WHERE GI2.DeclarationGUID=GI.DeclarationGUID
			AND GI2.ItemNumber <> GI.ItemNumber
			AND GI2.ItemNumber <> GI1.ItemNumber
			AND GI2.Number <> '''' 
			)
		)*/

		
INSERT INTO txdDEAESValidationWarning
SELECT @PartnerID AS PartnerID,
	GETDATE() AS EffDate,
	@DeclarationGUID AS DeclarationGUID,
	@DeclarationDataGUID AS DeclarationDataGUID,
	NEWID() AS WarningGUID,
	Location,
	Warning,
	''N'',
	''N''
FROM #ValidationWarning

				

 
				



', CAST(N'2018-02-19T11:50:04.130' AS DateTime), N'DE-AES-2.4.2 E_EXP_AMD validation query', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-02-19T11:50:04.253' AS DateTime), N'DE-AES-2.4.2 E_EXP_DAT', N'DE-AES-2.4.2 E_EXP_DAT', N'


DECLARE @EffectiveValidationDate datetime = GETDATE()
	
DELETE
FROM txdDEAESValidationWarning
WHERE PartnerID = @PartnerID
	AND DeclarationGUID = @DeclarationGUID
	AND DeclarationDataGUID = @DeclarationDataGUID

CREATE TABLE #ValidationWarning (
	Location VARCHAR(1000) NOT NULL,
	Warning VARCHAR(2000) NOT NULL
	)



--Header:
INSERT INTO #ValidationWarning
SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationType1'' AS Location, 
''Declaration Type1 is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
								AND NOT
									( 
										DD.DeclarationType2=''AE'' 
										AND	DD.DeclarationType3 IN (''q'',''s'')
									)
										AND DD.DeclarationType1=''''

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationType1'' AS Location, 
''Declaration Type1 is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2=''AE'' 
										AND	DD.DeclarationType3 IN (''q'',''s'')
										AND DD.DeclarationType1<>''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationType2'' AS Location,
''Declaration Type2 is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2=''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationType2'' AS Location,
''"zP" in not valid value'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType1 NOT IN (''EU'', ''EX'')
										AND DD.DeclarationType2 = ''zP''
                                    )									

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationType3'' AS Location,
''Declaration Type3 is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType3=''''
                                    )									

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationType2+DeclarationType3'' AS Location,
''Not valid values are indicated for DeclarationType2 and DeclarationType3'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND DeclarationType1 NOT IN (''EU'', ''EX'')
									AND
										(	DD.DeclarationType2=''nB'' 
											AND	DD.DeclarationType3 IN (''b'',''c'', ''d'')
											OR DD.DeclarationType2=''nK'' 
											AND	DD.DeclarationType3 IN (''b'',''c'', ''d'')
											OR DD.DeclarationType2=''nN'' 
											AND	DD.DeclarationType3 IN (''b'',''c'', ''d'')
										)	

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationType3'' AS Location, 
''The values of DeclarationType3 in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND DD.DeclarationType3 <> DD1.DeclarationType3								

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/MRN'' AS Location, 
''MRN is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
								AND ( 
										DD.DeclarationType2=''AE'' 
										AND DD.MRN=''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/MRN'' AS Location, 
''MRN is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2<>''AE'' 
										AND DD.MRN<>''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExportCountry'' AS Location, 
''Export Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		DD.ExportCountry = ''''
        )

INSERT INTO #ValidationWarning		

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExportCountry, Itinerary/Country'' AS Location, 
''Header/ExportCountry should be the same as the first Country from the list on Itinerary tab'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND DD.ExportCountry <> ''''
	AND
		(
		SELECT TOP 1 Country 																				
		FROM txdDEAESItinerary IT
		WHERE   IT.PartnerID = @PartnerID 
		AND IT.DeclarationDataGUID = @DeclarationDataGUID
		ORDER BY IT.SequenceNum ASC
		) <> DD.ExportCountry

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExportCountry'' AS Location, 
	''"DE" should be inserted as the value for Export Country'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( NOT
			(	
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''e'', ''f'', ''g'', ''i'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''q'', ''r'', ''w'', ''x'') 
			)
		AND ExportCountry <> ''DE''
        )

INSERT INTO #ValidationWarning	

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DestinationCountry'' AS Location, 
''Destination Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		DD.DestinationCountry = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DestinationCountry'' AS Location,  
	''Not valid country indicated as the Destination Country'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
			DD.DeclarationType1 = ''EU''
			AND DD.DestinationCountry <> ''''
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-I0811''
				)
		OR
			DD.DeclarationType1 = ''EX''
			AND DD.DestinationCountry <> ''''
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-I0802''
				)
		OR
			DD.DeclarationType1 = ''CO''
			AND DD.DestinationCountry <> ''''
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-I0806''
				)
		OR
			DeclarationType2 = ''AE'' 
			AND	DeclarationType3 IN (''q'', ''s'')
			AND DD.DestinationCountry <> ''''
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-C0010''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID2.PartnerID
				FROM txdDEAESGoodsItemDocument GID2	
				WHERE   GID2.PartnerID = @PartnerID 
				AND GID2.DeclarationDataGUID = @DeclarationDataGUID
				AND GID2.Type = ''X002''
				AND	GID2.Qualifier = ''E01''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-A0181''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID3.PartnerID
				FROM txdDEAESGoodsItemDocument GID3	
				WHERE   GID3.PartnerID = @PartnerID 
				AND GID3.DeclarationDataGUID = @DeclarationDataGUID
				AND GID3.Type = ''X002''
				AND	GID3.Qualifier = ''E02''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-A0182''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID4.PartnerID
				FROM txdDEAESGoodsItemDocument GID4	
				WHERE   GID4.PartnerID = @PartnerID 
				AND GID4.DeclarationDataGUID = @DeclarationDataGUID
				AND GID4.Type = ''X002''
				AND	GID4.Qualifier = ''E03''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-A0183''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID5.PartnerID
				FROM txdDEAESGoodsItemDocument GID5	
				WHERE   GID5.PartnerID = @PartnerID 
				AND GID5.DeclarationDataGUID = @DeclarationDataGUID
				AND GID5.Type = ''X002''
				AND	GID5.Qualifier = ''E04''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-A0184''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID6.PartnerID
				FROM txdDEAESGoodsItemDocument GID6	
				WHERE   GID6.PartnerID = @PartnerID 
				AND GID6.DeclarationDataGUID = @DeclarationDataGUID
				AND GID6.Type = ''X002''
				AND	GID6.Qualifier = ''E05''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-A0185''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID7.PartnerID
				FROM txdDEAESGoodsItemDocument GID7	
				WHERE   GID7.PartnerID = @PartnerID 
				AND GID7.DeclarationDataGUID = @DeclarationDataGUID
				AND GID7.Type = ''X002''
				AND	GID7.Qualifier = ''E06''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-A0186''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID8.PartnerID
				FROM txdDEAESGoodsItemDocument GID8	
				WHERE   GID8.PartnerID = @PartnerID 
				AND GID8.DeclarationDataGUID = @DeclarationDataGUID
				AND GID8.Type = ''3LLC''
				AND	GID8.Qualifier = ''A22''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-A0222''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID9.PartnerID
				FROM txdDEAESGoodsItemDocument GID9	
				WHERE   GID9.PartnerID = @PartnerID 
				AND GID9.DeclarationDataGUID = @DeclarationDataGUID
				AND GID9.Type = ''3LLC''
				AND	GID9.Qualifier = ''A24''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-A0224''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID10.PartnerID
				FROM txdDEAESGoodsItemDocument GID10	
				WHERE   GID10.PartnerID = @PartnerID 
				AND GID10.DeclarationDataGUID = @DeclarationDataGUID
				AND GID10.Type = ''3LLC''
				AND	GID10.Qualifier = ''A26''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-A0226''
				)
		OR
			DD.DestinationCountry <> ''''
			AND EXISTS
				(
				SELECT GID11.PartnerID
				FROM txdDEAESGoodsItemDocument GID11	
				WHERE   GID11.PartnerID = @PartnerID 
				AND GID11.DeclarationDataGUID = @DeclarationDataGUID	
				AND GID11.Type = ''3LLC''
				AND	GID11.Qualifier = ''A27''
				)
			AND DD.DestinationCountry NOT IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-A0227''
				)
		OR EXISTS
				(
				SELECT GI12.PartnerID
				FROM txdDEAESGoodsItem GI12
				WHERE  GI12.PartnerID = @PartnerID 
				AND GI12.DeclarationDataGUID = @DeclarationDataGUID	
				AND GI12.NationalProcedure NOT IN (''F61'', ''F62'', ''F64'')
				)
			AND DD.DestinationCountry IN (''QQ'', ''QR'', ''QS'')
		OR EXISTS
				(
				SELECT GI13.PartnerID
				FROM txdDEAESGoodsItem GI13
				WHERE  GI13.PartnerID = @PartnerID 
				AND GI13.DeclarationDataGUID = @DeclarationDataGUID	
				AND GI13.NationalProcedure NOT IN (''F61'', ''F62'', ''6F0'')
				)
			AND DD.DestinationCountry IN (''QU'', ''QV'', ''QP'')
			
		OR NOT EXISTS
				(
				SELECT GI14.PartnerID
				FROM txdDEAESGoodsItem GI14
				LEFT JOIN txdDEAESGoodsItemDocument GID14
				ON GI14.PartnerID=GID14.PartnerID  AND GI14.GoodsItemGUID=GID14.GoodsItemGUID
				AND
					(
					GID14.Type = ''3LLA''
					AND	GID14.Qualifier IN (''82'', ''231'', ''EU'')
					OR GID14.Type = ''3LLB''
					AND	GID14.Qualifier IN (''81E'', ''81K'', ''81S'', ''231'')
					OR GID14.Type = ''3LLC''
					AND	GID14.Qualifier IN (''81E'', ''81S'', ''231'')
					OR GID14.Type = ''C064''
					AND	GID14.Qualifier IN (''DE'', ''EU'')
					OR GID14.Type = ''E990''
					AND	GID14.Qualifier IN (''DEE'', ''DES'', ''EU'')
					OR GID14.Type = ''C052''
					AND	GID14.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'', ''EU'')
					OR GID14.Type = ''C070''
					AND GID14.Qualifier IN (''LY'', ''EU'')
					OR GID14.Type = ''X002''
					AND	GID14.Qualifier IN (''DEE'', ''DES'', ''231'')
					OR GID14.Type = ''E020''
					AND	GID14.Qualifier IN (''FWE'', ''FWS'', ''231'', ''EU'')
					OR GID14.Type = ''X002''
					AND	GID14.Qualifier IN (''A09'', ''A10'', ''A12'', ''A13'', ''A16'', ''A17'', ''EU'')
					OR GID14.Type = ''3LLC''
					AND	GID14.Qualifier IN (''A18'', ''A19'', ''A21'', ''A23'', ''A25'')
					)				
				WHERE   GI14.PartnerID = DD.PartnerID 
				AND GI14.DeclarationDataGUID = DD.DeclarationDataGUID
				AND GID14.GoodsItemDocumentGUID IS NOT NULL
				)
			AND DD.DestinationCountry = ''QZ''
		)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DestinationCountry, Itinerary/Country'' AS Location, 
''Header/DestinationCountry should be the same as the last Country from the list on Itinerary tab'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
		DD.DestinationCountry <> ''''
		AND
		(
		SELECT TOP 1 Country 																				
		FROM txdDEAESItinerary IT
		WHERE   IT.PartnerID = @PartnerID 
		AND IT.DeclarationDataGUID = @DeclarationDataGUID
		ORDER BY IT.SequenceNum DESC
		) <> DD.DestinationCountry

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationDate'' AS Location,
''Declaration Date is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationDate=''''
                                    )									

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ApplicableDate'' AS Location, 
''Applicable Date is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
								AND ( 
										DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
										AND DD.ApplicableDate=''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ApplicableDate'' AS Location, 
''Applicable Date is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2 NOT IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
										AND DD.ApplicableDate<>''''
                                    )

INSERT INTO #ValidationWarning

SELECT 	-----N1												
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ApplicableDate'' AS Location, 
''Applicable Date can not be in the future.'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
										AND DD.ApplicableDate <> ''''
										AND DD.ApplicableDate>@EffectiveValidationDate
                                    )

INSERT INTO #ValidationWarning

SELECT 	-----N1												
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ApplicableDate'' AS Location, 
''Applicable Date should be in the previous month of the Declaration Date'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2 = ''mS'' 
										AND 
											(
											DATEDIFF(day, DD.ApplicableDate, DD.DeclarationDate) > 30
											OR DATEDIFF(day, DD.ApplicableDate, DD.DeclarationDate) < 0
											)
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExitDate'' AS Location, 
''Exit Date is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
								AND ( 
										DD.DeclarationType2 IN (''nA'', ''nK'', ''nN'') 
										AND DD.ExitDate=''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExitDate'' AS Location, 
''Exit Date is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2 NOT IN (''nA'', ''nK'', ''nN'') 
										AND DD.ExitDate<>''''
                                    )

INSERT INTO #ValidationWarning

SELECT   -----N2
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExitDate'' AS Location, 
''Exit Date can not be in the future.'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2 IN (''nA'', ''nK'', ''nN'')
										AND DD.ExitDate <> ''''
										AND DD.ExitDate>@EffectiveValidationDate
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/SpecialCircumstances'' AS Location, 
''Special Circumstances is not allowed for "AM+k" and "AM+l" types of declaration'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2 = ''AM'' 
										AND	DD.DeclarationType3 IN (''k'',''l'')
										AND DD.SpecialCircumstances <> ''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TransportCostsMethodOfPayment, Goods Items/TransportCostsMethodOfPayment'' AS Location, 
''Transport Costs Method Of Payment should be specified either on Header level or on the Goods Item level'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(SELECT COUNT (*) 																				
				FROM txdDEAESGoodsItem GI
				WHERE   GI.PartnerID = @PartnerID 
				AND GI.DeclarationDataGUID = @DeclarationDataGUID
				AND GI.TransportCostsMethodOfPayment <> ''''
			) > 0
		AND DD.TransportCostsMethodOfPayment <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items/TransportCostsMethodOfPayment'' AS Location,  
	''The same Transport Costs Method Of Payment is not allowed to be used for all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.TransportCostsMethodOfPayment = ''''
		AND 
			(
			SELECT COUNT (DISTINCT GI.TransportCostsMethodOfPayment)
			FROM txdDEAESGoodsItem GI
			WHERE   GI.PartnerID = @PartnerID 
			AND GI.DeclarationDataGUID = @DeclarationDataGUID
			AND GI.TransportCostsMethodOfPayment <> ''''
			) = 1
		)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/PartiesStatus'' AS Location,
''Parties Status is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.PartiesStatus=''''
                                    )									

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/PartiesStatus'' AS Location, 
''The values of PartiesStatus in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND DD.PartiesStatus <> DD1.PartiesStatus								

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/PartiesStatus'' AS Location, 
''Not valid value for Parties Status'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										(	DeclarationType2=''AM'' 
											AND	DeclarationType3 IN (''e'',''f'')
											OR DeclarationType2=''wP'' 
											AND	DeclarationType3 IN (''q'',''r'',''w'',''x'')
										)
											AND PartiesStatus LIKE ''_01_''
									OR
										( 
										DeclarationType2=''mS'' 
										AND 
											(
											PartiesStatus LIKE ''_01_''
											OR PartiesStatus LIKE ''_10_''
											OR PartiesStatus LIKE ''_11_''
											)
										)
									OR
										(	DeclarationType2=''AM'' 
											AND	DeclarationType3 IN (''g'',''i'')
											OR DeclarationType2=''zP'' 
											AND	DeclarationType3 IN (''e'',''f'',''q'',''r'')
										)
											AND PartiesStatus LIKE ''__1_''
									OR
										( 
										DeclarationType2=''AM'' 
										AND	DeclarationType3 IN (''k'',''l'')
										AND 
											(
											PartiesStatus LIKE ''1___''
											OR PartiesStatus LIKE ''__1_''
											)
										)
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/PartiesStatus'' AS Location, 
''The value like "***0" should be indicated for the field PartiesStatus '' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND 
									NOT
										(	DeclarationType2 IN (''zP'') 
											OR 
											(DeclarationType2 IN (''nB'', ''nK'', ''nN'') AND	DeclarationType3 IN (''b'',''c'',''d''))
											
										)
											AND PartiesStatus NOT LIKE ''___0''

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/PartiesStatus'' AS Location, 
''The value like "***1", "***2" or "***3" should be indicated for the field PartiesStatus '' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
									AND 
										(	DeclarationType2 = ''zP'' 
											AND	DeclarationType3 IN (''a'',''b'',''c'',''d'',''e'',''f'',''m'',''n'',''o'',''p'',''q'',''r'')
										OR
											DeclarationType2 IN (''nB'',''nK'',''nN'') 
											AND	DeclarationType3 IN (''b'',''c'')
										)
											AND 
												(
												PartiesStatus NOT LIKE ''___1''
												AND PartiesStatus NOT LIKE ''___2''
												AND PartiesStatus NOT LIKE''___3''
												)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/PartiesStatus'' AS Location, 
''The value like "***1", "***2" or "***3" should be indicated for the field PartiesStatus '' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
									AND 
										(	DeclarationType2 = ''zP'' 
											AND	DeclarationType3 IN (''s'',''t'',''u'',''v'')
										OR
											DeclarationType2 IN (''nB'',''nK'',''nN'') 
											AND	DeclarationType3 = ''d''
										)
											AND 
												(
												PartiesStatus NOT LIKE ''___1''
												AND PartiesStatus NOT LIKE ''___2''
												)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ContainerFlag'' AS Location,
''Countainer Flag is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.ContainerFlag=''''
                                    )									

INSERT INTO #ValidationWarning
/*
SELECT 														----------------THE FIELD IS NOT IN THE UPDATED STRUCTURE ANY MORE
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/StatisticalMessageFlag'' AS Location, 	
''Statistical MessageFlag is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
								AND ( 
										DeclarationType2=''nN'' 
										AND StatisticalMessageFlag=''''
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/StatisticalMessageFlag'' AS Location, 
''Statistical MessageFlag is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DeclarationType2<>''nN'' 
										AND StatisticalMessageFlag<>''''
                                    )

INSERT INTO #ValidationWarning*/

SELECT    -----N3
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalGrossWeight; Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/GrossWeight'' AS Location, 
''Gross Weight is required to be indicated both on Header level/TotalGrossWeight and on the Goods Item level/GrossWeight'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
			(	
			DD.DeclarationType2 = ''AE'' 
			OR 
			DD.DeclarationType2 = ''AM'' 
			AND DD.DeclarationType3 IN (''k'',''l'')
			AND DD.SpecialCircumstances <> ''E''
			)
		
			AND 
			(DD.TotalGrossWeight = 0
			OR GI.GrossWeight = 0	
			)
			

INSERT INTO #ValidationWarning	

SELECT    -----N3
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalGrossWeight; Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/GrossWeight'' AS Location, 
''Gross Weight is required to be indicated either on Header level/TotalGrossWeight or on the Goods Item level/GrossWeight or in both places'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT (
			DD.DeclarationType2 = ''AE'' 
			OR 
			DD.DeclarationType2 = ''AM'' 
			AND DD.DeclarationType3 IN (''k'',''l'')
			AND DD.SpecialCircumstances <> ''E''
			)
		AND	
			(	
			GI.PreviousProcedure IN (''71'', ''78'')
			AND GI.GrossWeight = 0
			AND DD.TotalGrossWeight = 0
			)
		

INSERT INTO #ValidationWarning		

SELECT  
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalGrossWeight'' AS Location, 
''Total Gross Weight should not be less than the sum of Gross Weights of all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DD.TotalGrossWeight <> 0
		AND
			
			(SELECT SUM (GrossWeight) 																				
				FROM txdDEAESGoodsItem GI
				WHERE   GI.PartnerID = @PartnerID 
				AND GI.DeclarationDataGUID = @DeclarationDataGUID
			) > DD.TotalGrossWeight
		)

INSERT INTO #ValidationWarning

SELECT  
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalGrossWeight'' AS Location, 
''Total Gross Weight should not be less than the sum of Net WeightS of all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DD.TotalGrossWeight <> 0
		AND
			
			(SELECT SUM (NetWeight) 																				
				FROM txdDEAESGoodsItem GI
				WHERE   GI.PartnerID = @PartnerID 
				AND GI.DeclarationDataGUID = @DeclarationDataGUID
			) > DD.TotalGrossWeight
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/GrossWeight'' AS Location,  
	''"0" should not be indicated as the value for Gross Weight'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT (
			DD.BorderModeOfTransport IN (''7'', ''70'')
			OR (SELECT COUNT (*) 																				
				FROM txdDEAESGoodsItem GI1
				WHERE   GI1.PartnerID = @PartnerID 
				AND GI1.DeclarationDataGUID = @DeclarationDataGUID
				AND GI1.GrossWeight <> 0
				) > 0
			)
		AND GI.GrossWeight = 0
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/GrossWeight'' AS Location,  
	''"0" should be indicated as the value for Gross Weight'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID=GIP.PartnerID  AND DD.DeclarationDataGUID=GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND	
		DD.BorderModeOfTransport IN (''7'', ''70'')
		AND	
			(
				GI.NetWeight = 0
				OR GIP.Number = 0
			)
			AND GI.GrossWeight <> 0
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/GrossWeight'' AS Location,  
	''Gross Weight should be greater than or equal to Net Weight'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GI.GrossWeight <> 0
		AND GI.GrossWeight < GI.NetWeight
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/GrossWeight'' AS Location,  
	''Gross Weight should be greater than zero'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GI.PreviousProcedure IN (''71'', ''78'')
		AND DD.TotalGrossWeight = 0
		AND NOT GI.GrossWeight > 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items/GrossWeight'' AS Location,  
	''the sum of the Gross Weights should not be less than the sum of the Net Weights'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		SELECT SUM (GrossWeight) 																				
		FROM txdDEAESGoodsItem GI1
		WHERE   GI1.PartnerID = @PartnerID 
		AND GI1.DeclarationDataGUID = @DeclarationDataGUID
		)
		< 
		(
		SELECT SUM (NetWeight) 																				
		FROM txdDEAESGoodsItem GI2
		WHERE   GI2.PartnerID = @PartnerID 
		AND GI2.DeclarationDataGUID = @DeclarationDataGUID
		)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/Note'' AS Location, 
''Note is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
								AND ( 
										DD.DeclarationType2=''AM'' 
										AND	DD.DeclarationType3=''i''
										AND DD.Note=''''
                                    )

INSERT INTO #ValidationWarning

SELECT   -----N5
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/UCR, Goods Items/UCR'' AS Location, 
''UCR is not allowed allowed to be specified both on Header level and on Goods Item level'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(SELECT COUNT (*) 																				
				FROM txdDEAESGoodsItem GI
				WHERE   GI.PartnerID = @PartnerID 
				AND GI.DeclarationDataGUID = @DeclarationDataGUID
				AND GI.UCR <> ''''
			) > 0
		AND DD.UCR <> ''''
		)

INSERT INTO #ValidationWarning

SELECT   -----N6
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/UCR, Goods Items/UCR'' AS Location, 
''UCR is required to be specified either on Header level on or Goods Item level'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(SELECT COUNT (*) 																				-------------???????????????????????????????
				FROM txdDEAESGoodsItem GI
				WHERE   GI.PartnerID = @PartnerID 
				AND GI.DeclarationDataGUID = @DeclarationDataGUID
				AND GI.UCR = ''''
			) > 0
		AND DD.SpecialCircumstances <> ''A''
		AND DD.UCR = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items/UCR'' AS Location,  
	''The same UCR is not allowed to be used for all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.UCR = ''''
		AND 
			(SELECT COUNT (*) 																				-------------???????????????????????????????
				FROM txdDEAESGoodsItem GI
				WHERE   GI.PartnerID = @PartnerID 
				AND GI.DeclarationDataGUID = @DeclarationDataGUID
				AND GI.UCR = ''''
			) = 0
		AND
			(
			SELECT COUNT (DISTINCT GI1.UCR)
			FROM txdDEAESGoodsItem GI1
			WHERE   GI1.PartnerID = @PartnerID 
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI1.UCR <> ''''
			) = 1
		)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/LRN'' AS Location, 
''LRN is not permitted'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	---AND	DD1.Type = ''E_EXP_IND''		----IND
	AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
    AND (																									
		DD1.LRN <> '''' 
		AND DD.LRN <> ''''
		)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalItems'' AS Location, 
''Total Items is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
								AND ( 
										DD.DeclarationType2 <> ''AE'' 
										AND DD.TotalItems=0
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalItems'' AS Location, 
''Total Items is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.DeclarationType2 = ''AE'' 
										AND DD.TotalItems<>0
                                    )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/BIN'' AS Location,
''BIN is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD

WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
                                AND ( 
										DD.BIN = ''''
                                    )									

INSERT INTO #ValidationWarning		
									
SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OPLocalClearanceAuthorizationNumber'' AS Location, 
	''OPLocal Clearance Authorization Number is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			NOT (	
					DD.DeclarationType2 = ''zP'' 
					AND	DD.DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
				)
			AND DD.OPLocalClearanceAuthorizationNumber <> ''''
		)		
									
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OPLocalClearanceAuthorizationNumber'' AS Location, 
	''OPLocal Clearance Authorization Number is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
			AND DD.OPLocalClearanceAuthorizationNumber = ''''
		)		
									
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OPAuthorizationNumber'' AS Location, 
	''OPAuthorization Number is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD                               
WHERE DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
			DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'' , ''b'', ''c'', ''d'', ''e'', ''f'', ''m'', ''n'', ''o'', ''p'', ''q'', ''r'')
			OR DD.DeclarationType2 = ''nB'' 
			AND	DD.DeclarationType3 IN (''b'', ''c'')
			OR DD.DeclarationType2 = ''nK'' 
			AND	DD.DeclarationType3 IN (''b'', ''c'')
			OR DD.DeclarationType2 = ''nN'' 
			AND	DD.DeclarationType3 IN (''b'', ''c'')
			)
			AND DD.OPAuthorizationNumber= ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OPAuthorizationNumber'' AS Location, 
	''OPAuthorization Number is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			NOT (	
					DD.DeclarationType2 = ''zP'' 
					AND	DD.DeclarationType3 IN (''a'', ''b'', ''c'', ''d'', ''e'', ''f'', ''m'', ''n'', ''o'', ''p'', ''q'', ''r'')
					OR DD.DeclarationType2 = ''nB'' 
					AND	DD.DeclarationType3 IN (''b'', ''c'')
					OR DD.DeclarationType2 = ''nK'' 
					AND	DD.DeclarationType3 IN (''b'', ''c'')
					OR DD.DeclarationType2 = ''nN'' 
					AND	DD.DeclarationType3 IN (''b'', ''c'')
				)
			AND DD.OPAuthorizationNumber <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/TrustedExporterNumber'' AS Location, 
	''Trusted Exporter Number is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''k'', ''l'')
			)
			AND DD.TrustedExporterNumber = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/TrustedExporterNumber'' AS Location, 
	''Trusted Exporter Number is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT (	
					DD.DeclarationType2 = ''AM'' 
					AND	DD.DeclarationType3 IN (''k'', ''l'')
				)
				AND DD.TrustedExporterNumber <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AuthorizedExporterNumber'' AS Location, 
	''Authorized Exporter Number is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''e'', ''f'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			OR DD.DeclarationType2 = ''mS'' 
			AND	DD.DeclarationType3 = ''a''
			)
			AND DD.AuthorizedExporterNumber = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AuthorizedExporterNumber'' AS Location, 
	''Authorized Exporter Number is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT (	
					DD.DeclarationType2 = ''AM'' 
					AND	DD.DeclarationType3 IN (''a'', ''b'', ''c'', ''d'', ''e'', ''f'')
					OR DD.DeclarationType2 = ''wP'' 
					AND	DD.DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
					OR DD.DeclarationType2 = ''mS'' 
					AND	DD.DeclarationType3 = ''a''
				)
				AND DD.AuthorizedExporterNumber <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/InlandModeOfTransport'' AS Location, 
	''Inland Mode Of Transport is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'')
			OR DD.DeclarationType2 = ''nA'' 
			OR DD.DeclarationType2 = ''nB''
			OR DD.DeclarationType2 = ''nK''
			OR DD.DeclarationType2 = ''nN''
			OR DD.DeclarationType2 = ''mS''
			)
			AND DD.InlandModeOfTransport = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/InlandModeOfTransport'' AS Location, 
	''Inland Mode Of Transport is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			(	
				DD.DeclarationType2 = ''AM'' 
				AND	DD.DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
			)
			AND DD.InlandModeOfTransport <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/InlandModeOfTransport'' AS Location, 
	''Not valid value is indicated for Inland Mode Of Transport'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT
				(	
				DD.DeclarationType2 = ''AM'' 
				AND	DD.DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
				)
			AND (
				DD.InlandModeOfTransport IN (''5'', ''50'')
				AND DD.SpecialCircumstances <> ''A''
				OR DD.InlandModeOfTransport IN (''7'', ''70'')
				AND DD.DeclarationType2 <> ''mS''
				)
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DepartureTypeOfTransport'' AS Location, 
	''Departure Type Of Transport is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DD.DeclarationType2 <> ''AE'' 
			AND DD.DepartureTypeOfTransport <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DepartureTypeOfTransport'' AS Location, 
	''Departure Type Of Transport is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DD.DeclarationType2 = ''AE'' 
			AND DD.DepartureTypeOfTransport = ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DepartureTransportMeansID'' AS Location, 
	''Departure Transport Means ID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DD.DeclarationType2 <> ''AE'' 
			AND DD.DepartureTransportMeansID <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DepartureTransportMeansNationality'' AS Location, 
	''Departure Transport Means Nationality is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DD.DeclarationType2 <> ''AE'' 
			AND DD.DepartureTransportMeansNationality <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/BorderModeOfTransport'' AS Location, 
	''Border Mode Of Transport is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DD.BorderModeOfTransport = ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/BorderModeOfTransport'' AS Location, 
	''Value for Border Mode Of Transport is not valid'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND DD.BorderModeOfTransport <> ''''
		and (
			 BorderModeOfTransport IN (''5'', ''50'')
			AND SpecialCircumstances <> ''A''
			OR BorderModeOfTransport IN (''7'', ''70'')
			AND DeclarationType2 <> ''mS''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/BorderTypeOfTransport'' AS Location, 
	''Border Type Of Transport is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DD.DeclarationType2 = ''AE'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'')
			OR DD.DeclarationType2 = ''nA'' 
			OR DD.DeclarationType2 = ''nB''
			OR DD.DeclarationType2 = ''nK''
			OR DD.DeclarationType2 = ''nN''
			OR DD.DeclarationType2 = ''mS''
			)
			AND DD.BorderTypeOfTransport = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/BorderTransportMeansID'' AS Location, 
	''Border Transport Means ID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			DD.DeclarationType2 = ''AE'' 
			AND DD.BorderTransportMeansID = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/BorderTransportMeansNationality'' AS Location, 
	''Border Transport Means Nationality is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DD.DeclarationType2 = ''AE'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'')
			OR DD.DeclarationType2 = ''nA'' 
			OR DD.DeclarationType2 = ''nB''
			OR DD.DeclarationType2 = ''nK''
			OR DD.DeclarationType2 = ''nN''
			OR DD.DeclarationType2 = ''mS''
			)
			AND DD.BorderModeOfTransport NOT IN (''2'', ''20'', ''5'', ''50'', ''9'', ''90'')
			AND DD.BorderTransportMeansNationality = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoading'' AS Location, 
	''Place Of Loading is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD                               
WHERE DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			NOT(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'', ''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
				OR DeclarationType2 = ''mS''
				)
			AND(
				AuthorizedExporterNumber <> '''' 
				OR OPLocalClearanceAuthorizationNumber <> '''' 
				)
			AND PlaceOfLoading= ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoading'' AS Location, 
	''Place Of Loading is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 	(
			DeclarationType2 = ''AE''			
			OR DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
			OR DeclarationType2 = ''mS''
			OR NOT 
					(	
					AuthorizedExporterNumber <> '''' 
					OR OPLocalClearanceAuthorizationNumber <> '''' 
					)
			)
			AND PlaceOfLoading <> ''''
		)
/*
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoading'' AS Location, 
	''Place Of Loading is not allowed if by the Header/AuthorizedExporterNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND  	
		(
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''e'', ''f'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
		)
	AND 
		(	
			AuthorizedExporterNumber <> '''' 
			OR OPLocalClearanceAuthorizationNumber <> '''' 
		)
	AND PlaceOfLoading <> ''''
*/

/*
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoading'' AS Location, 
	''Place Of Loading is not allowed if by the Header/OPLocalClearanceAuthorizationNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND  	
		(
			DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
		)
	AND 
		(	
			AuthorizedExporterNumber <> '''' 
			OR OPLocalClearanceAuthorizationNumber <> '''' 
		)
	AND PlaceOfLoading <> ''''
	
*/	

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAddress'' AS Location, 
	''Place Of Loading Address is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD                               
WHERE DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			NOT(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'', ''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
				OR DeclarationType2 = ''mS''
				)
			AND PlaceOfLoading = '''' 
			AND PlaceOfLoadingAddress = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAddress'' AS Location, 
	''Place Of Loading Address is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
				OR DeclarationType2 = ''mS''
				OR PlaceOfLoading <> '''' 
			)
			AND PlaceOfLoadingAddress <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAddress'' AS Location, 
	''Place Of Loading Address is not allowed if by the Header/AuthorizedExporterNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingAddress <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAddress'' AS Location, 
	''Place Of Loading Address is not allowed if by the Header/OPLocalClearanceAuthorizationNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingAddress <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingPostCode'' AS Location, 
	''Place Of Loading Post Code is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD                               
WHERE DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			NOT(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'', ''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
				OR DeclarationType2 = ''mS''
				)
			AND	PlaceOfLoading = '''' 
			AND PlaceOfLoadingPostCode = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingPostCode'' AS Location, 
	''Place Of Loading Post Code is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
				OR DeclarationType2 = ''mS''
				OR PlaceOfLoading <> '''' 
			)
			AND PlaceOfLoadingPostCode <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingPostCode'' AS Location, 
	''Place Of Loading Post Code is not allowed if by the Header/AuthorizedExporterNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingPostCode <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingPostCode'' AS Location, 
	''Place Of Loading Post Code is not allowed if by the Header/OPLocalClearanceAuthorizationNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingPostCode <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingCity'' AS Location, 
	''Place Of Loading City is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD                               
WHERE DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			NOT(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'', ''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
				OR DeclarationType2 = ''mS''
				)
			AND PlaceOfLoading = '''' 
			AND PlaceOfLoadingCity = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingCity'' AS Location, 
	''Place Of Loading City is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
				OR DeclarationType2 = ''mS''
				OR PlaceOfLoading <> '''' 
			)
			AND PlaceOfLoadingCity <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingCity'' AS Location, 
	''Place Of Loading City is not allowed if by the Header/AuthorizedExporterNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingCity <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingCity'' AS Location, 
	''Place Of Loading City is not allowed if by the Header/OPLocalClearanceAuthorizationNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingCity <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAdditionalInformation'' AS Location, 
	''Place Of Loading Additional Information is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD                               
WHERE DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			NOT(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'', ''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
				OR DeclarationType2 = ''mS''
				)
			AND PlaceOfLoading = '''' 
			AND PlaceOfLoadingAdditionalInformation = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAdditionalInformation'' AS Location, 
	''Place Of Loading Additional Information is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AE''			
				OR DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
				OR DeclarationType2 = ''mS''
				OR PlaceOfLoading <> '''' 
			)
			AND PlaceOfLoadingAdditionalInformation <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAdditionalInformation'' AS Location, 
	''Place Of Loading Additional Information is not allowed if by the Header/AuthorizedExporterNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingAdditionalInformation <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/PlaceOfLoadingAdditionalInformation'' AS Location, 
	''Place Of Loading Additional Information is not allowed if by the Header/OPLocalClearanceAuthorizationNumber referenced approval for bulk goods without charging location applies.'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(
				DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
			)
			AND PlaceOfLoading = '''' 
			
			AND PlaceOfLoadingAdditionalInformation <> ''''
		)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationOffice'' AS Location, 
''Declaration Office is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
                                
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		DeclarationOffice = ''''
        )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarationOffice'' AS Location, 
''The values of DeclarationOffice in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND DD.DeclarationOffice <> DD1.DeclarationOffice								

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SupplementaryDeclarationOffice'' AS Location, 
	''Supplementary Declaration Office is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''b'', ''d'', ''f'', ''l'')
			OR DeclarationType2 = ''AE'' 
			AND	DeclarationType3 IN (''n'', ''p'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''b'', ''d'', ''f'', ''n'', ''p'', ''r'', ''t'', ''v'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''n'', ''p'', ''r'', ''t'', ''v'', ''x'')
			)
			AND SupplementaryDeclarationOffice = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SupplementaryDeclarationOffice'' AS Location, 
	''Supplementary Declaration Office is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''b'', ''d'', ''f'', ''l'')
				OR DeclarationType2 = ''AE'' 
				AND	DeclarationType3 IN (''n'', ''p'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''b'', ''d'', ''f'', ''n'', ''p'', ''r'', ''t'', ''v'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''n'', ''p'', ''r'', ''t'', ''v'', ''x'')
				)
				AND SupplementaryDeclarationOffice <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExitOffice'' AS Location, 
	''Exit Office is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			OR DeclarationType2 = ''zP'' 
			OR DeclarationType2 = ''wP'' 
			)
			AND ExitOffice = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExitOffice'' AS Location, 
	''Exit Office is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 = ''AM'' 
				OR DeclarationType2 = ''zP'' 
				OR DeclarationType2 = ''wP''
				)
				AND ExitOffice <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExitOffice'' AS Location, 
	''Exit Office is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''g'', ''i'', ''k'', ''l'')
			AND DD.ExitOffice <> DD.DeclarationOffice
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ActualExitOffice'' AS Location, 
	''Actual ExitOffice is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''nA'' 
			OR DeclarationType2 = ''nK'' 
			OR DeclarationType2 = ''nN'' 
			)
			AND ActualExitOffice = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ActualExitOffice'' AS Location, 
	''Actual ExitOffice is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 = ''nA'' 
				OR DeclarationType2 = ''nK'' 
				OR DeclarationType2 = ''nN''
				)
				AND ActualExitOffice <> ''''
         )

INSERT INTO #ValidationWarning

/*SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/TransactionNature'' AS Location, 
	''Transaction Nature is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DeclarationType2 = ''AE'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'') 
			OR DeclarationType2 = ''nA'' 
			OR DeclarationType2 = ''nB''
			OR DeclarationType2 = ''nK''
			OR DeclarationType2 = ''nN''
			OR DeclarationType2 = ''mS''
			)
			AND TransactionNature = ''''
        )

INSERT INTO #ValidationWarning*/

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TransactionNature; Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/TransactionNature'' AS Location, 
''Transaction Nature should be specified either on Header level or on Goods Item level'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GI.TransactionNature <> ''''
	AND DD.TransactionNature <> ''''

INSERT INTO #ValidationWarning

SELECT  
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/TransactionNature'' AS Location, 
''Transaction Nature is required'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			DD.TransactionNature = ''''
		AND (	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DeclarationType2 = ''AE'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'')
			OR DeclarationType2 = ''nA'' 
			OR DeclarationType2 = ''nB''
			OR DeclarationType2 = ''nK''
			OR DeclarationType2 = ''nN''
			OR DeclarationType2 = ''mS''
			)
		AND GI.TransactionNature = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items/TransactionNature'' AS Location,  
	''The same value for Transaction Nature is not allowed to be used for all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.TransactionNature = ''''
		AND 
			(
			SELECT COUNT (*)
			FROM txdDEAESGoodsItem GI
			WHERE   GI.PartnerID = @PartnerID 
			AND GI.DeclarationDataGUID = @DeclarationDataGUID
			AND GI.TransactionNature = ''''
			) = 0
		AND 
			(
			SELECT COUNT (DISTINCT GI1.TransactionNature)
			FROM txdDEAESGoodsItem GI1
			WHERE   GI1.PartnerID = @PartnerID 
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI1.TransactionNature <> ''''
			) = 1
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalInvoice'' AS Location, 			-----N7
	''Total Invoice is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DeclarationType2 = ''AE'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'') 
			OR DeclarationType2 = ''nA'' 
			OR DeclarationType2 = ''nB''
			OR DeclarationType2 = ''nK''
			OR DeclarationType2 = ''nN''
			OR DeclarationType2 = ''mS''
			)
			AND TotalInvoice = 0
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalInvoiceCurrency'' AS Location, 
	''Total Invoice Currency is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DeclarationType2 = ''AE'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'') 
			OR DeclarationType2 = ''nA'' 
			OR DeclarationType2 = ''nB''
			OR DeclarationType2 = ''nK''
			OR DeclarationType2 = ''nN''
			OR DeclarationType2 = ''mS''
			)
			AND TotalInvoiceCurrency = ''''
        )






--------------new segment Special events has been added












		
INSERT INTO #ValidationWarning

SELECT 
''Itinerary/Country'' AS Location, 						
''Itinerary/Country is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS
		(
		SELECT IT.PartnerID
		FROM txdDEAESItinerary IT	
		WHERE   IT.PartnerID = DD.PartnerID 
		AND IT.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	IT.Country <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT 
''Itinerary/Country'' AS Location, 
''The list of the Countries should contain "DE"'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(	
		DeclarationType2 = ''AM'' 
		AND	DeclarationType3 IN (''e'', ''f'')
		OR DeclarationType2 = ''wP'' 
		AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'') 
		OR DeclarationType2 = ''zP'' 
		AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'') 
		)
	AND
		(
		SELECT COUNT (*) 															
		FROM txdDEAESItinerary IT
		WHERE   IT.PartnerID = @PartnerID 
		AND IT.DeclarationDataGUID = @DeclarationDataGUID
		AND IT.Country = ''DE''
		) = 0

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/SealType'' AS Location, 
''Seal Type is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
		SELECT GID1.PartnerID
		FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESGoodsItemDocument GID1
		ON DD1.PartnerID=GID1.PartnerID  AND DD1.DeclarationDataGUID=GID1.DeclarationDataGUID		
		WHERE   DD1.PartnerID = DD.PartnerID 
		AND DD1.DeclarationGUID = DD.DeclarationGUID
		---AND	DD1.Type = ''E_EXP_IND''		------IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GID1.Type = ''5MMN''
		)
	AND DD.SealType=''''
		
INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/SealType'' AS Location, 
''Seal Type is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS
		(
		SELECT GID2.PartnerID
		FROM txdDEAESDeclarationData DD2
		JOIN txdDEAESGoodsItemDocument GID2
		ON DD2.PartnerID=GID2.PartnerID  AND DD2.DeclarationDataGUID=GID2.DeclarationDataGUID		
		WHERE   DD2.PartnerID = DD.PartnerID 
		AND DD2.DeclarationGUID = DD.DeclarationGUID
		---AND	DD2.Type = ''E_EXP_IND''		------IND
		AND DD2.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GID2.Type = ''5MMN''
		)
	AND DD.SealType<>''''
		
INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalSeals'' AS Location, 
''Total Seals is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
		SELECT GID2.PartnerID
		FROM txdDEAESDeclarationData DD2
		JOIN txdDEAESGoodsItemDocument GID2
		ON DD2.PartnerID=GID2.PartnerID  AND DD2.DeclarationDataGUID=GID2.DeclarationDataGUID		
		WHERE   DD2.PartnerID = DD.PartnerID 
		AND DD2.DeclarationGUID = DD.DeclarationGUID
		---AND	DD2.Type = ''E_EXP_IND''		------IND
		AND DD2.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GID2.Type = ''5MMN''
		)
	AND DD.TotalSeals = 0
		
INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/TotalSeals'' AS Location, 
''Total Seals is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS
		(
		SELECT GID2.PartnerID
		FROM txdDEAESDeclarationData DD2
		JOIN txdDEAESGoodsItemDocument GID2
		ON DD2.PartnerID=GID2.PartnerID  AND DD2.DeclarationDataGUID=GID2.DeclarationDataGUID		
		WHERE   DD2.PartnerID = DD.PartnerID 
		AND DD2.DeclarationGUID = DD.DeclarationGUID
		---AND	DD2.Type = ''E_EXP_IND''		------IND
		AND DD2.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GID2.Type = ''5MMN''
		)
	AND DD.TotalSeals <> 0
		
INSERT INTO #ValidationWarning

SELECT 
''Seals/Identifier'' AS Location, 
''Seals/Identifier is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
		SELECT GID2.PartnerID
		FROM txdDEAESDeclarationData DD2
		JOIN txdDEAESGoodsItemDocument GID2
		ON DD2.PartnerID=GID2.PartnerID  AND DD2.DeclarationDataGUID=GID2.DeclarationDataGUID		
		WHERE   DD2.PartnerID = DD.PartnerID 
		AND DD2.DeclarationGUID = DD.DeclarationGUID
		---AND	DD2.Type = ''E_EXP_IND''		------IND
		AND DD2.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GID2.Type = ''5MMN''
		)
	AND NOT EXISTS	
		( 
		SELECT S.PartnerID
		FROM txdDEAESSeal S
		WHERE   S.PartnerID = @PartnerID 
		AND S.DeclarationDataGUID = @DeclarationDataGUID
		)

	
INSERT INTO #ValidationWarning

SELECT 
''Seals/Identifier'' AS Location, 
''Seals/Identifier is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS
		(
		SELECT GID2.PartnerID
		FROM txdDEAESDeclarationData DD2
		JOIN txdDEAESGoodsItemDocument GID2
		ON DD2.PartnerID=GID2.PartnerID  AND DD2.DeclarationDataGUID=GID2.DeclarationDataGUID		
		WHERE   DD2.PartnerID = DD.PartnerID 
		AND DD2.DeclarationGUID = DD.DeclarationGUID
		---AND	DD2.Type = ''E_EXP_IND''
		AND DD2.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GID2.Type = ''5MMN''
		)
	AND EXISTS	
		( 
		SELECT S.PartnerID
		FROM txdDEAESSeal S
		WHERE   S.PartnerID = @PartnerID 
		AND S.DeclarationDataGUID = @DeclarationDataGUID
		)
		
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/StartLoadingDate'' AS Location, 
	''Start Loading Date is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''c'', ''d'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''c'', ''d'', ''o'', ''p'', ''u'', ''v'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''o'', ''p'', ''u'', ''v'')
			)
			AND StartLoadingDate = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/StartLoadingDate'' AS Location, 
	''Start Loading Date is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''c'', ''d'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''c'', ''d'', ''o'', ''p'', ''u'', ''v'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''o'', ''p'', ''u'', ''v'')
				)
				AND StartLoadingDate <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/StartLoadingDate'' AS Location, 		
''Start Loading Date cannot be in the past'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''c'', ''d'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''c'', ''d'', ''o'', ''p'', ''u'', ''v'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''o'', ''p'', ''u'', ''v'')
			)
		AND StartLoadingDate <> ''''
		AND StartLoadingDate < @EffectiveValidationDate
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/StartLoadingDate'' AS Location, 
	''Start Loading Date should be earlier than End Loading Date'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''c'', ''d'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''c'', ''d'', ''o'', ''p'', ''u'', ''v'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''o'', ''p'', ''u'', ''v'')
			)
		AND StartLoadingDate <> ''''
		AND EndLoadingDate <> ''''
		AND StartLoadingDate >= EndLoadingDate
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/EndLoadingDate'' AS Location, 
	''End Loading Date is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''c'', ''d'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''c'', ''d'', ''o'', ''p'', ''u'', ''v'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''o'', ''p'', ''u'', ''v'')
			)
			AND EndLoadingDate = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/EndLoadingDate'' AS Location, 
	''End Loading Date is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''c'', ''d'')
				OR DeclarationType2 = ''zP'' 
				AND	DeclarationType3 IN (''c'', ''d'', ''o'', ''p'', ''u'', ''v'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''o'', ''p'', ''u'', ''v'')
				)
				AND EndLoadingDate <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/EndLoadingDate'' AS Location,
	''End Loading Date cannot be more than 7 days in the future'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			(	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''c'', ''d'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''c'', ''d'', ''o'', ''p'', ''u'', ''v'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''o'', ''p'', ''u'', ''v'')
			)
			AND EndLoadingDate <> ''''
			AND EndLoadingDate > dateadd(day, 7, @EffectiveValidationDate)								
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterIDType'' AS Location, 
	''Exporter ID Type is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterIDType'' AS Location, 
	''Exporter ID Type is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				)
			AND ExporterIDType <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterIDType'' AS Location, 
	''Only "0", "2" and "4" values are allowed to be specified for Exporter ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType <> ''''
			AND ExporterIDType NOT IN (''0'',''2'',''4'')
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterIDType'' AS Location, 
	''"2" or "4" should be specified as the value for Exporter ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			and DD.SpecialCircumstances = ''E''
			AND DD.ExporterIDType <> ''''
			AND DD.ExporterIDType NOT IN (''2'',''4'')
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterIDType'' AS Location, 
	''"0" or "2" should be specified as the value for Exporter ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1__2''
		AND (
			DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''s'', ''t'', ''u'', ''v'')
			OR DD.DeclarationType2 IN (''nB'', ''nK'',''nN'') 
			AND	DD.DeclarationType3 = ''d''
			)
		AND DD.ExporterIDType <> ''''
		AND DD.ExporterIDType NOT IN (''0'',''2'')
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterIDType'' AS Location, 
	''"2" should be specified as the value for Exporter ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''1___''
		AND (
				PartiesStatus LIKE ''1__2''
				AND 
				(
				DeclarationType2 = ''zP'' 
				AND	DD.DeclarationType3 IN (''a'', ''b'', ''c'', ''d'', ''e'', ''f'', ''m'', ''n'', ''o'', ''p'', ''q'', ''r'')
				OR DD.DeclarationType2 IN (''nB'', ''nK'',''nN'')  
				AND	DD.DeclarationType3 IN (''b'', ''c'')
				)
			OR EXISTS
				(
				SELECT GI2.PartnerID
				FROM txdDEAESGoodsItem GI2	
				WHERE   GI2.PartnerID = @PartnerID 
				AND GI2.DeclarationDataGUID = @DeclarationDataGUID
				AND GI2.CommodityCode IN 
					(
					SELECT Code 
					FROM tmgGlobalCodes 
					WHERE FieldName=@CODELIST_PREFIX+''-I0139''
					)
				)
			OR EXISTS
				(
				SELECT GID3.PartnerID
				FROM txdDEAESDeclarationData DD4
				JOIN txdDEAESGoodsItemDocument GID3
				ON DD4.PartnerID=GID3.PartnerID  AND DD4.DeclarationDataGUID=GID3.DeclarationDataGUID		
				WHERE   DD4.PartnerID = DD.PartnerID 
				AND DD4.DeclarationDataGUID = DD.DeclarationDataGUID
				AND 
					(
					GID3.Type = ''3LLD''
					AND GID3.Qualifier = ''NB''
					AND GID3.IssueDate <> ''''
					)
				)
			OR EXISTS
				(
				SELECT GID2.PartnerID
				FROM txdDEAESDeclarationData DD3
				JOIN txdDEAESGoodsItemDocument GID2
				ON DD3.PartnerID=GID2.PartnerID  AND DD3.DeclarationDataGUID=GID2.DeclarationDataGUID		
				WHERE   DD3.PartnerID = DD.PartnerID 
				AND DD3.DeclarationDataGUID = DD.DeclarationDataGUID
				AND 
					(
					GID2.Type = ''3LLA''
					AND	GID2.Qualifier IN (''82'', ''231'')
					OR GID2.Type = ''3LLB''
					AND	GID2.Qualifier IN (''81E'', ''81K'', ''81S'', ''231'')
					OR GID2.Type = ''3LLC''
					AND	GID2.Qualifier IN (''81E'', ''81S'', ''231'')
					OR GID2.Type = ''C064''
					AND GID2.Qualifier = ''DE''
					OR GID2.Type = ''E990''
					AND GID2.Qualifier IN (''DEE'', ''DES'')
					OR GID2.Type = ''C052''
					AND	GID2.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
					OR GID2.Type = ''C070''
					AND GID2.Qualifier = ''LY''
					OR GID2.Type = ''X002''
					AND	GID2.Qualifier IN (''DEE'', ''DES'', ''231'')
					OR GID2.Type = ''E020''
					AND	GID2.Qualifier IN (''FWE'', ''FWS'', ''231'')
					OR GID2.Type = ''X002''
					AND	GID2.Qualifier IN (''E01'', ''E02'', ''E03'', ''E04'', ''E05'', ''E06'', ''A09'', ''A10'', ''A12'', ''A13'', ''A14'', ''A16'', ''A17'')
					OR GID2.Type = ''3LLC''
					AND	GID2.Qualifier IN (''A18'', ''A19'', ''A20'', ''A21'', ''A22'', ''A23'', ''A24'', ''A25'', ''A26'', ''A27'')
					)
				)
			)
		AND DD.ExporterIDType <> ''''
		AND DD.ExporterIDType <> ''2''
		)
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterID'' AS Location, 
	''Exporter ID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				AND ExporterIDType IN (''2'', ''4'')
				)
			AND ExporterIDType <> ''''
			AND ExporterID <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterID'' AS Location, 
	''Exporter ID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType IN (''2'', ''4'')
			AND ExporterID = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterID'' AS Location, 
	''Exporter ID and Declarant ID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''1___''
		AND ExporterID <> ''''
		AND ExporterID = DeclarantID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterBranch'' AS Location, 
	''Exporter Branch is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				AND ExporterIDType = ''2''
				)
			AND ExporterIDType <> ''''
			AND ExporterBranch <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterName'' AS Location, 
	''Exporter Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				AND ExporterIDType = ''0''
				)
			AND ExporterIDType <> ''''
			AND ExporterName <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterName'' AS Location, 
	''Exporter Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType = ''0''
			AND ExporterName = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterAddress'' AS Location, 
	''Exporter Address is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				AND ExporterIDType = ''0''
				)
			AND ExporterIDType <> ''''
			AND ExporterAddress <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterAddress'' AS Location, 
	''Exporter Address is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType = ''0''
			AND ExporterAddress = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterCity'' AS Location, 
	''Exporter City is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				AND ExporterIDType = ''0''
				)
			AND ExporterIDType <> ''''
			AND ExporterCity <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterCity'' AS Location, 
	''Exporter City is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType = ''0''
			AND ExporterCity = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterPostCode'' AS Location, 
	''Exporter Post Code is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				AND ExporterIDType = ''0''
				)
			AND ExporterIDType <> ''''
			AND ExporterPostCode <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterPostCode'' AS Location, 
	''Exporter Post Code is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType = ''0''
			AND ExporterPostCode = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterPostCode'' AS Location, 
	''Format for Exporter Post Code should be 5 digits'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType = ''0''
			AND ExporterCountry = ''DE''
			AND ExporterPostCode <> ''''
			AND (
				LEN (ExporterPostCode) <> 5
				OR ISNUMERIC (ExporterPostCode) = 0
				)
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterCountry'' AS Location, 
	''Exporter Country is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				AND ExporterIDType = ''0''
				)
			AND ExporterIDType <> ''''
			AND ExporterCountry <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterCountry'' AS Location, 
	''Exporter Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1___''
			AND ExporterIDType = ''0''
			AND ExporterCountry = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterCountry'' AS Location, 
	''Not valid value for Exporter Country'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE'' 
			AND	PartiesStatus LIKE ''1__2''
			AND ExporterIDType = ''0''
			AND ExporterCountry <> ''''
			AND ExporterCountry NOT IN
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-C0010''
				)
        )
			
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactPosition'' AS Location, 
	''Exporter Contact Position is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				)
			AND ExporterIDType <> ''''
			AND ExporterContactPosition <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactName'' AS Location, 
	''Exporter Contact Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				)
			AND ExporterIDType <> ''''
			AND ExporterContactName <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactTel'' AS Location, 
	''Exporter Contact Tel is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				)
			AND ExporterIDType <> ''''
			AND ExporterContactTel <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactFax'' AS Location, 
	''Exporter Contact Fax is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				)
			AND ExporterIDType <> ''''
			AND ExporterContactFax <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactEmail'' AS Location, 
	''Exporter Contact Email is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			NOT	(	
				DeclarationType2 <> ''AE'' 
				AND	PartiesStatus LIKE ''1___''
				)
			AND ExporterIDType <> ''''
			AND ExporterContactEmail <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactName'' AS Location, 
	''Exporter Contact Name should be specified'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''1___''
		AND ExporterIDType <> ''''
		AND
			(
			ExporterContactPosition <> ''''
			OR ExporterContactTel <> ''''
			OR ExporterContactFax <> ''''
			OR ExporterContactEmail <> ''''
			)
		AND ExporterContactName = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactTel'' AS Location, 
	''Exporter Contact Tel should be specified'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''1___''
		AND ExporterIDType <> ''''
		AND
			(
			ExporterContactPosition <> ''''
			OR ExporterContactName <> ''''
			OR ExporterContactFax <> ''''
			OR ExporterContactEmail <> ''''
			)
		AND ExporterContactTel = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ExporterContactTel'' AS Location, 
	''Exporter ID Type should be specified when any other information for Exporter is given'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			ExporterID <> ''''
			OR ExporterBranch <>''''
			OR ExporterName <> ''''
			OR ExporterAddress <> ''''
			OR ExporterCity <> ''''
			OR ExporterPostCode <> ''''
			OR ExporterCountry <> ''''
			OR ExporterContactPosition <> ''''
			OR ExporterContactName <> ''''
			OR ExporterContactTel <>''''
			OR ExporterContactFax <> ''''
			OR ExporterContactEmail <> ''''
			)
		AND ExporterIDType = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantIDType'' AS Location, 
	''Declarant ID Type is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			DeclarationType2 <> ''AE''
			OR DeclarationType2 = ''AE''
			AND	PartiesStatus LIKE ''_0__''
        )
		AND DeclarantIDType = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantIDType'' AS Location, 
	''Declarant ID Type is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		AND DeclarantIDType <> ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantIDType'' AS Location, 
	''Declarant ID Type should be specified when any other information for Declarant is given'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND DeclarantID + DeclarantBranch + DeclarantName + DeclarantAddress + DeclarantCity + DeclarantPostCode + DeclarantCountry + DeclarantContactPosition + DeclarantContactName + DeclarantContactTel + DeclarantContactFax + DeclarantContactEmail <> ''''
		AND DeclarantIDType = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantIDType'' AS Location, 
	''Only "0" and "2" values are allowed to be specified for Declarant ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
			( 
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
		AND DeclarantIDType <> ''''
		AND DeclarantIDType NOT IN (''0'',''2'')
       
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantIDType'' AS Location, 
	''"2" should be specified as the value for Declarant ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
			( 
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
    AND ( 
			DD.SpecialCircumstances = ''E''
		OR (
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''e'', ''f'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			OR DeclarationType2 = ''mS'' 
			AND	DeclarationType3 = ''a''
			)
			AND PartiesStatus LIKE ''_00_'' 
		OR 	
			DeclarationType2 = ''AE''
			AND	PartiesStatus NOT LIKE ''_1__''
		OR	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''k'', ''l'')
		OR (
			DeclarationType2 = ''zP''
			AND DeclarationType3 IN (''a'', ''b'', ''c'', ''d'', ''e'', ''f'', ''m'', ''n'', ''o'', ''p'', ''q'', ''r'')
			OR DeclarationType2 IN (''nB'', ''nK'', ''nN'')
			AND DeclarationType3 IN (''b'', ''c'')
			)
			AND	PartiesStatus LIKE ''___1''
		OR	
			DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')	
		OR 
			DD.PartiesStatus LIKE ''0___''
			AND EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESGoodsItem GI2	
			WHERE   GI2.PartnerID = @PartnerID 
			AND GI2.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.CommodityCode IN 
				(
				SELECT Code 
				FROM tmgGlobalCodes 
				WHERE FieldName=@CODELIST_PREFIX+''-I0139''
				)
			)
		OR 
			DD.PartiesStatus LIKE ''0___''
			AND EXISTS
			(
			SELECT GID2.PartnerID
			FROM txdDEAESGoodsItemDocument GID2	
			WHERE   GID2.PartnerID = @PartnerID 
			AND GID2.DeclarationDataGUID = @DeclarationDataGUID
			AND 
				(
				GID2.Type = ''3LLA''
				AND	GID2.Qualifier IN (''82'', ''231'')
				OR GID2.Type = ''3LLB''
				AND	GID2.Qualifier IN (''81E'', ''81K'', ''81S'', ''231'')
				OR GID2.Type = ''3LLC''
				AND	GID2.Qualifier IN (''81E'', ''81S'', ''231'')
				OR GID2.Type = ''C064''
				AND	GID2.Qualifier = ''DE''
				OR GID2.Type = ''E990''
				AND GID2.Qualifier IN (''DEE'', ''DES'')
				OR GID2.Type = ''C052''
				AND	GID2.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
				OR GID2.Type = ''C070''
				AND GID2.Qualifier = ''LY''
				OR GID2.Type = ''X002''
				AND	GID2.Qualifier IN (''DEE'', ''DES'', ''231'')
				OR GID2.Type = ''E020''
				AND	GID2.Qualifier IN (''FWE'', ''FWS'', ''231'')
				OR GID2.Type = ''C068''
				AND GID2.Qualifier IN (''E01'', ''E02'', ''E03'', ''E04'', ''E05'', ''E06'')
				OR GID2.Type = ''X002''
				AND	GID2.Qualifier IN (''E01'', ''E02'', ''E03'', ''E04'', ''E05'', ''E06'', ''A09'', ''A10'', ''A12'', ''A13'', ''A14'', ''A16'', ''A17'')
				OR GID2.Type = ''3LLC''
				AND	GID2.Qualifier IN (''A18'', ''A19'', ''A20'', ''A21'', ''A22'', ''A23'', ''A24'', ''A25'', ''A26'', ''A27'')
				)
			)
        )
		AND DD.DeclarantIDType <> ''''
		AND DD.DeclarantIDType <> ''2''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantID'' AS Location, 
	''Declarant ID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		OR DeclarantIDType <> ''2''
        )
		AND DeclarantIDType <> ''''
		AND DeclarantID <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantID'' AS Location, 
	''Declarant ID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		NOT(
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
		AND DeclarantIDType = ''2''
		AND DeclarantID = ''''
        )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantID'' AS Location, 
''The values of DeclarantID in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND	DD.PartiesStatus NOT LIKE ''_1__''
		AND DD.DeclarantIDType <> ''''
		AND DD.DeclarantID <> DD1.DeclarantID								

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantBranch'' AS Location, 
	''Declarant Branch is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		OR DeclarantIDType <> ''2''
		)
		AND DeclarantIDType <> ''''
		AND DeclarantBranch <> ''''

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantBranch'' AS Location, 
''Declarant Branch is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND	DD.PartiesStatus NOT LIKE ''_1__''
		AND DD.DeclarantIDType <> ''''
		AND DD1.DeclarantBranch <> ''''
		AND DD1.DeclarantBranch <> ''0000''
		AND DD.DeclarantBranch = ''''
			
INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantBranch'' AS Location, 
''The values of DeclarantBranch in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND	DD.PartiesStatus NOT LIKE ''_1__''
		AND DD.DeclarantIDType <> ''''
		AND DD.DeclarantBranch <> DD1.DeclarantBranch								

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantName'' AS Location, 
	''Declarant Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		OR DeclarantIDType <> ''0''
		)
		AND DeclarantIDType <> ''''
		AND DeclarantName <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantName'' AS Location, 
	''Declarant Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
			(
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
		AND DeclarantIDType = ''0''
		AND DeclarantName = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantAddress'' AS Location, 
	''Declarant Address is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		OR DeclarantIDType <> ''0''
		)
		AND DeclarantIDType <> ''''
		AND DeclarantAddress <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantAddress'' AS Location, 
	''Declarant Address is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
			(
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
		AND DeclarantIDType = ''0''
		AND DeclarantAddress = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantCity'' AS Location, 
	''Declarant City is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		OR DeclarantIDType <> ''0''
		)
		AND DeclarantIDType <> ''''
		AND DeclarantCity <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantCity'' AS Location, 
	''Declarant City is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
			(
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
		AND DeclarantIDType = ''0''
		AND DeclarantCity = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantPostCode'' AS Location, 
	''Declarant Post Code is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		OR DeclarantIDType <> ''0''
		)
		AND DeclarantIDType <> ''''
		AND DeclarantPostCode <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantPostCode'' AS Location, 
	''Declarant Post Code is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
			(
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
		AND DeclarantIDType = ''0''
		AND DeclarantPostCode = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantPostCode'' AS Location, 
	''Format for Declarant Post Code should be 5 digits'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	NOT
				(
				DeclarationType2 = ''AE'' 
				AND	PartiesStatus LIKE ''_1__''
				)
			AND DeclarantIDType = ''0''
			AND DeclarantCountry = ''DE''
			AND DeclarantPostCode <> ''''
			AND (
				LEN (DeclarantPostCode) <> 5
				OR ISNUMERIC (DeclarantPostCode) = 0
				)
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantCountry'' AS Location, 
	''Declarant Country is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND	PartiesStatus LIKE ''_1__''
		OR DeclarantIDType <> ''0''
		)
		AND DeclarantIDType <> ''''
		AND DeclarantCountry <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantCountry'' AS Location, 
	''Declarant Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
			(
			DeclarationType2 = ''AE'' 
			AND	PartiesStatus LIKE ''_1__''
			)
		AND DeclarantIDType = ''0''
		AND DeclarantCountry = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactPosition'' AS Location, 
	''Declarant Contact Position is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND DeclarantIDType <> ''''
		AND DeclarantContactPosition <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactName'' AS Location, 
	''Declarant Contact Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND DeclarantIDType <> ''''
		AND DeclarantContactName <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactName'' AS Location, 
	''Declarant Contact Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''_0__''
		AND DeclarantIDType <> ''''
		AND DeclarantContactName = ''''
		)
		
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactTel'' AS Location, 
	''Declarant Contact Tel is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND DeclarantIDType <> ''''
		AND DeclarantContactTel <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactTel'' AS Location, 
	''Declarant Contact Tel is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''_0__''
		AND DeclarantIDType <> ''''
		AND DeclarantContactTel = ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactFax'' AS Location, 
	''Declarant Contact Fax is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		AND DeclarantIDType <> ''''		
		AND DeclarantContactFax <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactEmail'' AS Location, 
	''Declarant Contact Email is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE'' 
		AND DeclarantIDType <> ''''
		AND DeclarantContactEmail <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactName'' AS Location, 
	''Declarant Contact Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
		( 	
		DeclarationType2 <> ''AE'' 
		AND DeclarantIDType <> ''''
		AND	DeclarantContactPosition + DeclarantContactTel + DeclarantContactFax + DeclarantContactEmail <> ''''
		AND DeclarantContactName = ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/DeclarantContactTel'' AS Location, 
	''Declarant Contact Tel is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
		( 	
		DeclarationType2 <> ''AE'' 
		AND DeclarantIDType <> ''''
		AND	DeclarantContactPosition + DeclarantContactName + DeclarantContactFax + DeclarantContactEmail <> ''''
		AND DeclarantContactTel = ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentIDType'' AS Location, 
	''Agent ID Type is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			PartiesStatus LIKE ''_1__''
			AND AgentIDType = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentIDType'' AS Location, 
	''Agent ID Type is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			PartiesStatus NOT LIKE ''_1__''
			AND AgentIDType <> ''''
         )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentIDType'' AS Location, 
	''Only "0" and "2" values are allowed to be specified for Agent ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
		(
		PartiesStatus LIKE ''_1__''
		AND AgentIDType <> ''''
		AND AgentIDType NOT IN (''0'',''2'')
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentIDType'' AS Location, 
	''"2" should be specified as the value for Agent ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND PartiesStatus LIKE ''_1__''
		AND 
		(
		DD.SpecialCircumstances = ''E''
		OR (
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''e'', ''f'', ''k'', ''l'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			OR DeclarationType2 = ''AE'' 
			)
        )
		AND AgentIDType <> ''''
		AND AgentIDType <> ''2''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentID'' AS Location, 
	''Agent ID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''_1__''
		OR AgentIDType <> ''2''
		)
		AND AgentIDType <> ''''
		AND AgentID <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentID'' AS Location, 
	''Agent ID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			PartiesStatus LIKE ''_1__''
			AND AgentIDType = ''2''
			AND AgentID = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentID'' AS Location, 
	''Agent ID and Declarant ID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			PartiesStatus LIKE ''_1__''
			AND AgentIDType = ''2''
			AND AgentID = DeclarantID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentID'' AS Location, 
	''Agent ID and SubContractor ID must be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			(
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''e'', ''f'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			)
			
			and PartiesStatus LIKE ''_11_''
			AND AgentIDType = ''2''
			AND SubContractorIDType = ''2''
			AND AgentID <> ''''
			AND AgentID <> SubContractorID
        )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentID'' AS Location, 
''The values of AgentID in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND DD.PartiesStatus LIKE ''_1__''
		AND DD.AgentIDType <> ''''
		AND DD.AgentID <> DD1.AgentID								

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentBranch'' AS Location, 
	''Agent Branch is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''_1__''
		OR AgentIDType <> ''2''
		)
		AND AgentIDType <> ''''
		AND AgentBranch <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentBranch'' AS Location, 
	''Agent Branch is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			AgentIDType = ''2''
			AND
				(
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
				)
			AND PartiesStatus LIKE ''_11_''
			AND SubContractorBranch = ''0000''
			AND AgentBranch = ''''
        )

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentBranch'' AS Location, 
''Agent Branch is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
		WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND DD.DeclarationType2 = ''AE'' 
		AND	DD.PartiesStatus LIKE ''_1__''
		AND DD.AgentIDType = ''2''
		AND DD1.AgentBranch <> ''''
		AND DD1.AgentBranch <> ''0000''
		AND DD.AgentBranch = ''''
			
INSERT INTO #ValidationWarning


SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentBranch'' AS Location, 
	''Agent Branch and SubContractor Branch must be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DeclarationType2 = ''AM'' 
		AND	DeclarationType3 IN (''e'', ''f'')
		OR DeclarationType2 = ''wP'' 
		AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
		)
		AND PartiesStatus LIKE ''_11_''
		AND AgentIDType = ''2''
		AND SubcontractorIDType = ''2''
		AND AgentBranch <> SubContractorBranch

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentName'' AS Location, 
	''Agent Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		PartiesStatus NOT LIKE ''_1__''
		OR AgentIDType <> ''0''
        )
		AND AgentIDType <> ''''
		AND AgentName <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentName'' AS Location, 
	''Agent Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		PartiesStatus LIKE ''_1__''
		AND AgentIDType = ''0''
		AND AgentName = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentAddress'' AS Location, 
	''Agent Address is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		PartiesStatus NOT LIKE ''_1__''
		OR AgentIDType <> ''0''
        )
		AND AgentIDType <> ''''
		AND AgentAddress <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentAddress'' AS Location, 
	''Agent Address is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		PartiesStatus LIKE ''_1__''
		AND AgentIDType = ''0''
		AND AgentAddress = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentCity'' AS Location, 
	''Agent City is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		PartiesStatus NOT LIKE ''_1__''
		OR AgentIDType <> ''0''
        )
		AND AgentIDType <> ''''
		AND AgentCity <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentCity'' AS Location, 
	''Agent City is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		PartiesStatus LIKE ''_1__''
		AND AgentIDType = ''0''
		AND AgentCity = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentPostCode'' AS Location, 
	''Agent Post Code is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		PartiesStatus NOT LIKE ''_1__''
		OR AgentIDType <> ''0''
        )
		AND AgentIDType <> ''''
		AND AgentPostCode <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentPostCode'' AS Location, 
	''Agent Post Code is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		PartiesStatus LIKE ''_1__''
		AND AgentIDType = ''0''
		AND AgentPostCode = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentPostCode'' AS Location, 
	''Format for Agent Post Code should be 5 digits'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			PartiesStatus LIKE ''_1__''
			AND AgentIDType = ''0''
			AND AgentCountry = ''DE''
			AND (
				LEN (AgentPostCode) <> 5
				OR ISNUMERIC (AgentPostCode) = 0
				)
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentCountry'' AS Location, 
	''Agent Country is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		PartiesStatus NOT LIKE ''_1__''
		OR AgentIDType <> ''0''
        )
		AND AgentIDType <> ''''
		AND AgentCountry <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentCountry'' AS Location, 
	''Agent Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		PartiesStatus LIKE ''_1__''
		AND AgentIDType = ''0''
		AND AgentCountry = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactPosition'' AS Location, 
	''Agent Contact Position is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''_1__''
		OR DeclarationType2 = ''AE'' 
		)
		AND AgentIDType <> ''''
		AND AgentContactPosition <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactName'' AS Location, 
	''Agent Contact Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''_1__''
		OR DeclarationType2 = ''AE'' 
		)
		AND AgentIDType <> ''''
		AND AgentContactName <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactName'' AS Location, 
	''Agent Contact Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		PartiesStatus LIKE ''_1__''
		AND DeclarationType2 <> ''AE'' 
		)
		AND AgentIDType <> ''''
		AND AgentContactName = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactTel'' AS Location, 
	''Agent Contact Tel is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''_1__''
		OR DeclarationType2 = ''AE'' 
		)
		AND AgentIDType <> ''''
		AND AgentContactTel <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactTel'' AS Location, 
	''Agent Contact Tel is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		PartiesStatus LIKE ''_1__''
		AND DeclarationType2 <> ''AE'' 
		)
		AND AgentIDType <> ''''
		AND AgentContactTel = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactFax'' AS Location, 
	''Agent Contact Fax is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''_1__''
		OR DeclarationType2 = ''AE'' 
		)
		AND AgentIDType <> ''''
		AND AgentContactFax <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactEmail'' AS Location, 
	''Agent Contact Email is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''_1__''
		OR DeclarationType2 = ''AE'' 
		)
		AND AgentIDType <> ''''
		AND AgentContactEmail <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactName'' AS Location, 
	''Agent ID Type is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
		( 	
		DeclarationType2 <> ''AE'' 
		AND PartiesStatus LIKE ''_1__''
		AND AgentIDType <> ''''
		AND	AgentContactPosition + AgentContactTel + AgentContactFax + AgentContactEmail <> ''''
		AND AgentContactName = ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentContactTel'' AS Location, 
	''Agent ID Type is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
		( 	
		DeclarationType2 <> ''AE'' 
		AND PartiesStatus LIKE ''_1__''
		AND AgentIDType <> ''''
		AND	AgentContactPosition + AgentContactName + AgentContactFax + AgentContactEmail <> ''''
		AND AgentContactTel = ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/AgentIDType'' AS Location, 
	''Declarant ID Type should be specified when any other information for Agent is given'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND	
		(
		AgentID + AgentBranch + AgentName + AgentAddress + AgentCity + AgentPostCode + AgentCountry + AgentContactPosition + AgentContactName + AgentContactTel + AgentContactFax + AgentContactEmail <> ''''
		AND AgentIDType = ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorIDType'' AS Location, 
	''SubContractor ID Type is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
			DeclarationType2 <> ''AE''
			AND PartiesStatus LIKE ''__1_''
			AND SubContractorIDType = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorIDType'' AS Location, 
	''SubContractor ID Type is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		)
		AND SubContractorIDType <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorIDType'' AS Location, 
	''Only "0" and "2" values are allowed to be specified for SubContractor ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
		(
		DeclarationType2 <> ''AE''
		AND PartiesStatus LIKE ''__1_''
		AND SubContractorIDType <> ''''
		AND SubContractorIDType NOT IN (''0'',''2'')
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorIDType'' AS Location, 
	''"2" should be specified as the value for SubContractor ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		PartiesStatus LIKE ''__1_''
		AND (
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''e'', ''f'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			)
		)
		AND SubContractorIDType <> ''''
		AND SubContractorIDType <> ''2''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorID'' AS Location, 
	''SubContractor ID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		OR SubContractorIDType <> ''2''
		)
		AND SubContractorIDType <> ''''
		AND SubContractorID <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorID'' AS Location, 
	''SubContractor ID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE''
			AND PartiesStatus LIKE ''__1_''
			AND SubContractorIDType = ''2''
			AND SubContractorID = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorID'' AS Location, 
	''SubContractor ID and Exporter ID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE''
			AND PartiesStatus LIKE ''1_1_''
			AND SubContractorIDType = ''2''
			AND SubContractorID = ExporterID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorID'' AS Location, 
	''SubContractor ID and Declarant ID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE''
			AND PartiesStatus LIKE ''0_1_''
			AND SubContractorIDType = ''2''
			AND SubContractorID = DeclarantID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorID'' AS Location, 
	''SubContractor ID and Agent ID should be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE''
			AND PartiesStatus LIKE ''_11_''
			AND SubContractorIDType = ''2''
			AND 
			(
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''e'', ''f'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			)
			AND SubContractorID <> AgentID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorBranch'' AS Location, 
	''SubContractor Branch is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		OR SubContractorIDType <> ''2''
		)
		AND SubContractorIDType <> ''''
		AND SubContractorBranch <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorBranch'' AS Location, 
	''SubContractor Branch is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			SubContractorIDType = ''2''
			AND
				(
				DeclarationType2 = ''AM'' 
				AND	DeclarationType3 IN (''e'', ''f'')
				OR DeclarationType2 = ''wP'' 
				AND	DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
				)
			AND PartiesStatus LIKE ''_11_''
			AND AgentBranch <> ''0000''
			AND SubContractorBranch = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorName'' AS Location, 
	''SubContractor Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		OR SubContractorIDType <> ''0''
        )
		AND SubContractorIDType <> ''''
		AND SubContractorName <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorName'' AS Location, 
	''SubContractor Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DeclarationType2 <> ''AE''
		AND PartiesStatus LIKE ''__1_''
		AND SubContractorIDType = ''0''
		AND SubContractorName = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorAddress'' AS Location, 
	''SubContractor Address is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		OR SubContractorIDType <> ''0''
        )
		AND SubContractorIDType <> ''''
		AND SubContractorAddress <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorAddress'' AS Location, 
	''SubContractor Address is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DeclarationType2 <> ''AE''
		AND PartiesStatus LIKE ''__1_''
		AND SubContractorIDType = ''0''
		AND SubContractorAddress = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorCity'' AS Location, 
	''SubContractor City is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		OR SubContractorIDType <> ''0''
        )
		AND SubContractorIDType <> ''''
		AND SubContractorCity <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorCity'' AS Location, 
	''SubContractor City is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DeclarationType2 <> ''AE''
		AND PartiesStatus LIKE ''__1_''
		AND SubContractorIDType = ''0''
		AND SubContractorCity = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorPostCode'' AS Location, 
	''SubContractor Post Code is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		OR SubContractorIDType <> ''0''
        )
		AND SubContractorIDType <> ''''
		AND SubContractorPostCode <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorPostCode'' AS Location, 
	''SubContractor Post Code is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DeclarationType2 <> ''AE''
		AND PartiesStatus LIKE ''__1_''
		AND SubContractorIDType = ''0''
		AND SubContractorPostCode = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorPostCode'' AS Location, 
	''Format for Agent Post Code should be 5 digits'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			DeclarationType2 <> ''AE''
			AND PartiesStatus LIKE ''__1_''
			AND SubContractorIDType = ''0''
			AND SubContractorCountry = ''DE''
			AND (
				LEN (SubContractorPostCode) <> 5
				OR ISNUMERIC (SubContractorPostCode) = 0
				)
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorCountry'' AS Location, 
	''SubContractor Country is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 	
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		OR SubContractorIDType <> ''0''
        )
		AND SubContractorIDType <> ''''
		AND SubContractorCountry <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorCountry'' AS Location, 
	''SubContractor Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
		DeclarationType2 <> ''AE''
		AND PartiesStatus LIKE ''__1_''
		AND SubContractorIDType = ''0''
		AND SubContractorCountry = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorContactPosition'' AS Location, 
	''SubContractor Contact Position is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		)
		AND SubContractorIDType <> ''''
		AND SubContractorContactPosition <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorContactName'' AS Location, 
	''SubContractor Contact Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		)
		AND SubContractorIDType <> ''''
		AND SubContractorContactName <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorContactTel'' AS Location, 
	''SubContractor Contact Tel is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		)
		AND SubContractorIDType <> ''''
		AND SubContractorContactTel <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorContactFax'' AS Location, 
	''SubContractor Contact Fax is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		)
		AND SubContractorIDType <> ''''
		AND SubContractorContactFax <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorContactEmail'' AS Location, 
	''SubContractor Contact Email is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DeclarationType2 = ''AE''
		OR PartiesStatus NOT LIKE ''__1_''
		)
		AND SubContractorIDType <> ''''
		AND SubContractorContactEmail <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorContactName'' AS Location, 
	''SubContractor Contact Name should be specified'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''__1_''
		AND
			(
			SubContractorContactPosition <> ''''
			OR SubContractorContactTel <> ''''
			OR SubContractorContactFax <> ''''
			OR SubContractorContactEmail <> ''''
			)
		AND SubContractorIDType <> ''''
		AND SubContractorContactName = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorContactTel'' AS Location, 
	''SubContractor Contact Tel should be specified'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DeclarationType2 <> ''AE'' 
		AND	PartiesStatus LIKE ''__1_''
		AND
			(
			SubContractorContactPosition <> ''''
			OR SubContractorContactName <> ''''
			OR SubContractorContactFax <> ''''
			OR SubContractorContactEmail <> ''''
			)
		AND SubContractorIDType <> ''''
		AND SubContractorContactTel = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/SubContractorIDType'' AS Location, 
	''SubContractor ID Type should be specified when any other information for SubContractor is given'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND	
		(
		SubContractorID + SubContractorBranch + SubContractorName + SubContractorAddress + SubContractorCity + SubContractorPostCode + SubContractorCountry + SubContractorContactPosition + SubContractorContactName + SubContractorContactTel + SubContractorContactFax + SubContractorContactEmail <> ''''
		AND SubContractorIDType = ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeIDType'' AS Location, 
	''Consignee information should be specified either on Header level or on Goods Items level'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationType2 <> ''AE'' 
	AND DD.ConsigneeIDType = ''''
	AND EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID=GI2.PartnerID  AND DD2.DeclarationDataGUID=GI2.DeclarationDataGUID		
			WHERE   DD2.PartnerID = DD.PartnerID 
			AND DD2.DeclarationDataGUID = DD.DeclarationDataGUID
			AND GI2.ConsigneeIDType = ''''
			)
	AND 
		(
			DD.DestinationCountry IN 
			(
			SELECT Code 
			FROM tmgGlobalCodes 
			WHERE FieldName=@CODELIST_PREFIX+''-I0810''
			)
		OR 
			(
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'') 
			OR DD.DeclarationType2 = ''nA'' 
			OR DD.DeclarationType2 = ''nB''
			OR DD.DeclarationType2 = ''nK''
			OR DD.DeclarationType2 = ''nN''
			OR DD.DeclarationType2 = ''mS''
			)
		OR
			(
			DD.PartiesStatus LIKE ''_0__'' OR DD.PartiesStatus LIKE ''__0_''
			)
		OR EXISTS 
			(
			SELECT GID2.PartnerID
			FROM txdDEAESGoodsItemDocument GID2
			WHERE GID2.PartnerID=DD.PartnerID AND GID2.DeclarationDataGUID=DD.DeclarationDataGUID
			AND 
				(
					GID2.Type = ''3LLA''
					AND	GID2.Qualifier IN (''82'', ''231'')
					OR GID2.Type = ''3LLB''
					AND	GID2.Qualifier IN (''81E'', ''81K'', ''81S'', ''231'')
					OR GID2.Type = ''3LLC''
					AND	GID2.Qualifier IN (''81E'', ''81S'', ''231'')
					OR GID2.Type = ''C064''
					AND	GID2.Qualifier = ''DE''
					OR GID2.Type = ''E990''
					AND GID2.Qualifier IN (''DEE'', ''DES'')
					OR GID2.Type = ''C052''
					AND	GID2.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
					OR GID2.Type = ''C070''
					AND	GID2.Qualifier = ''LY''
					OR GID2.Type = ''X002''
					AND	GID2.Qualifier IN (''DEE'', ''DES'', ''231'')
					OR GID2.Type = ''E020''
					AND	GID2.Qualifier IN (''FWE'', ''FWS'', ''231'')
					OR GID2.Type = ''C068''
					AND	GID2.Qualifier IN (''E01'', ''E02'', ''E03'', ''E04'', ''E05'', ''E06'')
					OR GID2.Type = ''X002''
					AND	GID2.Qualifier IN (''E01'', ''E02'', ''E03'', ''E04'', ''E05'', ''E06'', ''A09'', ''A10'', ''A12'', ''A13'', ''A14'', ''A16'', ''A17'')
					OR GID2.Type = ''3LLC''
					AND	GID2.Qualifier IN (''A18'', ''A19'', ''A20'', ''A21'', ''A22'', ''A23'', ''A24'', ''A25'', ''A26'', ''A27'')
				)
			)
		)
			
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeIDType'' AS Location, 
	''Consignee ID Type should be specified if any other information of Consignee is given'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DeclarationType2 <> ''AE'' 
	AND DD.ConsigneeID + DD.ConsigneeBranch + DD.ConsigneeName + DD.ConsigneeAddress + DD.ConsigneeCity + DD.ConsigneePostCode + DD.ConsigneeCountry <> ''''	
	AND DD.ConsigneeIDType = ''''
			
INSERT INTO #ValidationWarning

SELECT ''Goods Item [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeIDType'' AS Location, 
	''Consignee ID Type should be specified if any other information of Consignee is given'' AS Warning
FROM    txdDEAESDeclarationData DD  
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID                             
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationType2 <> ''AE'' 
	AND GI.ConsigneeID + GI.ConsigneeBranch + GI.ConsigneeName + GI.ConsigneeAddress + GI.ConsigneeCity + GI.ConsigneePostCode + GI.ConsigneeCountry <> ''''
		
	AND GI.ConsigneeIDType = ''''
			
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/Consignee, Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Consignee'' AS Location, 
	''Consignee information is not allowed to be specified'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
		DD.DeclarationType2 = ''AE'' 
		and
		(
	    GI.ConsigneeIDType <> ''''
			OR 
		DD.ConsigneeIDType <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/Consignee, Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Consignee'' AS Location,  
	''Consignee information should be specified either on Header level or on Goods Items level'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 <> ''AE''
		AND DD.ConsigneeIDType <> ''''
		AND GI.ConsigneeIDType <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeIDType'' AS Location, 
	''Only "0", "2" and "4" values are allowed to be specified for Consignee ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
		(
		DD.DeclarationType2 <> ''AE''
		AND DD.ConsigneeIDType <> ''''
		AND NOT EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESGoodsItem GI2	
			WHERE   GI2.PartnerID = @PartnerID 
			AND GI2.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.ConsigneeIDType <> ''''
			)
		AND DD.ConsigneeIDType NOT IN (''0'',''2'',''4'')
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeIDType'' AS Location, 
	''Only "0", "2" and "4" values are allowed to be specified for Consignee ID Type'' AS Warning
FROM    txdDEAESDeclarationData DD  
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID                             
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
		(
		DD.DeclarationType2 <> ''AE''
		AND DD.ConsigneeIDType = ''''
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneeIDType NOT IN (''0'',''2'',''4'')
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeID'' AS Location, 
	''Consignee ID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType NOT IN (''2'', ''4'')
		)
		AND DD.ConsigneeIDType <> ''''
		AND DD.ConsigneeID <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeID'' AS Location, 
	''Consignee ID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID=GI2.PartnerID  AND DD2.DeclarationDataGUID=GI2.DeclarationDataGUID		
			WHERE   DD2.PartnerID = DD.PartnerID 
			AND DD2.DeclarationDataGUID = DD.DeclarationDataGUID
			AND GI2.ConsigneeIDType <> ''''
			)
		)
		AND DD.ConsigneeIDType IN (''2'', ''4'')
		AND DD.ConsigneeID = ''''
		

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeBranch'' AS Location, 
	''Consignee Branch is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''2''
		)
		AND DD.ConsigneeIDType <> ''''
		AND DD.ConsigneeBranch <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeName'' AS Location, 
	''Consignee Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''0''
		)
		AND DD.ConsigneeIDType <> ''''
		AND DD.ConsigneeName <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeName'' AS Location, 
	''Consignee Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID=GI2.PartnerID  AND DD2.DeclarationDataGUID=GI2.DeclarationDataGUID		
			WHERE   DD2.PartnerID = DD.PartnerID 
			AND DD2.DeclarationDataGUID = DD.DeclarationDataGUID
			AND GI2.ConsigneeIDType <> ''''
			)
		)
		AND DD.ConsigneeIDType = ''0''
		AND DD.ConsigneeName = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeAddress'' AS Location, 
	''Consignee Address is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''0''
		)
		AND DD.ConsigneeIDType <> ''''
		AND DD.ConsigneeAddress <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeAddress'' AS Location, 
	''Consignee Address is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID=GI2.PartnerID  AND DD2.DeclarationDataGUID=GI2.DeclarationDataGUID		
			WHERE   DD2.PartnerID = DD.PartnerID 
			AND DD2.DeclarationDataGUID = DD.DeclarationDataGUID
			AND GI2.ConsigneeIDType <> ''''
			)
		)
		AND DD.ConsigneeIDType = ''0''
		AND DD.ConsigneeAddress = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeCity'' AS Location, 
	''Consignee City is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''0''
		)
		AND DD.ConsigneeIDType <> ''''
		AND DD.ConsigneeCity <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeCity'' AS Location, 
	''Consignee City is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID=GI2.PartnerID  AND DD2.DeclarationDataGUID=GI2.DeclarationDataGUID		
			WHERE   DD2.PartnerID = DD.PartnerID 
			AND DD2.DeclarationDataGUID = DD.DeclarationDataGUID
			AND GI2.ConsigneeIDType <> ''''
			)
		)
		AND DD.ConsigneeIDType = ''0''
		AND DD.ConsigneeCity = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneePostCode'' AS Location, 
	''Consignee Post Code is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''0''
		)
		AND DD.ConsigneeIDType <> ''''
		AND DD.ConsigneePostCode <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneePostCode'' AS Location, 
	''Consignee Post Code is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID=GI2.PartnerID  AND DD2.DeclarationDataGUID=GI2.DeclarationDataGUID		
			WHERE   DD2.PartnerID = DD.PartnerID 
			AND DD2.DeclarationDataGUID = DD.DeclarationDataGUID
			AND GI2.ConsigneeIDType <> ''''
			)
		)
		AND DD.ConsigneeIDType = ''0''
		AND DD.ConsigneePostCode = ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneePostCode'' AS Location, 
	''Format for Consignee Post Code should be 5 digits'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
		(	
		DD.DeclarationType2 <> ''AE'' 
		OR DD.ConsigneeIDType = ''0''
		)
		AND DD.ConsigneeCountry = ''DE''
		AND DD.ConsigneePostCode <> ''''
		AND (
			LEN (DD.ConsigneePostCode) <> 5
			OR ISNUMERIC (DD.ConsigneePostCode) = 0
			)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeCountry'' AS Location, 
	''Consignee Country is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''0''
		)
		AND DD.ConsigneeIDType <> ''''
		AND DD.ConsigneeCountry <> ''''

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ConsigneeCountry'' AS Location, 
	''Consignee Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR EXISTS
			(
			SELECT GI2.PartnerID
			FROM txdDEAESDeclarationData DD2
			JOIN txdDEAESGoodsItem GI2
			ON DD2.PartnerID=GI2.PartnerID  AND DD2.DeclarationDataGUID=GI2.DeclarationDataGUID		
			WHERE   DD2.PartnerID = DD.PartnerID 
			AND DD2.DeclarationDataGUID = DD.DeclarationDataGUID
			AND GI2.ConsigneeIDType <> ''''
			)
		)
		AND DD.ConsigneeIDType = ''0''
		AND DD.ConsigneeCountry = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeID'' AS Location, 
	''Consignee ID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		OR GI.ConsigneeIDType NOT IN (''2'', ''4'')
		)
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneeID <> ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeID'' AS Location, 
	''Consignee ID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		)
		AND GI.ConsigneeIDType IN (''2'', ''4'')
		AND GI.ConsigneeID = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeBranch'' AS Location, 
	''Consignee Branch is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		OR GI.ConsigneeIDType <> ''2''
		)
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneeBranch <> ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeName'' AS Location, 
	''Consignee Name is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		OR GI.ConsigneeIDType <> ''0''
		)
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneeName <> ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeName'' AS Location, 
	''Consignee Name is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		)
		AND GI.ConsigneeIDType = ''0''
		AND GI.ConsigneeName = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeAddress'' AS Location, 
	''Consignee Address is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		OR GI.ConsigneeIDType <> ''0''
		)
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneeAddress <> ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeAddress'' AS Location, 
	''Consignee Address is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		)
		AND GI.ConsigneeIDType = ''0''
		AND GI.ConsigneeAddress = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeCity'' AS Location, 
	''Consignee City is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		OR GI.ConsigneeIDType <> ''0''
		)
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneeCity <> ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeCity'' AS Location, 
	''Consignee City is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		)
		AND GI.ConsigneeIDType = ''0''
		AND GI.ConsigneeCity = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneePostCode'' AS Location, 
	''Consignee Post Code is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		OR GI.ConsigneeIDType <> ''0''
		)
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneePostCode <> ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneePostCode'' AS Location, 
	''Consignee Post Code is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		)
		AND GI.ConsigneeIDType = ''0''
		AND GI.ConsigneePostCode = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneePostCode'' AS Location, 
	''Format for Consignee Post Code should be 5 digits'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(	
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		)
		AND GI.ConsigneeCountry = ''DE''
		AND GI.ConsigneePostCode <> ''''
		AND (
			LEN (GI.ConsigneePostCode) <> 5
			OR ISNUMERIC (GI.ConsigneePostCode) = 0
			)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeCountry'' AS Location, 
	''Consignee Country is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		OR GI.ConsigneeIDType <> ''0''
		)
		AND GI.ConsigneeIDType <> ''''
		AND GI.ConsigneeCountry <> ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ConsigneeCountry'' AS Location, 
	''Consignee Country is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(		
		DD.DeclarationType2 = ''AE'' 
		OR DD.ConsigneeIDType <> ''''
		)
		AND GI.ConsigneeIDType = ''0''
		AND GI.ConsigneeCountry = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items/Consignee'' AS Location,  								
	''The same information for Consignee is not allowed to be used for all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.ConsigneeIDType = ''''
		AND 
			(
			SELECT COUNT (DISTINCT GI1.ConsigneeIDType + GI1.ConsigneeID + GI1.ConsigneeBranch + GI1.ConsigneeName + GI1.ConsigneeAddress + GI1.ConsigneeCity + GI1.ConsigneePostCode + GI1.ConsigneeCountry)
			FROM txdDEAESGoodsItem GI1
			WHERE   GI1.PartnerID = @PartnerID 
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI1.ConsigneeIDType <> ''''
			) = 1
		AND 
			(
			SELECT COUNT (*)
			FROM txdDEAESGoodsItem GI2
			WHERE   GI2.PartnerID = @PartnerID 
			AND GI2.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.ConsigneeIDType + GI2.ConsigneeID + GI2.ConsigneeBranch + GI2.ConsigneeName + GI2.ConsigneeAddress + GI2.ConsigneeCity + GI2.ConsigneePostCode + GI2.ConsigneeCountry = ''''
			) = 0
		)

INSERT INTO #ValidationWarning

SELECT  
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/IncotermCode----Goods Items/IncotermCode'' AS Location, 
''Incoterm information should be specified either on Header level or on Goods Items level'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(SELECT COUNT (*) 																				
				FROM txdDEAESGoodsItem GI1
				JOIN txdDEAESDeclarationData DD1
				ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID
				WHERE   DD1.PartnerID = @PartnerID 
				AND DD1.DeclarationDataGUID = @DeclarationDataGUID
				AND GI1.IncotermCode <> ''''
			) > 0
		AND DD.IncotermCode <> ''''
		)
		
INSERT INTO #ValidationWarning

SELECT  
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/IncotermCode----Goods Items/IncotermCode'' AS Location, 
''Incoterm Code is required either on Header or on Goods Item level for all of the items'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		EXISTS
			(SELECT GI1.PartnerID 																			
				FROM txdDEAESGoodsItem GI1
				WHERE   GI1.PartnerID = @PartnerID 
				AND GI1.DeclarationDataGUID = @DeclarationDataGUID
				AND GI1.IncotermCode = ''''
			)
		AND (	
			DeclarationType2 = ''AM'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DeclarationType2 = ''AE'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DeclarationType2 = ''zP'' 
			AND	DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DeclarationType2 = ''wP'' 
			AND	DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'')
			OR DeclarationType2 = ''nA'' 
			OR DeclarationType2 = ''nB''
			OR DeclarationType2 = ''nK''
			OR DeclarationType2 = ''nN''
			OR DeclarationType2 = ''mS''
			)
		AND DD.IncotermCode = ''''
		)

INSERT INTO #ValidationWarning

SELECT  
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/IncotermText'' AS Location, 
''Incoterm Text is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD 
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			DD.IncotermCode <> ''''
			AND DD.IncotermCode <> ''XXX''
		)
		AND DD.IncotermText <> ''''
		
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/IncotermText'' AS Location, 
	''Incoterm Text is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		(SELECT COUNT (*) 																				
				FROM txdDEAESGoodsItem GI1
				WHERE   GI1.PartnerID = @PartnerID 
				AND GI1.DeclarationDataGUID = @DeclarationDataGUID
				AND GI1.IncotermCode <> ''''
			) = 0
		AND IncotermCode = ''XXX'' 
		AND IncotermText = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/IncotermLocation'' AS Location, 
	''Incoterm Location is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.IncotermCode = ''XXX''
		AND DD.IncotermLocation <> ''''
		)
        
INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/IncotermLocation'' AS Location, 
	''Incoterm Location is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		(SELECT COUNT (*) 																				
				FROM txdDEAESGoodsItem GI1
				WHERE   GI1.PartnerID = @PartnerID 
				AND GI1.DeclarationDataGUID = @DeclarationDataGUID
				AND GI1.IncotermCode <> ''''
			) = 0
		AND DD.IncotermCode <> ''''
		AND DD.IncotermCode <> ''XXX'' 
		AND DD.IncotermLocation = ''''
        )

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IncotermText'' AS Location, 
''Incoterm Text is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			GI.IncotermText <> ''''
			AND GI.IncotermCode <> ''XXX''
			AND GI.IncotermCode <> ''''
			AND DD.IncotermCode = ''''
		)

		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IncotermText'' AS Location, 
	''Incoterm Text is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD  
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID                             
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		DD.IncotermCode = ''''
		AND GI.IncotermCode = ''XXX'' 
		AND GI.IncotermText = ''''
        )

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IncotermLocation'' AS Location, 
	''Incoterm Location is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
			DD.IncotermCode = ''''
			AND GI.IncotermCode = ''XXX''
		 )
		AND GI.IncotermLocation <> ''''
        
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IncotermLocation'' AS Location, 
	''Incoterm Location is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD      
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID                         
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		DD.IncotermCode = ''''
		AND GI.IncotermCode <> ''XXX'' 
		AND GI.IncotermCode <> '''' 
		AND GI.IncotermLocation = ''''
        )

INSERT INTO #ValidationWarning

SELECT ''Goods Items/IncotermText'' AS Location,  
	''The same value for Incoterm Text is not allowed to be used for all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.IncotermCode = ''''
		AND 
			(
			SELECT COUNT (DISTINCT GI1.IncotermText)
			FROM txdDEAESGoodsItem GI1
			WHERE   GI1.PartnerID = @PartnerID 
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI1.IncotermText <> ''''
			) = 1
		AND 
			(
			SELECT COUNT (*)
			FROM txdDEAESGoodsItem GI2
			WHERE   GI2.PartnerID = @PartnerID 
			AND GI2.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.IncotermText = ''''
			) = 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items/Incoterm'' AS Location,  								
	''The same information for Incoterms is not allowed to be used for all Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.IncotermCode = ''''
		AND 
			(
			SELECT COUNT (DISTINCT GI1.IncotermCode + GI1.IncotermText + GI1.IncotermLocation)
			FROM txdDEAESGoodsItem GI1
			WHERE   GI1.PartnerID = @PartnerID 
			AND GI1.DeclarationDataGUID = @DeclarationDataGUID
			AND GI1.IncotermCode <> ''''
			) = 1
		AND 
			(
			SELECT COUNT (*)
			FROM txdDEAESGoodsItem GI2
			WHERE   GI2.PartnerID = @PartnerID 
			AND GI2.DeclarationDataGUID = @DeclarationDataGUID
			AND GI2.IncotermCode + GI2.IncotermText + GI2.IncotermLocation = ''''
			) = 0
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/IncotermCode'' AS Location, 
	''Incoterm Code should be specified if any other information for Incoterm is given'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID 
	AND DD.IncotermText + DD.IncotermLocation <> ''''	
	AND DD.IncotermCode = ''''
			
INSERT INTO #ValidationWarning

SELECT ''Goods Item [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IncotermCode'' AS Location, 
	''Incoterm Code should be specified if any other information for Incoterm is given'' AS Warning
FROM    txdDEAESDeclarationData DD  
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID                             
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.IncotermText + GI.IncotermLocation <> ''''		
	AND GI.IncotermCode = ''''
			
INSERT INTO #ValidationWarning
		
							
--Goods items or other sub-details:

SELECT ''Goods Item'' AS Location, 
	''At least one Goods Item is mandatory to be provided'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
		 NOT EXISTS
			(
			SELECT GI.GoodsItemGUID
			FROM txdDEAESGoodsItem GI	
			WHERE   GI.PartnerID = @PartnerID 
			AND GI.DeclarationDataGUID = @DeclarationDataGUID
			)
			
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ItemNumber'' AS Location,  
	''Item Number is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		GI.ItemNumber = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Description'' AS Location,  
	''Description is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 <> ''AE''
		AND GI.Description = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Description'' AS Location,  
	''Description is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''AE''
		AND GI.Description <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RegionOfOrigin'' AS Location,  
	''Region Of Origin is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DD.DeclarationType2 = ''AE'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'') 
			OR DD.DeclarationType2 = ''nA'' 
			OR DD.DeclarationType2 = ''nB''
			OR DD.DeclarationType2 = ''nK''
			OR DD.DeclarationType2 = ''nN''
			OR DD.DeclarationType2 = ''mS''
			)
		AND GI.RegionOfOrigin = ''''
		)

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RegionOfOrigin'' AS Location,  
''"99" is not valid value for RegionOfOrigin'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
		SELECT GI1.PartnerID
		FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESGoodsItem GI1
		ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
		WHERE   DD1.PartnerID = DD.PartnerID 
		AND DD1.DeclarationGUID = DD.DeclarationGUID
		---AND	DD1.Type = ''E_EXP_IND''			-----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GI1.SequenceNum = GI.SequenceNum
		AND GI1.RefundCountryOfOrigin = ''DE''
		)
	AND GI.RegionOfOrigin = ''99''
	
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RegionOfOrigin'' AS Location, 
''only "99" is valid value for RegionOfOrigin'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
		SELECT GI1.PartnerID
		FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESGoodsItem GI1
		ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
		WHERE   DD1.PartnerID = DD.PartnerID 
		AND DD1.DeclarationGUID = DD.DeclarationGUID
		---AND	DD1.Type = ''E_EXP_IND''			-----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GI1.SequenceNum = GI.SequenceNum
		AND GI1.RefundCountryOfOrigin <> ''DE''
		)
	AND GI.RegionOfOrigin <> ''99''
	
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NetWeight'' AS Location,  
	''Net Weight is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		GI.NetWeight = 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NetWeight'' AS Location,  
	''"0" is not valid value for Net Weight'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.BorderModeOfTransport NOT IN (''7'', ''70'')
		AND GI.NetWeight = 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/CommodityCode'' AS Location,  
	''Commodity Code is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GI.CommodityCode = ''''
		)
		
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/CommodityCode'' AS Location, 
''The values of CommodityCode in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
	WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		AND DD.DeclarationType2 = ''AE'' 
		AND EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			---AND	DD1.Type = ''E_EXP_IND''			-----IND
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
			AND GI1.SequenceNum = GI.SequenceNum
			AND GI1.CommodityCode <> GI.CommodityCode
			)
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/CommodityCode'' AS Location,  
	''Not valid value for Commodity Code'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DestinationCountry NOT IN (''QQ'', ''QR'', ''QS'')
			OR GI.NationalProcedure IN (''F62'', ''F63'')
			)
			AND GI.CommodityCode IN (''99302400'', ''99302700'', ''99309900'')
		OR
			(
			DD.DestinationCountry NOT IN (''QU'', ''QV'')
			OR GI.NationalProcedure IN (''F62'', ''6F0'')
			)
			AND GI.CommodityCode IN (''99312400'', ''99312700'', ''99319900'')
		)
		
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/SecondAdditionalCommodityCode'' AS Location, 
''SecondAdditionalCommodityCode is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
	WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		AND DD.DeclarationType2 = ''AE'' 
		AND GI.SecondAdditionalCommodityCode = ''''
		
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/SecondAdditionalCommodityCode'' AS Location, 
''The values of SecondAdditionalCommodityCode in '' + @E_EXP_DAT_NAME + ''(E_EXP_DAT) and '' + @E_EXP_IND_NAME + ''(E_EXP_IND) messages should match'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
	WHERE   DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
		AND DD.DeclarationType2 = ''AE'' 
		AND EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			---AND	DD1.Type = ''E_EXP_IND''			-----IND
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
			AND GI1.SequenceNum = GI.SequenceNum
			AND GI1.SecondAdditionalCommodityCode <> GI.SecondAdditionalCommodityCode
			)
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''Requested Procedure is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GI.RequestedProcedure = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''"10" should be indicated as the value for Requested Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''AE''
		AND GI.RequestedProcedure <> ''10''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''"21" should be indicated as the value for Requested Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 = ''zP'' 
			OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'')
			AND	DD.DeclarationType3 IN (''b'', ''c'', ''d'')
			)
		AND GI.RequestedProcedure <> ''21''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''"21" is not valid value for Requested Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			NOT
			(
			DD.DeclarationType2 = ''zP'' 
			OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'')
			AND	DD.DeclarationType3 IN (''b'', ''c'', ''d'')
			)
		AND GI.RequestedProcedure = ''21''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''"22" should be indicated as the value for Requested Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 = ''wP'' 
			OR DD.DeclarationType2 IN (''nA'', ''nK'', ''nN'') 
			AND	DD.DeclarationType3 IN (''e'', ''f'') 
			)
		AND GI.RequestedProcedure <> ''22''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''"22" is not valid value for Requested Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			NOT
			(
			DD.DeclarationType2 = ''wP'' 
			OR DD.DeclarationType2 IN (''nA'', ''nK'', ''nN'')  
			AND	DD.DeclarationType3 IN (''e'', ''f'')  
			)
		AND GI.RequestedProcedure = ''22''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''"10", "11" or "23" should be indicated as the value for Requested Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''nA'' 
		AND	DD.DeclarationType3 = ''a''
		AND GI.RequestedProcedure NOT IN (''10'', ''11'', ''23'')
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RequestedProcedure'' AS Location,  
	''"10" or "31" should be indicated as the value for Requested Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''mS'' 
		AND GI.RequestedProcedure NOT IN (''10'', ''31'')
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/PreviousProcedure'' AS Location,  
	''Previous Procedure is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GI.PreviousProcedure = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/PreviousProcedure'' AS Location,  
	''Not valid value for Previous Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''AE''
		AND GI.PreviousProcedure NOT IN (''00'',''02'', ''40'', ''41'', ''51'', ''61'', ''76'', ''78'', ''91'')
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/PreviousProcedure'' AS Location,  
	''Not valid value for Previous Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType1 = ''CO''
		AND GI.PreviousProcedure IN (''02'', ''41'', ''51'', ''71'', ''91'')
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NationalProcedure'' AS Location,  
	''National Procedure is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''AE'' 
		AND	DD.DeclarationType3 IN (''q'', ''s'')
		AND GI.NationalProcedure = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NationalProcedure'' AS Location,  
	''If "F61", "F62", "F63", "F64" or "6F0" is specified as the value for National Procedure, the same value should be indicated in all other Goods Items'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		SELECT COUNT (DISTINCT NationalProcedure) 
		FROM txdDEAESGoodsItem GI1
		JOIN txdDEAESDeclarationData DD1
		ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID
		WHERE   DD1.PartnerID = @PartnerID 
			AND DD1.DeclarationDataGUID = @DeclarationDataGUID
		) > 1
		AND GI.NationalProcedure IN (''F61'', ''F62'', ''F63'', ''F64'', ''6F0'')
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NationalProcedure'' AS Location,  
	''Not valid value for National Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (NOT
			(
			DD.DeclarationType2 = ''AM'' 
			OR DD.DeclarationType2 IN (''nA'', ''nK'', ''nN'')
			AND	DD.DeclarationType3 = ''a''
			OR DD.DeclarationType2 = ''mS''
			)
		AND GI.NationalProcedure IN (''F61'', ''F64'', ''6F0'')
		)
		
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NationalProcedure'' AS Location,  
	''"F62" is not valid value for National Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (NOT
			(
			DD.DeclarationType2 = ''AE'' 
			AND	DD.DeclarationType3 IN (''m'', ''n'', ''o'', ''p'')
			)
		AND GI.NationalProcedure = ''F62''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NationalProcedure'' AS Location,  
	''"F63" is not valid value for National Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (NOT
			(
			DD.DeclarationType2 = ''AE'' 
			AND	DD.DeclarationType3 IN (''q'', ''s'')
			)
		AND GI.NationalProcedure = ''F63''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/NationalProcedure'' AS Location,  
	''"F63" should be indicated as the value for National Procedure'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''AE'' 
		AND	DD.DeclarationType3 IN (''q'', ''s'')
		AND GI.NationalProcedure <> ''F63''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ExportRefundProcedure'' AS Location,  
	''Export Refund Procedure is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''AE''
		AND GI.ExportRefundProcedure = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/ExportRefundProcedure'' AS Location,  
	''Export Refund Procedure is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 <> ''AE''
		AND GI.ExportRefundProcedure <> ''''
		)

INSERT INTO #ValidationWarning

/*SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/SupplementaryQuantity'' AS Location,  		--------as far as we do not implement the rule for this field, the rule for the data group becomes not relevant for the field	
	''Supplementary Quantity is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DD.DeclarationType2 = ''AE'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'') 
			OR DD.DeclarationType2 = ''nA'' 
			OR DD.DeclarationType2 = ''nB''
			OR DD.DeclarationType2 = ''nK''
			OR DD.DeclarationType2 = ''nN''
			OR DD.DeclarationType2 = ''mS''
			)
		AND GI.SupplementaryQuantity = 0
		)

INSERT INTO #ValidationWarning	*/

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/StatisticalValue'' AS Location,  
	''Statistical Value is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''g'', ''i'', ''k'')
			OR DD.DeclarationType2 = ''AE'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''a'', ''c'', ''e'', ''m'', ''o'', ''q'', ''s'', ''u'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''m'', ''o'', ''q'', ''s'', ''u'', ''w'') 
			OR DD.DeclarationType2 = ''nA'' 
			OR DD.DeclarationType2 = ''nB''
			OR DD.DeclarationType2 = ''nK''
			OR DD.DeclarationType2 = ''nN''
			OR DD.DeclarationType2 = ''mS''
			)
		AND GI.StatisticalValue = 0
		)
		
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages'' AS Location,
''At least one Package is mandatory to be provided for each Goods Item'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.GoodsItemGUID IS NOT NULL
	AND NOT EXISTS 
			(
			SELECT GIP.PartnerID
			FROM txdDEAESGoodsItemPackage GIP
			WHERE GIP.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID 			
			AND GIP.GoodsItemGUID = GI.GoodsItemGUID
			AND GIP.GoodsItemPackageGUID IS NOT NULL
			)
	
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/Number'' AS Location,
''Packages/Number is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GIP.Number = 0   
	
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages  [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/Number'' AS Location,  
	''"1" should be specified as the value for Packages/Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.Type IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'')
		AND GIP.Number <> 1
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/Number'' AS Location,  
	''"0" is not allowed to be specified as the value for Packages/Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.Type IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
		AND GIP.Number = 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages/Number'' AS Location,  	
	''If "0" is specified as the value for Packages/Number, all the rest values of Packages/Number for the same Goods Item should be "0" either'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
		SELECT GIP1.PartnerID
		FROM txdDEAESGoodsItemPackage GIP1
		WHERE   GIP1.PartnerID = @PartnerID 
		AND GIP1.GoodsItemGUID = GI.GoodsItemGUID
		AND GIP1.Number = 0
		)
		AND 
			(
			SELECT COUNT(*)
			FROM txdDEAESGoodsItemPackage GIP2
			WHERE   GIP2.PartnerID = @PartnerID 
			AND GIP2.GoodsItemGUID = GI.GoodsItemGUID
			AND GIP2.Number <> 0
			)
			<>0

/*	Removed in 2.4.2
INSERT INTO #ValidationWarning 

SELECT 
--''Goods Items/Packages [''+GIP1.SequenceNum+'']/Number'' AS Location,
''Goods Items/Packages/Number'' AS Location,
''If "0" is specified as the value for Packages/Number, there should exist record in other Goods Item with the same Packages/MarksAndNumbers value and the value other than "0" for Packages/Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND EXISTS 
		(
        SELECT GIP1.PartnerID
        FROM txdDEAESGoodsItemPackage GIP1
        WHERE GIP1.PartnerID = @PartnerID
        AND GIP1.GoodsItemGUID = GI.GoodsItemGUID
        AND GIP1.Number = 0
                                               
        AND NOT EXISTS
            (                                                      
            SELECT GIP2.PartnerID
            FROM txdDEAESGoodsItemPackage GIP2                                         
            WHERE GIP2.PartnerID = @PartnerID
            AND GIP2.DeclarationDataGUID = GI.DeclarationDataGUID
			AND GIP2.GoodsItemGUID <> GIP1.GoodsItemGUID
			AND GIP2.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
            AND GIP2.MarksAndNumbers=GIP1.MarksAndNumbers
            AND GIP2.Number <> 0                                                                                                                    
            )
        )
*/

INSERT INTO #ValidationWarning 

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/SequenceNumber'' AS Location,  
	''Packages/SequenceNumber is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.SequenceNumber = 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/Type'' AS Location,  
	''Packages/Type is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.Type = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/MarksAndNumbers'' AS Location,  
	''Packages/MarksAndNumbers is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
		AND GIP.MarksAndNumbers = ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/MainItemNumber'' AS Location,  
	''Packages/MainItemNumber is required and permitted only if Packages/Number is 0'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.MainItemNumber <> 0 
		AND GIP.Number <> 0
		)


INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/MainItemNumber'' AS Location,  
	''Packages/MainItemNumber in range from 1 to Header/TotalItems'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.MainItemNumber < 0 
		OR GIP.MainItemNumber > DD.TotalItems
		)


INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Packages [''+CONVERT(VARCHAR(3),GIP.SequenceNum)+'']/MainItemNumber'' AS Location,  
	''Packages/MainItemNumber is not valid'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPackage GIP
ON DD.PartnerID = GIP.PartnerID  AND DD.DeclarationDataGUID = GIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GIP.MainItemNumber <> 0 
		AND NOT EXISTS
            (                                                      
            SELECT GIP1.PartnerID
            FROM txdDEAESGoodsItemPackage GIP1                                         
            WHERE GIP1.PartnerID = @PartnerID
            AND GIP1.DeclarationDataGUID = GI.DeclarationDataGUID
			AND GIP1.GoodsItemGUID <> GIP.GoodsItemGUID
			AND GIP1.Type NOT IN (''VG'', ''VL'', ''VO'', ''VQ'', ''VR'', ''VS'', ''VY'', ''NE'', ''NF'', ''NG'')
            AND GIP1.MarksAndNumbers=GIP.MarksAndNumbers
            AND GIP1.Number <> 0                                                                                                                    
            )
		
		)


INSERT INTO #ValidationWarning

SELECT ''Goods Items/Containers/Number'' AS Location,  
	''Containers/Number must be specified at least in one Goods Item'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.ContainerFlag = ''1'' 
		AND NOT EXISTS
			(
			SELECT GIC1.Number  
			FROM txdDEAESGoodsItemContainer GIC1 
			WHERE   GIC1.PartnerID = @PartnerID 
				AND GIC1.DeclarationDataGUID = @DeclarationDataGUID
				AND GIC1.Number <> ''''
			)
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Containers [''+CONVERT(VARCHAR(3),GIC.SequenceNum)+'']/Number'' AS Location,  
	''Containers/Number is not allowed to be specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemContainer GIC
ON DD.PartnerID = GIC.PartnerID  AND DD.DeclarationDataGUID = GIC.DeclarationDataGUID AND GI.GoodsItemGUID = GIC.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.ContainerFlag = ''0'' 
		AND GIC.Number <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,		-------make sure whether the rule is connected to one Goods Item or contrary on different ones, or maybe we shuold not pay attention to the Goods Items at all
''There should exist the record with the value "8GGX" for Document/Type'' AS Warning		---clarified with Rowan
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND EXISTS 
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID
		AND GID1.Type = ''3LLB''
		AND GID1.Qualifier IN (''81E'', ''81K'', ''81S'', ''231'') 
                                               
        AND NOT EXISTS
            (                                                      
            SELECT GID2.PartnerID
            FROM txdDEAESGoodsItemDocument GID2                                         
            WHERE GID2.PartnerID = @PartnerID
           -- AND GID2.DeclarationDataGUID = GI.DeclarationDataGUID
			AND GID2.GoodsItemGUID = GID1.GoodsItemGUID						--------here we check records in the same Goods Items, should change if understanding is not correct
			AND GID2.GoodsItemDocumentGUID <> GID1.GoodsItemDocumentGUID
			AND GID2.Type = ''8GGX''                                                                                                                  
            )
        )

INSERT INTO #ValidationWarning 

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document'' AS Location,							-------make sure whether the rule is connected to one Goods Item or contrary on different ones, or maybe we shuold not pay attention to the Goods Items at all
''One of the values "3LLB+81E/81K/81S/231" should be provided as the values for Document/Type + Document/Qualifier'' AS Warning	---clarified with Rowan
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND EXISTS 
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID
		AND GID1.Type = ''8GGX'' 
		                                               
        AND NOT EXISTS
            (                                                      
            SELECT GID2.PartnerID
            FROM txdDEAESGoodsItemDocument GID2                                         
            WHERE GID2.PartnerID = @PartnerID
            --AND GID2.DeclarationDataGUID = GI.DeclarationDataGUID
			AND GID2.GoodsItemGUID = GID1.GoodsItemGUID						--------here we check records in the same Goods Items, should change if understanding is not correct
			AND GID2.GoodsItemDocumentGUID <> GID1.GoodsItemDocumentGUID
			AND GID2.Type = ''3LLB''
			AND GID2.Qualifier IN (''81E'', ''81K'', ''81S'', ''231'')                                                                                                                   
            )
        )

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document'' AS Location,							-------make sure whether the rule is connected to one Goods Item or contrary on different ones, or maybe we shuold not pay attention to the Goods Items at all
''One of the values "3LLC+81E/81S/231" should be provided as the values for Document/Type + Document/Qualifier'' AS Warning	---clarified with Rowan
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND EXISTS 
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID
		AND GID1.Type IN (''E020'', ''Y934'') 
		AND GID1.Qualifier =''AWV''
		                                               
        AND NOT EXISTS
            (                                                      
            SELECT GID2.PartnerID
            FROM txdDEAESGoodsItemDocument GID2                                         
            WHERE GID2.PartnerID = @PartnerID
            --AND GID2.DeclarationDataGUID = GI.DeclarationDataGUID
			AND GID2.GoodsItemGUID = GID1.GoodsItemGUID						--------here we check records in the same Goods Items, should change if understanding is not correct
			AND GID2.GoodsItemDocumentGUID <> GID1.GoodsItemDocumentGUID
			AND GID2.Type = ''3LLC''
			AND GID2.Qualifier IN (''81E'', ''81S'', ''231'')                                                                                                                   
            )
        )

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type,Qualifier'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document'' AS Location,	
''Not valid value for Document/Type and Document/Qualifier'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND  
			(
			GID1.Type = ''3LLA''
			AND	GID1.Qualifier IN (''82'', ''231'')
			OR GID1.Type = ''3LLB''
			AND	GID1.Qualifier IN (''81E'', ''231'')
			OR GID1.Type = ''3LLC''
			AND	GID1.Qualifier IN (''81E'', ''231'')
			OR GID1.Type = ''X002''
			AND	GID1.Qualifier IN (''DEE'', ''231'')
			OR GID1.Type = ''E020''
			AND	GID1.Qualifier IN (''FWE'', ''231'')
			OR GID1.Type = ''3LLB''
			AND	GID1.Qualifier = ''81K''
			OR GID1.Type = ''C064''
			AND	GID1.Qualifier = ''DE''
			OR GID1.Type = ''E990''
			AND GID1.Qualifier = ''DEE''
			OR GID1.Type = ''C052''
			AND	GID1.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
			OR GID1.Type = ''C070''
			AND GID1.Qualifier = ''LY''
			
			)                                            
        AND 
			(
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 IN (''e'', ''f'', ''k'', ''l'')
			OR DD.DeclarationType2 = ''wP'' 
			AND	DD.DeclarationType3 IN (''q'', ''r'', ''w'', ''x'')
			OR DD.DeclarationType2 = ''zP'' 
			AND	DD.DeclarationType3 IN (''e'', ''f'', ''q'', ''r'')
			)



INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type,Qualifier'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document'' AS Location,							
''Not valid value for Document/Type and Document/Qualifier'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND
			(
			GID1.Type = ''X002''
			AND	GID1.Qualifier IN (''E01'', ''E02'', ''E03'', ''E04'', ''E05'', ''E06'', ''A09'', ''A10'', ''A12'', ''A13'', ''A14'', ''A16'', ''A17'')
			OR GID1.Type = ''3LLC''
			AND	GID1.Qualifier IN (''A18'', ''A19'', ''A20'', ''A21'', ''A22'', ''A23'', ''A24'', ''A25'', ''A26'', ''A27'', ''81E'', ''81S'', ''231'')
			OR GID1.Type = ''3LLA''
			AND	GID1.Qualifier IN (''82'', ''231'')
			OR GID1.Type = ''3LLB''
			AND	GID1.Qualifier IN (''81E'', ''81S'', ''231'', ''81K'')
			OR GID1.Type = ''X002''
			AND	GID1.Qualifier IN (''DEE'', ''DES'', ''231'')
			OR GID1.Type = ''C064''
			AND	GID1.Qualifier = ''DE''
			OR GID1.Type = ''E990''
			AND GID1.Qualifier IN (''DEE'', ''DES'')
			OR GID1.Type = ''C052''
			AND	GID1.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
			OR GID1.Type = ''C070''
			AND GID1.Qualifier = ''LY''
			)                                            
        AND 
			(
			DD.DeclarationType2 = ''AM'' 
			AND	DD.DeclarationType3 = ''g''
			)



INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type,Qualifier'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document'' AS Location,					
''Not valid value for Document/Type and Document/Qualifier'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
			(
			GID1.Type = ''3LLA''
			AND	GID1.Qualifier IN (''82'', ''231'')
			OR GID1.Type = ''3LLB''
			AND	GID1.Qualifier IN (''81E'', ''81S'', ''231'', ''81K'')
			OR GID1.Type = ''3LLC''
			AND	GID1.Qualifier IN (''81E'', ''81S'', ''231'')
			OR GID1.Type = ''C064''
			AND	GID1.Qualifier = ''DE''
			OR GID1.Type = ''E990''
			AND GID1.Qualifier IN (''DEE'', ''DES'')
			OR GID1.Type = ''C052''
			AND	GID1.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
			OR GID1.Type = ''C070''
			AND GID1.Qualifier = ''LY''
			OR GID1.Type = ''X002''
			AND	GID1.Qualifier IN (''DEE'', ''DES'', ''231'')
			OR GID1.Type = ''E020''
			AND	GID1.Qualifier IN (''FWE'', ''FWS'', ''231'')
			)                                            
        AND DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 


INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document'' AS Location,							
''"3LLG+CO" is permissible for Document/Type and Document/Qualifier only when DeclarationType1 is "CO"'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GID1.Type = ''3LLG''
	AND	GID1.Qualifier = ''CO''
	AND DD.DeclarationType1 <> ''CO''


INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type'' AS Location,	
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,						
''"2AAF" is not permitted value for Document/Type'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GID1.Type = ''2AAF''
		AND NOT	
			(
			GI.ItemNumber = 1
			AND
				(
				DD.DeclarationType2 IN (''zP'', ''wP'') 
				AND	DD.DeclarationType3 IN (''m'', ''n'', ''o'', ''p'', ''q'', ''r'')
				OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'')
				AND	DD.DeclarationType3 = ''c''
				OR DD.DeclarationType2 IN (''nA'', ''nK'', ''nN'') 
				AND	DD.DeclarationType3 = ''e''
				)
			
			)
		                                            

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"2AAF" is required to be indicated as Document/Type for the Goods Item with the field ItemNumber, which equals to 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber = 1
	AND
		(
		DD.DeclarationType2 = ''zP'' 
		AND	DD.DeclarationType3 IN (''m'', ''n'', ''o'', ''p'', ''q'', ''r'')
		OR DD.DeclarationType2 = ''wP'' 
		AND	DD.DeclarationType3 IN (''m'', ''n'', ''o'', ''p'', ''q'', ''r'')
		OR DD.DeclarationType2 IN (''nB'', ''nK'')
		AND	DD.DeclarationType3 = ''c''
		OR DD.DeclarationType2 = ''nN'' 
		AND	DD.DeclarationType3 IN (''c'', ''e'')
		)

    AND NOT EXISTS 
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID
		AND GID1.Type = ''2AAF''
		)                                            

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"Nzzz" is required to be indicated as Document/Type for the Goods Item with the field ItemNumber, which equals to 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber = 1
	AND DD.DeclarationType2 = ''nA'' 
	AND	DD.DeclarationType3 = ''a''

    AND NOT EXISTS 
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID
		AND GID1.Type = ''Nzzz''
		)                                            

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"N955" is required to be indicated only once as Document/Type for the Goods Item with the field ItemNumber, which equals to 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber = 1
	AND DD.DeclarationType2 = ''nA'' 
	AND	DD.DeclarationType3 = ''z''

    AND
		(
        SELECT COUNT (*)
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID
		AND GID1.Type = ''N955''
		) <> 1                                           

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,			
''"N955" is not permitted to be indicated as the value for Document/Type, for the Goods Item with the field ItemNumber other than 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber <> 1
	AND DD.DeclarationType2 = ''nA'' 
	AND	DD.DeclarationType3 = ''z''
    AND GID1.Type = ''N955''
                                          

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"N830" is required to be indicated only once for Document/Type'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationType2 = ''nB'' 
    AND
		(
        SELECT COUNT (*)
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID					----------------we check here if there is one record with N830 for each goods item, if there should be one record for the whole declaration, it should be changed
		AND GID1.Type = ''N830''										---clarified with Rowan
		) <> 1                                           

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"N830" is required to be indicated only once for Document/Type, for the Goods Item with the field ItemNumber, which equals to 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber = 1
	AND DD.DeclarationType2 = ''nK'' 
    AND
		(
        SELECT COUNT (*)
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID					
		AND GID1.Type = ''N830''
		) <> 1                                           

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type'' AS Location,
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,						
''"N830" is not permitted to be indicated for Document/Type, for the Goods Item with the field ItemNumber other than 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber <> 1
	AND DD.DeclarationType2 = ''nK'' 
    AND GID1.Type = ''N830''                                           

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"N830" is required to be indicated only once for Document/Type, for the Goods Item with the field ItemNumber, which equals to 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber = 1
	AND DD.DeclarationType2 = ''nN'' 
    AND
		(
        SELECT COUNT (*)
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID					
		AND GID1.Type = ''N830''
		) <> 1                                           

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,					
''"N830" is not permitted to be indicated for Document/Type, for the Goods Item with the field ItemNumber other than 1'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.ItemNumber <> 1
	AND DD.DeclarationType2 = ''nN'' 
    AND GID1.Type = ''N830''                                           

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document'' AS Location,					
''"X001+MB" is not permitted to be indicated for Document/Type and Document/Qualifier'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 = ''AM'' 
		AND	DD.DeclarationType3 IN (''a'', ''b'', ''c'', ''d'', ''e'', ''f'')
		OR DD.DeclarationType2 = ''nA'' 
		AND	DD.DeclarationType3 IN (''a'', ''z'')
		OR DD.DeclarationType2 = ''nN'' 
		AND	DD.DeclarationType3 = ''a''
		)
    AND GID1.Type = ''X001''
	AND GID1.Qualifier = ''MB''                                          

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"9DEE" is required to be indicated for Document/Type, for the Goods Item with the field CommodityCode starting with "98"'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND SUBSTRING (GI.CommodityCode, 1, 2) = ''98''
    AND NOT EXISTS
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID					
		AND GID1.Type = ''9DEE''
		)                                           

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"Y015" is required to be indicated as Document/Type, for the Goods Item which contains "C034" as the value for Document/Type'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID					-----we check here if the record exists in the same goods item, if we should check in whole declaration, than it should be changed
		AND GID1.Type = ''C034''
		
		AND NOT EXISTS
			(
			SELECT GID2.PartnerID
			FROM txdDEAESGoodsItemDocument GID2
			WHERE GID2.PartnerID = @PartnerID
			AND GID2.GoodsItemGUID = GID1.GoodsItemGUID					-----we check here if the record exists in the same goods item, if we should check in whole declaration, than it should be changed
			AND GID2.Type = ''Y015''										---clarified with Rowan
			)  
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,							
''"C034" is required to be indicated as Document/Type, for the Goods Item which contains "Y015" as the value for Document/Type'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND EXISTS
		(
        SELECT GID1.PartnerID
        FROM txdDEAESGoodsItemDocument GID1
        WHERE GID1.PartnerID = @PartnerID
        AND GID1.GoodsItemGUID = GI.GoodsItemGUID					-----we check here if the record exists in the same goods item, if we should check in whole declaration, than it should be changed
		AND GID1.Type = ''Y015''
		
		AND NOT EXISTS
			(
			SELECT GID2.PartnerID
			FROM txdDEAESGoodsItemDocument GID2
			WHERE GID2.PartnerID = @PartnerID
			AND GID2.GoodsItemGUID = GID1.GoodsItemGUID					-----we check here if the record exists in the same goods item, if we should check in whole declaration, than it should be changed
			AND GID2.Type = ''C034''										---clarified with Rowan
			)  
		)   

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Type'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''Document/Type is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GID1.Qualifier + GID1.Reference + GID1.AdditionalInformation + GID1.ReferenceDetail + cast(GID1.IssueDate as varchar) + cast(GID1.ExpiryDate as varchar) + cast(GID1.Value as varchar) + GID1.QuantityUOM +cast(GID1.Quantity as varchar) <> '''' 
	AND GID1.Type = '''' 		

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Reference'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Reference'' AS Location,						
''Not valid format for Document/Reference'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND  (
			(
			GID1.Type = ''3LLA''
			AND	GID1.Qualifier IN (''82'', ''231'')
			OR GID1.Type = ''3LLB''
			AND	GID1.Qualifier IN (''81E'', ''81S'', ''231'', ''81K'')
			OR GID1.Type = ''3LLC''
			AND	GID1.Qualifier IN (''81E'', ''81S'', ''231'')
			OR GID1.Type = ''C064''
			AND	GID1.Qualifier = ''DE''
			OR GID1.Type = ''E990''
			AND GID1.Qualifier IN (''DEE'', ''DES'')
			OR GID1.Type = ''C052''
			AND	GID1.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
			OR GID1.Type = ''C070''
			AND	GID1.Qualifier = ''LY''
			OR GID1.Type = ''X002''
			AND	GID1.Qualifier IN (''DEE'', ''DES'', ''231'')
			OR GID1.Type = ''E020''
			AND	GID1.Qualifier IN (''FWE'', ''FWS'', ''231'')
			OR GID1.Type IN (''E020'', ''Y934'')
			AND	GID1.Qualifier = ''AWV''
			) 
			AND LEN (GID1.Reference) NOT IN (12, 13)
		OR
			(
			GID1.Type = ''XOO1''
			AND LEN (GID1.Reference) > 18
			)
		OR
			(
			GID1.Type = ''N830''
			AND DD.DeclarationType2 IN (''nB'', ''nK'')
			AND LEN (GID1.Reference) <> 18
			)
		OR
			(
			(GID1.Type = ''3LLD'' 
			AND GID1.Qualifier = ''NB''
			AND GID1.IssueDate <> '''')
			AND LEN (GID1.Reference) NOT IN (12, 13)
			)
		)                                            

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Reference'' AS Location,											
''Reference should match with the Reference value of the document of the same goods item, with "3LLC+81E/81S/231" values indicated for Document/Type and Document/Qualifier'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GID1.Type IN (''E020'', ''Y934'')
	AND GID1.Qualifier = ''AWV'' 
	AND EXISTS
		(
        SELECT GID2.PartnerID
        FROM txdDEAESGoodsItemDocument GID2
        WHERE GID2.PartnerID = @PartnerID
        AND GID2.GoodsItemGUID = GID1.GoodsItemGUID	
		AND GID2.Type = ''3LLC''
		AND GID2.Qualifier IN (''81E'', ''81S'', ''231'')
		AND GID1.Reference <> GID1.Reference
		)

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/ReferenceDetail'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/ReferenceDetail'' AS Location,	
''Not valid value for Document/ReferenceDetail'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
		(
		GID1.ReferenceDetail <> ''''
		AND GID1.Type = ''8GGX''
		AND GID1.ReferenceDetail NOT IN
			(
			SELECT Code 
			FROM tmgGlobalCodes 
			WHERE FieldName=@CODELIST_PREFIX+''-A0135''
			)		
		OR
		GID1.Type = ''X002''
		AND GID1.Qualifier = ''A14''
		AND GID1.ReferenceDetail NOT IN (''2B350g'', ''2B350i'')
		)
	
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/ReferenceDetail'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/ReferenceDetail'' AS Location,	
''Please provide "AL-Position" for Document/ReferenceDetail'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
			(
			GID1.Type = ''3LLA''
			AND	GID1.Qualifier IN (''82'', ''231'')
			OR GID1.Type = ''3LLB''
			AND	GID1.Qualifier IN (''81E'', ''231'', ''81K'')
			OR GID1.Type = ''3LLC'' 
			AND	GID1.Qualifier IN (''81E'', ''231'')
			OR GID1.Type = ''C064''
			AND	GID1.Qualifier = ''DE''
			OR GID1.Type = ''E990''
			AND GID1.Qualifier = ''DEE''
			OR GID1.Type = ''C052''
			AND	GID1.Qualifier IN (''AF'', ''BY'', ''GN'', ''GW'', ''IR'', ''KP'', ''LY'', ''MM'', ''RU'', ''SD'', ''SS'', ''SY'', ''UA'', ''ZW'')
			OR GID1.Type = ''C070''
			AND	GID1.Qualifier = ''LY''
			OR GID1.Type = ''X002''
			AND	GID1.Qualifier IN (''DEE'', ''231'')
			) 
		AND GID1.ReferenceDetail = ''''	
		
INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/ReferenceDetail'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/ReferenceDetail'' AS Location,	
''Please provide "NULL" for Document/ReferenceDetail'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
			(
			GID1.Type = ''3LLD''
			AND	GID1.Qualifier = ''NB''
			) 
		AND GID1.ReferenceDetail <> ''NULL''	 


INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/ReferenceDetail'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/ReferenceDetail'' AS Location,	
''Document/ReferenceDetail must include prefix "IR-AN" if Document/Type = C052 and Document/Qualifier = IR'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
			(
			GID1.Type = ''C052''
			AND	GID1.Qualifier = ''IR''
			) 
		AND GID1.ReferenceDetail NOT LIKE ''IR-AN%''	

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/ReferenceDetail'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/ReferenceDetail'' AS Location,	
''Please provide "Goods Indicator" for Document/ReferenceDetail'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
			(
			GID1.Type = ''E020''
			AND	GID1.Qualifier IN (''FWE'', ''231'')
			) 
		AND GID1.ReferenceDetail = ''''	 

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/IssueDate'' AS Location,	
''Document/IssueDate is not allowed to be in the furure'' AS Warning						
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GID1.IssueDate > @EffectiveValidationDate
   		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/IssueDate'' AS Location,							
''Document/IssueDate is not allowed to be after Document/ExpiryDate'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GID1.IssueDate > GID1.ExpiryDate
	
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/ExpiryDate'' AS Location,							
''Document/ExpiryDate is not allowed to be before '' + @E_EXP_DAT_NAME + '' (E_EXP_DAT)/ApplicableDate'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GID1.Type = ''2AAF''
    AND GID1.ExpiryDate < DD.ApplicableDate

/*	Removed in 2.4.2
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Value'' AS Location,							
''Document/Value is not allowed to exceed EUR 5,000'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GID1.Type = ''X002''
	AND	GID1.Qualifier = ''A12''
    AND GID1.Value > 5000
*/	

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/QuantityUOM'' AS Location,							
''Not valid value for Document/QuantityUOM'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GID1.Type = ''X001''
    AND GID1.QuantityUOM NOT IN (''l'', ''St'', '''')
	
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Quantity'' AS Location,							
''Document/Quantity is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GID1.QuantityUOM NOT IN (''div'', ''ItAnlage'')
	AND GID1.Quantity IS NULL

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Quantity'' AS Location,							
''Document/Quantity is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND GID1.QuantityUOM IN (''div'', ''ItAnlage'')
	AND GID1.Quantity IS NOT NULL	
	
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document [''+CONVERT(VARCHAR(3),GID1.SequenceNum)+'']/Quantity'' AS Location,							
''Integer should be provided for Document/Quantity'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
ON DD.PartnerID = GI.PartnerID AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemDocument GID1
ON DD.PartnerID = GID1.PartnerID AND GI.GoodsItemGUID = GID1.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
    AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GID1.Type = ''X001''
    AND GID1.Quantity <> ROUND (GID1.Quantity, 0)

INSERT INTO #ValidationWarning		

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/PreviousDocument [''+CONVERT(VARCHAR(3),GIPD.SequenceNum)+'']/Type'' AS Location,  
	''PreviousDocument/Type is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPreviousDocument GIPD
ON DD.PartnerID = GIPD.PartnerID  AND DD.DeclarationDataGUID = GIPD.DeclarationDataGUID AND GI.GoodsItemGUID = GIPD.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (GIPD.Reference <> ''''
		OR GIPD.AdditionalInformation <> ''''
		)
		AND GIPD.Type = ''''
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/PreviousDocument/Type'' AS Location,  	
	''"AAD" can be specified only once as the value for PreviousDocument/Type for each Goods Item'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		SELECT COUNT (*)
		FROM txdDEAESGoodsItemPreviousDocument GIPD1
		WHERE   GIPD1.PartnerID = @PartnerID 
		AND GIPD1.GoodsItemGUID = GI.GoodsItemGUID
		AND GIPD1.Type = ''AAD''
		) > 1

INSERT INTO #ValidationWarning   

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/PreviousDocument [''+CONVERT(VARCHAR(3),GIPD.SequenceNum)+'']/Reference'' AS Location,  
	''PreviousDocument/Reference is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPreviousDocument GIPD
ON DD.PartnerID = GIPD.PartnerID  AND DD.DeclarationDataGUID = GIPD.DeclarationDataGUID AND GI.GoodsItemGUID = GIPD.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (GIPD.Type <> ''''
		OR GIPD.AdditionalInformation <> ''''
		)
		AND GIPD.Reference = ''''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/PreviousDocument [''+CONVERT(VARCHAR(3),GIPD.SequenceNum)+'']/Reference'' AS Location,  
	''Format for PreviousDocument/Reference should be an24'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID = GI.PartnerID  AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemPreviousDocument GIPD
ON DD.PartnerID = GIPD.PartnerID  AND DD.DeclarationDataGUID = GIPD.DeclarationDataGUID AND GI.GoodsItemGUID = GIPD.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (GIPD.Type = ''AAD''
		AND GIPD.Reference <> ''''
		AND LEN(GIPD.Reference) <> 24
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/CWNumberOfPositions'' AS Location,  
	''CW Number Of Positions is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GI.CWNumberOfPositions <> 0
		)

INSERT INTO #ValidationWarning		

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/CWAuthorizationNumber'' AS Location,  
	''CW Authorization Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GI.CWAuthorizationNumber <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/CWOperatorRegistrationNumber'' AS Location,  
	''CW Authorization Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GI.CWOperatorRegistrationNumber <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/SequenceNumber'' AS Location,  
	''Customs Warehouse/Sequence Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.SequenceNumber <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/PositionNumber'' AS Location,  
	''Customs Warehouse/Position Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.PositionNumber <> 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/RegistrationNumber'' AS Location,  
	''Customs Warehouse/Registration Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.RegistrationNumber <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/RegistrationNumber'' AS Location,  
	''Format for Customs Warehouse/Registration Number should be an21'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		GICW.ATLASFilingFlag = ''1''
		AND GICW.RegistrationNumber <> ''''
		AND LEN(GICW.RegistrationNumber) <> 21
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/CommodityCode'' AS Location,  
	''Customs Warehouse/Commodity Code is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.CommodityCode <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/ATLASFilingFlag'' AS Location,  
	''Customs Warehouse/ATLAS Filing Flag is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.ATLASFilingFlag <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/NormalProcessingFlag'' AS Location,  
	''Customs Warehouse/Normal Processing Flag is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.NormalProcessingFlag <> ''''
		)

INSERT INTO #ValidationWarning
	
	SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/AdditionalInformation'' AS Location,  
	''Customs Warehouse/Additional Information is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.AdditionalInformation <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/IssuedQuantityUOMQualifier'' AS Location,  
	''Customs Warehouse/Issued Quantity UOM Qualifier is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.IssuedQuantityUOMQualifier <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/IssuedQuantityUOM'' AS Location,  
	''Customs Warehouse/Issued Quantity UOM is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.IssuedQuantityUOM <> ''''
		)

INSERT INTO #ValidationWarning
	
SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/IssuedQuantity'' AS Location,  
	''Customs Warehouse/Issued Quantity is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			)
		AND GICW.IssuedQuantity <> 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/IssuedQuantity'' AS Location,  
	''Customs Warehouse/Issued Quantity should be integer'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 NOT IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		AND	GI.PreviousProcedure = ''71''
		AND GICW.IssuedQuantityUOM IN (''NAR'', ''NCL'', ''NPR'')
		---AND ISNUMERIC (GICW.IssuedQuantity + ''.00'') = 0
		AND GICW.IssuedQuantity <> ROUND (GICW.IssuedQuantity, 0)
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/TradeQuantityUOMQualifier'' AS Location,  
	''Customs Warehouse/Trade Quantity UOM Qualifier is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			OR  GICW.NormalProcessingFlag <> ''1''
			)
		AND GICW.TradeQuantityUOMQualifier <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/TradeQuantityUOM'' AS Location,  
	''Customs Warehouse/Trade Quantity UOM is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			OR  GICW.NormalProcessingFlag <> ''1''
			)
		AND GICW.TradeQuantityUOM <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/TradeQuantity'' AS Location,  
	''Customs Warehouse/Trade Quantity is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure <> ''71''
			OR  GICW.NormalProcessingFlag <> ''1''
			)
		AND GICW.TradeQuantity <> 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Customs Warehouse [''+CONVERT(VARCHAR(3),GICW.SequenceNum)+'']/TradeQuantity'' AS Location,  
	''Customs Warehouse/Trade Quantity should be integer'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemCustomsWarehouse GICW
ON DD.PartnerID = GICW.PartnerID  AND DD.DeclarationDataGUID = GICW.DeclarationDataGUID AND GI.GoodsItemGUID = GICW.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 NOT IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		AND	GI.PreviousProcedure = ''71''
		AND GICW.NormalProcessingFlag = ''1''
		AND GICW.TradeQuantityUOM IN (''NAR'', ''NCL'', ''NPR'')
		---AND ISNUMERIC (GICW.TradeQuantity + ''.00'') = 0
		AND GICW.TradeQuantity <> ROUND (GICW.TradeQuantity, 0)
		
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IPNumberOfPositions'' AS Location,  
	''IP Number Of Positions is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
			)
		AND GI.IPNumberOfPositions <> 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IPAuthorizationNumber'' AS Location,  
	''IP Authorization Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
			)
		AND GI.IPAuthorizationNumber <> ''''
		)


INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IPAuthorizationNumber'' AS Location,  
	''IP Authorization Number format is invalid'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		DD.DeclarationType2 NOT IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		AND	GI.PreviousProcedure  IN (''02'', ''41'', ''51'', ''91'')
		)
		AND GI.PreviousProcedure IN (''02'', ''41'', ''51'')
		AND GI.IPAuthorizationNumber <> ''''
		AND (
			
			GI.IPAuthorizationNumber NOT LIKE ''[A-Z][A-Z][0-9][0-9][0-9][0-9]AV[0-9][0-9][0-9][0-9]''
			AND
			GI.IPAuthorizationNumber NOT LIKE ''DEIPO[0-9][0-9][0-9][0-9]AV[0-9][0-9][0-9][0-9][0-9][0-9]''
			AND
			(GI.IPAuthorizationNumber NOT LIKE ''[A-Z][A-Z]IPO_%'' 
				OR 
					NOT EXISTS(SELECT TOP 1 * FROM tmgGlobalCodes WHERE PartnerID = @PartnerID AND FieldName=@CODELIST_PREFIX+''-C0010'' AND Code=LEFT(GI.IPAuthorizationNumber,2) AND Code<>''DE''))
		)
		
		
INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IPAuthorizationNumber'' AS Location,  
	''IP Authorization Number format is invalid'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		DD.DeclarationType2 NOT IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		AND	GI.PreviousProcedure  IN (''02'', ''41'', ''51'', ''91'')
		)
		AND GI.PreviousProcedure = ''91''
		AND GI.IPAuthorizationNumber <> ''''
		AND (
			
			GI.IPAuthorizationNumber NOT LIKE ''[A-Z][A-Z][0-9][0-9][0-9][0-9]UV[0-9][0-9][0-9][0-9]''
			AND
			GI.IPAuthorizationNumber NOT LIKE ''DEIPO[0-9][0-9][0-9][0-9]UV[0-9][0-9][0-9][0-9][0-9][0-9]''
			AND
			(GI.IPAuthorizationNumber NOT LIKE ''[A-Z][A-Z]IPO_%'' 
				OR 
					NOT EXISTS(SELECT TOP 1 * FROM tmgGlobalCodes WHERE PartnerID = @PartnerID AND FieldName=@CODELIST_PREFIX+''-C0010'' AND Code=LEFT(GI.IPAuthorizationNumber,2)))
		)		
		

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/SequenceNumber'' AS Location,  
	''Inward Processing/Sequence Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
			)
		AND GIIP.SequenceNumber <> 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/PositionNumber'' AS Location,  
	''Inward Processing/Position Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
			)
		AND GIIP.PositionNumber <> 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/RegistrationNumber'' AS Location,  
	''Inward Processing/Registration Number is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
			)
		AND GIIP.RegistrationNumber <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/RegistrationNumber'' AS Location,  
	''Format for Inward Processing/Registration Number should be an21'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
		AND GIIP.ATLASFilingFlag = 1
		AND GIIP.RegistrationNumber <> ''''
		AND LEN (GIIP.RegistrationNumber) <> 21

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/RegistrationNumber'' AS Location,  
	''"P" should be specified for the 3rd symbol of Inward Processing/Registration Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
		AND GIIP.ATLASFilingFlag = 1
		AND LEN (GIIP.RegistrationNumber) = 21
		AND GI.PreviousProcedure IN (''02'', ''41'', ''51'')
		AND SUBSTRING (GIIP.RegistrationNumber, 3, 1) <> ''P''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/RegistrationNumber'' AS Location,  
	''"R" should be specified for the 3rd symbol of Inward Processing/Registration Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
		AND GIIP.ATLASFilingFlag = 1
		AND LEN (GIIP.RegistrationNumber) = 21
		AND GI.PreviousProcedure = ''91''
		AND SUBSTRING (GIIP.RegistrationNumber, 3, 1) <> ''R''

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/RegistrationNumber'' AS Location,  
	''Previous Procedure should match with the 4th and 5th symbols of Inward Processing/Registration Number'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
		AND GIIP.ATLASFilingFlag = 1
		AND LEN (GIIP.RegistrationNumber) = 21
		AND GI.PreviousProcedure <> SUBSTRING (GIIP.RegistrationNumber, 4, 2)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/ATLASFilingFlag'' AS Location,  
	''Inward Processing/ATLAS Filing Flag is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
			)
		AND GIIP.ATLASFilingFlag <> ''''
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/DescriptionOfGoods'' AS Location,  
	''Inward Processing/Description Of Goods is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
			(
			DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
			OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
			)
		AND GIIP.DescriptionOfGoods <> ''''
		)

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IPNumberOfPositions'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''InwardProcessing/IPNumberOfPositions is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
    AND GI.IPAuthorizationNumber + GIIP.RegistrationNumber + GIIP.ATLASFilingFlag + GIIP.DescriptionOfGoods <> '''' 
	AND GIIP.SequenceNumber + GIIP.PositionNumber <> 0
	AND GI.IPNumberOfPositions = '''' 	

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/IPAuthorizationNumber'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''InwardProcessing/IPAuthorizationNumber is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
    AND GIIP.RegistrationNumber + GIIP.ATLASFilingFlag + GIIP.DescriptionOfGoods <> '''' 
	AND GI.IPNumberOfPositions + GIIP.SequenceNumber + GIIP.PositionNumber <> 0 
	AND GI.IPAuthorizationNumber = '''' 		

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/SequenceNumber'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''InwardProcessing/SequenceNumber is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
    AND GI.IPAuthorizationNumber + GIIP.RegistrationNumber + GIIP.ATLASFilingFlag + GIIP.DescriptionOfGoods <> '''' 
	AND GI.IPNumberOfPositions + GIIP.PositionNumber <> 0
	AND GIIP.SequenceNumber = '''' 		

INSERT INTO #ValidationWarning	

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/PositionNumber'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''InwardProcessing/PositionNumber is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
    AND GI.IPAuthorizationNumber + GIIP.RegistrationNumber + GIIP.ATLASFilingFlag + GIIP.DescriptionOfGoods <> ''''
	AND GI.IPNumberOfPositions + GIIP.SequenceNumber <> 0 
	AND GIIP.PositionNumber = '''' 		

INSERT INTO #ValidationWarning	

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/RegistrationNumber'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''InwardProcessing/RegistrationNumber is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
    AND GI.IPAuthorizationNumber + GIIP.ATLASFilingFlag + GIIP.DescriptionOfGoods <> '''' 
	AND GI.IPNumberOfPositions + GIIP.SequenceNumber + GIIP.PositionNumber <> 0
	AND GIIP.RegistrationNumber = '''' 		

INSERT INTO #ValidationWarning	

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/ATLASFilingFlag'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''InwardProcessing/ATLASFilingFlag is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
    AND GI.IPAuthorizationNumber + GIIP.RegistrationNumber + GIIP.DescriptionOfGoods <> ''''
	AND GI.IPNumberOfPositions + GIIP.SequenceNumber + GIIP.PositionNumber <> 0 
	AND GIIP.ATLASFilingFlag = '''' 		

INSERT INTO #ValidationWarning	
	
SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Inward Processing [''+CONVERT(VARCHAR(3),GIIP.SequenceNum)+'']/DescriptionOfGoods'' AS Location,							
--''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/Document/Type'' AS Location,
''InwardProcessing/DescriptionOfGoods is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemInwardProcessing GIIP
ON DD.PartnerID = GIIP.PartnerID  AND DD.DeclarationDataGUID = GIIP.DeclarationDataGUID AND GI.GoodsItemGUID = GIIP.GoodsItemGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		(
		DD.DeclarationType2 IN (''nA'', ''nB'', ''nK'', ''nN'', ''mS'') 
		OR	GI.PreviousProcedure NOT IN (''02'', ''41'', ''51'', ''91'')
		)
    AND GI.IPAuthorizationNumber + GIIP.RegistrationNumber + GIIP.ATLASFilingFlag <> '''' 
	AND GI.IPNumberOfPositions + GIIP.SequenceNumber + GIIP.PositionNumber <> 0
	AND GIIP.DescriptionOfGoods = '''' 		

INSERT INTO #ValidationWarning			

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerIDType'' AS Location, 
	''OutwardProcessingOwnerIDType is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		    DD.PartiesStatus LIKE ''___3''
			AND DD.OutwardProcessingOwnerIDType = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerIDType'' AS Location, 
	''OutwardProcessingOwnerIDType is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		DD.PartiesStatus NOT LIKE ''___3''
		AND DD.OutwardProcessingOwnerIDType <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerID'' AS Location, 
	''OutwardProcessingOwnerID is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		    PartiesStatus LIKE ''___3''
			AND OutwardProcessingOwnerID = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerID'' AS Location, 
	''OutwardProcessingOwnerID is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''___3''
		AND OutwardProcessingOwnerID <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerID'' AS Location, 
	''OutwardProcessingOwnerID and Exporter ID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			PartiesStatus LIKE ''___3''
			AND OutwardProcessingOwnerID = ExporterID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerID'' AS Location, 
	''OutwardProcessingOwnerID and DeclarantID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			PartiesStatus LIKE ''___3''
			AND OutwardProcessingOwnerID = DeclarantID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerID'' AS Location, 
	''OutwardProcessingOwnerID and AgentID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			PartiesStatus LIKE ''___3''
			AND OutwardProcessingOwnerID = AgentID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerID'' AS Location, 
	''OutwardProcessingOwnerID and SubContractorID are not allowed to be the same'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (	
			PartiesStatus LIKE ''___3''
			AND OutwardProcessingOwnerID = SubContractorID
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerBranch'' AS Location, 
	''OutwardProcessingOwnerBranch is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''___3''
		AND OutwardProcessingOwnerBranch <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerContactPosition'' AS Location, 
	''OutwardProcessingOwnerContactPosition is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''___3''
		AND OutwardProcessingOwnerContactPosition <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerContactName'' AS Location, 
	''OutwardProcessingOwnerContactName is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		    PartiesStatus LIKE ''___3''
			AND OutwardProcessingOwnerContactName = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerContactName'' AS Location, 
	''OutwardProcessingOwnerContactName is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''___3''
		AND OutwardProcessingOwnerContactName <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerContactTel'' AS Location, 
	''OutwardProcessingOwnerContactTel is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                               
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		    PartiesStatus LIKE ''___3''
			AND OutwardProcessingOwnerContactTel = ''''
        )

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerContactTel'' AS Location, 
	''OutwardProcessingOwnerContactTel is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''___3''
		AND OutwardProcessingOwnerContactTel <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerContactFax'' AS Location, 
	''OutwardProcessingOwnerContactFax is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''___3''
		AND OutwardProcessingOwnerContactFax <> ''''
		)

INSERT INTO #ValidationWarning

SELECT @E_EXP_DAT_NAME + '' (E_EXP_DAT)/OutwardProcessingOwnerContactEmail'' AS Location, 
	''OutwardProcessingOwnerContactEmail is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND ( 
		PartiesStatus NOT LIKE ''___3''
		AND OutwardProcessingOwnerContactEmail <> ''''
		)

INSERT INTO #ValidationWarning

SELECT 
''SpecialStatement/StatementCode'' AS Location, 						
''SpecialStatement/StatementCode is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT EXISTS
		(
		SELECT SS.PartnerID
		FROM txdDEAESSpecialStatement SS	
		WHERE   SS.PartnerID = DD.PartnerID 
		AND SS.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	SS.StatementCode <> ''''
		)
					
INSERT INTO #ValidationWarning
		
SELECT ''SpecialStatement [''+CONVERT(VARCHAR(3),SS.SequenceNum)+'']/StatementCode'' AS Location,  	
''0 is not allowed to be specified when we have more than one SpecialStatement/StatementCode'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESSpecialStatement SS
ON DD.PartnerID = SS.PartnerID  AND DD.DeclarationDataGUID = SS.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		SELECT COUNT (*)
		FROM txdDEAESSpecialStatement SS1
		WHERE   SS1.PartnerID = @PartnerID 
		AND SS1.DeclarationDataGUID = @DeclarationDataGUID
		AND SS1.StatementCode <> ''''
		) > 1
	AND SS.StatementCode = ''0''

INSERT INTO #ValidationWarning   		
		
SELECT ''SpecialStatement [''+CONVERT(VARCHAR(3),SS.SequenceNum)+'']/StatementCode'' AS Location,  	
''Not valid value for SpecialStatement/StatementCode'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESSpecialStatement SS
ON DD.PartnerID = SS.PartnerID  AND DD.DeclarationDataGUID = SS.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND 
		(
		PartiesStatus LIKE ''_1__''
		AND DeclarantIDType <> ''2''
		AND SS.StatementCode = ''1''
	OR
		DD.DeclarationType2 <> ''nN''
		AND SS.StatementCode = ''3''
	OR
		DD.DestinationCountry <> ''QQ''
		AND SS.StatementCode = ''4''
	OR
		PartiesStatus LIKE ''01__''
		AND DeclarantIDType <> ''2''
		AND SS.StatementCode = ''5''
	OR
		PartiesStatus LIKE ''1___''
		AND ExporterIDType <> ''2''
		AND SS.StatementCode = ''5''
		)
INSERT INTO #ValidationWarning   

SELECT ''SpecialStatement [''+CONVERT(VARCHAR(3),SS.SequenceNum)+'']/StatementCode'' AS Location,  	
''Each value for SpecialStatement/StatementCode should be used only once'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESSpecialStatement SS
ON DD.PartnerID = SS.PartnerID  AND DD.DeclarationDataGUID = SS.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND EXISTS
		(
		SELECT SS1.PartnerID
		FROM txdDEAESSpecialStatement SS1
		WHERE   SS1.PartnerID = @PartnerID 
		AND SS1.DeclarationDataGUID = @DeclarationDataGUID
		AND SS1.SpecialStatementGUID <> SS.SpecialStatementGUID
		AND SS1.StatementCode = SS.StatementCode
		)
	
INSERT INTO #ValidationWarning   

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RefundAmount'' AS Location,  
	''RefundAmount is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 = ''AE''
		AND GI.RefundAmount = 0
		)

INSERT INTO #ValidationWarning

SELECT ''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RefundAmount'' AS Location,  
	''RefundAmount is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
    AND (
		DD.DeclarationType2 <> ''AE''
		AND GI.RefundAmount <> 0
		)

INSERT INTO #ValidationWarning

SELECT 
''Goods Items [''+CONVERT(VARCHAR(3),GI.ItemNumber)+'']/RefundAmount'' AS Location, 
''RefundAmount should be integer'' AS Warning
FROM    txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
ON DD.PartnerID=GI.PartnerID  AND DD.DeclarationDataGUID=GI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationType2 = ''AE'' 
	--AND ISNUMERIC (GI.RefundAmount + ''.00'') = 0
	AND GI.RefundAmount <> ROUND (GI.RefundAmount, 0)
	AND EXISTS
		(
		SELECT DD1.PartnerID FROM txdDEAESDeclarationData DD1
		JOIN txdDEAESGoodsItem GI1
		ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID
		
		WHERE   DD1.PartnerID = @PartnerID AND DD1.DeclarationGUID = DD.DeclarationGUID
		---AND DD1.Type = ''E_EXP_IND''			----IND
		AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_IND''
                                    ----AND M.STATUS = ''TRANSMITTED''
                              ORDER BY M.SequenceNum DESC
                              )	
		AND GI1.RefundQuantityUOM IN (''NAR'', ''CEN'', ''MIL'')								
		)
		
INSERT INTO #ValidationWarning
	
SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ReImportDate'' AS Location, 
''ReImportDate is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                              
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND DD.ReImportDate = ''''

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ReImportDate'' AS Location, 
''ReImportDate is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD                              
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND DD.ReImportDate <> ''''

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ReImportDate'' AS Location, 
''ReImportDate is not allowed to be in the past'' AS Warning
FROM    txdDEAESDeclarationData DD                              
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
		)
		AND DD.StandardExchange <> ''1''
		AND DD.ReImportDate <> ''''
		AND DD.ReImportDate < @EffectiveValidationDate

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/ReImportDate'' AS Location, 
''ReImportDate can be maximum 3 years in the future'' AS Warning
FROM    txdDEAESDeclarationData DD                              
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
		)
		AND DD.ReImportDate <> ''''
		AND DD.ReImportDate > DATEADD(YEAR, 3, @EffectiveValidationDate)

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/StandardExchange'' AS Location, 
''StandardExchange is mandatory'' AS Warning
FROM    txdDEAESDeclarationData DD                              
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND DD.StandardExchange = ''''

INSERT INTO #ValidationWarning

SELECT 
@E_EXP_DAT_NAME + '' (E_EXP_DAT)/StandardExchange'' AS Location, 
''StandardExchange is not allowed'' AS Warning
FROM    txdDEAESDeclarationData DD                              
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND DD.StandardExchange <> ''''

INSERT INTO #ValidationWarning

SELECT 
''OPReImportCountry/Code'' AS Location, 						
''OPReImportCountry/Code is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND NOT EXISTS
		(
		SELECT OPRIC.PartnerID
		FROM txdDEAESOutwardProcessingReImportCountry OPRIC	
		WHERE   OPRIC.PartnerID = DD.PartnerID 
		AND OPRIC.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPRIC.Code <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT 
''OPReImportCountry/Code'' AS Location, 						
''OPReImportCountry/Code is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND EXISTS
		(
		SELECT OPRIC.PartnerID
		FROM txdDEAESOutwardProcessingReImportCountry OPRIC	
		WHERE   OPRIC.PartnerID = DD.PartnerID 
		AND OPRIC.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPRIC.Code <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT 
''OPReImportCountry/Code'' AS Location, 						
''Each value for OPReImportCountry/Code should be used only once'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND EXISTS
		(
		SELECT OPRIC.PartnerID
		FROM txdDEAESOutwardProcessingReImportCountry OPRIC	
		WHERE   OPRIC.PartnerID = DD.PartnerID 
		AND OPRIC.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPRIC.Code <> ''''
		AND EXISTS
			(
			SELECT OPRIC1.PartnerID
			FROM txdDEAESOutwardProcessingReImportCountry OPRIC1	
			WHERE   OPRIC1.PartnerID = DD.PartnerID 
			AND OPRIC1.DeclarationDataGUID = DD.DeclarationDataGUID
			AND OPRIC1.OutwardProcessingReImportCountryGUID <> OPRIC.OutwardProcessingReImportCountryGUID
			AND	OPRIC1.Code = OPRIC.Code
			)
		)
					
INSERT INTO #ValidationWarning
/*
SELECT 													?????????????????????????????????????????????????????????
''OPReImportCountry/Code'' AS Location, 		
''The data field must be a country called, but that name matches either in the first two letters (country code) with a Directory or with one of the 
countries that reported each in box 11 of the referenced by the data field "HEAD / GRANT / Outward processing" authorization are, if the data fields 
"HEAD / type of application (process)" and "HEAD / type of application (transfer)" with the values "z P + a / b / c / d / e / f / m / n / o / p / q / r ",
" nB / nK / nN + b / c "(customs outward processing using a PV-authorization) must be specified.''				

INSERT INTO #ValidationWarning*/

SELECT 
''OPReImportCountry/Code'' AS Location, 						
''Only "DE" is allowed to be specified for OPReImportCountry/Code'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		AND DD.DeclarationType3 IN (''s'', ''t'', ''u'', ''v'')
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 = ''d''
        )
	AND EXISTS
		(
		SELECT OPRIC.PartnerID
		FROM txdDEAESOutwardProcessingReImportCountry OPRIC	
		WHERE   OPRIC.PartnerID = DD.PartnerID 
		AND OPRIC.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPRIC.Code <> ''''
		AND	OPRIC.Code <> ''DE''
		)
					
INSERT INTO #ValidationWarning

SELECT 											------[Type] or Type????????????????????????????????????????????
''OPIdentification/[Type]'' AS Location, 						
''OPIdentification/[Type] is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND NOT EXISTS
		(
		SELECT OPI.PartnerID
		FROM txdDEAESOutwardProcessingIdentification OPI	
		WHERE   OPI.PartnerID = DD.PartnerID 
		AND OPI.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPI.[Type] <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT  											------[Type] or Type????????????????????????????????????????????
''OPIdentification/[Type]'' AS Location, 						
''OPIdentification/[Type] is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND EXISTS
		(
		SELECT OPI.PartnerID
		FROM txdDEAESOutwardProcessingIdentification OPI	
		WHERE   OPI.PartnerID = DD.PartnerID 
		AND OPI.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPI.[Type] <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT   											------[Type] or Type????????????????????????????????????????????
''OPIdentification/[Type]'' AS Location, 						
''Each value for OPIdentification/[Type] should be used only once'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND EXISTS
		(
		SELECT OPI.PartnerID
		FROM txdDEAESOutwardProcessingIdentification OPI	
		WHERE   OPI.PartnerID = DD.PartnerID 
		AND OPI.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPI.[Type] <> ''''
		AND EXISTS
			(
			SELECT OPI1.PartnerID
			FROM txdDEAESOutwardProcessingIdentification OPI1	
			WHERE   OPI1.PartnerID = DD.PartnerID 
			AND OPI1.DeclarationDataGUID = DD.DeclarationDataGUID
			AND OPI1.OutwardProcessingIdentificationGUID <> OPI.OutwardProcessingIdentificationGUID
			AND	OPI1.[Type] = OPI.[Type]
			)
		)
					
INSERT INTO #ValidationWarning

SELECT 	
''OPIdentification [''+CONVERT(VARCHAR(3),OPI.SequenceNum)+'']/[Type]''	AS Location,						------[Type] or Type????????????????????????????????????????????					
''"O" is not permitted value for OPIdentification/[Type]'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESOutwardProcessingIdentification OPI
ON DD.PartnerID = OPI.PartnerID AND DD.DeclarationDataGUID = OPI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND 
		(DD.StandardExchange = ''0''
		OR (
			SELECT COUNT (*)
			FROM txdDEAESOutwardProcessingIdentification OPI1
			WHERE   OPI1.PartnerID = @PartnerID 
			AND OPI1.DeclarationDataGUID = @DeclarationDataGUID
			AND OPI1.OutwardProcessingIdentificationGUID <> ''''
			) > 1
		)
	AND OPI.[Type] = ''O''
					
INSERT INTO #ValidationWarning

SELECT
''OPIdentification [''+CONVERT(VARCHAR(3),OPI.SequenceNum)+'']/Description'' AS Location, 						
''OPIdentification/Description is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESOutwardProcessingIdentification OPI
ON DD.PartnerID = OPI.PartnerID AND DD.DeclarationDataGUID = OPI.DeclarationDataGUID
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND OPI.[Type] = ''S''											------[Type] or Type????????????????????
	AND OPI.Description = ''''
					
INSERT INTO #ValidationWarning

SELECT
''OPIdentification/Description'' AS Location, 						
''OPIdentification/Description is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND EXISTS
		(
		SELECT OPI.PartnerID
		FROM txdDEAESOutwardProcessingIdentification OPI	
		WHERE   OPI.PartnerID = DD.PartnerID 
		AND OPI.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPI.Description <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT
''OPProduct/CommodityCode'' AS Location, 						
''OPProduct/CommodityCode is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND NOT EXISTS
		(
		SELECT OPP.PartnerID
		FROM txdDEAESOutwardProcessingProduct OPP	
		WHERE   OPP.PartnerID = DD.PartnerID 
		AND OPP.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPP.CommodityCode <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT 
''OPProduct/CommodityCode'' AS Location, 						
''OPProduct/CommodityCode is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND EXISTS
		(
		SELECT OPP.PartnerID
		FROM txdDEAESOutwardProcessingProduct OPP	
		WHERE   OPP.PartnerID = DD.PartnerID 
		AND OPP.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPP.CommodityCode <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT
''OPProduct [''+CONVERT(VARCHAR(3),OPP.SequenceNum)+'']/CommodityCode'' AS Location, 						
''Format for OPProduct/CommodityCode should be n8'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESOutwardProcessingProduct OPP
ON DD.PartnerID = OPP.PartnerID AND DD.DeclarationDataGUID = OPP.DeclarationDataGUID 
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND DD.StandardExchange = ''1''
	AND OPP.CommodityCode <>''''
	AND 
		(
		LEN (OPP.CommodityCode) <> 8
		OR ISNUMERIC (OPP.CommodityCode) = 0
		)
					
INSERT INTO #ValidationWarning

/*
SELECT 													?????????????????????????????????????????????????????????
''OPReImportCountry/Code'' AS Location, 		
''The commodity code must in the referenced by the data field "HEAD / GRANT / Outward processing" license listed his, if the data fields 
"HEAD / type of application (process)" and "HEAD / type of application (transfer)" with the values " zP + a / b / c / d / e / f / m / n / o / p / q / r "
or" nB / nK / nN + b / c "(Outward processing using a PV-authorization) are given ''				

INSERT INTO #ValidationWarning*/

SELECT
''OPProduct/Description'' AS Location, 						
''OPProduct/Description is mandatory'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND NOT EXISTS
		(
		SELECT OPP.PartnerID
		FROM txdDEAESOutwardProcessingProduct OPP	
		WHERE   OPP.PartnerID = DD.PartnerID 
		AND OPP.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPP.Description <> ''''
		)
					
INSERT INTO #ValidationWarning

SELECT 
''OPProduct/Description'' AS Location, 						
''OPProduct/Description is not allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE   DD.PartnerID = @PartnerID 
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND NOT
		( 
		DD.DeclarationType2 = ''zP''
		OR DD.DeclarationType2 IN (''nB'', ''nK'', ''nN'') 
		AND DD.DeclarationType3 IN (''b'', ''c'', ''d'')
        )
	AND EXISTS
		(
		SELECT OPP.PartnerID
		FROM txdDEAESOutwardProcessingProduct OPP	
		WHERE   OPP.PartnerID = DD.PartnerID 
		AND OPP.DeclarationDataGUID = DD.DeclarationDataGUID
		AND	OPP.Description <> ''''
		)




INSERT INTO #ValidationWarning
SELECT ''HEADER/OPLocalClearanceAuthorizationNumber'' AS Location,
	''Format is not valid'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.OPLocalClearanceAuthorizationNumber <> ''''
	AND (
			(
				DD.OPLocalClearanceAuthorizationNumber NOT like ''[a-z][a-z][0-9][0-9][0-9][0-9]A7[0-9][0-9][0-9][0-9]''
				AND
				DD.OPLocalClearanceAuthorizationNumber NOT like ''DESDE[0-9][0-9][0-9][0-9]A7[0-9][0-9][0-9][0-9][0-9][0-9]''
				AND
				(DD.OPLocalClearanceAuthorizationNumber NOT like ''[A-Z][A-Z]SDE__%'' 
				AND DD.OPLocalClearanceAuthorizationNumber not like ''DE%'')
			)
				OR LEFT(DD.OPLocalClearanceAuthorizationNumber, 2) NOT IN
				(SELECT Code FROM tmgGlobalCodes WHERE FieldName = @CODELIST_PREFIX+''-C0010'')
	)


INSERT INTO #ValidationWarning
SELECT ''HEADER/OPAuthorizationNumber'' AS Location,
	''Format is not valid'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.OPAuthorizationNumber <> ''''
	AND (
			(
				DD.OPAuthorizationNumber NOT like ''[a-z][a-z][0-9][0-9][0-9][0-9]PV[0-9][0-9][0-9][0-9]''
				AND
				DD.OPAuthorizationNumber NOT like ''DEOPO[0-9][0-9][0-9][0-9]PV[0-9][0-9][0-9][0-9][0-9][0-9]''
				AND
				(DD.OPAuthorizationNumber NOT like ''[a-z][a-z]OPO_%'' 
				AND DD.OPAuthorizationNumber not like ''DE%'')
			)
				OR LEFT(DD.OPAuthorizationNumber, 2) NOT IN 
				(SELECT Code FROM tmgGlobalCodes WHERE FieldName = @CODELIST_PREFIX+''-C0010'')
	)

	
INSERT INTO #ValidationWarning
SELECT ''HEADER/AuthorizedExporterNumber'' AS Location,
	''Format is not valid'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.AuthorizedExporterNumber <> ''''
	AND (
			(
			DD.AuthorizedExporterNumber NOT like ''[a-z][a-z][0-9][0-9][0-9][0-9]ZA[0-9][0-9][0-9][0-9]''
			AND
			DD.AuthorizedExporterNumber NOT like ''DESDE[0-9][0-9][0-9][0-9]ZA[0-9][0-9][0-9][0-9][0-9][0-9]''
			AND
			(DD.AuthorizedExporterNumber NOT like ''[A-Z][A-Z]SDE_%'' 
			AND DD.AuthorizedExporterNumber not like ''DE%'')
			)
			OR LEFT(DD.AuthorizedExporterNumber, 2) NOT IN 
			(SELECT Code FROM tmgGlobalCodes WHERE FieldName = @CODELIST_PREFIX+''-C0010'')
	)

INSERT INTO #ValidationWarning
SELECT ''HEADER/TrustedExporterNumber'' AS Location,
	''Format is not valid'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		DD.TrustedExporterNumber <> '''' AND
		DD.TrustedExporterNumber NOT like ''DE[0-9][0-9][0-9][0-9]VA[0-9][0-9][0-9][0-9]''
	)


INSERT INTO txdDEAESValidationWarning
SELECT @PartnerID AS PartnerID,
	GETDATE() AS EffDate,
	@DeclarationGUID AS DeclarationGUID,
	@DeclarationDataGUID AS DeclarationDataGUID,
	NEWID() AS WarningGUID,
	Location,
	Warning,
	''N'',
	''N''
FROM #ValidationWarning



', CAST(N'2018-02-19T11:50:04.253' AS DateTime), N'DE-AES-2.4.2 E_EXP_DAT validation query', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2018-02-19T11:50:04.283' AS DateTime), N'DE-AES-2.4.2 E_EXP_IND', N'DE-AES-2.4.2 E_EXP_IND', N'
	
	
DECLARE @EffectiveValidationDate DATETIME = GETDATE()

DELETE
FROM txdDEAESValidationWarning
WHERE PartnerID = @PartnerID
	AND DeclarationGUID = @DeclarationGUID
	AND DeclarationDataGUID = @DeclarationDataGUID

CREATE TABLE #ValidationWarning (
	Location VARCHAR(1000) NOT NULL,
	Warning VARCHAR(2000) NOT NULL
	)
/*
INSERT INTO #ValidationWarning
select @E_EXP_IND_NAME + ''(E_EXP_IND/Header/RefundDestinationCountry)'' as Location,
''The values ''''XE'''' or ''''XF'''' are permissible only if the data field ''''DestinationCountry'''' in the export declaration (E_EXP_DAT/Header) with one of the values ''''QQ'''',''''QR'''' or ''''QS'''' are specified'' as Warning
from txdDEAESDeclarationData DD
JOIN txdDEAESDeclarationData DD1
ON DD.PartnerID=DD1.PartnerID  AND DD.DeclarationGUID=DD1.DeclarationGUID
WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
      AND ( DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationDataGUID
                                    AND M.Type = ''E_EXP_DAT''
                                   ORDER BY M.SequenceNum DESC
                              )
                              AND
            DD.RefundDestinationCountry = ''XE''
or 
DD.RefundDestinationCountry = ''XF''                            
 AND DD1.DestinationCountry NOT IN (''QQ'', ''QR'', ''QS'') 
)

 INSERT INTO #ValidationWarning
 
select @E_EXP_IND_NAME + ''(E_EXP_IND/Header/RefundDestinationCountry)'' as Location,
''The values ''''XE'''' or ''''XF'''' are permissible only if the data field ''''NationalProcedure'''' in the export declaration (E_EXP_DAT/GoodsItem) with the value ''''F62'''' is specified'' as Warning
 from txdDEAESDeclarationData DD 
WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
AND (
	DD.RefundDestinationCountry = ''XE''
or 
DD.RefundDestinationCountry = ''XF''
	AND EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_DAT''
                                   ORDER BY M.SequenceNum DESC
                              )	
 	
and
  GI1.NationalProcedure <> ''F62''	
 ))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/RefundDestinationCountry)'' AS Location,
	''The values ''''XG'''', ''''XN'''', ''''XQ'''', ''''XR'''' and ''''XY'''' are allowed only if all the data field	''''NationalProcedure'''' in the export declaration (E_EXP_DAT/GoodsItem) with the value ''''F62'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID AND DD.DeclarationDataGUID = @DeclarationDataGUID
AND (DD.RefundDestinationCountry = ''XG''
	OR DD.RefundDestinationCountry = ''XN''
	OR DD.RefundDestinationCountry = ''XQ''
	OR DD.RefundDestinationCountry = ''XR''
	OR DD.RefundDestinationCountry = ''XY''
	AND EXISTS
			(
			SELECT GI1.PartnerID
			FROM txdDEAESDeclarationData DD1
			JOIN txdDEAESGoodsItem GI1
			ON DD1.PartnerID=GI1.PartnerID  AND DD1.DeclarationDataGUID=GI1.DeclarationDataGUID		
			WHERE   DD1.PartnerID = DD.PartnerID 
			AND DD1.DeclarationGUID = DD.DeclarationGUID
			AND DD1.DeclarationDataGUID = (
                              SELECT TOP 1 M.DeclarationDataGUID
                              FROM txdDEAESMessage M
                              WHERE M.PartnerID = @PartnerID
                                    AND M.DeclarationGUID = @DeclarationGUID
                                    AND M.Type = ''E_EXP_DAT''
                                   ORDER BY M.SequenceNum DESC
                              )	
AND GI1.NationalProcedure <> ''F62''

))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/RefundDestinationCountry)'' AS Location,
	''The values ''''XN'''', ''''XR'''' or ''''XY'''' are permissible only if the data field ''''destinationCountry'''' in the export declaration (E_EXP_DAT/Header) with one of the values from the code lists C0063 or I0801 (third countries) indicated becomes'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND( DD.RefundDestinationCountry IN (''XR'', ''XN'', ''XY'')
	AND NOT EXISTS (
		SELECT TOP 1 DD.DestinationCountry
		FROM txdDEAESDeclarationData DD
		INNER JOIN tmgGlobalCodes GC
			ON DD.DestinationCountry = GC.CODE
				AND DD.PartnerID = GC.PartnerID
				AND GC.FieldName = @CODELIST_PREFIX+''-I0811''
		WHERE DD.PartnerID = @PartnerID
			AND DD.DeclarationGUID = @DeclarationGUID
			AND DD.TYPE = ''E_EXP_DAT''
		)
	OR NOT EXISTS (
		SELECT TOP 1 DD.DestinationCountry
		FROM txdDEAESDeclarationData DD
		INNER JOIN tmgGlobalCodes GC
			ON DD.DestinationCountry = GC.CODE
				AND DD.PartnerID = GC.PartnerID
				AND GC.FieldName = @CODELIST_PREFIX+''-I0801''
		WHERE DD.PartnerID = @PartnerID
			AND DD.DeclarationGUID = @DeclarationGUID
			AND DD.TYPE = ''E_EXP_DAT''
		))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/RefundDestinationCountry)'' AS Location,
	''The values ''''XQ'''' are permissible only if the data field ''''destinationCountry'''' in the export declaration (E_EXP_DAT/Header) with one of the values from the code lists C0063 or I0801 (third countries), ''''QQ'''' or ''''QR''''  indicated becomes'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.RefundDestinationCountry = ''XQ''
	AND NOT EXISTS (
		SELECT TOP 1 DD.DestinationCountry
		FROM txdDEAESDeclarationData DD
		INNER JOIN tmgGlobalCodes GC
			ON DD.DestinationCountry = GC.CODE
				AND DD.PartnerID = GC.PartnerID
				AND GC.FieldName = @CODELIST_PREFIX+''-I0801''
		WHERE DD.PartnerID = @PartnerID
			AND DD.DeclarationGUID = @DeclarationGUID
			AND DD.TYPE = ''E_EXP_DAT''
		)
	OR NOT EXISTS (
		SELECT TOP 1 DD.DestinationCountry
		FROM txdDEAESDeclarationData DD
		INNER JOIN tmgGlobalCodes GC
			ON DD.DestinationCountry = GC.CODE
				AND DD.PartnerID = GC.PartnerID
				AND GC.FieldName = @CODELIST_PREFIX+''-I0811''
		WHERE DD.PartnerID = @PartnerID
			AND DD.DeclarationGUID = @DeclarationGUID
			AND DD.TYPE = ''E_EXP_DAT''
		)
*/

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/Exporter)'' AS Location,
	''Exporter information is not allowed to be provided if PartiesStatus is not one of the values "1***" (Declarant is an indirect representative of the exporter)'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.PartiesStatus NOT LIKE ''1___''
	AND DD.ExporterID+DD.ExporterBranch+DD.ExporterName+DD.ExporterAddress+DD.ExporterCity+DD.ExporterPostCode+DD.ExporterCountry<>''''

	
INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterIDType)'' AS Location,
	'' Field is required. There are only the values ''''0'''' (address data), ''''2'''' (EORI number) and ''''4'''' (TCUI number) allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ( DD.ExporterIDType NOT IN (''0'', ''2'', ''4''))
	AND DD.PartiesStatus LIKE ''1___''
	AND DD.ExporterID+DD.ExporterBranch+DD.ExporterName+DD.ExporterAddress+DD.ExporterCity+DD.ExporterPostCode+DD.ExporterCountry<>''''

	
INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterID)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''ExporterIDType'''' with one of the values ''''2'''' or ''''4'''' (EORI or TCUI number) is specified '' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
			(
				ExporterID <> ''''
				AND ExporterIDType <> ''2''
				OR ExporterID = ''''
				AND ExporterIDType = ''2''
				)
			OR (
				ExporterID <> ''''
				AND ExporterIDType <> ''4''
				OR ExporterID = ''''
				AND ExporterIDType = ''4''
			)
	)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterBranch)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ExporterIDType'''' with the value ''''2''''(EORI number) is specified.
If not specified, the default is ''''0000'''' used.'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ExporterBranch = ''''
	AND ExporterIDType = ''2''

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterName)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ExporterIDType'''' with the value ''''0''''(EORI number) is specified.
If not specified, the default is ''''0000'''' used.'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ExporterName = ''''
	AND ExporterIDType = ''0''

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterAddress)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ExporterIDType'''' with the value ''''0''''(EORI number) is specified.
If not specified, the default is ''''0000'''' used.'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ExporterAddress = ''''
	AND ExporterIDType = ''0''

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterCity)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ExporterIDType'''' with the value ''''0''''(EORI number) is specified.
If not specified, the default is ''''0000'''' used.'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ExporterCity = ''''
	AND ExporterIDType = ''0''

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterPostCode)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ExporterIDType'''' with the value ''''0''''(EORI number) is specified.
If not specified, the default is ''''0000'''' used.'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((ExporterPostCode = ''''	AND ExporterIDType = ''0'')
	OR (ExporterPostCode <> ''000'' AND ExporterIDType <> ''''))

INSERT INTO #ValidationWarning
--#2
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterPostCode)'' AS Location,
	''The data field must be exactly five digits specified numerically, if the data field ''''ExporterCountry'''' with the value ''''DE'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		ExporterCountry = ''DE''
		AND LEN(ExporterPostCode) <> ''5''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ExporterCountry)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ExporterIDType'''' with the value ''''0''''(EORI number) is specified.
If not specified, the default is ''''0000'''' used.'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		ExporterCountry <> ''''
		AND ExporterIDType <> ''0''
		OR ExporterCountry = ''''
		AND ExporterIDType = ''0''
		)
	AND ExporterCountry = ''''
	AND ExporterIDType <> ''0''

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/PlaceOfLoading)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''AuthorizedExporterNumber'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		PlaceOfLoading <> ''''
		AND AuthorizedExporterNumber = ''''
		OR PlaceOfLoading = ''''
		AND AuthorizedExporterNumber <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/PlaceOfLoadingAddress)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''PlaceOfLoading'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND PlaceOfLoadingAddress <> ''''
	AND PlaceOfLoading <> ''''
	AND PlaceOfLoadingAddress = ''''
	AND PlaceOfLoading = ''''

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/PlaceOfLoadingPostCode)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''PlaceOfLoading'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		PlaceOfLoadingPostCode <> ''''
		AND PlaceOfLoading <> ''''
		)
	AND (
		PlaceOfLoadingPostCode = ''''
		AND PlaceOfLoading = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/PlaceOfLoadingCity)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''PlaceOfLoading'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		PlaceOfLoadingCity <> ''''
		AND PlaceOfLoading <> ''''
		)
	AND (
		PlaceOfLoadingCity = ''''
		AND PlaceOfLoading = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/PlaceOfLoadingAdditionalInformation)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''PlaceOfLoading'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		PlaceOfLoadingAdditionalInformation <> ''''
		AND PlaceOfLoading <> ''''
		)
	AND (
		PlaceOfLoadingAdditionalInformation = ''''
		AND PlaceOfLoading = ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantIDType)'' AS Location,
	''	Field is required. There are only the values ''''0'''' (address data), ''''2'''' (EORI number)'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (DD.DeclarantIDType NOT IN (''0'', ''2''))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantID)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''DeclarantIDType'''' with the value ''''2''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		DeclarantID <> ''''
		AND DeclarantIDType <> ''2''
		OR DeclarantID = ''''
		AND DeclarantIDType = ''2''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantBranch)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''DeclarantIDType'''' with the value'''' 2 ''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (DeclarantBranch = ''''
	AND DeclarantIDType = ''2'')

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantName)'' AS Location,
	''Dependency:  The specification of the data field is permitted only if the data field ''''DeclarantIDType'''' with the value ''''0''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (DeclarantName = ''''
	AND DeclarantIDType = ''0'')

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantAddress)'' AS Location,
	''Dependency:  The specification of the data field is permitted only if the data field ''''DeclarantIDType'''' with the value'''' 0 ''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (DeclarantAddress = ''''
	AND DeclarantIDType = ''0'')

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantCity)'' AS Location,
	''Dependency:  The specification of the data field is permitted only if the data field ''''DeclarantIDType'''' with the value'''' 0 ''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (DeclarantCity = ''''
	AND DeclarantIDType = ''0'')

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantPostCode)'' AS Location,
	''Dependency:  The specification of the data field is permitted only if the data field ''''DeclarantIDType'''' with the value'''' 0 ''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (DeclarantPostCode = ''''
	AND DeclarantIDType = ''0'')

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantPostCode)'' AS Location,
	'' The data field must be exactly five digits specified numerically, if the data field ''''DeclarantCountry'''' with the value ''''DE'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		DeclarantCountry = ''DE''
		AND LEN(DeclarantPostCode) <> ''5''
		) --second condition for this field

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/DeclarantCountry)'' AS Location,
	''Dependency:  The specification of the data field is permitted only if the data field ''''DeclarantIDType'''' with the value'''' 0''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DeclarantCountry = ''''
	AND DeclarantIDType = ''0''

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorIDType)'' AS Location,
	'''' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		SubContractorIDType = ''2''
		AND SubContractorID = ''''
		) 

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorID)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''SubContractorIDType'''' with the value ''''2'''' (EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(SubContractorID <> ''''
		AND SubContractorIDType <> ''2'')
		OR( SubContractorID = ''''
		AND SubContractorIDType = ''2'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorBranch)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''SUBCONTRACTORS /SubContractorIDType'''' with the value ''''2'''' (EORI number) is specified. If not specified, the default is ''''0000'''' used'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(SubContractorBranch <> ''''
		AND SubContractorIDType <> ''2'')
		OR (SubContractorBranch = ''''
		AND SubContractorIDType = ''2'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorName)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''SUBCONTRACTORS /SubContractorIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(SubContractorName <> ''''
		AND SubContractorIDType <> ''0'')
		OR (SubContractorName = ''''
		AND SubContractorIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorAddress)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''SUBCONTRACTORS /SubContractorIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(SubContractorAddress <> ''''
		AND SubContractorIDType <> ''0'')
		OR (SubContractorAddress = ''''
		AND SubContractorIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorCity)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''SUBCONTRACTORS /SubContractorIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(SubContractorCity <> ''''
		AND SubContractorIDType <> ''0'')
		OR (SubContractorCity = ''''
		AND SubContractorIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorPostCode)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''SUBCONTRACTORS /SubContractorIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(SubContractorPostCode <> ''''
		AND SubContractorIDType <> ''0'')
		OR (SubContractorPostCode = ''''
		AND SubContractorIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorPostCode)'' AS Location,
	''  The data field must be exactly five digits specified numerically, if the data field ''''SubContractorCountry'''' with the value ''''DE'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		SubContractorCountry = ''DE''
		AND LEN(SubContractorPostCode) <> ''5''
		) --second condition

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/SubContractorCountry)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''SUBCONTRACTORS /SubContractorIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(SubContractorCountry <> ''''
		AND SubContractorIDType <> ''0'')
		OR (SubContractorCountry = ''''
		AND SubContractorIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneeIDType)'' AS Location,
	'' Field is required. There are only the values ''''0'''' (address data), ''''2'''' (EORI number) and ''''4'''' (TCUI number) allowed'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (ConsigneeIDType Not in (''0'', ''2'', ''4'')
	OR ConsigneeIDType = '''')
	AND (ConsigneeID+ConsigneeBranch+ConsigneeName+ConsigneeAddress+ConsigneeCity+ConsigneePostCode+ConsigneeCountry<>'''')

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneeID)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with one of the values ''''2'''' or ''''4'''' (EORI or TCUI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		(ConsigneeID <> ''''
		AND ConsigneeIDType <> ''2'')
		OR (ConsigneeID = ''''
		AND ConsigneeIDType = ''2'')
		)
	OR (
		ConsigneeID <> ''''
		AND ConsigneeIDType <> ''4''
		OR ConsigneeID = ''''
		AND ConsigneeIDType = ''4''
		)
)
INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneeBranch)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ConsigneeIDType'''' with the value ''''2''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		ConsigneeBranch <> ''''
		AND ConsigneeIDType <> ''2''

		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneeName)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(ConsigneeName <> ''''
		AND ConsigneeIDType <> ''0'')
		OR (ConsigneeName = ''''
		AND ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneeAddress)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(ConsigneeAddress <> ''''
		AND ConsigneeIDType <> ''0'')
		OR (ConsigneeAddress = ''''
		AND ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneeCity)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(ConsigneeCity <> ''''
		AND ConsigneeIDType <> ''0'')
		OR (ConsigneeCity = ''''
		AND ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneePostCode)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value''''0''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(ConsigneePostCode <> ''''
		AND ConsigneeIDType <> ''0'')
		OR (ConsigneePostCode = ''''
		AND ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneePostCode)'' AS Location,
	''The data field must be exactly five digits specified numerically, if the data field ''''ConsigneeCountry'''' with the value ''''DE'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		ConsigneeCountry = ''DE''
		AND LEN(ConsigneePostCode) <> ''5''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/Header/ConsigneeCountry)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value'''' 0 ''''(address data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(ConsigneeCountry <> ''''
		AND ConsigneeIDType <> ''0'')
		OR (ConsigneeCountry = ''''
		AND ConsigneeIDType = ''0'')
		)

		
/*		
INSERT INTO #ValidationWarning

--GOOds ITEM
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundPaymentCaseNAI)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data fields ''''CommodityCode'''' and ''''SecondAdditionalCommodityCode'''' is specified'' AS warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
on DD.DeclarationDataGUID =GI.DeclarationDataGUID and DD.PartnerID=GI.PartnerID 
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		RefundPaymentCaseNAI <> ''''
		AND CommodityCode = ''''
		)
	OR (
		RefundPaymentCaseNAI = ''''
		AND CommodityCode <> ''''
		)
	AND (
		RefundPaymentCaseNAI <> ''''
		AND SecondAdditionalCommodityCode = ''''
		)
	OR (
		RefundPaymentCaseNAI = ''''
		AND SecondAdditionalCommodityCode <> ''''
		)
)
*/

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundPaymentCaseNAI)'' AS Location,
	''The specification of the data field is only permitted if either the data group "E_EXP_IND/GoodsItems/Ingredient " or a data field "E_EXP_IND/GoodsItems/Documents/Type" with the value "5MMI" ("NA I" manufacturer''''s declaration) is specified'' AS warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI 
on DD.DeclarationDataGUID =GI.DeclarationDataGUID and DD.PartnerID=GI.PartnerID 
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND GI.RefundPaymentCaseNAI<>''''
	AND NOT EXISTS (SELECT TOP 1 * FROM txdDEAESGoodsItemIngredient GII WHERE GII.PartnerID=GI.PartnerID AND GII.GoodsItemGUID=GI.GoodsItemGUID)
	AND NOT EXISTS (SELECT TOP 1 * FROM txdDEAESGoodsItemDocument GID WHERE GID.PartnerID=GI.PartnerID AND GID.GoodsItemGUID=GI.GoodsItemGUID AND GID.Type=''5MMI'')
	
	
/*
INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundAdjustmentCoefficient)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data fields ''''CommodityCode'''' and ''''SecondAdditionalCommodityCode'''' is specified'' AS warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		RefundAdjustmentCoefficient <> 0
		AND CommodityCode = ''''
		)
	OR (
		RefundAdjustmentCoefficient = 0
		AND CommodityCode <> ''''
		)
	OR (
		RefundAdjustmentCoefficient <> 0
		AND SecondAdditionalCommodityCode = ''''
		)
	OR (
		RefundAdjustmentCoefficient = 0
		AND SecondAdditionalCommodityCode <> ''''
		) )
*/


/*
INSERT INTO #ValidationWarning
--#2
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundAdjustmentCoefficient)'' AS Location,
	''The data field must be greater than ''''0'''''' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND (DD.DeclarationDataGUID = @DeclarationDataGUID
	AND RefundAdjustmentCoefficient = 0)
*/

/*
INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundComponentValueA)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data fields ''''CommodityCode'''' and ''''SecondAdditionalCommodityCode'''' is specified'' AS warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
(
	(
		RefundComponentValueA <> 0
		AND CommodityCode = ''''
		)
	OR (
		RefundComponentValueA = 0
		AND CommodityCode <> ''''
		)
	AND (
		RefundComponentValueA <> 0
		AND SecondAdditionalCommodityCode = ''''
		)
	OR (
		RefundComponentValueA = 0
		AND SecondAdditionalCommodityCode <> ''''
		)
)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundComponentValueB)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data fields ''''CommodityCode'''' and ''''SecondAdditionalCommodityCode'''' is specified'' AS warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
(
	(
		RefundComponentValueB <> 0
		AND CommodityCode = ''''
		)
	OR (
		RefundComponentValueB = 0
		AND CommodityCode <> ''''
		)
	OR (
		RefundComponentValueB <> 0
		AND SecondAdditionalCommodityCode = ''''
		)
	OR (
		RefundComponentValueB = 0
		AND SecondAdditionalCommodityCode <> ''''
		) 
)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundComponentValueC)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data fields ''''CommodityCode'''' and ''''SecondAdditionalCommodityCode'''' is specified'' AS warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
	(
	(
		RefundComponentValueC <> 0
		AND CommodityCode = ''''
		)
	OR (
		RefundComponentValueC = 0
		AND CommodityCode <> ''''
		)
	AND (
		RefundComponentValueC <> 0
		AND SecondAdditionalCommodityCode = ''''
		)
	OR (
		RefundComponentValueC = 0
		AND SecondAdditionalCommodityCode <> ''''
		) 
)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/RefundComponentValueD)'' AS Location,
	'' The specification of the data field is necessary and permissible only if the data fields ''''CommodityCode'''' and ''''SecondAdditionalCommodityCode'''' is specified'' AS warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND
(
	(
		GI.RefundComponentValueD <> 0
		AND GI.CommodityCode = ''''
		)
	OR (
		RefundComponentValueD = 0
		AND CommodityCode <> ''''
		)
	AND (
		RefundComponentValueC <> 0
		AND SecondAdditionalCommodityCode = ''''
		)
	OR (
		RefundComponentValueC = 0
		AND SecondAdditionalCommodityCode <> ''''
		)
)

*/

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConversionFactor1)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''SequenceNumber'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.ConversionFactor1 <> 0
		AND GII.SequenceNumber = 0
		)

INSERT INTO #ValidationWarning
--#2 statement for ConversionFactor1
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConversionFactor1)'' AS Location,
	''The specification of the data field is necessary and permitted only if the data field ''''ConversionFactor1Type'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.ConversionFactor1 <> 0
		AND GII.ConversionFactor1Type = ''''
		)
	OR (
		GII.ConversionFactor1 = 0
		AND GII.ConversionFactor1Type <> ''''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConversionFactor1Type)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''SequenceNumber'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.ConversionFactor1Type <> ''''
		AND GII.SequenceNumber = 0
		)

INSERT INTO #ValidationWarning
--#2 statement for ConversionFactor1Type
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConversionFactor1Type)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ConversionFactor1'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		GII.ConversionFactor1Type <> ''''
		AND GII.ConversionFactor1 = 0
		)
	OR (
		GII.ConversionFactor1Type = ''''
		AND GII.ConversionFactor1 <> 0
		))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConversionFactor2)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''SequenceNumber'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.ConversionFactor2 <> 0
		AND GII.SequenceNumber = 0
		) 

INSERT INTO #ValidationWarning
--#2 statement for ConversionFactor2
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConversionFactor2)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ConversionFactor1'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.ConversionFactor2 <> 0
		AND GII.ConversionFactor1 = 0
		) 

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConversionFactorRate)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''SequenceNumber'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.ConversionFactorRate <> 0
		AND GII.SequenceNumber = 0
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/WeightPercentage)'' AS Location,
	''The specification of the data field is necessary and permitted only if the data field ''''QuantityPerKG'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		GII.WeightPercentage <> 0
		AND GII.QuantityPerKG <> 0
		)
	OR (
		GII.WeightPercentage = 0
		AND GII.QuantityPerKG = 0
		))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/WeightPercentage)'' AS Location,
	''The data field must be greater than a value ''''0'''' indicated'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (GII.WeightPercentage = 0)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/QuantityPerKG)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''WeightPercentage'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND( (
		GII.QuantityPerKG <> 0
		AND GII.WeightPercentage <> 0
		)
	OR (
		GII.QuantityPerKG = 0
		AND GII.WeightPercentage = 0
		))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ManufacturerStatementNumber)'' AS Location,
	''The specification of the data field is not permitted if the data fields ''''CommodityCode'''' and ''''FirstAdditionalCommodityCode'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
		AND GI.GoodsItemGUID = GII.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.QuantityPerKG <> 0
		AND GI.CommodityCode <> ''''
		AND GI.FirstAdditionalCommodityCode <> ''''
		)

INSERT INTO #ValidationWarning
--#2 statement for ManufacturerStatementNumber 		
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ManufacturerStatementNumber)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''KeyNumber'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		GII.ManufacturerStatementNumber <> ''''
		AND GII.KeyNumber <> ''''
		)
	OR (
		GII.ManufacturerStatementNumber = ''''
		AND GII.KeyNumber = ''''
		))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/KeyNumber)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''ManufacturerStatementNumber'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((
		GII.KeyNumber <> ''''
		AND GII.ManufacturerStatementNumber <> ''''
		)
	OR (
		GII.KeyNumber = ''''
		AND GII.ManufacturerStatementNumber = ''''
		))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/LicenseNumber)'' AS Location,
	''The specification of the data field is permissible only if the data field ''''RefundPaymentCaseNAI'''' is not specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
JOIN txdDEAESGoodsItemIngredient GII
	ON DD.PartnerID = GII.PartnerID
		AND DD.DeclarationDataGUID = GII.DeclarationDataGUID
		AND GII.GoodsItemGUID = GI.GoodsItemGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GII.LicenseNumber <> ''''
		AND GI.RefundPaymentCaseNAI <> ''''
		)


INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneeIDType)'' AS Location,
	'' Field is required. There are only the values ''''0'''' (address data), ''''2'''' (EORI number) and ''''4'''' (TCUI number) allowed'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND 
	(GI.ConsigneeIDType NOT IN (''0'', ''2'', ''4'')
	OR GI.ConsigneeIDType = '''')
	AND (GI.ConsigneeID+GI.ConsigneeBranch+GI.ConsigneeName+GI.ConsigneeAddress+GI.ConsigneeCity+GI.ConsigneePostCode+GI.ConsigneeCountry<>'''')
	
INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneeID)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with one of the values ''''2'''' or ''''4'''' (EORI or TCUI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
	
			(GI.ConsigneeID <> '''' AND GI.ConsigneeIDType NOT IN (''2'', ''4''))

			OR 
			
			(GI.ConsigneeID = '''' AND GI.ConsigneeIDType IN (''2'', ''4''))
	)
	

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneeBranch)'' AS Location,
	''The specification of the data field is permitted only if the data field ''''ConsigneeIDType'''' with the value ''''2''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GI.ConsigneeBranch <> ''''
		AND GI.ConsigneeIDType <> ''2''

		)
		
INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneeName)'' AS Location,
	''The specification of the data field is  necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''0''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(GI.ConsigneeName <> ''''
		AND GI.ConsigneeIDType <> ''0'')
		OR (GI.ConsigneeName = ''''
		AND GI.ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneeAddress)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''ConsigneeIDType'''' with the value ''''0''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(GI.ConsigneeAddress <> ''''
		AND GI.ConsigneeIDType <> ''0'')
		OR (GI.ConsigneeAddress = ''''
		AND GI.ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneeCity)'' AS Location,
	''The specification of the data field is  necessary and permitted only if the data field ''''ConsigneeIDType'''' with the value ''''0''''(EORI number) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(GI.ConsigneeCity <> ''''
		AND GI.ConsigneeIDType <> ''0'')
		OR (GI.ConsigneeCity = ''''
		AND GI.ConsigneeIDType = ''0'')
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneePostCode)'' AS Location,
	''The specification of the data field is required and permitted only if the data field ''''ConsigneeIDType'''' with the value ''''0''''(Address Data) is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND ((GI.ConsigneePostCode = ''''
	AND GI.ConsigneeIDType = ''0'')
	OR (GI.ConsigneePostCode <> ''''
	AND GI.ConsigneeIDType <> ''''))

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/ConsigneePostCode)'' AS Location,
	''The data field must be exactly five digits specified numerically, if the data field ''''ConsigneeCountry'''' with the value ''''DE'''' is specified.'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItem GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		GI.ConsigneeCountry = ''DE''
		AND LEN(GI.ConsigneePostCode) <> ''5''
		)

INSERT INTO #ValidationWarning
SELECT @E_EXP_IND_NAME + ''(E_EXP_IND/GoodsItem/Quantity)'' AS Location,
	''The specification of the data field is necessary and permissible only if the data field ''''QuantityUOM'''' with a value other than ''''div'''' or  ''''ltAnlage'''' is specified'' AS Warning
FROM txdDEAESDeclarationData DD
JOIN txdDEAESGoodsItemDocument GI
	ON DD.PartnerID = GI.PartnerID
		AND DD.DeclarationDataGUID = GI.DeclarationDataGUID
WHERE DD.PartnerID = @PartnerID
	AND DD.DeclarationDataGUID = @DeclarationDataGUID
	AND (
		(GI.QuantityUOM <> ''div'')
		OR (GI.QuantityUOM <> ''ltAnlage''
		AND GI.Quantity = 0)
		)


INSERT INTO txdDEAESValidationWarning
SELECT @PartnerID AS PartnerID,
	GETDATE() AS EffDate,
	@DeclarationGUID AS DeclarationGUID,
	@DeclarationDataGUID AS DeclarationDataGUID,
	NEWID() AS WarningGUID,
	Location,
	Warning,
	''N'',
	''N''
FROM #ValidationWarning
	
	
', CAST(N'2018-02-19T11:50:04.283' AS DateTime), N'DE-AES-2.4.2 E_EXP_IND validation query', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2020-08-04T11:14:53.767' AS DateTime), N'5C665BCB-9A47-4D21-876C-4821DDFEAC93', N'PTR3SpreadSheetUploadReconciliationPCDetail', N'declare @partnerID as int; set @partnerID =(select top 1 partnerid from tmfdefaults); UPDATE tlgworkflowschedule SET LastUpdated = '''' 
					WHERE WorkFlow = ''PTR3SpreadSheetUploadReconciliationPCDetail'' AND partnerID= (select top 1 partnerid from tmfdefaults)', CAST(N'2020-08-04T11:14:53.767' AS DateTime), N'Kick off-PTR3SpreadSheetUploadReconciliationPCDetail', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-03-23T10:23:52.987' AS DateTime), N'bf71bc09-d413-4998-ba08-abf32d0ca859', N'DPS Lookup: Number of Hits per Month ', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY Year desc, Month desc)  AS [RowNum] FROM (

SELECT YEAR(h.EffDate) AS Year, Month(h.EffDate) AS Month, SUM(h.NumHits) AS TotalHits, 1 AS NoOrder
FROM txdDTSSearchResultsHist h with (nolock)
WHERE h.PartnerId = (SELECT PartnerID FROM tmfDefaults)
GROUP BY YEAR(h.EffDate), Month(h.EffDate)

  ) AS LookupViewInner WHERE @WhereClause@ ', CAST(N'2018-02-15T11:25:05.537' AS DateTime), N'This query shows the total number of hits, across all company partners, broken down by Year and Month.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-03-23T10:23:52.987' AS DateTime), N'f62c8dcb-b571-4835-ab8f-7e1797f0c22b', N'DPS Lookup: Hits per Company Partner', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, NumHits)  AS [RowNum] FROM (  SELECT  ''[''+ ''Edit'' + '']'' + ''(/Maintenance/fmgCompanyMaintenance.aspx?CompanyID='' + c.CompanyID + '')'' AS Edit,     ''['' + ''Search'' + '']'' + ''(/DTS/fxdDPSQuery.aspx?CompanyID='' + c.CompanyID +''&Search=Y)'' as Search,             MAX(convert(datetime, c.DTSLastScreenedDate, 101)) as LastScreenedDate, c.CompanyID, c.CompanyName, c.CompanyCity, C.CompanyState,           c.CompanyCountry, SUM(h.NumHits) AS NumHits, 1 AS NoOrder  FROM txdDTSSearchResultsHist h WITH (NOLOCK)  INNER JOIN tmgCompany c WITH (NOLOCK) ON    c.CompanyID = h.CompanyID   /*   --AND c.DTSLastScreenedDate = h.EffDate */   AND c.PartnerID = h.PartnerId  WHERE    h.PartnerId = (SELECT PartnerID FROM tmfDefaults)   AND h.EffDate > (GETDATE() - @VALUE@)  GROUP BY c.CompanyID, c.CompanyName, c.CompanyCity, c.CompanyState, c.CompanyCountry  ) AS LookupViewInner WHERE @WhereClause@', CAST(N'2015-03-23T10:23:52.987' AS DateTime), N'This query shows the number of hits returned on each company partner based on their last screened date.', N'N', N'N')
, (@PartnerID, CAST(N'2015-05-05T14:38:58.803' AS DateTime), N'bee5beb3-3de6-4dde-885e-a47aa6cf7e79', N'Z2Z Ungenerated Shipments', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @Orderby@
			,EffDate DESC
		) AS [RowNum]
FROM (
	SELECT CONVERT(VARCHAR, EffDate, 101) AS EffDate
		,OrderNumShip
		,ExitDocId
		,ToZoneId
		,TxnCode
		,CountryShipTo
		,1 AS NoOrder
	FROM TxdShipPC WITH (NOLOCK)
	WHERE countryshipto = ''ZZ''
		AND tozoneid <> ''''
        AND PartnerID = (select partnerid from tmfdefaults with (nolock))
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-23T10:11:53.997' AS DateTime), N'Shipments that are Zone to Zone but have not had the 7512 generated', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-05-05T14:38:58.803' AS DateTime), N'eb2769e9-d126-4c85-b62e-b69fa2f5ae7e', N'FTZ Shipped Production Receipt With No Components', N'	 SELECT * , ROW_NUMBER() OVER (ORDER BY @Orderby@, txnDate desc) AS [RowNum]
	 FROM(SELECT CONVERT(Varchar, TxnDate, 101) AS TxnDate, ExitDocID,  TxnCode, ProductNum,OrderNumShip,OrderNumWork, TxnQty, CountryShipTo, Manufacturerid, 1 as NoOrder 	FROM txdShipIM WITH (NOLOCK) 
	WHERE PartnerId IN (SELECT PartnerID FROM tmfDefaults) 
	AND OrderNumWork NOT IN (SELECT OrderNumWork FROM txdShipPC))	
	 AS LookupViewInner WHERE @whereclause@	
	 
	 ', CAST(N'2018-02-06T13:02:54.357' AS DateTime), N'Shipments that consumed Production Receipts with no components', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-05-05T14:38:58.803' AS DateTime), N'24f310c5-72cd-41dc-bbe5-27b0c29b3b20', N'Production Receipts With No Components', N'	 SELECT * , ROW_NUMBER() OVER (ORDER BY @Orderby@, txnDate desc) AS [RowNum]
	 FROM(SELECT CONVERT(Varchar, TxnDate, 101) AS TxnDate,  TxnCode, OrderNumWork, ProductNum, TxnQty
	,1 as NoOrder FROM txdFifoProcessing WITH (NOLOCK) 
	WHERE PartnerId IN (SELECT PartnerID FROM tmfDefaults) 
	AND txnnumguid IN (SELECT txnnumguid
	 FROM txdfifoprocessing	 WHERE ordernumwork NOT IN 
	 (SELECT ordernumwork FROM txdIssuedPC) and txncode =''PPIM'')
	 AND txnnumguid in (SELECT txnnumguid
	 FROM txdfifoprocessing	 WHERE ordernumwork NOT IN 
	 (SELECT ordernumwork FROM txdFIFOProcessing WHERE TxnCode IN (''IPPC'',''IPIM'')) AND txncode =''PPIM''))
	 AS LookupViewInner WHERE @whereclause@	', CAST(N'2018-02-06T13:00:43.150' AS DateTime), N'Production Receipts that do not have any IPPCs or IPIMs on hand with the same OrderNumWork', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-05-05T14:38:58.803' AS DateTime), N'9f9f0f0c-d8b2-4c58-8ae7-0777612e19d0', N'FTZ Orphaned Issues', N'	 SELECT * , ROW_NUMBER() OVER (ORDER BY @Orderby@, EffDate desc) AS [RowNum] FROM(SELECT CONVERT(Varchar, EffDate, 101) AS EffDate,  TxnCode, OrderNumWork, ProductNum, TxnQty, QtyPerIm, 1 as NoOrder FROM txdissuedpc with (nolock) WHERE PartnerId IN (SELECT PartnerID FROM tmfDefaults) and OrderNumWork not in (select OrderNumWork from txdissuedim))
	 AS LookupViewInner WHERE @whereclause@	', CAST(N'2015-05-05T14:38:58.803' AS DateTime), N'Production Issues that do not have any PPIMs on hand with the same OrderNumWork', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-05-05T14:38:58.803' AS DateTime), N'71c6e5d6-168a-462a-9091-29e1ee43efd9', N'Z2Z: ReceivedHist', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @Orderby@
			,EffDate DESC
		) AS [RowNum]
FROM (
	SELECT CONVERT(VARCHAR, EffDate, 101) AS EffDate
		,FromZoneId
		,ToZoneId
		,OrderNumShip
		,Internalproductnum AS ProductNum
		,ManufacturerID
		,ExitDocId
		,TxnQty
		,HTSNum
		,StatusCode
		,CountryofOrigin
		,Value
		,1 AS NoOrder
	FROM txdZoneToZoneTransfersReceived_Hist WITH (NOLOCK)
	WHERE effdate > getdate() - 60
AND PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-23T10:04:27.307' AS DateTime), N'All receipts imported via Zone to Zone Import that have been reconciled', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-05-05T14:38:58.803' AS DateTime), N'9de524e2-c6e6-415c-918d-508dcbb71509', N'Z2Z: ShippedHist', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @Orderby@
			,EffDate DESC
		) AS [RowNum]
FROM (
	SELECT CONVERT(VARCHAR, EffDate, 101) AS EffDate
		,FromZoneID
		,ToZoneId
		,OrderNumWork
		,OrderNumShip
		,InternalProductNum AS ProductNum
		,ManufacturerId
		,ExitDocId
		,TxnQty
		,HtsNum
		,StatusCode
		,Value
		,1 AS NoOrder
	FROM txdzonetozoneshipmentshistory WITH (NOLOCK)
	WHERE effdate > getdate() - 60
AND PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-23T10:05:52.947' AS DateTime), N'Shipments that have been transferred to the receiving zone', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-05-05T14:38:58.803' AS DateTime), N'ca7d1d71-b893-4dfd-a904-28eab22513da', N'Z2Z: Shipped', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @Orderby@
			,EffDate DESC
		) AS [RowNum]
FROM (
	SELECT CONVERT(VARCHAR, EffDate, 101) AS EffDate
		,OrderNumShip
		,ExitDocId
		,ToZoneId
		,TxnCode
		,SentFlag
		,1 AS NoOrder
	FROM txdZoneToZoneShipmentsSent WITH (NOLOCK)
	WHERE effdate > getdate() - 60
		AND sentflag = ''N''
        AND PartnerID = (select partnerid from tmfdefaults with (nolock))
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-23T10:12:55.243' AS DateTime), N'Shipments that have processed through FIFO and had the 7512 generated, but have not been transferred to the receiving zone', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-05-05T14:38:58.803' AS DateTime), N'94695b82-ad0c-402b-afdf-15045ea7cb1c', N'Z2Z: Received', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @Orderby@
			,EffDate DESC
		) AS [RowNum]
FROM (
	SELECT CONVERT(VARCHAR, EffDate, 101) AS EffDate
		,FromZoneId
		,ToZoneId
		,OrderNumShip
		,Internalproductnum AS ProductNum
		,ManufacturerID
		,ExitDocId
		,TxnQty
		,HTSNum
		,StatusCode
		,CountryofOrigin
		,Value
		,1 AS NoOrder
	FROM txdZoneToZoneTransfersReceived WITH (NOLOCK)
	WHERE effdate > getdate() - 60
AND PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-23T10:05:15.010' AS DateTime), N'All receipts imported via Zone to Zone Import that have not been reconciled', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-05-05T14:38:58.803' AS DateTime), N'e79a3cc9-bb39-4c71-af69-c7ade3eafeb3', N'FTZ On-Hand Production Receipts', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @Orderby@
			,EffDate DESC
		) AS [RowNum]
FROM (
	SELECT CONVERT(VARCHAR, EffDate, 101) AS EffDate
		,ordernumwork
		,productnum
		,txncode
		,txnqty
		,1 AS NoOrder
	FROM txdissuedim WITH (NOLOCK)
		WHERE PartnerID = (select partnerid from tmfdefaults with (nolock))
		--where abs(txnqty) > .00001 
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2018-02-23T10:41:59.620' AS DateTime), N'All Production Receipts that have not yet been shipped out', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-05-05T14:38:58.803' AS DateTime), N'2f2c498a-e319-4044-96e0-7287ee4f8812', N'FTZ On-Hand Issues', N'SELECT * , ROW_NUMBER() OVER (ORDER BY @Orderby@,EffDate desc) AS [RowNum] FROM ( SELECT CONVERT(Varchar, EffDate, 101) AS EffDate , ordernumwork, productnum, txncode, txnqty, qtyperim,1 as NoOrder from txdissuedpc WITH (NOLOCK) 
where partnerid = (select partnerid from tmfdefaults with (nolock))
--where abs(txnqty) > .00001 
) AS LookupViewInner WHERE @whereclause@', CAST(N'2018-02-23T10:37:32.033' AS DateTime), N'All Production Issues that have not yet been shipped out', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-05-05T14:38:58.803' AS DateTime), N'cb0b9a47-2c56-46f8-9598-4fc32dedc83a', N'FTZ Production Shortage', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @Orderby@
			,EffDate DESC
		) AS [RowNum]
FROM (
	SELECT CONVERT(VARCHAR, EffDate, 101) AS EffDate
		,TxnDate
		,TxnType
		,OrderNumWork
		,ProductNum
		,ProductTypeCode
		,CAST(TxnQty AS NUMERIC(38, 4)) AS TxnQty
		,QtyPerIM
		,1 AS noorder
	FROM txdissuedproductionshortage WITH (NOLOCK)
		where partnerid = (select partnerid from tmfdefaults with (nolock))
		--where abs(txnqty) > .0000001
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-23T10:39:50.850' AS DateTime), N'All instances of a PPIM not having enough IPPC/IPIMs to satisfy the production', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-05-05T14:38:58.803' AS DateTime), N'77da904a-5230-4ef2-b6d8-303e11295d03', N'FTZ Foreign Shipments with Dummy HTS', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @Orderby@, ProductNum asc ) AS [RowNum] FROM ( SELECT Distinct im.ExitDocID , im.OrderNumShip , im.ProductNum ,CAST(im.txnQty AS Numeric (38,4)) AS TxnQty , im.HTSIndex , im.ShipIMGUID, 1 as NoOrder FROM txdshipim im WITH (NOLOCK) JOIN txdshippc pc WITH (NOLOCK) ON im.shipimguid = pc.shipimguid AND im.PartnerID=pc.PartnerID JOIN txdshippchtsvalues pch WITH (NOLOCK) ON pc.shippcguid = pch.shippcguid AND pc.PartnerID=pch.PartnerID WHERE REPLACE(im.htsindex, ''.'', '''') = ''1111111111'' AND pch.statuscode = ''N'' AND im.PartnerID=(select PartnerID from tmfDefaults) ) AS LookupViewInner WHERE @whereclause@', CAST(N'2015-05-05T14:38:58.803' AS DateTime), N'All shipments of foreign goods that have been shipped out of the FTZ with an HTSIndex of 1111111111', N'N', N'N')
, (@PartnerID, CAST(N'2015-06-08T13:37:30.233' AS DateTime), N'0bb32109-e528-4159-bd95-03b662e37c44', N'Z2Z: CrossReference', N'SELECT * , ROW_NUMBER() OVER (ORDER BY @Orderby@,ShipDate desc) AS [RowNum] FROM ( SELECT CONVERT(Varchar, zh.EffDate, 101) as ShipDate,Fp.TxnDate as RecTxnDate, zh.FromZoneID, fp.OrderNumReceipt, fp.TransportID,zh.internalproductnum as ProductNum,fp.ProductDesc, zh.TxnCode as ShipTxnCode, fp.txncode as RecTxnCode, zh.ExitDocID,fp.ReceiptDocID as [214Number], 
fp.txnqty as TxnQty,
 fp.txnqtyuom as TxnQtyUom,
fp.value as Value,
fp.htsindex as HTS,
 fp.ManufacturerID as MID,
fp.countryoforigin as COO,
1 as NoOrder
 from vid_fifoprocessing fp WITH (NOLOCK)
join txdZoneToZoneCrossReference z
on fp.txnnumguid = z.txnnumguid
and fp.PartnerID = z.PartnerID
join txdZoneToZoneTransfersReceived_hist zh
on z.internalzoneguid = zh.fromzoneguid
and z.PartnerID = zh.PartnerID
) AS LookupViewInner WHERE @whereclause@ 
', CAST(N'2018-02-23T10:01:30.223' AS DateTime), N'ReceiptHist Cross Referenced to Current FIFO Processing', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-06-08T13:37:30.233' AS DateTime), N'a28a167d-619d-4ec0-bc87-45f38e509bb7', N'Z2Z: CrossReferenceHist', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @Orderby@
			,ShipDate DESC
		) AS [RowNum]
FROM (
	SELECT CONVERT(VARCHAR, zh.EffDate, 101) AS ShipDate
		,Fp.TxnDate AS RecTxnDate
		,zh.FromZoneID
		,fp.OrderNumReceipt
		,fp.TransportID
		,zh.internalproductnum AS ProductNum
		,fp.ProductDesc
		,zh.TxnCode AS ShipTxnCode
		,fp.txncode AS RecTxnCode
		,zh.ExitDocID
		,fp.ReceiptDocID AS [214Number]
		,fp.txnqty AS TxnQty
		,fp.txnqtyuom AS TxnQtyUom
		,fp.value AS Value
		,fp.htsindex AS HTS
		,fp.ManufacturerID AS MID
		,fp.countryoforigin AS COO
		,1 AS NoOrder
	FROM vid_fifoprocessinghist fp WITH (NOLOCK)
	JOIN txdZoneToZoneCrossReference z 
ON fp.txnnumguid = z.txnnumguid
AND fp.PartnerID = z.PartnerID
	JOIN txdZoneToZoneTransfersReceived_hist zh 
ON z.internalzoneguid = zh.fromzoneguid
AND z.PartnerID = zh.PartnerID
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-23T10:07:14.837' AS DateTime), N'ReceiptHist Cross Referenced to FIFO Processing Hist', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2015-06-08T13:37:30.233' AS DateTime), N'bfc535b5-a0d7-4e73-aeba-9971d537610d', N'FTZ Lookup: FTZ Item Master Errors (Standard GC Schema)', N'SELECT *
	,Row_number() OVER (
		ORDER BY validationdesc ASC
		) AS [RowNum]
FROM (
	SELECT ''['' + ''Edit'' + '']'' + ''(/MAINTENANCE/Edit.aspx?TYPE=1'' + ''&ID='' + Cast(pc.productguid AS VARCHAR(50)) + ''&COUNTRY=US'' + ''&SEARCHCOL=ProductNum'' + ''&SEARCHTXT=)'' AS Edit
		,v.ValidationDesc
		,i.ProductNum
		,i.ProductDesc
		,i.ProductTypeCode
		,i.CommercialValue
		,i.CommercialValueCurrencyCode
		,i.WeightUom
		,i.TxnQtyUom
		,i.ReceiptSupplement
		,i.NaftaCertified
		,i.MxState
		,i.CaProvince
		,i.RPO11
		,i.RPO12
		,i.RPO13
		,ih.HtsIndex
		,ih.CurrencyCode
		,Cast(ih.altvalue AS NUMERIC(38, 4)) AS AltValue
		,Cast(ih.altvalue2 AS NUMERIC(38, 4)) AS AltValue2
		,ih.AltCurrencyCode
		,ih.HtsUomConvFactor
		,ih.AddlHtsUomConvFactor
		,ih.FDAIndicator
		,ih.FCCIndicator
		,ih.DOTIndicator
		,ih.CVCaseNumber
		,ih.CVDutyRate
		,ih.ADCaseNumber
		,ih.ADDutyRate
		,ih.ManufacturerID
		,ih.StatusCode
		,ih.CountryOfOrigin
		,ih.RCO21
		,ih.RCO22
		,ih.RCO23
		,Cast(ih.value AS NUMERIC(38, 4)) AS Value
		,Cast(ih.value2 AS NUMERIC(38, 4)) AS Value2
		,Cast(i.weight AS NUMERIC(38, 4)) AS Weight
		,v.ValidationCode
	FROM txdValidationWarnings v WITH (NOLOCK)
	JOIN tmdItemMaster i WITH (NOLOCK) ON v.ProductNum = i.ProductNum
		AND v.PartnerID = i.PartnerID
	JOIN tmdItemMasterHtsValues ih ON i.ProductNum = ih.ProductNum
		AND i.PartnerID = ih.PartnerID
	JOIN tmdUSProductClassification pc WITH (NOLOCK) ON v.ProductNum = pc.ProductNum
		AND v.PartnerID = pc.PartnerID
	WHERE v.TableName = ''tmdItemMaster''
		AND i.PartnerID = (
			SELECT PartnerID
			FROM tmfDefaults
			)
	) AS LookupViewInner
WHERE @whereclause@
', CAST(N'2018-02-06T13:37:18.093' AS DateTime), N'ItemMaster Validation Error Details', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2020-08-04T11:14:53.803' AS DateTime), N'ABE4F84A-EC89-42ED-979D-D0E0A51E5068', N'PTR3ExcelDownload', N'--sheetnames::Component Balance Report
					SELECT
					LineNum AS LineNum
					,HandbookProductSeqNum AS CustomsItemID
					,PartNum AS PartNum
					,HSCode AS HSCode
					,ProductName AS CNName
					,TheoreticalRemainingQty AS TheoreticalRemainingQty
					,TheoreticalRemainingAmount AS TheoreticalRemainingAmount
					,ActualRemainingQty AS ActualRemainingQty
					,ImportOrExportTotalQty AS ImportOrExportTotalQty
					,TradePlusQty AS TradePlusQty
					,TradeMinusQty AS TradeMinusQty
					,TotalConsumptionQty AS TotalConsumptionQty
					,DomesticsSalesQty AS DomesticsSalesQty
					,FGReturnOrExportQty AS FGReturnReexport
					,FGReturnOrImportQty AS "Sending back FG produced for Import PM"
					,NetConsumptionQty AS NetConsumptionQty
					,VarianceQty AS VarianceQty
					,BegainingBalance AS BegainingBalance
					,TheoreticalRemainingQty AS RemainingQty
					,VarianceConfirmFlag AS "Variance Flag"
					,ModifyFlag AS ModifyFlag
					FROM txdCNReconciliationPCDetail WHERE CNReconciliationHeaderGUID = ''CNReconciliationHeaderGUIDVariable'' AND PartnerID = (select top 1 PartnerId from tmfDefaults)', CAST(N'2020-08-04T11:14:53.803' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2020-08-04T11:14:55.483' AS DateTime), N'1e0d0bb2-730b-418a-8a61-ab8b4a7e435c', N'DPS Lookup: Clear Parties', N'SELECT *  ,ROW_NUMBER() OVER (   ORDER BY @orderby@   ) AS [RowNum] FROM (  SELECT ''['' + ''Edit'' + '']'' + ''(/Maintenance/fmgCompanyMaintenance.aspx?CompanyID='' + comp.CompanyID + '')'' AS Edit   ,ISNULL(''[Search](/DTS/fxdDPSQuery.aspx?CompanyID='' + comp.CompanyID + '')'', '''') AS Search   ,ISNULL(g.Decode, comp.CompanyType) AS CompanyType   ,comp.CompanyID   ,comp.DTSStatus   ,comp.CompanyName   ,comp.CompanyCountryCode   ,comp.DTSLastScreenedDate AS LastScreenedDate   ,1 AS NoOrder  FROM tmgCompany comp(NOLOCK)  LEFT JOIN tmgGlobalCodes g(NOLOCK) ON g.partnerid = comp.partnerid   AND g.code = comp.CompanyType   AND g.fieldname = ''CompanyType''  WHERE comp.DTSStatus = ''Clear''   AND DTSSearchFlag = ''Y''   AND comp.PartnerID = @PartnerID  ) AS LookupViewInner WHERE @whereclause@', CAST(N'2020-08-04T11:14:55.483' AS DateTime), N'DPS Lookup: Clear Parties', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-12T19:20:44.677' AS DateTime), N'6cd29015-234f-45dd-8587-4eb8b397f4db', N'DPS Lookup: Companies Not Screened in the past 30 days', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@ ) AS [RowNum]
FROM 
( 	
	SELECT  
		''[''+ ''Edit'' + '']'' + ''(/Maintenance/fmgCompanyMaintenance.aspx?CompanyID='' + comp.CompanyID + '')'' AS Edit,
		comp.CompanyID,
		ISNULL(g.Decode, comp.CompanyType) as CompanyType,
		comp.CompanyName,
		comp.CompanyAddress1,
		comp.CompanyAddress2,
		comp.CompanyAddress3,
		comp.CompanyAddress4,
		comp.CompanyCity,
		comp.CompanyState, 
		comp.CompanyPostalCode,
		comp.CompanyCountryCode,
		comp.DTSStatus,
		comp.DTSOverrideDate,
		comp.DTSLastValidatedDate,
		comp.DTSLastScreenedDate,
		1 as NoOrder
	FROM tmgCompany comp (NOLOCK)
	LEFT JOIN tmgGlobalCodes g (NOLOCK) ON
		g.partnerid = comp.partnerid AND
		g.code = comp.CompanyType AND
		g.fieldname = ''CompanyType''
	WHERE 
		comp.DTSLastScreenedDate < GETDATE() - 30
		AND	comp.PartnerID = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:20:44.677' AS DateTime), N'Displays all companies that have not been screened in the past 30 days

', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2020-08-04T11:14:55.327' AS DateTime), N'EF03A1EF-0E2D-4F30-9691-F3D7FBE18E24', N'PTR3ExcelDownload', N'--sheetnames::Component Balance Report
					SELECT
					ROW_NUMBER() OVER(ORDER BY PartNum ASC) AS LineNum
					,HandbookProductSeqNum AS CustomsItemID
					,PartNum AS PartNum
					,HSCode AS HSCode
					,ProductName AS CNName
					,TheoreticalRemainingQty AS TheoreticalRemainingQty
					,TheoreticalRemainingAmount AS TheoreticalRemainingAmount
					,ActualRemainingQty AS ActualRemainingQty
					,ImportOrExportTotalQty AS ImportOrExportTotalQty
					,TradePlusQty AS TradePlusQty
					,TradeMinusQty AS TradeMinusQty
					,TotalConsumptionQty AS TotalConsumptionQty
					,DomesticsSalesQty AS DomesticsSalesQty
					,FGReturnOrExportQty AS FGReturnReexport
					,FGReturnOrImportQty AS "Sending back FG produced for Import PM"
					,NetConsumptionQty AS NetConsumptionQty
					,VarianceQty AS VarianceQty
					,BegainingBalance AS BegainingBalance
					,PeriodRemainingQty AS RemainingQty
					,VarianceConfirmFlag AS "Variance Flag"
					,ModifyFlag AS ModifyFlag
					FROM txdCNReconciliationPCDetail WHERE CNReconciliationHeaderGUID = ''CNReconciliationHeaderGUIDVariable'' AND PartnerID = (select top 1 PartnerId from tmfDefaults) ORDER BY LineNum ASC', CAST(N'2020-08-04T11:14:55.327' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:22:42.840' AS DateTime), N'3600b0b1-905e-40c0-9da4-db7c583bbe33', N'DPS Lookup: Companies that have been manually blocked', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@ ) AS [RowNum]
FROM 
( 
	SELECT 
		''[''+ ''Edit'' + '']'' + ''(/Maintenance/fmgCompanyMaintenance.aspx?CompanyID='' + comp.CompanyID + '')'' AS Edit,
		comp.CompanyID,
		comp.DTSStatus,
		comp.DTSLastScreenedDate,
		N.Effdate as ''Note Date'',
		N.Username,
		comp.CompanyName,
		ISNULL(g.Decode, comp.CompanyType) as CompanyType,
		N.Notes as ''Manual Block Note'',
		1 as NoOrder
	FROM tmgCompany comp (nolock)
	JOIN txdDTSNotes N (nolock)
		ON N.CompanyID = comp.CompanyID
        AND N.PartnerID = comp.PartnerID
	LEFT JOIN tmgglobalcodes g (nolock) 
		ON g.partnerid = comp.partnerid 
		AND g.code = comp.CompanyType 
		AND g.fieldname = ''CompanyType''
	WHERE  DTSStatus = ''Manual Block''
	AND N.Notes LIKE ''Company has been set to Blocked%''
	AND comp.PartnerID = @PartnerID
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2018-02-15T11:29:22.963' AS DateTime), N'Displays companies whose status has been manually changed to "Blocked"', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:24:52.170' AS DateTime), N'2f6b8bd7-8dc8-4bb9-98bc-12abf4ab078c', N'DPS Lookup: Top 25 Companies With most status changes', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, [Total Status Changes] desc, CompanyType, DTSStatus ) AS [RowNum]
FROM 
( 
 SELECT 
  Notes.Total AS ''Total Status Changes'', 
  comp.CompanyID,
  ISNULL(g.Decode, comp.CompanyType) AS CompanyType,
  comp.CompanyName,
  comp.CompanyAddress1,
  comp.CompanyAddress2,
  comp.CompanyAddress3,
  comp.CompanyAddress4,
  comp.CompanyCity,
  comp.CompanyState, 
  comp.CompanyPostalCode,
  comp.CompanyCountryCode,
  comp.DTSStatus,
  comp.DTSOverrideDate,
  comp.DTSLastValidatedDate,
  comp.DTSLastScreenedDate,
  1 as NoOrder
FROM tmgCompany comp with (nolock)
LEFT JOIN tmgGlobalCodes g with (nolock) 
  ON g.partnerid = comp.partnerid 
  AND g.code = comp.CompanyType 
  AND g.fieldname = ''CompanyType''
JOIN (
  SELECT top 25 CompanyID, COUNT(*) AS Total
  FROM txdDTSNotes N with (nolock)
  WHERE Notes LIKE ''%Changed Status from%''
  GROUP BY N.CompanyID
  ORDER BY Total desc
) Notes
ON Notes.CompanyID = comp.CompanyID
WHERE comp.PartnerID = @PartnerID
) AS LookupViewInner
WHERE                               
 @whereclause@

', CAST(N'2018-04-03T10:54:23.660' AS DateTime), N'Displays the 25 companies whose status has changed the most frequently', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:36:52.190' AS DateTime), N'85ba048a-bedb-484a-bff3-52263ca4ce0e', N'Classification Lookup: Products With ''low assurance''', N'SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
		) AS [RowNum]
FROM (
SELECT	''[Edit](/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit
	   ,xxpc.ProductNum
	   ,xxpc.ProductDesc
	   ,xxpc.AssuranceLevel
,1 AS NoOrder
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID AND
																	 xxpc.ProductGuid = pc.ProductGuid
WHERE	xxpc.PartnerID = @PartnerID@ AND
		xxpc.AssuranceLevel < 5
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2014-03-12T19:36:52.190' AS DateTime), N'Displays ProductNum, ProductDesc, and AssuranceLevel for products that have a low level of classification assurance from a specified country', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:37:55.173' AS DateTime), N'e1703c4d-603b-4aaa-bc1c-00ebc32c5dbd', N'Classification Lookup: US Products With ADD Applies', N'SELECT * , ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum ) AS [RowNum] FROM ( 
SELECT ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + uspc.ProductNum + ''&ID='' + CAST (uspc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit ,
uspc.ProductNum
 ,uspc.ProductDesc
 ,uspc.ProductMaterial 
,uspc.ProductTypeCode 
,uspc.HsNum ,uspc.ADCaseNum
 ,uspc.CountryofOrigin 
,uspc.ManufacturerID
 ,uspc.ActiveFlag
,1 AS NoOrder 
FROM tmdUSProductClassification uspc WITH (NOLOCK) WHERE uspc.PartnerID = @PartnerID@ AND uspc.ADCaseNum <> '''' ) AS LookupViewInner WHERE @whereclause@', CAST(N'2014-03-12T19:37:55.173' AS DateTime), N'Displays US products with US antidumping case numbers populated', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:38:16.500' AS DateTime), N'81d3b754-8008-411b-aaae-20135777a168', N'Classification Lookup: US Products With CVD Applies', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum ) AS [RowNum]
            FROM                  ( SELECT	''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + uspc.ProductNum + ''&ID='' + CAST  (uspc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit
	   ,uspc.ProductNum
	   ,uspc.ProductDesc
	   ,uspc.ProductMaterial
	   ,uspc.ProductTypeCode
	   ,uspc.HsNum
	   ,uspc.CVCaseNum
	   ,uspc.CountryofOrigin
	   ,uspc.ManufacturerID
	   ,uspc.ActiveFlag,
1 AS NoOrder
FROM	tmdUSProductClassification uspc WITH (NOLOCK)
WHERE	uspc.PartnerID = @PartnerID@ AND
		uspc.cvcasenum <> ''''
) AS LookupViewInner
            WHERE                               @whereclause@', CAST(N'2014-03-12T19:38:16.500' AS DateTime), N'Displays US products with US countervailing case numbers populated', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:38:31.600' AS DateTime), N'da986e44-a197-4939-bf02-ca9330e1dfb1', N'Classification Lookup: Products With Invalid HsNum', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum ) AS [RowNum]
            FROM                  ( SELECT	''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST  (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@))'' AS Edit
	   ,xxpc.ProductNum
	   ,xxpc.ProductDesc
	   ,xxpc.ProductMaterial
	   ,xxpc.ProductTypeCode
	   ,xxpc.HsNum
	   ,cm.message AS ValidationMessage
	   ,xxpc.CountryofOrigin
	   ,xxpc.ManufacturerID
	   ,xxpc.ActiveFlag,
1 AS NoOrder
FROM	tmdProductClassification pc WITH (NOLOCK)
JOIN	tmd@COUNTRY_CODE@ProductClassification xxpc WITH (NOLOCK) ON xxpc.PartnerID = pc.PartnerID AND
																	 xxpc.ProductGuid = pc.ProductGuid
JOIN	tmdclassificationmessages cm WITH (NOLOCK) ON xxpc.PartnerID = cm.PartnerID AND
													  xxpc.ProductGuid = cm.ProductGuid AND
													  cm.countrycode = ''@COUNTRY_CODE@''
WHERE	xxpc.PartnerID = @PartnerID@ AND
		cm.fieldname IN (''hsnum'',''hsnum2'')
) AS LookupViewInner
            WHERE                               @whereclause@', CAST(N'2014-03-12T19:38:31.600' AS DateTime), N'Displays products with Invalid HS Numbers', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:38:47.990' AS DateTime), N'69a70978-6fe4-4917-8c64-e147e0be5fe6', N'Classification Lookup: Audit log changes by user', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@ ) AS [RowNum]
FROM 
( 	
SELECT Username , COUNT(*) AS ''Number of edits'' , MAX(EffDate) AS ''Last Edit'', 1 AS NoOrder FROM tmdAuditLog al WITH ( NOLOCK ) WHERE al.CountryCode = ''@COUNTRY_CODE@'' GROUP BY Username
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:38:47.990' AS DateTime), N'Displays number of edits recorded in Audit Log for selected country by user', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-12T19:51:35.403' AS DateTime), N'5104333f-6c28-40c1-9564-6353902d0675', N'Classification Lookup: Most common HS chapters', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@ ) AS [RowNum]
FROM 
(
SELECT	LEFT(HsNum,2) AS HsNumChapter
	   ,COUNT(*) AS ''Records'',
1 AS NoOrder
FROM	tmd@COUNTRY_CODE@ProductClassification WITH (NOLOCK)
GROUP BY LEFT(HsNum,2)
) AS LookupViewInner
WHERE                               
	@whereclause@', CAST(N'2014-03-12T19:51:35.403' AS DateTime), N'Displays the most common HS Chapters for the selected country profile and the number of occurances.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-05-28T11:11:51.923' AS DateTime), N'389fe9c8-fdfc-454e-90e4-302e2288b7c6', N'Classification Lookup: Products With Changed HS Numbers', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum ) AS [RowNum]
            FROM                     (
select ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + ProductNum + ''&ID='' + CAST (ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit, 
 ProductGuid, ProductNum, ProductDesc, p.HsNum, u.DateLastUpdated, 
1 AS NoOrder
from tmd@Country_Code@ProductClassification p 
WITH (NOLOCK) inner join txdHSUpdateReview u 
on p.HsNum = u.HsNum and   p.PartnerID = u.PartnerID  
where u.CountryCode = ''@Country_Code@'' and u.PartnerID=@PartnerId@
) AS LookupViewInner
            WHERE                               @whereclause@', CAST(N'2018-03-01T10:34:08.950' AS DateTime), N'Displays product information for products within a specified country with a change in HS number, including the date that the Hs number was changed', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T10:54:23.643' AS DateTime), N'e98fcbe9-6486-47ff-893c-ed2f81db8775', N'Entry Visibility Lookup: Entries with Broker Payment Details', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]
FROM    
( 	
select 
xxev.EntryGuid,
xxev.EntryNum, 
isnull(g.Decode, evss.StatusCode) as EntryStatus,
xxev.BrokerID,
ebp.BrokerInvoiceNum,
ebp.BrokerInvoiceDate,
ebp.BrokerInvoiceAmount, 
1 AS NoOrder
from txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
join txdEntryValidationSummaryStatus evss WITH (NOLOCK) on 
evss.EntryGuid = xxev.EntryGuid and
evss.PartnerID = xxev.PartnerID  
left join tmgGlobalCodes g WITH (NOLOCK) on 
evss.StatusCode = g.Code and
evss.PartnerID = g.PartnerID and
g.FieldName = ''EVSummaryStatus''
Join txdEntryBrokerPayment ebp WITH (NOLOCK)
On (ebp.PartnerID = xxev.PartnerID and ebp.EntryNum = xxev.EntryNum)
where
xxev.PartnerID = @PartnerID@
and
evss.AssignedTo = ''''
and
xxev.EffDate = (SELECT MAX(a2.effdate)  
FROM txd@COUNTRY_CODE@EntryVisibility a2 WITH (NOLOCK)  
WHERE xxev.PartnerID = a2.PartnerID AND xxev.EntryNum = a2.EntryNum)
Group by xxev.EntryGuid, xxev.EntryNum, evss.StatusCode, xxev.BrokerID,xxev.EntryDate,
xxev.SummaryDate , isnull(g.Decode, evss.StatusCode),
ebp.BrokerInvoiceNum,
ebp.BrokerInvoiceDate,
ebp.Payment, ebp.BrokerInvoiceAmount
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2018-02-13T11:22:39.710' AS DateTime), N'Displays entries and information about the payment from the Broker', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T10:55:23.303' AS DateTime), N'9983d2e3-5004-48f1-b059-3d5b50b23c96', N'Entry Visibility Lookup: Entries With Broker Error Report Lines', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]
FROM    
( 		
SELECT 
xxev.EntryGuid,
xxev.EntryNum, 
isnull(g.Decode, evss.StatusCode) as EntryStatus,
xxev.BrokerID,
xxev.IORNum,
COUNT(EER.ValidationGUID) as ErrorLineCount,
MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',  
CAST(DateDiff(DAY, GETDATE(), DATEADD(DAY, 294, MAX(xxev.EntryDate))) AS varchar(10)) as [DaysSinceEntryDate],
1 AS NoOrder
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryErrorReportLines EER WITH (NOLOCK) 
ON xxev.PartnerID = EER.PartnerID AND xxev.lineguid = EER.LineGuid
AND EER.TypeFlag = ''BRO''
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
ON evss.EntryGuid = xxev.EntryGuid AND evss.PartnerID = xxev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
AND g.FieldName = ''EVSummaryStatus''
WHERE
xxev.PartnerID = @PartnerID@
GROUP BY xxev.EntryGuid, xxev.EntryNum, xxev.BrokerID, xxev.IORNum, g.Decode, evss.StatusCode,  xxev.EntryDate
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-21T10:55:23.303' AS DateTime), N'Displays the broker report lines for entry errors ', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T10:57:19.333' AS DateTime), N'00a290b4-6f7e-4f88-a644-158be2e53529', N'Entry Visibility Lookup: Entries with Errors US', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]
FROM    
( 	

SELECT 
xxev.EntryGuid,
xxev.EntryNum, 
isnull(g.Decode, evss.StatusCode) as EntryStatus,
xxev.BrokerID,
COUNT(Distinct EVE.LineGUID) as ErrorLineCount,
COUNT(Distinct EVE.LineGUID+EVE.ValidationGuid) as ErrorCount,
MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',  
CAST(DateDiff(DAY, GETDATE(), DATEADD(DAY, 294, MAX(xxev.EntryDate))) AS varchar(10)) as [Days Since EntryDate],
1 AS NoOrder
FROM txdUSEntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryValidationErrors EVE WITH (NOLOCK) 
ON xxev.PartnerID = EVE.PartnerID 
AND xxev.entryGUID = EVE.EntryGUID AND xxev.lineguid = EVE.LineGuid
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
ON evss.EntryGuid = xxev.EntryGuid AND evss.PartnerID = xxev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
AND g.FieldName = ''EVSummaryStatus''
WHERE
xxev.PartnerID = @PartnerID@
GROUP BY xxev.EntryGuid, xxev.EntryNum, xxev.BrokerID, g.Decode, evss.StatusCode, xxev.EntryDate
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-21T10:57:19.333' AS DateTime), N'Displays entries into the United States with validation errors', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T11:06:24.503' AS DateTime), N'f4e44c4a-3893-4a0c-b168-d62f55c442ba', N'Entry Visibility Lookup: Entries With External Error Report Lines', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]
FROM    
( 	

SELECT 
xxev.EntryGuid,
xxev.EntryNum, 
isnull(g.Decode, evss.StatusCode) as EntryStatus,
xxev.BrokerID,
xxev.IORNum,
COUNT(EER.ValidationGUID) as ErrorLineCount,
MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',  
CAST(DateDiff(DAY, GETDATE(), DATEADD(DAY, 294, MAX(xxev.EntryDate))) AS varchar(10)) as DaysSinceEntryDate,
1 AS NoOrder	
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryErrorReportLines EER WITH (NOLOCK) 
ON xxev.PartnerID = EER.PartnerID AND xxev.lineguid = EER.LineGuid
AND EER.TypeFlag = ''EXT''
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
ON evss.EntryGuid = xxev.EntryGuid AND evss.PartnerID = xxev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
AND g.FieldName = ''EVSummaryStatus''
WHERE
xxev.PartnerID = @PartnerID@
GROUP BY xxev.EntryGuid, xxev.EntryNum, xxev.BrokerID, xxev.IORNum, g.Decode, evss.StatusCode,  xxev.EntryDate
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-21T11:06:24.503' AS DateTime), N'Displays entry information on entries that have external errors in the error line count', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T11:09:43.113' AS DateTime), N'2fcd5660-bf1d-4cd4-9051-d5e0c6817a1f', N'Entry Visibility Lookup: Entries With Internal Error Report Lines', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]
FROM    
( 	

SELECT 
xxev.EntryGuid,
xxev.EntryNum, 
isnull(g.Decode, evss.StatusCode) as EntryStatus,
xxev.BrokerID,
xxev.IORNum,
COUNT(EER.ValidationGUID) as ErrorLineCount,
MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',  
CAST(DateDiff(DAY, GETDATE(), DATEADD(DAY, 294, MAX(xxev.EntryDate))) AS varchar(10)) as DaysSinceEntryDate,
1 AS NoOrder
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryErrorReportLines EER WITH (NOLOCK) 
ON xxev.PartnerID = EER.PartnerID AND xxev.lineguid = EER.LineGuid
AND EER.TypeFlag = ''INT''
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
ON evss.EntryGuid = xxev.EntryGuid AND evss.PartnerID = xxev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
AND g.FieldName = ''EVSummaryStatus''
WHERE
xxev.PartnerID = @PartnerID@
GROUP BY xxev.EntryGuid, xxev.EntryNum, xxev.BrokerID, xxev.IORNum, g.Decode, evss.StatusCode,  xxev.EntryDate
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-21T11:09:43.113' AS DateTime), N'Displays entry information on entries that have internal errors in the error line count', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T11:10:45.900' AS DateTime), N'fdbb6494-86e0-4bb2-8ce7-9ef7a0ffb892', N'Entry Visibility Lookup: Entries with updates in the Last Day', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum desc ) AS [RowNum]
FROM    
( 	
select 
xxev.EntryGuid,
xxev.EntryNum, 
isnull(g.Decode, evss.StatusCode) as EntryStatus,
xxev.BrokerID,
MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',  
evss.AssignedTo,
xxev.VersionDate,
xxev.TableName,
1 AS NoOrder
from txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
join txdEntryValidationSummaryStatus evss WITH (NOLOCK) on 
evss.EntryGuid = xxev.EntryGuid and
evss.PartnerID = xxev.PartnerID  
left join tmgGlobalCodes g WITH (NOLOCK) on 
evss.StatusCode = g.Code and
evss.PartnerID = g.PartnerID and
g.FieldName = ''EVSummaryStatus''
where
xxev.PartnerID = @PartnerID@
and
evss.AssignedTo = ''''
and
xxev.EffDate = (SELECT MAX(a2.effdate)  
FROM txd@COUNTRY_CODE@EntryVisibility a2 WITH (NOLOCK)  
WHERE xxev.PartnerID = a2.PartnerID AND xxev.EntryNum = a2.EntryNum)
and
exists (select 1 from txd@COUNTRY_CODE@EntryVisibility a2 with (nolock)
Where xxev.PartnerID = a2.PartnerID and xxev.EntryNum = a2.EntryNum and xxev.EntryGUID <> a2.EntryGUID)
and xxev.EffDate > DATEADD(day,-1,getdate())
and evss.StatusCode not in(''CA'',''CE'',''CEC'',''CNV'')
Group by xxev.EntryGuid, xxev.EntryNum, evss.StatusCode, xxev.BrokerID,xxev.EntryDate,
xxev.SummaryDate , isnull(g.Decode, evss.StatusCode), evss.AssignedTo,
xxev.VersionDate,
xxev.TableName
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2018-02-13T11:32:40.753' AS DateTime), N'Displays entries that have been updated within the last day', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T11:11:33.853' AS DateTime), N'4f2fd3eb-bca8-431b-b648-f4b3fec1d2cf', N'Entry Visibility Lookup: Entry Dates Within the Last 7 Days', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
( 	
SELECT 
usev.EntryGuid,
usev.EntryNum, 
isnull(g.Decode, evss.StatusCode) as EntryStatus,
usev.BrokerID,
usev.IORNum,
MAX(CONVERT(VARCHAR(10), usev.EntryDate, 101)) AS ''EntryDate'',  
COUNT(usev.LineNum) as ''Entry Lines'',
1 AS NoOrder
FROM txd@COUNTRY_CODE@EntryVisibility usev WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
ON evss.EntryGuid = usev.EntryGuid AND evss.PartnerID = usev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
AND g.FieldName = ''EVSummaryStatus''
WHERE
usev.PartnerID = @PartnerID@
AND DATEDIFF(DAY, EntryDate, GETDATE()) < 7
GROUP BY usev.EntryGuid, usev.EntryNum, usev.BrokerID, usev.IORNum, g.Decode, evss.StatusCode,  usev.EntryDate
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-21T11:11:33.853' AS DateTime), N'Displays entry numbers that have entry dates within the last 7 days', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T11:13:21.997' AS DateTime), N'c9114233-ceb8-49ad-b2d3-9aedab588e64', N'Entry Visibility Lookup: Entry Dates Within the Last 30 Days', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
( 	
SELECT 
usev.EntryGuid,
usev.EntryNum, 
isnull(g.Decode, evss.StatusCode) as EntryStatus,
usev.BrokerID,
usev.IORNum,
MAX(CONVERT(VARCHAR(10), usev.EntryDate, 101)) AS ''EntryDate'',  
COUNT(usev.LineNum) as ''Entry Lines'',
1 AS NoOrder
FROM txd@COUNTRY_CODE@EntryVisibility usev WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
ON evss.EntryGuid = usev.EntryGuid AND evss.PartnerID = usev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
AND g.FieldName = ''EVSummaryStatus''
WHERE
usev.PartnerID = @PartnerID@
AND DATEDIFF(DAY, EntryDate, GETDATE()) < 30
GROUP BY usev.EntryGuid, usev.EntryNum, usev.BrokerID, usev.IORNum, g.Decode, evss.StatusCode,  usev.EntryDate
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-21T11:13:21.997' AS DateTime), N'Displays entry numbers that have entry dates within the last 30 days', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T11:14:17.087' AS DateTime), N'd6688828-b127-4acb-a2b6-f238701afd9f', N'Entry Visibility Lookup: Entry Dates Within the Last 90 Days', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
( 	
SELECT 
usev.EntryGuid,
usev.EntryNum, 
isnull(g.Decode, evss.StatusCode) as EntryStatus,
usev.BrokerID,
usev.IORNum,
MAX(CONVERT(VARCHAR(10), usev.EntryDate, 101)) AS ''EntryDate'',  
COUNT(usev.LineNum) as ''Entry Lines'',
1 AS NoOrder
FROM txd@COUNTRY_CODE@EntryVisibility usev WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK) 
ON evss.EntryGuid = usev.EntryGuid AND evss.PartnerID = usev.PartnerID  
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK) 
ON evss.StatusCode = g.Code AND evss.PartnerID = g.PartnerID 
AND g.FieldName = ''EVSummaryStatus''
WHERE
usev.PartnerID = @PartnerID@
AND DATEDIFF(DAY, EntryDate, GETDATE()) < 90
GROUP BY usev.EntryGuid, usev.EntryNum, usev.BrokerID, usev.IORNum, g.Decode, evss.StatusCode,  usev.EntryDate
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-21T11:14:17.087' AS DateTime), N'Displays entry numbers that have entry dates within the last 90 days', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T11:15:23.693' AS DateTime), N'016495b7-17f6-450c-827a-cd66265dbe0f', N'Entry Visibility Lookup: Entry Packets Missing', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
( 	
select
xxev.EntryGuid,
xxev.EntryNum,
isnull(g.Decode, evss.StatusCode) AS EntryStatus,
xxev.BrokerID,
MAX(CONVERT(VARCHAR(10), xxev.Effdate, 101)) AS ''EffDate'',
MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',  
xxev.IORNum,
1 as NoOrder
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
INNER JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
ON evss.EntryGuid = xxev.EntryGuid
AND evss.PartnerID = xxev.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK)
ON evss.StatusCode = g.Code
AND evss.PartnerID = g.PartnerID
AND g.FieldName = ''EVSummaryStatus''
LEFT JOIN tmgDocRetention doc WITH (NOLOCK)
ON xxev.partnerid = doc.partnerid
AND xxev.EntryNum = doc.Identifier
WHERE xxev.PartnerID = @PartnerId@
AND NOT EXISTS (
SELECT 1
FROM tmgDocRetention doc WITH (NOLOCK)
WHERE doc.PartnerID = xxev.PartnerId
AND doc.Identifier = xxev.EntryNum
)
GROUP BY 
xxev.EntryGuid,
xxev.EntryNum,
xxev.IORNum,
xxev.Effdate,
xxev.EntryDate,
g.Decode,
evss.StatusCode,
xxev.BrokerID
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-21T11:15:23.693' AS DateTime), N'Shows all entries that have missing entry packets', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T11:16:11.900' AS DateTime), N'dda1576b-7de6-44a0-916c-a5245cfdfdb7', N'Entry Visibility Lookup: Last Discrepancies', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
( 	
SELECT 
xxev.EntryGuid,
xxev.EntryNum,
isnull(g.Decode, evss.StatusCode) AS EntryStatus,
xxev.BrokerID,
MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',
xxev.IORNum,
g.Decode AS STATUS,
MAX(CONVERT(VARCHAR(10), eh.EffDate, 101)) AS ''LastErrorDate'',
eh.ValidationGroup,
eh.ValidationType,
g2.Decode AS AssignedTo,
1 as NoOrder
FROM txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
INNER JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
ON evss.EntryGuid = xxev.EntryGuid
AND evss.PartnerID = xxev.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK)
ON evss.StatusCode = g.Code
AND evss.PartnerID = g.PartnerID
AND g.FieldName = ''EVSummaryStatus''
INNER JOIN txdEntryValidationErrorsHist eh WITH (NOLOCK)
ON xxev.EntryGUID = eh.EntryGUID
AND xxev.LineGUID = eh.LineGUID
LEFT JOIN dbo.tmgGlobalCodes g2 WITH (NOLOCK)
ON g2.Code = evss.AssignedTo
AND g2.Decode = ''EVAssignToList''
WHERE xxev.PartnerID = @PartnerId@
GROUP BY 
xxev.EntryGuid,
xxev.EntryNum,
eh.ValidationGroup,
eh.ValidationType,
g.Decode,
g2.Decode,
xxev.IORNum,
g.Decode,
evss.StatusCode,
xxev.BrokerID
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-21T11:16:11.900' AS DateTime), N'Displays the dates of the most recent errors and the validation type error', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T11:18:37.087' AS DateTime), N'f43716f3-d131-42ee-93a7-af4941815220', N'Entry Visibility Lookup: Reason Code Summary Detail', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@) AS [RowNum]
FROM    
( 	
select 
xxev.EntryGuid,
xxev.EntryNum, 
isnull(g.Decode, evss.StatusCode) as EntryStatus,
xxev.BrokerID,
MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS ''EntryDate'',  
evss.AssignedTo,
xxev.LineNum,
eve.ValidationType,
1 as NoOrder
from txd@COUNTRY_CODE@EntryVisibility xxev WITH (NOLOCK)
join txdEntryValidationSummaryStatus evss WITH (NOLOCK) on 
evss.EntryGuid = xxev.EntryGuid and
evss.PartnerID = xxev.PartnerID  
left join tmgGlobalCodes g WITH (NOLOCK) on 
evss.StatusCode = g.Code and
evss.PartnerID = g.PartnerID and
g.FieldName = ''EVSummaryStatus''
Join txdEntryValidationErrors eve WITH (NOLOCK)
On (eve.PartnerID = xxev.PartnerID and eve.LineGUID = xxev.LineGUID)
Join txdEntryValidationConfiguration evc WITH (NOLOCK)
On (eve.PartnerID = evc.PartnerID and eve.ValidationGuid = eve.ValidationGuid)
where
xxev.PartnerID = @PartnerID@
and
evss.AssignedTo = ''''
and
xxev.EffDate = (SELECT MAX(a2.effdate)  
FROM txd@COUNTRY_CODE@EntryVisibility a2 WITH (NOLOCK)  
WHERE xxev.PartnerID = a2.PartnerID AND xxev.EntryNum = a2.EntryNum)
and
not exists (select 1 from txdEntryValidationClosedErrors vce WITH (NOLOCK) where vce.PartnerID = eve.PartnerID and vce.LineGUID = eve.LineGUID and vce.ValidationGuid = eve.ValidationGuid)

--DTT Dont think Value is a useable variable yet
--and evc.ValidationType = ''@Value@''

Group by 
xxev.EntryGuid,
xxev.EntryNum, 
evss.StatusCode, 
xxev.BrokerID,
xxev.EntryDate,
xxev.SummaryDate , 
isnull(g.Decode, evss.StatusCode),
evss.AssignedTo, 
xxev.LineNum,
eve.ValidationType
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2018-02-13T11:28:06.463' AS DateTime), N'Displays summary of the validation error with the Line Number and the Validation Type error', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-21T11:19:26.653' AS DateTime), N'e2669fa0-9b0d-48be-85eb-32e8e1aaf6fb', N'Entry Visibility Lookup: Lines Flagged for Recon US', N'
SELECT *,ROW_NUMBER() OVER ( ORDER BY @orderby@, EntryNum DESC ) AS [RowNum]
	FROM (
SELECT 
xxev.EntryGuid,
xxev.EntryNum,
isnull(g.Decode, evss.StatusCode) AS EntryStatus,
xxev.BrokerID,
MAX(CONVERT(VARCHAR(10), xxev.EntryDate, 101)) AS EntryDate,  
xxev.IORNum,
xxev.PortOfEntry,
xxev.LineNum,
xxev.ProductNum,
xxev.InvoiceNum,
xxev.TxnQty,
xxev.HsNum,
xxev.LineValue,
g.Decode AS STATUS,
1 as NoOrder
FROM txdUSEntryVisibility xxev WITH (NOLOCK)
JOIN txdEntryValidationSummaryStatus evss WITH (NOLOCK)
ON evss.EntryGuid = xxev.EntryGuid
AND evss.PartnerID = xxev.PartnerID
LEFT JOIN tmgGlobalCodes g WITH (NOLOCK)
ON evss.StatusCode = g.Code
AND evss.PartnerID = g.PartnerID
AND g.FieldName = ''EVSummaryStatus''
WHERE xxev.PartnerID = @PartnerId@
AND xxev.ReconciliationFlag = ''Y''
GROUP BY 
xxev.EntryGuid,
xxev.EntryDate,
xxev.EntryNum,
xxev.IORNum,
xxev.PortOfEntry,
xxev.LineNum,
xxev.ProductNum,
xxev.InvoiceNum,
xxev.TxnQty,
xxev.HsNum,
xxev.LineValue,
g.Decode,
evss.StatusCode,
xxev.BrokerID)  
AS LookupViewInner WHERE @whereclause@', CAST(N'2018-02-27T11:39:51.097' AS DateTime), N'Displays entry information and the line number flagged for reconciliation on entries in the United States', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:06:02.600' AS DateTime), N'8b720b86-d3a9-4caa-b54f-4c232832bbb8', N'FTZ Transition: EndOfFiscalYear and EndOfZoneYear', N'SELECT
CASE WHEN (select count (*) from tmfDefaults WITH (NOLOCK) where endofFiscalYear=''1/1/1900'' or endofzoneyear=''1/1/1900'') = 0 
THEN ''EndOfFiscalYear and EndOfZoneYear are correctly populated in the tmfdefaults table''
ELSE ''EndOfFiscalYear and EndOfZoneYear are NOT correctly populated in the tmfdefaults table''
END AS Message', CAST(N'2017-08-16T15:06:02.600' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:06:19.013' AS DateTime), N'4bb0cbca-2f7a-4241-acfb-b0552f69e72c', N'FTZ Transition: PushToItemMaster Notifications', N'SELECT
CASE WHEN XMLDocument.value(''(/configuration/product_classification/@pushtoitemmaster)[1]'',''varchar(500)'') = ''Y'' THEN
CASE WHEN XMLDocument.value(''(/configuration/product_classification/classification_queue/notifications/to)[1]'',''varchar(500)'') like ''%Monitoring@IntegrationPoint.com%'' THEN ''PASS'' 
ELSE ''Failed Inspection. Monitoring@IntegrationPoint.com needs to be added to classification_queue/notifications/to section in config'' 
END 
ELSE ''PASS'' END AS Message
from tmdXMLDocumentCache WITH (NOLOCK)
Where XMLDocumentPath = ''D:\IntegrationPoint\Configuration\' + cast(@Partnerid as varchar(30)) + 'config.xml''', CAST(N'2017-08-16T15:06:19.013' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-10-23T14:38:04.820' AS DateTime), N'6a243fd6-64b2-48c9-b10c-6e9f3787f175', N'IMMEX Lookup: IMMEX Lookup', N'SELECT * ,
ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum, OrderNumWork asc ) AS [RowNum]
FROM    
( 
select 
fp.TxnNumGuid,
fp.ProductNum, 
fp.TxnQty, 
fp.TransportID, 
fp.TxnCode,
fp.OrderNumWork, 
fp.OrderNumShip, 
fp.OrderNumReceipt, 
fp.ERPDate, 
fp.TxnDate, 
fp.Weight, 
fph.HTSIndex, 
fph.Value, 
fph.CountryOfOrigin, 
fph.ManufacturerID, 
fph.StatusCode,
1 AS NoOrder
from TxdFIFOProcessing fp
join TxdFifoProcessingHtsValues fph on 
fp.txnnumguid = fph.txnnumguid and
fp.PartnerID = fph.PartnerID
where
fp.PartnerID = @PartnerID
) AS LookupViewInner
WHERE                               
@whereclause@', CAST(N'2014-10-23T14:38:04.820' AS DateTime), N'Displays all products currently in IMMEX.', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2020-08-04T11:14:53.933' AS DateTime), N'EE7158B7-B56A-494B-8129-43257558E0D1', N'Export Validations Global Codes Upload', N'UPDATE tgc SET tgc.Decode = u.ValidationCheck FROM tmgGlobalCodes tgc JOIN usrExportValidations u ON u.PartnerID = tgc.partnerID AND u.ValidationGroup = tgc.FieldName AND u.ValidationField = tgc.Code WHERE u.PartnerID = (Select PartnerID from tmfDefaults) AND u.ValidationCheck <> tgc.Decode AND u.ValidationCheck in (''Y'', ''N'')', CAST(N'2019-12-09T14:07:00.000' AS DateTime), N'Export Validations Global Codes Upload', N'N', N'N')
, (@PartnerID, CAST(N'2020-08-04T11:14:53.940' AS DateTime), N'6C26569E-A037-454A-B98D-AAC5075F420E', N'Export Sourcing SS Upload Logic', N'UPDATE tgc SET tgc.Decode = u.SourcingEntity FROM tmgGlobalCodes tgc JOIN usrExportSourcing u ON u.PartnerID = tgc.partnerID AND u.SourcingGroup = tgc.FieldName AND u.SourcingField = tgc.Code WHERE u.PartnerID = (Select PartnerID from tmfDefaults) AND u.SourcingEntity <> tgc.Decode AND u.SourcingEntity in (''I'', ''GC'', ''BL'', ''CO'') AND u.SourcingGroup <> ''''', CAST(N'2019-12-09T14:07:00.000' AS DateTime), N'Export Sourcing SS Upload Logic', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T09:22:13.947' AS DateTime), N'f159dd37-3136-4920-9d7f-59db7d124881', N'Classification Lookup: CI - US FDA', N'
SELECT *
	,ROW_NUMBER() OVER (
		ORDER BY @orderby@
			,ProductNum ASC
		) AS [RowNum]
FROM (
	SELECT ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=@COUNTRY_CODE@)'' AS Edit
		,uspc.ProductNum
		,uspc.ProductDesc
		,''['' + uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber='' + uspc.HsNum + ''&Country=us)'' AS HsNum
		,CIControls.ControlType
		,CIControls.TranslationValue
		,CIControls.AgencyCode
		,1 AS NoOrder
	FROM tmdUSProductClassification uspc WITH (NOLOCK)
	JOIN vid_CI_US_Controls CIControls WITH (NOLOCK) ON CIControls.AgencyCode = ''USFDA''
		AND uspc.ProductGuid = CIControls.ProductGuid
		AND uspc.PartnerID = CIControls.PartnerID
	WHERE uspc.PartnerID = @PartnerID@
	) AS LookupViewInner
WHERE @whereclause@', CAST(N'2014-11-18T09:22:13.947' AS DateTime), N'Displays the US Food & Drug regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:23:14.660' AS DateTime), N'a58e745d-3ee5-4844-99a4-2efe92d09bbc', N'Classification Lookup: CI - US FCC', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,

											   
											uspc.ProductNum,  
											uspc.ProductDesc, 
										
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum,
											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USFCC'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = @PartnerID
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:23:14.660' AS DateTime), N'Displays the US Federal Communications Commission regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:25:25.147' AS DateTime), N'9b51e137-f4f0-4bc0-b3bd-4fa01e238546', N'Classification Lookup: CI - US FTC', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,

											
											uspc.ProductNum,  
											uspc.ProductDesc, 
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum,

											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USFTC'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = 2120
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:25:25.147' AS DateTime), N'Displays the US Federal Trade Commission regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:26:28.073' AS DateTime), N'9e3f9f6c-bf4e-4366-91ff-b40801d4c6a3', N'Classification Lookup: CI - US FWS', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,
											 
											uspc.ProductNum,  
											uspc.ProductDesc, 
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum,
											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USFWS'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = @PartnerID
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:26:28.073' AS DateTime), N'Displays the US Fish and Wildlife Service regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:27:12.227' AS DateTime), N'22fa5110-38ae-4b61-9a41-c0ae405744b9', N'Classification Lookup: CI - US NMFS', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,
											
											uspc.ProductNum,  
											uspc.ProductDesc, 
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum,
											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USNMFS'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = @PartnerID
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:27:12.227' AS DateTime), N'Displays the US National Marine Fisheries Service regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:27:30.047' AS DateTime), N'165f13dd-33fb-42e6-9023-dcbef0c16c37', N'Classification Lookup: CI - US OTEXA', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,
											 
											uspc.ProductNum,  
											uspc.ProductDesc, 
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum, 
											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USOTEXA'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = @PartnerID
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:27:30.047' AS DateTime), N'Displays the US Office of Textiles and Apparel regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:27:41.337' AS DateTime), N'6dcc8243-61eb-408d-984a-fa41bb50f699', N'Classification Lookup: CI - US USDA', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,
											
											uspc.ProductNum,  
											uspc.ProductDesc, 
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum,
											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USUSDA'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = @PartnerID
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:27:41.337' AS DateTime), N'Displays the US Department of Agriculture regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:27:52.767' AS DateTime), N'd0b5bfe6-8214-4143-9785-f9e399a96ca5', N'Classification Lookup: CI - US WHO', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,
											
											uspc.ProductNum,  
											uspc.ProductDesc, 
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum,
											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USWHO'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = @PartnerID
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:27:52.767' AS DateTime), N'Displays the US  WHO regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:28:46.353' AS DateTime), N'ddbfc1d7-60f6-4b4a-bb65-e817e862589e', N'Classification Lookup: CI - US EPA', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,
											
											uspc.ProductNum,  
											uspc.ProductDesc, 
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum,
											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USEPA'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = @PartnerID
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:28:46.353' AS DateTime), N'Displays the US Environmental Protection Agency regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:29:00.613' AS DateTime), N'3a5be1e5-42f7-4d7a-90dd-e8d87ad896eb', N'Classification Lookup: CI - US E&C', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,
											 
											uspc.ProductNum,  
											uspc.ProductDesc, 
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum,
											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USE&C'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = @PartnerID
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:29:00.613' AS DateTime), N'Displays the US  E and C regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:29:12.713' AS DateTime), N'cdf311ae-9151-4cc6-ad1b-62b93158ba63', N'Classification Lookup: CI - US DOT', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,
											
											uspc.ProductNum,  
											uspc.ProductDesc, 
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum,
											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USDOT'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = @PartnerID
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:29:12.713' AS DateTime), N'Displays the US Department of Transportation regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:29:25.327' AS DateTime), N'e90ccfa8-ab73-493f-8813-93b4ac4fe614', N'Classification Lookup: CI - US DOL', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,
											  
											uspc.ProductNum,  
											uspc.ProductDesc, 
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum,
											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USDOL'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = @PartnerID
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:29:25.327' AS DateTime), N'Displays the US Department of Labor regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:29:37.327' AS DateTime), N'a2b51265-9156-4784-b829-8407e4904119', N'Classification Lookup: CI - US CPSC', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,
											
											uspc.ProductNum,  
											uspc.ProductDesc, 
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum,
											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USCPSC'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = @PartnerID
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:29:37.327' AS DateTime), N'Displays the US Consumer Product Safety Commission regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:29:51.677' AS DateTime), N'84db6e93-12d9-4439-bf03-b0794f887154', N'Classification Lookup: CI - US CBP', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,
											
											uspc.ProductNum,  
											uspc.ProductDesc, 
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum,
											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USCBP'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = @PartnerID
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:29:51.677' AS DateTime), N'Displays the US Customs and Border Protection regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:30:02.943' AS DateTime), N'7b8c07ad-7a1b-4baf-a2fa-3b124e3b8e4a', N'Classification Lookup: CI - US ATF', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,
											 
											uspc.ProductNum,  
											uspc.ProductDesc, 
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum,
											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USATF'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = @PartnerID
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:30:02.943' AS DateTime), N'Displays the US Alcohol Tobacco, Firearms and Explosives Bureau regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-11-18T09:30:17.677' AS DateTime), N'c36b1fe2-e71e-42db-a495-321776e02818', N'Classification Lookup: CI - US APHIS', N'SELECT * ,
									ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum asc ) AS [RowNum]
								FROM    
									(
										select 
 ''[Edit](/Maintenance/Edit.aspx?ID='' + cast(uspc.ProductGuid as varchar(50)) + ''&TYPE=1&COUNTRY=US)'' As Edit,
											   
											uspc.ProductNum,  
											uspc.ProductDesc, 
''['' +uspc.HsNum + ''](/Content/fugGlobalTariffsDetail.aspx?HsNumber=''+uspc.HsNum+''&Country=us)'' as HsNum,
											CIControls.ControlType,
											CIControls.TranslationValue,
CIControls.AgencyCode,
											1 AS NoOrder
										from tmdUSProductClassification uspc WITH (NOLOCK) 
										join vid_CI_US_Controls CIControls  WITH (NOLOCK) on 
											CIControls.AgencyCode = ''USAPHIS'' and
											uspc.ProductGuid = CIControls.ProductGuid and
											uspc.PartnerID = CIControls.PartnerID
										WHERE 									
											uspc.PartnerID = @PartnerID
									) AS LookupViewInner
								WHERE                               
									@whereclause@', CAST(N'2014-11-18T09:30:17.677' AS DateTime), N'Displays the US Animal & Plant Health Inspection Service regulations for US products', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-12-03T10:19:21.960' AS DateTime), N'92e5b6b6-56ae-41f5-84e9-fee76e0a433d', N'Classification Lookup: GC Lite', N'SELECT * ,    ROW_NUMBER() OVER ( ORDER BY @orderby@, ProductNum ) AS [RowNum]
            FROM                  (
select ''['' + ''Edit'' + '']'' + ''(/Maintenance/Edit.aspx?ProductNum='' + xxpc.ProductNum + ''&ID='' + CAST (xxpc.ProductGuid AS VARCHAR(50)) + ''&TYPE=1&COUNTRY=US)'' AS Edit, xxpc.ProductNum, xxpc.ProductDesc, xxpc.HsNum,
1 AS NoOrder
from tmdUSProductClassification xxpc (nolock) join tmdProductClassification pc on xxpc.PartnerID = pc.PartnerID and xxpc.ProductGuid = pc.ProductGuid where xxpc.PartnerID = (Select PartnerID from tmfdefaults) group by xxpc.ProductGuid, xxpc.ProductNum, xxpc.ProductDesc, xxpc.HsNum, xxpc.EffDate

            ) AS LookupViewInner
            WHERE                               @whereclause@', CAST(N'2014-12-03T10:19:21.960' AS DateTime), N'Displays all products in the selected country profile for quick navigation and high-level extract', N'N', N'N')
INSERT #tmgSQL ([PartnerID], [EffDate], [SQLGUID], [SQLDescription], [SQLCmd], [TxnDate], [SQLLongDescription], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2017-08-16T15:06:40.700' AS DateTime), N'e0edb76b-295e-41bc-813e-c8b44a723c80', N'FTZ Transition: 214 Transmissions', N'SELECT
CASE WHEN (select count (*) from txdABITransactionStatus WITH (NOLOCK)
where status = ''Accepted'') <> 0 
THEN ''Received 214 Acceptance'' 
ELSE ''No 214 Acceptance received'' END AS Message

UNION

SELECT
CASE WHEN (select count (*) from txdABITransactionStatus WITH (NOLOCK)
where status = ''Rejected'') <> 0 
THEN ''Received 214 Rejection'' 
ELSE ''No 214 Rejection received'' END AS Message', CAST(N'2017-08-16T15:06:40.700' AS DateTime), N'', N'N', N'N')
INSERT #tmgSQLUserList ([PartnerID], [EffDate], [UserGUID], [SQLGUID], [PageName], [DeletedFlag], [KeepDuringRollback]) VALUES (@PartnerID, CAST(N'2014-03-28T14:55:49.587' AS DateTime), N'Chart', N'b5715d88-a42c-4bb7-a778-ac006512f9ce', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T14:56:24.520' AS DateTime), N'Chart', N'e8e76971-3e41-416c-9bdf-4da78204f7c2', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T14:56:48.230' AS DateTime), N'Chart', N'e645e609-da92-4905-a952-0845a52d8238', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T15:18:23.627' AS DateTime), N'Chart', N'af8c5840-cf22-49d0-8dc9-4298abdccb50', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T15:27:24.170' AS DateTime), N'Chart', N'f62d6b60-e68c-4318-b97c-20e4a0ca838c', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T15:27:53.560' AS DateTime), N'Chart', N'bffe1265-710f-49f2-8fd1-a3c40b053708', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T15:28:32.267' AS DateTime), N'Chart', N'fb323797-cfdb-4e94-92ea-2eea9ff1547f', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T15:42:05.857' AS DateTime), N'Chart', N'd06273c8-79b3-4c72-acc2-602235defaba', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T15:42:30.580' AS DateTime), N'Chart', N'19e01ca4-1b43-450f-a97a-988b3316370e', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T15:50:01.970' AS DateTime), N'Chart', N'bdc9a6b6-979a-4efa-9ad9-fe396d37a7a8', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T15:51:53.707' AS DateTime), N'Chart', N'67848143-56eb-4f49-af57-acc011d4b085', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T15:55:53.457' AS DateTime), N'Chart', N'26623756-25b5-4101-ac21-b7d74a7aef9f', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T15:56:36.730' AS DateTime), N'Chart', N'3b4e7481-4aa9-40e9-a81c-0bbd5e587392', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T17:11:03.363' AS DateTime), N'Chart', N'dbbf4b84-ff59-44b2-a300-845a394e6b4d', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T17:11:57.243' AS DateTime), N'Chart', N'e5815d80-9106-458e-be1d-7ef62b3b8578', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T17:14:14.410' AS DateTime), N'Chart', N'4c9e3ac4-2b8e-4f6f-a978-632221b62fd4', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T17:14:36.870' AS DateTime), N'Chart', N'4e52f9ae-d257-4394-9970-d0bd142e61a3', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T17:18:02.513' AS DateTime), N'Chart', N'83466aa2-af91-4c2c-b061-c647290624c0', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-28T17:18:43.027' AS DateTime), N'Chart', N'3e9b4467-7d53-4de7-ac24-dd7c173c61d9', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-03-31T15:26:49.267' AS DateTime), N'Chart', N'b2c7380e-cc1a-4731-b769-0f4fe7244b9b', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-04-08T10:44:06.000' AS DateTime), N'Chart', N'c2017c09-c1c8-4aea-878d-4ad5732970bf', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'00cf4f44-7cf2-4734-89a4-37da34d69a08', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'00f53a58-e099-46a4-8e8b-bdbd1eee946c', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'02c7778b-bf8c-40f6-bb22-353bb3a652cb', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'03808ed6-f20c-4550-ad59-380bf472e320', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'04070da7-a714-49f7-bd7d-78ea6f91c633', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'06f8e757-70bf-41b7-9afa-cf644bdaf750', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'0953e69a-3ba0-4a7a-ac9e-01fb2e2dc8fb', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'0d082f57-1614-45b0-a385-65ad788a2bf2', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'0ec89512-b5d4-42fb-8efa-a30a30b697ef', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'13b5d7df-ee37-4703-a41c-622a62c974ff', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'1d71df0a-34ed-4a8c-b1a3-1c9f10df2885', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'1e0d0bb2-730b-418a-8a61-ab8b4a7e435c', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'1e171681-4e9e-46e7-a42e-8116a5c334d9', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'1f98ac89-74c9-4254-aece-a857fd7cf3a0', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'221ee530-24f1-4eed-a9be-aac10000b4fd', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'25480f2e-5b87-460f-8971-698f93d7a12d', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'266afd01-1aaa-4e59-8698-ed3ca5bdaa6e', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'27a65e7e-8b07-42c8-888d-7db41f5fe428', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'2b07e450-c321-4a80-82b9-712defa584a5', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'2d177d2a-d7db-4983-93e0-23e7d9448b49', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'2ddfb8db-e07f-4210-9c25-05a24da73f93', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'2e970280-bba4-49ee-bf5d-539c1b043a52', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'2f6b8bd7-8dc8-4bb9-98bc-12abf4ab078c', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'31145553-7d39-4959-ae27-e389dc17768b', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'328530f3-22e1-4286-b144-7fff6ded2343', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'333b819d-fbba-40a5-ac43-39027a5b5cc2', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'340206e2-ff94-4dff-a573-70c7beb63ab1', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'3600b0b1-905e-40c0-9da4-db7c583bbe33', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'3a29f99a-7a38-4d1e-aa65-81bf5af00d0c', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'3b5f7a82-97c6-42cb-af83-90ae77dad245', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'3d45c253-e11f-428c-92a0-ef8366396d34', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'41b4c0da-1da5-4647-ace7-d629e90df8bc', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'4742940a-7253-4d5f-839e-57eba115b564', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'4b3aa820-6873-480d-9ef5-af9d40e37b8f', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'508254b9-cd75-466c-9cae-7bc43834555c', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'50dc9407-4acf-47c0-a471-2a97165de79b', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'5104333f-6c28-40c1-9564-6353902d0675', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'55e29580-dd47-4acf-a527-ba4b539cb8d0', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'56be8a2c-7675-4570-b6f9-c51fdceda043', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'57299f57-a673-4ec1-b344-82c299e3c069', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'584203cb-681b-40b2-be29-03dd790fc3f1', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'59cbca2c-2709-47a0-ab07-b6c96720806d', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'5bee3d5f-1e06-4044-9fdc-65cc075367ea', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'626edd42-93c5-48a0-80a4-7ad4840b93e5', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'66c5572a-5aed-49d1-bcca-af604e76dc42', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'6754f933-0d24-4c59-90e2-535bd72db918', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'69a70978-6fe4-4917-8c64-e147e0be5fe6', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'69a8f10e-78e3-4087-9834-654adc7f5642', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'6acc15b1-ef1d-4f9f-b5a3-1cccea379bd1', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'6bdb9e34-fa0c-4aab-8258-cf1d880aff44', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'6cd29015-234f-45dd-8587-4eb8b397f4db', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'6da36d92-dfd6-4743-8a48-4de87ca6ac01', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'6f46f544-630e-49e1-9b19-931318a9cac5', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'7038b51a-fc20-415f-8911-08c4f0c58f8d', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'704a868c-d986-4d6e-890a-87423deebb5a', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'719d7482-0120-4e36-ae81-83fb87c28cc7', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'78597e09-3790-418c-b63d-441d8a167b21', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'7b7dc548-b62b-4c55-bcde-675e2ba72876', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'7c63919e-33e9-45bc-9c69-67e59b1d183d', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'7f70ffaf-3f3b-42d7-b6d8-88d05fdf494c', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'815dcf7e-e034-4dc4-8434-4726d8f8e7c6', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'81bd01d0-49de-493e-96f3-a721bb07ec43', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'81d3b754-8008-411b-aaae-20135777a168', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'81f3dead-b16f-4d78-846b-5a386bdd2d55', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'837ee233-fb26-4e5c-83da-f4d019a945da', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'85ba048a-bedb-484a-bff3-52263ca4ce0e', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'85cef7be-2ed9-4a12-a52b-3fc6f17ed87f', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'8b9b6b33-203d-4204-86f5-838b4eea38a1', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'8bd5a2ef-df05-474b-a9ff-ce6b1e26a968', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'8c564d2c-2881-496d-8b88-710f7c8b542e', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'903adb12-b1f6-4f44-861a-5c3d0b8e4013', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'90a5c358-3d85-4aff-99c1-ca491dfe8f08', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'93beabb3-bed0-438a-8518-4ddf06f527ea', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'954bc5dd-63ea-44f4-a908-d2f23cd3983f', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'96766873-6ac1-4dd4-87d2-1ebdc5b59036', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'98880282-80da-4ea8-bb23-1cda6df8a25a', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'9cee5c33-0bc1-402b-ad9a-debda32f3bde', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'9e6eb9fe-3ecd-486c-b4ce-6019d39eb299', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'a2a5a908-3e08-4203-a6dd-8efe75c127d8', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'a6b8b6f6-b6dd-416e-900f-afac8289a296', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'a6d94094-4aec-4394-aada-d9b8ee5e1990', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'aae0dfbd-0948-43d6-82c5-cae681119ac3', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'ac9a627a-ff70-4d2e-9b31-174b1135f794', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'b2aab4fd-27a6-46fc-8bc4-c9bada344e40', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'b4e8ad1a-e172-4e0c-9edf-73f05e552403', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'b741c152-8b4b-45f2-bbab-5038f370d1e6', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'b7c06947-0135-4bdc-b264-3d7016ad770f', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'b9b764cc-36ac-48a7-88f2-f4d076b4f003', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'bd8382d9-977d-447b-98e5-445819485b4f', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'c08740f6-27d9-419b-bb0b-c5ea73e2aa74', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'c14dd075-8951-4bd9-b98c-bfefff83f426', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'c1e5ba5f-d601-4fb9-ad21-5e09dfc32c53', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'c43387f4-cb76-45cc-a84a-040ca5197e32', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'c63cee42-5814-4d17-a50d-ff09a8e84896', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'c64894f9-4d83-41f7-8b17-052d69d5326e', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'c66b01f4-2662-4728-a000-687495fb2e02', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'c8755c5f-04df-4c0e-98fe-7ffe3e3e5b8e', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'cb340c75-a1a6-4f9c-924e-4c6ba2cb4f0a', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'd4edbafe-6d89-4268-b764-94b14ec1e7a3', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'd65291d4-887e-49b8-baa6-af0405ce9886', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'd6be8e80-99a5-4506-a748-dbd2c9331fdf', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'd74730e1-ab11-4991-a405-f31cdf5868a7', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'd8d7af7f-43c0-4f6a-b8c9-26912fe55fbb', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'da986e44-a197-4939-bf02-ca9330e1dfb1', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'dd40b93b-7fee-4aeb-886b-6e7470c527a4', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'df53c1b6-e930-464a-8f20-d76ed3ebc314', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'e1703c4d-603b-4aaa-bc1c-00ebc32c5dbd', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'e73f43db-9fc7-467a-b6f6-fcdcff8bc34e', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'ebb9f4e4-649a-4fac-8b17-99a136149418', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'ed9bb5ab-14f3-4b13-af9b-88274fe35f04', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'f96a35f1-09dc-46e7-8ed6-f1ab67beccfc', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'f9db24ed-b6c1-4de8-b6f6-7f0ae3b9eaa4', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-09T15:34:23.723' AS DateTime), N'LookupQuery', N'ff1c36ee-fa59-4879-be7e-dadf09f247e8', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-05-28T11:11:51.937' AS DateTime), N'Hidden', N'389fe9c8-fdfc-454e-90e4-302e2288b7c6', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-07-30T21:45:32.000' AS DateTime), N'Chart', N'fe9b9de3-a30b-425d-b592-8017d76f55cc', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-07-30T21:47:21.000' AS DateTime), N'Chart', N'09e11301-a6b5-4ccb-bf63-aca46c628e96', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-07-30T21:48:29.000' AS DateTime), N'Chart', N'79d61710-aebd-4247-9dbf-b617de5f049f', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-07-30T21:49:05.000' AS DateTime), N'Chart', N'00366ffd-c135-4bee-8dd8-c12f5f195718', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-07-31T15:57:33.000' AS DateTime), N'Chart', N'51f29f05-0326-4c02-a9be-083d38e8cb72', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-07-31T17:11:51.000' AS DateTime), N'Chart', N'e205f501-a765-4d43-bcbe-8236b1bf2320', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-04T09:36:43.000' AS DateTime), N'Chart', N'cce76e36-d0d9-4a18-aed5-8bef695f4417', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-04T10:25:26.000' AS DateTime), N'Chart', N'050c3fe5-e3b1-459c-9861-019b34108a50', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-04T10:32:25.000' AS DateTime), N'Chart', N'1255684c-5511-4fb9-bd81-e256246199bf', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-04T12:45:52.440' AS DateTime), N'Chart', N'4b3cd8af-c37b-4aef-9a85-9cd17a2ebeae', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-04T12:46:57.647' AS DateTime), N'Chart', N'49d7abdd-bcd1-49fb-bdf5-72a356f33185', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-04T12:47:29.460' AS DateTime), N'Chart', N'f2dc0622-f98b-4bfb-9098-205f7554d30e', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-04T12:49:30.383' AS DateTime), N'Chart', N'14672c19-0850-4739-bdd2-144c69c7a95a', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-04T12:50:04.353' AS DateTime), N'Chart', N'58a51e60-8ecf-47c4-93a7-ef8303878464', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-04T12:50:47.053' AS DateTime), N'Chart', N'0393b91a-3452-47a9-9fbc-95515e0ad900', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-04T12:51:42.873' AS DateTime), N'Chart', N'd179da77-dd10-4d51-a9b1-7a79cc5f2ac7', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-04T12:52:38.450' AS DateTime), N'Chart', N'b268afc4-0546-43a8-9cbe-0f1993f7f979', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-04T12:53:18.277' AS DateTime), N'Chart', N'0f1644fb-cd97-4763-9377-00e59c0f6159', N'Chart', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-15T07:55:17.803' AS DateTime), N'Hidden', N'a9b1db21-1c7c-476f-a330-a4458645f8b8', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-15T07:55:31.430' AS DateTime), N'Hidden', N'fd6cf7e4-0b92-4372-920f-32ea39cb1bf7', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'c63cee42-5814-4d17-a50d-ff09a8e84896', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'8c1458b9-40cc-4d82-9900-23f46b74336e', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'b3f21cee-33d3-4847-b601-356cff6cab40', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'0cdf6f5b-7fb1-4d99-86c3-63138097aba6', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'1d927a2d-5674-477e-a747-51362e9e8700', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'9fe688b2-f82b-4d1c-930e-2a91809359dc', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'82aeb7a8-8fb2-4e41-aa18-eb116967ae30', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'f1ebe2ec-03c9-4f1f-8a95-b899648347a2', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'5d00f680-5cac-486d-890f-d207fe351a91', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'111c15af-a99b-4b2b-a579-6e09bbd3a310', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'f2292da3-e4a7-402e-8ed6-573409408f27', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'1fc44df3-b741-462f-894c-568cec4a4070', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'64e07344-ec1c-4c83-8a07-b79b115bda1c', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'1452c9ba-01ad-4b15-9c78-422923ac842e', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'60df2400-3050-403c-bf29-33087a5d372c', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'4f94fdc1-bf3d-4e72-b1ea-f58786b36230', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'a9b1db21-1c7c-476f-a330-a4458645f8b8', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:12.880' AS DateTime), N'ABI Lookup', N'fd6cf7e4-0b92-4372-920f-32ea39cb1bf7', N'ABI Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:51.090' AS DateTime), N'QPWP Lookup', N'3ffd8f31-3c3b-4a7d-a006-1879e91edb32', N'QPWP Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:51.090' AS DateTime), N'QPWP Lookup', N'a05fe903-1955-4720-b82d-8af5c5023e8a', N'QPWP Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:51.090' AS DateTime), N'QPWP Lookup', N'8660d9fb-aa99-42ac-9164-ff190d05ddd1', N'QPWP Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:51.090' AS DateTime), N'QPWP Lookup', N'8f13e100-8af0-4b72-81b6-a2c842a7bc55', N'QPWP Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-08-25T08:13:51.090' AS DateTime), N'QPWP Lookup', N'996a629d-c542-4b88-93d9-f534a0c3c514', N'QPWP Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-09-02T16:48:02.980' AS DateTime), N'Hidden', N'3ffd8f31-3c3b-4a7d-a006-1879e91edb32', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-09-02T16:48:14.480' AS DateTime), N'Hidden', N'a05fe903-1955-4720-b82d-8af5c5023e8a', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-09-02T16:48:28.453' AS DateTime), N'Hidden', N'8660d9fb-aa99-42ac-9164-ff190d05ddd1', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-09-02T16:48:38.760' AS DateTime), N'Hidden', N'8f13e100-8af0-4b72-81b6-a2c842a7bc55', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-09-02T16:48:52.437' AS DateTime), N'Hidden', N'996a629d-c542-4b88-93d9-f534a0c3c514', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'15352917-7D1C-4E95-B2C7-4D6336CC732A', N'AES', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'439F7EBA-81C0-4038-955C-5EDE8A2A5400', N'AES', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'46AC98F4-70C2-4EF1-A5BC-3C4CECEB1C65', N'AES', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'494C4D76-4862-479C-BAE7-A10713F2C728', N'fidAESTransmission_aspx', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'67B59EDB-2764-476B-87B1-BA42D57BC9D3', N'AES', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'799E1042-66C2-42A6-941A-71E440617AD0', N'AES', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'7A48130F-0FC5-40E7-852F-1E5E7CA7F702', N'AES', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'7BD72557-0217-48C1-9747-A7096721EB6B', N'AES', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'7CDD1E65-6D49-412E-886C-C03F85944505', N'fidAESTransmission_aspx', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'8262CCD2-B27D-4561-AB4C-BE7135280064', N'AES', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'9F521AC4-9981-4158-9873-4B4239D5EA6F', N'fidAESTransmission_aspx', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'A5C4B1CF-FCC4-457C-B2E5-CE3FA9E7B342', N'AES', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'A965F21B-CBF9-4BBF-9441-B55C90087BC3', N'AES', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'BEA543CF-1A42-48DF-9B78-998BDF86FC95', N'AES', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'AES', N'EFE0D9F0-D441-404F-AE40-57F37E33CDCE', N'AES', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'02299F04-290B-4913-B238-54601973458D', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'0752135C-49A6-489B-80C1-90E1AA8446AD', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'115AB1B4-ED44-418B-9811-9CB7CBF2EC9A', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'15167339-50E8-4161-BDB7-832EFFF579A7', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'18F0E3CE-E092-4A12-935A-0A9EADDA5BC9', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'1F385E89-CB3A-4A66-9426-930375C2BF30', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'2355A29C-8F2B-46AC-8A1F-3DAA14E7BF00', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'277B4CBD-8CA4-4647-9AD2-11A17BC7519A', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'2F9BF5D0-3777-4150-8F2B-985409FF1B61', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'39003E32-7E48-4DA3-B10C-F953424E44F7', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'3EEA2809-8558-4DF6-B20C-E90D11F63FC9', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'4E7287A9-379D-4441-BD6D-1C23726C342F', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'6CD332A6-1AE4-4803-ABD1-D58A173B5C10', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'72FCBDDD-C075-4AAC-9693-FAB2D6E382F4', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'786E80BB-03D8-4FB6-8679-F4698A2A05D9', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'7ADC9D8F-D9CD-410F-B301-FB85A0144CF0', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'85494080-17BB-4264-AFB1-B0C207F99748', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'855E9BDB-140F-4A41-BB2C-0C99AB887AE7', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'90F7E830-2E57-43BC-95EC-05455397AC2D', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'9C80A7CC-7D3B-430E-ACF6-32925C5CE49D', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'9CFF726E-BF31-4E4C-B340-8244168951E0', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'9D091588-74A1-441C-BD6F-C979770C7705', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'A231430A-9B0C-4565-A2CD-40918E0705AD', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'A4C4A8E4-84EA-45A6-80A2-478BF0EB91FD', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'A7287244-4062-4B68-B9A9-0079AD66A680', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'A76DD56E-A428-4421-B5EF-39758CBC21A0', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'A8E9103C-E741-4AB4-9CEA-0B98E1C906DA', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'B537D13D-CAA6-435B-9878-F9E37783D45D', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'BC9F887B-CE29-4BE1-AC4D-AA3D843EF985', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'C2158086-FEDE-4CF9-8360-A1A9A15C57C5', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'CADAFB44-A37F-4FFA-836E-74C506E33B05', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'D2F9165B-4B39-4E0D-9E62-41EDF5E804F5', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'D6B224D0-3DCE-44BB-BD70-54B4015DD4E5', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'E3EAB3CC-F54C-47BC-9152-7536B8C737F3', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'E75E2E74-6307-402B-AA99-BC4FD0F2AC4E', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'EA4BE151-E08B-4A62-BBB8-4132E2C36759', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'F95AD119-002D-48C1-8B8E-9FCBC9E8D471', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'GlobalDashboard', N'FE69BDB0-6D66-45A7-A91A-5D79C178D32D', N'GlobalDashboard', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'Hidden', N'023e7883-cf01-4efc-a654-4dd166b8c0fb', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'Hidden', N'03788967-f301-4451-b57f-4920b79b9257', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'Hidden', N'4f01c798-b152-4730-b88d-8ddb90c57fda', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'Hidden', N'9f252f28-d364-4af5-985c-c204814347f2', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'Hidden', N'c5ffdab1-dd78-4016-a417-70bc774b2f4b', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'Hidden', N'd435e019-503a-46af-90d0-f3a6bbb50d06', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'LookupQuery', N'4b745391-6161-4c6f-9fa0-e6f1030ec2c4', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'LookupQuery', N'4f94fdc1-bf3d-4e72-b1ea-f58786b36230', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'LookupQuery', N'a09103af-a5c2-4154-8c02-f621f6f0e776', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'LookupQuery', N'dee00aa7-3f06-447a-becc-23a2a42bdbc9', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T08:28:12.360' AS DateTime), N'SpreadsheetUpload', N'ae604df0-726d-4d8e-9f65-cebcae0387a5', N'SpreadsheetUpload', N'N', N'N')
, (@PartnerID, CAST(N'2014-11-18T09:53:18.517' AS DateTime), N'NonDirectDelivery', N'12A5954F-0403-4365-84FD-7049BC5665F1', N'Open Query', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:21:47.257' AS DateTime), N'Hidden', N'81f3dead-b16f-4d78-846b-5a386bdd2d55', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:30:09.833' AS DateTime), N'Hidden', N'c2e3b4f9-2338-4e16-9eab-66b3818a5f74', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'7a3bc757-a00e-45a8-8354-33cb31bf5e72', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'435bfbe4-d808-427d-808b-36a29186258f', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'668c5303-086e-4501-bea1-9c8078731cf9', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'16e3db90-53a9-4e63-baa6-eb77b41d6cd0', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'5c5af6d4-8fe8-4ab2-aa83-f34cc00b68c8', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'fd462eeb-2693-4793-b003-d6a67893521d', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'd4d49edb-fa8b-4ecd-b6dd-261fc3593dc9', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'40138c57-d4f4-465b-9480-5210bc3901da', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'28a23a57-3427-41b9-83ec-ea03b7869859', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'c64b7d0c-01a7-4391-a7c5-99a34edcf910', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'c4e08e01-48d2-45ec-ba71-f1b2b5bbbbb0', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'7a60a56b-5988-4637-905e-c7c911c06ecd', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'b58c529c-ff43-4bb4-b10a-094be27e997c', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'cca6d524-7383-4dff-8e7c-7cb4f70332fa', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'98828b99-d5c4-495b-acab-0b411c5ac510', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'afef7b6f-936d-4887-8d3e-d4a9ad836c50', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'e4bae48c-7279-4f95-b324-6dd7e9714b11', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'0fbf1ec4-9cdf-463f-93f0-796464d62a21', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'4397acae-d3b9-47b5-8da8-d5be67206469', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:39:43.730' AS DateTime), N'Classification Lookup', N'9608cfb3-dfae-4372-93a1-b7e680c77bea', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'0f04b894-0dfc-47a1-9d7d-d463b0c19a46', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'edba36bc-0f18-427f-aa6d-ab0d3f77736a', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'92674bac-61bc-4952-ad3a-807cfcf80949', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'ba9598bb-9dd4-4ef5-bc31-a5d764cab164', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'caaeba94-74fb-4ac7-a4e4-e06b3b8d3858', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'96dc4274-a296-40f4-83f4-be256728a9a4', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'10ef1a46-72c4-4c43-9136-95cbc7e1240f', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'41e6d091-a3ff-4891-8f52-ee3f0ccfc777', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'57354664-a91b-4852-98e6-5472286b67dc', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'e98fcbe9-6486-47ff-893c-ed2f81db8775', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'9983d2e3-5004-48f1-b059-3d5b50b23c96', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'00a290b4-6f7e-4f88-a644-158be2e53529', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'5ed7240f-b128-4cf0-a4b4-4c54ee92ebde', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'f4e44c4a-3893-4a0c-b168-d62f55c442ba', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'2fcd5660-bf1d-4cd4-9051-d5e0c6817a1f', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'fdbb6494-86e0-4bb2-8ce7-9ef7a0ffb892', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'4f2fd3eb-bca8-431b-b648-f4b3fec1d2cf', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'c9114233-ceb8-49ad-b2d3-9aedab588e64', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'd6688828-b127-4acb-a2b6-f238701afd9f', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'016495b7-17f6-450c-827a-cd66265dbe0f', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'dda1576b-7de6-44a0-916c-a5245cfdfdb7', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'f43716f3-d131-42ee-93a7-af4941815220', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'e2669fa0-9b0d-48be-85eb-32e8e1aaf6fb', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'23f017e0-c581-4778-b105-970317724ad5', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'114f1f47-d9a0-4389-8956-423b12c9a50e', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:25.097' AS DateTime), N'Entry Visibility Lookup', N'04693845-508e-4a7e-911c-2d4dec1d4278', N'Entry Visibility Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:42.580' AS DateTime), N'FTA Lookup', N'ee7f6bae-94a9-42b4-83be-2a05624a9e8f', N'FTA Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:40:42.580' AS DateTime), N'FTA Lookup', N'4c1fd6bb-fa75-42d0-ad74-12ddf26f213e', N'FTA Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:41:13.210' AS DateTime), N'DPS Lookup', N'2bf48c36-3a3b-4228-a989-5e3a9a3223ed', N'DPS Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:41:13.210' AS DateTime), N'DPS Lookup', N'8b178c2d-de65-4a5f-89bd-e1d18a87b476', N'DPS Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:41:13.210' AS DateTime), N'DPS Lookup', N'841ff353-42db-4dbd-bbf4-78f88f220e9b', N'DPS Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'bde2cd82-b52f-4f21-8536-03fde2220518', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'71932eee-3568-41cb-9513-355aca90fa01', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'8dcd158e-1fab-49c6-a620-aa66fe5388a5', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'81e0cc1a-db86-49e5-8f22-04f7cd80d36e', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'c214ec30-fec9-452a-b74a-68e44f4be120', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'34991a11-342e-43b7-bc7d-794c765580a1', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'62e0aa62-73db-4d1a-8528-cc3d78661959', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'ef5c651c-eed4-46ac-ab2f-a210ecf7f31d', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'948640e7-93b5-4c8f-a04a-8543a00d0425', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'98bf81e1-e2f1-4099-affa-18a17e982af4', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'60d86aa2-d3b3-492c-accf-a1ff2573094d', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'8c8e953d-c40f-4bbf-9340-49a52fa709ef', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'0371f2cb-19dd-4c88-be8e-4bfa1839d194', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'd901d402-c4a0-489b-a9c2-8cfe5f437dbf', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'11562be3-8531-48a8-b333-a5c06923daeb', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'fe5b3c76-2b1d-4c53-b1eb-d2fb65820a86', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'8ab1d580-f691-4c44-a0d2-614d618beb99', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'61c72631-5593-492e-98d2-d3e22aa9b0cc', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'eb8f1075-4524-4a2b-abd5-488d21cff08e', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'f159dd37-3136-4920-9d7f-59db7d124881', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'a58e745d-3ee5-4844-99a4-2efe92d09bbc', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'9b51e137-f4f0-4bc0-b3bd-4fa01e238546', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'9e3f9f6c-bf4e-4366-91ff-b40801d4c6a3', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'22fa5110-38ae-4b61-9a41-c0ae405744b9', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'165f13dd-33fb-42e6-9023-dcbef0c16c37', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'6dcc8243-61eb-408d-984a-fa41bb50f699', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'd0b5bfe6-8214-4143-9785-f9e399a96ca5', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'ddbfc1d7-60f6-4b4a-bb65-e817e862589e', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'3a5be1e5-42f7-4d7a-90dd-e8d87ad896eb', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'cdf311ae-9151-4cc6-ad1b-62b93158ba63', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'e90ccfa8-ab73-493f-8813-93b4ac4fe614', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'a2b51265-9156-4784-b829-8407e4904119', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'84db6e93-12d9-4439-bf03-b0794f887154', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'7b8c07ad-7a1b-4baf-a2fa-3b124e3b8e4a', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'c36b1fe2-e71e-42db-a495-321776e02818', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'fb8185fb-39fd-42f8-9f33-20154f2fef6b', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'037161e4-9417-41e2-ab2b-dcd2694b7502', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'd382e037-d89e-4d24-99b2-fbb62c95aaa6', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'eed9312b-ce66-461b-ac57-07a2b97a7493', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'ccfc703c-5089-45a6-8987-39dec00d30e7', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'ce0c2d74-27b5-44d9-a849-cf413f917b13', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'8405f102-056c-466e-8b89-c6df3fa52a39', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'c254b2b2-21be-4106-b53b-44e9f4704897', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'f53c73ab-78aa-452b-ad38-4684c827ac08', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'f94548f6-0c62-495b-885c-8fc278f4541c', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'929ec982-a407-4bb4-8793-a696617067b1', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'b354f598-bae6-4557-95d8-14e28140b9ad', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'261e7987-d4e3-4544-961d-a7bdab384987', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'f3770335-467b-47d9-82c8-02939fd80c94', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'2796d909-0bfc-41e8-b7c4-8ccdca520656', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'c6784853-e68b-4b37-bd37-fdff8801c1e9', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'4579386f-e5cd-432a-bac2-62ea427ad2ea', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'254bd21a-3365-46aa-aeae-7a8f4fa7baf6', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-01T11:47:04.513' AS DateTime), N'Classification Lookup', N'2cceeb60-fadc-4bba-a15e-fec0d65a98c7', N'Classification Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'7038b51a-fc20-415f-8911-08c4f0c58f8d', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'52798534-2a54-4585-9b0a-f7b8725bafaf', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'789d4315-a4b9-401d-9968-1a41d6714fe4', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'cc9bce2e-c163-43aa-80ff-c68679b8f302', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'4b65754e-e21d-4b2b-80b1-61d0634954c1', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'980c72a4-f821-4c98-bee0-0cbc38faee82', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'0adaf39b-2235-49ae-be97-ba0e4e7d17b9', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'758d2d23-1546-48a6-ac81-9ecce6868f38', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'6088f095-5b1c-44c8-8e1f-f58be15ab997', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'85ad9506-9c29-4dff-94fb-7a5897eb046d', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'8ee11453-14b3-42bd-bfa8-6beff074b90d', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'91ad70af-2a67-479a-aaee-c6bae106ab2c', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'e333d05e-3417-49f4-ba9d-7b8169770d86', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'367fbced-32de-439d-bb7f-60c255aad841', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'691c83f4-2026-4a59-af7f-27fcfed6f43b', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'c673291e-9d69-4138-ba3b-c41141f043d8', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'38e707b1-d184-407a-b9a7-87846f18130d', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'89c31e15-a71e-42b2-b384-d08e6bfc4456', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'fc155897-eb3e-47ef-a60d-d6a78ae2e172', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'c601b560-32a0-4199-b3e7-c5d665434e09', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2014-12-02T10:11:43.783' AS DateTime), N'FTZ Lookup', N'b2391a74-4aed-4513-be54-dcad0b56a2cb', N'FTZ Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2015-05-05T14:38:58.820' AS DateTime), N'Hidden', N'bee5beb3-3de6-4dde-885e-a47aa6cf7e79', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-05-05T14:38:58.820' AS DateTime), N'Hidden', N'eb2769e9-d126-4c85-b62e-b69fa2f5ae7e', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-05-05T14:38:58.820' AS DateTime), N'Hidden', N'24f310c5-72cd-41dc-bbe5-27b0c29b3b20', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-05-05T14:38:58.820' AS DateTime), N'Hidden', N'9f9f0f0c-d8b2-4c58-8ae7-0777612e19d0', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-05-05T14:38:58.820' AS DateTime), N'Hidden', N'71c6e5d6-168a-462a-9091-29e1ee43efd9', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-05-05T14:38:58.820' AS DateTime), N'Hidden', N'9de524e2-c6e6-415c-918d-508dcbb71509', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-05-05T14:38:58.820' AS DateTime), N'Hidden', N'ca7d1d71-b893-4dfd-a904-28eab22513da', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-05-05T14:38:58.820' AS DateTime), N'Hidden', N'94695b82-ad0c-402b-afdf-15045ea7cb1c', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-05-05T14:38:58.820' AS DateTime), N'Hidden', N'e79a3cc9-bb39-4c71-af69-c7ade3eafeb3', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-05-05T14:38:58.820' AS DateTime), N'Hidden', N'2f2c498a-e319-4044-96e0-7287ee4f8812', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-05-05T14:38:58.820' AS DateTime), N'Hidden', N'cb0b9a47-2c56-46f8-9598-4fc32dedc83a', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-05-05T14:38:58.820' AS DateTime), N'Hidden', N'77da904a-5230-4ef2-b6d8-303e11295d03', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-06-08T13:37:41.897' AS DateTime), N'Hidden', N'0bb32109-e528-4159-bd95-03b662e37c44', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-06-08T13:37:41.897' AS DateTime), N'Hidden', N'a28a167d-619d-4ec0-bc87-45f38e509bb7', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-06-08T13:37:41.897' AS DateTime), N'Hidden', N'025bf45e-ee76-44a0-9ea3-23b3a8077378', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-06-08T13:37:41.897' AS DateTime), N'Hidden', N'bfc535b5-a0d7-4e73-aeba-9971d537610d', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-08-17T15:22:20.020' AS DateTime), N'Hidden', N'MXDSCTYORG', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-08-17T15:22:20.020' AS DateTime), N'Hidden', N'MXDSDESC', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-08-17T15:22:20.020' AS DateTime), N'Hidden', N'MXDSEXRATE', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2015-08-17T15:22:20.020' AS DateTime), N'Hidden', N'MXDSHS', N'Hidden', N'N', N'N')
, (3001, CAST(N'2015-08-17T15:22:20.020' AS DateTime), N'Hidden', N'MXDSMXVALD', N'Hidden', N'N', N'N')
, (3002, CAST(N'2015-08-17T15:22:20.020' AS DateTime), N'Hidden', N'MXDSMXVALT', N'Hidden', N'N', N'N')
, (3003, CAST(N'2015-08-17T15:22:20.020' AS DateTime), N'Hidden', N'MXDSPED', N'Hidden', N'N', N'N')
, (3004, CAST(N'2015-08-17T15:22:20.020' AS DateTime), N'Hidden', N'MXDSPYDATE', N'Hidden', N'N', N'N')
, (3005, CAST(N'2015-08-17T15:22:20.020' AS DateTime), N'Hidden', N'MXDSUSVALD', N'Hidden', N'N', N'N')
, (3006, CAST(N'2015-08-17T15:22:20.020' AS DateTime), N'Hidden', N'MXDSUSVALT', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2016-01-08T13:11:05.760' AS DateTime), N'Hidden', N'9c2bb608-43e6-4d58-b56e-eb18b1d9b1c5', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2017-02-01T08:36:14.790' AS DateTime), N'DecisionTree', N'6CE46015-C027-46C1-A1D6-78DD18AB5D05', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-02-01T08:36:14.790' AS DateTime), N'DecisionTree', N'ED5F6391-5A0C-4578-B629-962DED185C5D', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-02-01T08:36:14.790' AS DateTime), N'DecisionTree', N'F46EF089-23A0-4286-BE9A-109199D1940E', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-23T17:35:04.427' AS DateTime), N'Lookup', N'020d59bd-69db-4349-96ec-15e8181b69c8', N'Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-23T17:35:04.483' AS DateTime), N'Lookup', N'ed2fd480-4ea4-4a38-ade0-52f19d4412c4', N'Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-23T17:35:04.490' AS DateTime), N'Lookup', N'33eed4fa-0001-4e3a-b8e4-2ad6894adedf', N'Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-23T17:35:04.497' AS DateTime), N'Lookup', N'0647a9b3-11aa-4b30-83a1-6787ed6758c3', N'Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-23T17:35:04.500' AS DateTime), N'Lookup', N'b607baaf-a9c1-4a7f-a40e-cc9e86ba6d69', N'Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-23T17:35:04.510' AS DateTime), N'Lookup', N'a2b0babb-7eaa-4807-8da0-88afd7a39079', N'Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-23T17:35:04.520' AS DateTime), N'Lookup', N'd8c9418f-54bf-4e79-aed0-5f04c2a9c1a1', N'Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-23T17:35:04.520' AS DateTime), N'Lookup', N'a42419ac-c10d-402a-b74f-489f7d6d4588', N'Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-23T17:35:04.537' AS DateTime), N'Lookup', N'826b89b7-f07b-4c3d-9c97-15da4be23dd2', N'Lookup', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-31T08:21:44.347' AS DateTime), N'DecisionTree', N'BC12A687-E811-453A-B32F-DE68FC90ADF5', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-31T08:21:44.347' AS DateTime), N'DecisionTree', N'2F7BECEA-B5C2-472E-A734-4879757F0ACA', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-31T08:21:44.347' AS DateTime), N'DecisionTree', N'096D1792-AB54-4B26-A94F-BB29C6CDCBDF', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-31T08:21:44.347' AS DateTime), N'DecisionTree', N'3BF294EE-AB9D-40D4-B65D-558EDF39AC63', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-31T08:21:44.347' AS DateTime), N'DecisionTree', N'75B5E312-CD03-4CFE-BC25-70F35CAF4E67', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-31T08:21:44.347' AS DateTime), N'DecisionTree', N'689C1FB0-ED80-40E3-8F04-0119DC3A05E8', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-31T08:21:44.347' AS DateTime), N'DecisionTree', N'AD68D34D-3269-49BF-AC0E-50E3C8BE736D', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-31T08:21:44.347' AS DateTime), N'DecisionTree', N'29F232CF-639E-4ABA-8346-7BEED6D1EFC2', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-07-31T08:21:44.347' AS DateTime), N'DecisionTree', N'63B4659F-36BA-4306-9D52-98C10959F63D', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2017-12-20T10:07:48.273' AS DateTime), N'DecisionTree', N'E098691E-3249-4F20-BDAC-D3F8DE6CE886', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:35.980' AS DateTime), N'hidden', N'379A8340-F4AA-45BF-A557-E85B7792D278', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:35.980' AS DateTime), N'hidden', N'0A3254A1-9BDD-4DC6-BAFD-886DAAAD4200', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:35.980' AS DateTime), N'hidden', N'0C280C30-D48D-4212-B50A-F95A697FF072', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:35.980' AS DateTime), N'hidden', N'83EFE6F3-879F-423B-9721-ED88031BAC5B', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:35.980' AS DateTime), N'hidden', N'106AB8BD-6907-4CF0-B583-328F66BC324E', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:35.980' AS DateTime), N'hidden', N'2EAEA1D6-EABE-467B-AE14-1075CAFC23AA', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:35.980' AS DateTime), N'hidden', N'C870D2CF-EDCF-42F2-902E-C6951F57931D', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'AEDF6C9A-4482-404A-AE66-9156D6B7B6AF', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'0D717CD4-A553-4771-B81C-3043ABEF7518', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'289C22BD-FBAD-4056-9063-93B1ABB0FECD', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'CCBC456D-0FB7-4019-8D27-1EDF8A24B882', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'37F0D82A-09B0-4E78-AF55-F5EF76465A18', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'BA2F7CA8-14F5-4A42-BA87-FC276E3C052B', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'9D637803-BA8C-4EF5-96E5-D9C902F4F284', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'21FDB896-9162-47B2-9B28-9CD084EEB98B', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'EE22C2E7-F48D-4FF2-875E-339E8D71C93B', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'2DB93DA1-E0FE-4B9A-B7C5-A7C9E975A185', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'78BE4C9F-96EF-471C-A4BC-06B9185A573A', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'105D8D4B-5AB0-4E63-BDB0-96E829BACE3B', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'716D0E9A-9F91-4C72-8F84-6E5448538B0B', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'7179428A-CCE2-491C-A68B-E795D4E82C33', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'85EBAD49-9204-440B-B6DA-C748681CA976', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'FF641302-4606-4FF2-B01B-72E729CDC68A', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-01-12T09:44:36.890' AS DateTime), N'hidden', N'3339C5EA-C842-4BF3-A0BF-5051EA52A180', N'hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'58DC2DBD-CEB6-49F7-80B3-B7022B2DEEFC', N'B87C6AA7-D3F3-40AD-8369-BC0FB22BA534', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'02B22447-743A-4D58-8068-549AA1CDC8BD', N'C4D037A1-5DD1-40C9-BAD4-1C8D9C2143AA', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'D81CB082-7249-4E1E-B6DA-01812992E689', N'8FE95212-521C-4429-8DDB-601BD641D9F4', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'0D53F197-ABA7-412C-B35A-3D6A038CBADF', N'F491E014-AB62-4D49-9D54-380976711EFB', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'835BFAB7-7A7B-4D3D-A5BF-938CFA64D6E9', N'8336AFF2-057B-47E6-9080-FDCCA0756275', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'010E05D7-D672-41CB-AE35-DBBDB7E24BE0', N'B4F859B1-A65F-41A5-8E8A-1741AE3247C9', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'ECFB5CF7-A3F6-4ED0-90CA-C4E2444D1FBA', N'746D8778-1313-4A78-87D5-E4BDBDCF489B', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'492F118A-9223-473A-A62E-6FCD637494E3', N'262F4754-6EBE-4C7F-8BEC-BEB1B042294F', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'A701CEEC-05D6-445F-80CA-24764128E5C7', N'CC8BCB06-7AA4-46D4-A713-8109ABB4FBF5', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'61565E40-13F1-4D2F-B9C7-01A1B21B72E8', N'18477154-ECD9-45CC-B87E-F3736AF02F62', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'12B9671F-8A29-4A15-B9D3-EC3C24BED2B3', N'22B106BE-9E1F-422F-BCA3-CE481FC0F003', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'EB154653-6A53-485C-9FE1-B7346AACC17E', N'FBA3A149-EDBC-4E9A-B451-FE7E2F679A52', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'B576595E-4BA6-4DA8-B3AA-F3EF3D59797B', N'F18E84E5-3B8F-4F11-B223-A7205E44F095', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'2CFFCC98-DF79-4D94-9D87-9C3ECA2C1BEF', N'44323E49-924A-4C40-9F89-AEC366653DA0', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'A3D8D1AD-01A9-480B-ADA0-D2C816914E93', N'72FF0262-FB39-434B-988D-7991B3357DA0', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'DACD54A0-84AF-4B66-9696-5572FD9FC51F', N'24677FEB-90DC-4E43-8260-B667A795B29F', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'F95ACDC6-7D73-421E-B4A8-41A0C63FCE01', N'B0BE15F4-BFFA-4709-826F-3227ED0FFAB3', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'0B253FF2-6E1D-45EA-BF78-A67760BC62F7', N'16ADE86D-C0B7-4309-BCDA-3B289545C7B0', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'E19B447C-39F2-4478-9A23-65FC89A4BB34', N'AF5432D5-21A7-477C-9CB4-7BDDED4D46C9', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'817842BF-D152-4B95-91A3-A3AAE014A0C6', N'7AA7929F-0D37-47DB-A3D1-B40612F3B81E', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'49E00A7E-B7F6-4042-8266-A481789F47B8', N'5CB8B7CB-B71D-46A1-B5D2-05C4845943C3', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'49C6A738-B2F8-4BBF-9BF7-C158FE1FEEF8', N'BBFDE863-A694-4401-BA35-F34A5B604C71', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'68C5B0D0-D88D-455A-A4EC-E0F352748649', N'BE8B027F-FAB9-4056-A749-D18A55E52900', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'5A2C8077-D5E6-4886-BE77-B61362F7AC40', N'922EA34A-90A1-49D1-B104-B2FC520BBC7C', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'317C4D14-2E06-449C-ADBE-C109E90C5F9F', N'4541A8A2-16E8-46A4-8C92-A8E314916AD3', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'AE454B8F-C2DB-4885-AAA6-658CD8E0904A', N'7043B109-FB6F-4934-A04C-471E61215695', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'81AACFE1-420A-4216-9F41-86F4409A6C83', N'10668F56-D3D8-4996-8FF6-8819D383E034', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'4E969DD5-0E1C-4373-B611-DD2C8766293C', N'A1579FA1-8907-4DB7-9545-97C10355913A', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'F0D6C0FD-D24B-4636-B3BC-61C6E155BEF1', N'B363C910-43E7-41C6-8106-CC2CFA66FA27', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'D1ECC20C-6108-4069-89F5-A1FD3A8EABBF', N'61075A1A-9FF2-4553-AF1D-C274A41A307B', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'F2CBDC42-E845-469D-BF2E-7F8DF11AFABA', N'268B2FF4-7A87-4D84-BD4B-DF7F43648F6C', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'51BFBD00-1C92-4136-BC67-E98C46D349CD', N'5A2B83AC-E29C-4351-AC7B-CABD5A91EB34', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'2E91A1A2-528C-4C51-955C-0F6BFAE25215', N'BEA105AA-C07E-4C51-8A5A-F29BADD6E218', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'A0889048-C569-4BC8-B27A-A7DC1DF17C94', N'DBA3D979-802B-4FC3-BD2F-B20F0209E3E5', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'2BE12254-3DC5-438D-A1DC-51B37D477355', N'F71C420F-90E7-4D15-9658-E350771364E5', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'28CF0489-BEF6-4841-ABCA-F310C7B47EB2', N'E69D4DE2-BAAE-4C80-86F5-BE525115DE7A', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'1CC33422-0E40-4796-8F95-559D2006B046', N'A565D241-8E54-4164-A7D9-40C1B570FCA9', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'6DE018FD-E6E5-44FC-9BE6-754151B91FD4', N'CA5101CE-CF5C-4119-A69E-88E841F84924', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'CC865DC9-803E-4220-B495-592DBC11A751', N'CF681855-E6E4-4A77-81BF-42A29ACA351C', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'6D449C84-8861-40F0-887F-7D9DB4011943', N'40F2B9FE-AA01-4D30-9F5C-6AE225C6CAA9', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'FC30B4E1-17A7-4B01-86AF-FE458BF92BCD', N'D42EFDE0-AE8B-4046-BA32-5F1C1A52CE86', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'F450D790-04D9-4267-8F41-F85918DB3150', N'8673C6A1-97FE-49CA-BFCE-22B1CAB3C4BD', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-08-20T10:35:49.487' AS DateTime), N'391C94C0-A690-4CD2-BDDA-0858D2496873', N'CC7A383C-B536-4277-BC6F-BF211B85A129', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-05T14:01:54.450' AS DateTime), N'Hidden', N'5C5135B6-154A-459B-99BF-0FD74421277B', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'006dac3a-5c47-42ca-9101-7fe2d172d0db', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'033a2c60-c480-4c91-a232-8231bfb8fcaf', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'038a775f-47e4-4256-8ec7-eca05cf24793', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'05ce4128-df50-4a52-beae-a7daa37c5f06', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'099c1284-e177-42df-9dc9-9cd3dfe4b59f', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'0c243a3d-6a64-42e3-af14-f8894810d28c', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'27922e21-2c8c-429f-bc1b-9c0f226efa12', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'279532bf-30f4-4da5-8865-34b45ebb6ecf', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'2bff8472-8392-4bd4-8004-96f06b68dec0', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'' + cast(@Partnerid as varchar(30)) + 'f015-deb9-49e0-86b3-7ffdf74f3df5', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'31ad6fc8-bd9e-4a79-ba34-6c846f0302bb', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'32776f78-2efd-4746-8551-b57dbe223dd2', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'336cc688-ad34-47a5-8342-12a29efed353', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'3573bab9-3817-4d33-b491-f28187b35836', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'370a391a-c293-4dda-ab96-66c33ce7b794', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'3fabba1b-552e-42c1-adb3-f2ea70a53ca5', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'40ac9fe6-ed38-44f7-b1f5-4b41e60547c6', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'58fc7d7f-1cf8-41d4-b6a9-ab2d91ba8da0', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'63413c66-a744-46a4-a4b4-069425bf2a3c', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'63f4f491-8c26-4cc2-816a-ec1daac1053f', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'65709b68-61d9-41f5-9171-52e4d87a6cab', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'6ac1548a-7c5a-4542-9a55-cb3fd673f42b', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'6b076063-c742-413f-9f2b-e5427ab7a190', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'6d975767-f715-46ed-8d43-9ef28f59997a', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'6f1145c8-7255-4ca3-8684-d378b70b688a', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'6f3ea7e3-a4dc-4adc-985f-1adb31f1dacf', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'6fca1955-a03c-4bb2-9f75-391946db31ea', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'7006ca67-8e9e-4aec-bdb1-7557146c9ac7', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'727c4f3d-e507-4b38-b0d7-8cfe3d44fce9', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'72b5efb8-fbf9-436a-bf7e-0382a156a30c', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'79fb13fd-d641-4e03-adeb-e6f1884729aa', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'7e79de1d-dbff-4292-bfbf-2bbaf5b3a4c6', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'816627b2-9d07-4077-9ece-6a60fff11370', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'946e3808-bc5d-41df-b9f7-767aa0b6ce60', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'98d20633-3259-49ab-95ba-6d7e24fd7cfd', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'a4c6671e-a142-4c35-97e0-2417219781f6', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'ae587578-7e1e-4a74-bc63-1a1d23b2d034', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'aff039de-d4ad-401d-b235-1501a53099e0', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'b4d85ae2-db1b-4988-89e1-f1f179de0447', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'bdbf794b-6e32-41f3-86ac-4958f429b584', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'c0789355-6075-415c-924f-bc3eca0aed75', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'ca1c064a-e643-45bc-ab7b-9e8d867c130b', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'd05f2d85-d5d6-426a-854b-e399fcfbebbb', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'd76ca6f8-206f-4361-8dfb-2bae8b545a8f', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'd8ab606f-c15f-4f7d-847f-e2c0a2686a05', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'd9661767-c286-44e8-be7e-a926ac395200', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'dc6e7aff-cacc-46ca-835e-8e1049079696', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'e46d046a-59bf-4f33-b8c6-04ad6f6cce0f', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'e778fcae-9e33-49be-b6e7-cbde0cede802', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'e8b768f7-16a1-44d9-b32f-287a0ee0709a', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'e8ec7f29-3430-480a-b97b-4cc8816edd49', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'f1823c79-3d8d-44f4-939b-2b867806db86', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'f414b244-6eb3-49fa-9e68-5b1a25105907', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'fcd86ce2-b597-4ca3-b7bc-5d749635d262', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'fe2e791e-9ee5-484b-aed7-d3bb98a48cb2', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'MXDSMXVALD', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'MXDSMXVALT', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'MXDSPED', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'MXDSPYDATE', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'MXDSUSVALD', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-17T15:51:56.790' AS DateTime), N'Hidden', N'MXDSUSVALT', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-21T13:55:14.050' AS DateTime), N'Hidden', N'F0FF7A5D-D2C7-4EE8-86AE-01AF9CBFDEA5', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-09-21T13:55:14.090' AS DateTime), N'Hidden', N'3243A46D-54C2-4919-9067-ADEEB50D8C65', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-10-02T12:47:21.183' AS DateTime), N'Hidden', N'67D74CE7-194C-4506-B6C8-08C9E54AA970', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-10-02T12:47:21.227' AS DateTime), N'Hidden', N'ACEB46BC-0A7B-4C54-8DF9-D5A7088CDC16', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-10-26T09:03:46.697' AS DateTime), N'DecisionTree', N'F59A02DC-D462-4FE2-86BE-03E4FF3EAE03', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2018-10-26T09:13:10.377' AS DateTime), N'DecisionTree', N'BB4FE271-637B-4998-813A-A845CF69D3C5', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2018-10-26T09:29:54.463' AS DateTime), N'DecisionTree', N'A2536467-D068-4060-952D-9D8E0493F052', N'DecisionTree', N'N', N'N')
, (@PartnerID, CAST(N'2018-10-30T12:11:14.200' AS DateTime), N'Hidden', N'5531126C-61DD-4AED-8527-5ADC81561954', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'931AA396-74F7-466D-8099-B8E7D3FD4B12', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'5702E1E2-2BCF-49FF-A3DD-3995D9E8360F', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'3D34C23E-5745-4B46-ABC5-A2BD01E5294B', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'66E2BD32-3736-4062-B30A-9135CEE27F81', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'A7A4A21B-72F2-4FDD-9A38-04BD76CB5649', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'46FA4E5D-C356-412C-8360-022C36D25AD3', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'610519DE-035F-42DC-B204-C956896399E1', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'0BB0F681-BD85-4783-B623-8FE7072A95F8', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'C9DC3A1B-F1FE-4954-B442-FBF904431189', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'54F400DD-470C-4ECB-81BE-0EFAC5E55CE9', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'2DEF6BFD-A05A-42A2-B794-C58D651C4121', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'7FC57198-D0D6-4E5A-85B9-465D889E7692', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'0C5F2462-3A09-4951-AF7D-9D74C99DF6C8', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'4F8CA833-0761-4BAD-AE72-53437B81CD36', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'27E4F601-248D-4851-A259-CEBB005CC4AE', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'8B720B86-D3A9-4CAA-B54F-4C232832BBB8', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'4BB0CBCA-2F7A-4241-ACFB-B0552F69E72C', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'E0EDB76B-295E-41BC-813E-C8B44A723C80', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'C94264F0-F794-4C21-B553-E1E16B22B7A2', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'99F07CB9-780A-4464-BC77-97851D2B4D1C', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'96225379-D07A-4F8A-8539-AAD4221DEB69', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'C1813DB4-261E-46F2-B270-0FC4494F04A7', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'A683B9C6-6E1F-4E4D-8DD0-D9CF523D366D', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'8FBE633F-5C29-4E13-A452-78746B0A1B02', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'10BED9E9-DE44-4165-BD46-901E9E4061CA', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'C87A656A-F0A8-4FA5-9EED-A9D578A1D7C2', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'0A5E7DA7-6E9D-4DC4-BEB0-75F1DD8546DF', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'4815DD46-CF86-44B3-A201-21418DA1F3BD', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2018-11-21T15:22:33.280' AS DateTime), N'LOOKUPQUERY', N'E35805D4-3788-4C88-8097-C26BE1062529', N'LookupQuery', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'015cfa8c-1b76-4880-b400-7066c13693c3', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'020d59bd-69db-4349-96ec-15e8181b69c8', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'0233f2be-d0c5-40b5-9b52-63d209145f8a', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'036954d1-0c0e-4e9f-8577-2e659b320099', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'0647a9b3-11aa-4b30-83a1-6787ed6758c3', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'166f2036-dee2-4bd0-be6a-91071b7648d2', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'1a6d97b3-5c0b-4f3e-b0fd-cdbf140409af', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'1cd9e170-88ff-4138-9afc-fd304ee1b283', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'335c410e-edf7-46ef-9cf1-ed5034afb9a1', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'33eed4fa-0001-4e3a-b8e4-2ad6894adedf', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'3ff42ee8-4d3d-4e2e-9952-a2ba5346c3ec', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'46e13ff4-7cbc-40e7-a8d6-39793267f2fb', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'4ace1dac-1d5c-4ba2-bc70-eef8c80b59e3', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'4c1fd6bb-fa75-42d0-ad74-12ddf26f213e', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'5c28fed1-5a35-4d65-a032-4a95b76662a5', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'63b20a44-c67f-4839-a352-d5aa75ed2f25', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'6844ff79-1e52-4a2d-ad5f-8051d0fe3c34', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'826b89b7-f07b-4c3d-9c97-15da4be23dd2', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'87df2899-c698-47a6-a6ee-9be24bbf932f', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'95099fe7-ada2-4e40-844c-5464696b1403', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'96643fd0-194e-40e3-892e-db835796a94b', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'9c22ecee-4cfe-4402-a740-191638973c58', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'a2b0babb-7eaa-4807-8da0-88afd7a39079', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'a460da7f-d75e-42ed-a2bc-7591c60c25bd', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'acd775e0-a3c7-46c3-bbd3-8431d1671066', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'b607baaf-a9c1-4a7f-a40e-cc9e86ba6d69', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'ba648465-efc4-464c-a1b2-382ba3ebb46c', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'bab638c6-35d2-47b3-8636-a7e1b6749cc5', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'cd4319f7-69f9-48aa-9b45-278a2c0e13f1', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'd6633343-53de-4d27-b9da-735b00b2a25e', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'd8c9418f-54bf-4e79-aed0-5f04c2a9c1a1', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'e633c2b6-1599-4fb5-8a51-16b05c14f91a', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'ed2fd480-4ea4-4a38-ade0-52f19d4412c4', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'ee7f6bae-94a9-42b4-83be-2a05624a9e8f', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'f4f6ebb9-f6f9-4aba-84a7-469db2ce620c', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-02-15T08:26:36.720' AS DateTime), N'HIDDEN', N'fed3827f-7789-4ee7-91bb-09badd5c9f35', N'HIDDEN', N'N', N'N')
, (@PartnerID, CAST(N'2019-04-09T11:10:55.510' AS DateTime), N'Hidden', N'A8C4F1E6-4B3C-48FB-8C30-38B57E43CF4D', N'Hidden', N'N', N'N')
, (@PartnerID, CAST(N'2019-07-10T23:15:41.323' AS DateTime), N'', N'30100000-4c7c-4b23-891a-a6cf4749c546', N'Open Query', N'N', N'N')
, (@PartnerID, CAST(N'2020-02-07T14:21:27.207' AS DateTime), N'EVGV', N'892184BF-39F5-46BC-A64E-38C2066902E0', N'EVV', N'N', N'N')

insert into tmgSql
select s.* from #tmgSql s
left join tmgSql ss on s.sqlGuid = ss.sqlGuid
where ss.sqlGuid is null


insert into tmgSqlUserList
select s.* from #tmgSqlUserList s
left join tmgSqlUserList ss on s.sqlGuid = ss.sqlGuid
where ss.sqlGuid is null